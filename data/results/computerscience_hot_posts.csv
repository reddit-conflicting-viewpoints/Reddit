index,post_id,title,flair,score,post_upvote_ratio,subreddit,url,num_comments,body,created,body_word_token,body_tag,body_string,topics,sentiment
1,t7d7ws,Difference between Clock cycle and clock period,,8,1.0,computerscience,https://www.reddit.com/r/computerscience/comments/t7d7ws/difference_between_clock_cycle_and_clock_period/,10,"i am reading computer organization and design sixth edition by patterson and they define clock speed as this:

>almost all computers are constructed using a clock that determines when events take place in the hardware. these discrete time intervals are called clock cycles (or ticks, clock ticks, clock periods, clocks, cycles). designers refer to the length of a clock period both as the time for a complete clock cycle (e.g., 250 picoseconds, or 250 ps) and as the clock rate (e.g., 4 gigahertz, or 4 ghz), which is the inverse of the clock period.

what is the difference between clock cycle (some discrete amount of time) and clock period then?

my book says the clock period is the length of the clock cycle... but it also says the clock cycle to be the time for one clock period. is not this circular?

how i understood it was that a clock cycle was a pulse of the cpu, and the clock period was the length of time of that pulse. but this is a well known text so i think i am the one who does not understand.",1646498156.0,"['reading', 'computer', 'organization', 'design', 'sixth', 'edition', 'patterson', 'define', 'clock', 'speed', ':', '>', 'almost', 'computer', 'construct', 'use', 'clock', 'determines', 'event', 'take', 'place', 'hardware', '.', 'discrete', 'time', 'interval', 'call', 'clock', 'cycle', '(', 'tick', ',', 'clock', 'tick', ',', 'clock', 'period', ',', 'clock', ',', 'cycle', ')', '.', 'designer', 'refer', 'length', 'clock', 'period', 'time', 'complete', 'clock', 'cycle', '(', 'e.g.', ',', '250', 'picosecond', ',', '250', 'p', ')', 'clock', 'rate', '(', 'e.g.', ',', '4', 'gigahertz', ',', '4', 'ghz', ')', ',', 'inverse', 'clock', 'period', '.', 'difference', 'clock', 'cycle', '(', 'discrete', 'amount', 'time', ')', 'clock', 'period', '?', 'book', 'say', 'clock', 'period', 'length', 'clock', 'cycle', '...', 'also', 'say', 'clock', 'cycle', 'time', 'one', 'clock', 'period', '.', 'circular', '?', 'understood', 'clock', 'cycle', 'pulse', 'cpu', ',', 'clock', 'period', 'length', 'time', 'pulse', '.', 'well', 'know', 'text', 'think', 'one', 'understand', '.']","[[('reading', 'NN')], [('computer', 'NN')], [('organization', 'NN')], [('design', 'NN')], [('sixth', 'NNS')], [('edition', 'NN')], [('patterson', 'NN')], [('define', 'NN')], [('clock', 'NN')], [('speed', 'NN')], [(':', ':')], [('>', 'NN')], [('almost', 'RB')], [('computers', 'NNS')], [('constructed', 'VBN')], [('using', 'VBG')], [('clock', 'NN')], [('determines', 'NNS')], [('events', 'NNS')], [('take', 'VB')], [('place', 'NN')], [('hardware', 'NN')], [('.', '.')], [('discrete', 'NN')], [('time', 'NN')], [('intervals', 'NNS')], [('called', 'VBN')], [('clock', 'NN')], [('cycles', 'NNS')], [('(', '(')], [('ticks', 'NNS')], [(',', ',')], [('clock', 'NN')], [('ticks', 'NNS')], [(',', ',')], [('clock', 'NN')], [('periods', 'NNS')], [(',', ',')], [('clocks', 'NNS')], [(',', ',')], [('cycles', 'NNS')], [(')', ')')], [('.', '.')], [('designers', 'NNS')], [('refer', 'NN')], [('length', 'NN')], [('clock', 'NN')], [('period', 'NN')], [('time', 'NN')], [('complete', 'JJ')], [('clock', 'NN')], [('cycle', 'NN')], [('(', '(')], [('e.g.', 'NN')], [(',', ',')], [('250', 'CD')], [('picoseconds', 'NNS')], [(',', ',')], [('250', 'CD')], [('ps', 'NN')], [(')', ')')], [('clock', 'NN')], [('rate', 'NN')], [('(', '(')], [('e.g.', 'NN')], [(',', ',')], [('4', 'CD')], [('gigahertz', 'NN')], [(',', ',')], [('4', 'CD')], [('ghz', 'NN')], [(')', ')')], [(',', ',')], [('inverse', 'NN')], [('clock', 'NN')], [('period', 'NN')], [('.', '.')], [('difference', 'NN')], [('clock', 'NN')], [('cycle', 'NN')], [('(', '(')], [('discrete', 'NN')], [('amount', 'NN')], [('time', 'NN')], [(')', ')')], [('clock', 'NN')], [('period', 'NN')], [('?', '.')], [('book', 'NN')], [('says', 'VBZ')], [('clock', 'NN')], [('period', 'NN')], [('length', 'NN')], [('clock', 'NN')], [('cycle', 'NN')], [('...', ':')], [('also', 'RB')], [('says', 'VBZ')], [('clock', 'NN')], [('cycle', 'NN')], [('time', 'NN')], [('one', 'CD')], [('clock', 'NN')], [('period', 'NN')], [('.', '.')], [('circular', 'NN')], [('?', '.')], [('understood', 'NN')], [('clock', 'NN')], [('cycle', 'NN')], [('pulse', 'NN')], [('cpu', 'NN')], [(',', ',')], [('clock', 'NN')], [('period', 'NN')], [('length', 'NN')], [('time', 'NN')], [('pulse', 'NN')], [('.', '.')], [('well', 'RB')], [('known', 'VBN')], [('text', 'NN')], [('think', 'NN')], [('one', 'CD')], [('understand', 'NN')], [('.', '.')]]","reading computer organization design sixth edition patterson define clock speed : > almost computer construct use clock determines event take place hardware . discrete time interval call clock cycle ( tick , clock tick , clock period , clock , cycle ) . designer refer length clock period time complete clock cycle ( e.g. , 250 picosecond , 250 p ) clock rate ( e.g. , 4 gigahertz , 4 ghz ) , inverse clock period . difference clock cycle ( discrete amount time ) clock period ? book say clock period length clock cycle ... also say clock cycle time one clock period . circular ? understood clock cycle pulse cpu , clock period length time pulse . well know text think one understand .",-1_abazbz2abz_2520_problem_use,4
3,t7934c,"I want to learn Computer Science because I like it, but what is the purpose???",General,4,0.63,computerscience,https://www.reddit.com/r/computerscience/comments/t7934c/i_want_to_learn_computer_science_because_i_like/,8,"hi,

i have always been very interested in computer science since i was a kid (i mostly learnt some programming languages such as java), now i have a lot of free time and i would like to take it to the next level, which is acquiring some sort of a formal education in computer science. 

i came across this github which is basically a curriculum to self-learn computer science : [-science#advanced-systems](-science#advanced-systems) 

my question might sounds, silly... but if i learn all of this, what can i actually do? what type of skills will i acquire? for exemple, if i create an it project (such as building an application), how can these skills can help me? 

**to sum up, what would i be able to do after taking all these courses?**",1646485632.0,"['hi', ',', 'always', 'interested', 'computer', 'science', 'since', 'kid', '(', 'mostly', 'learnt', 'program', 'language', 'java', ')', ',', 'lot', 'free', 'time', 'would', 'like', 'take', 'next', 'level', ',', 'acquire', 'sort', 'formal', 'education', 'computer', 'science', '.', 'come', 'across', 'github', 'basically', 'curriculum', 'self-learn', 'computer', 'science', ':', '[', '-science', '#', 'advanced-systems', ']', '(', '-science', '#', 'advanced-systems', ')', 'question', 'might', 'sound', ',', 'silly', '...', 'learn', ',', 'actually', '?', 'type', 'skill', 'acquire', '?', 'exemple', ',', 'create', 'project', '(', 'building', 'application', ')', ',', 'skill', 'help', '?', '*', '*', 'sum', ',', 'would', 'able', 'take', 'course', '?', '*', '*']","[[('hi', 'NN')], [(',', ',')], [('always', 'RB')], [('interested', 'JJ')], [('computer', 'NN')], [('science', 'NN')], [('since', 'IN')], [('kid', 'NN')], [('(', '(')], [('mostly', 'RB')], [('learnt', 'NN')], [('programming', 'VBG')], [('languages', 'NNS')], [('java', 'NN')], [(')', ')')], [(',', ',')], [('lot', 'NN')], [('free', 'JJ')], [('time', 'NN')], [('would', 'MD')], [('like', 'IN')], [('take', 'VB')], [('next', 'JJ')], [('level', 'NN')], [(',', ',')], [('acquiring', 'VBG')], [('sort', 'NN')], [('formal', 'JJ')], [('education', 'NN')], [('computer', 'NN')], [('science', 'NN')], [('.', '.')], [('came', 'VBD')], [('across', 'IN')], [('github', 'NN')], [('basically', 'RB')], [('curriculum', 'NN')], [('self-learn', 'NN')], [('computer', 'NN')], [('science', 'NN')], [(':', ':')], [('[', 'NN')], [('-science', 'NN')], [('#', '#')], [('advanced-systems', 'NNS')], [(']', 'NN')], [('(', '(')], [('-science', 'NN')], [('#', '#')], [('advanced-systems', 'NNS')], [(')', ')')], [('question', 'NN')], [('might', 'MD')], [('sounds', 'NNS')], [(',', ',')], [('silly', 'RB')], [('...', ':')], [('learn', 'NN')], [(',', ',')], [('actually', 'RB')], [('?', '.')], [('type', 'NN')], [('skills', 'NNS')], [('acquire', 'VB')], [('?', '.')], [('exemple', 'NN')], [(',', ',')], [('create', 'NN')], [('project', 'NN')], [('(', '(')], [('building', 'NN')], [('application', 'NN')], [(')', ')')], [(',', ',')], [('skills', 'NNS')], [('help', 'NN')], [('?', '.')], [('*', 'NN')], [('*', 'NN')], [('sum', 'NN')], [(',', ',')], [('would', 'MD')], [('able', 'JJ')], [('taking', 'VBG')], [('courses', 'NNS')], [('?', '.')], [('*', 'NN')], [('*', 'NN')]]","hi , always interested computer science since kid ( mostly learnt program language java ) , lot free time would like take next level , acquire sort formal education computer science . come across github basically curriculum self-learn computer science : [ -science # advanced-systems ] ( -science # advanced-systems ) question might sound , silly ... learn , actually ? type skill acquire ? exemple , create project ( building application ) , skill help ? * * sum , would able take course ? * *",2_computer_learn_science_study,4
4,t7ef13,The background necessary to study probabilistic data structures.,,2,1.0,computerscience,https://www.reddit.com/r/computerscience/comments/t7ef13/the_background_necessary_to_study_probabilistic/,0,"i am teaching myself computer science right now, but primarily focusing on data structures and algorithms. i am still working my way through a first pass on ds & a text, but i just learned that probabilistic data structures exist, and the really excites me. 

so what i was wondering is, apart from a course on ds & a and probability theory, would there be any other pre-reqs worth learning before hopping in? fwiw i am familiar with linear algebra, statistics, and real analysis; although i have not studied discrete mathematics yet. 

just curious because i would like to put those on my road map for studying.",1646501513.0,"['teach', 'computer', 'science', 'right', ',', 'primarily', 'focus', 'data', 'structure', 'algorithm', '.', 'still', 'work', 'way', 'first', 'pas', 'd', '&', 'text', ',', 'learn', 'probabilistic', 'data', 'structure', 'exist', ',', 'really', 'excites', '.', 'wonder', ',', 'apart', 'course', 'd', '&', 'probability', 'theory', ',', 'would', 'pre-reqs', 'worth', 'learn', 'hop', '?', 'fwiw', 'familiar', 'linear', 'algebra', ',', 'statistic', ',', 'real', 'analysis', ';', 'although', 'study', 'discrete', 'mathematics', 'yet', '.', 'curious', 'would', 'like', 'put', 'road', 'map', 'study', '.']","[[('teaching', 'VBG')], [('computer', 'NN')], [('science', 'NN')], [('right', 'NN')], [(',', ',')], [('primarily', 'RB')], [('focusing', 'VBG')], [('data', 'NNS')], [('structures', 'NNS')], [('algorithms', 'NN')], [('.', '.')], [('still', 'RB')], [('working', 'VBG')], [('way', 'NN')], [('first', 'RB')], [('pass', 'NN')], [('ds', 'NN')], [('&', 'CC')], [('text', 'NN')], [(',', ',')], [('learned', 'VBN')], [('probabilistic', 'JJ')], [('data', 'NNS')], [('structures', 'NNS')], [('exist', 'NN')], [(',', ',')], [('really', 'RB')], [('excites', 'NNS')], [('.', '.')], [('wondering', 'VBG')], [(',', ',')], [('apart', 'RB')], [('course', 'NN')], [('ds', 'NN')], [('&', 'CC')], [('probability', 'NN')], [('theory', 'NN')], [(',', ',')], [('would', 'MD')], [('pre-reqs', 'NN')], [('worth', 'NN')], [('learning', 'VBG')], [('hopping', 'VBG')], [('?', '.')], [('fwiw', 'NN')], [('familiar', 'JJ')], [('linear', 'NN')], [('algebra', 'NN')], [(',', ',')], [('statistics', 'NNS')], [(',', ',')], [('real', 'JJ')], [('analysis', 'NN')], [(';', ':')], [('although', 'IN')], [('studied', 'VBN')], [('discrete', 'NN')], [('mathematics', 'NNS')], [('yet', 'RB')], [('.', '.')], [('curious', 'JJ')], [('would', 'MD')], [('like', 'IN')], [('put', 'NN')], [('road', 'NN')], [('map', 'NN')], [('studying', 'VBG')], [('.', '.')]]","teach computer science right , primarily focus data structure algorithm . still work way first pas d & text , learn probabilistic data structure exist , really excites . wonder , apart course d & probability theory , would pre-reqs worth learn hop ? fwiw familiar linear algebra , statistic , real analysis ; although study discrete mathematics yet . curious would like put road map study .",2_computer_learn_science_study,3
5,t7iah6,Starting Programming Language,,0,0.5,computerscience,https://www.reddit.com/r/computerscience/comments/t7iah6/starting_programming_language/,1,"i have some experience with python. should i learn web development using html,css, and javascript or focus on a language such as java or c++

which will be more beneficial in the future and also fun to learn?",1646512676.0,"['experience', 'python', '.', 'learn', 'web', 'development', 'use', 'html', ',', 'cs', ',', 'javascript', 'focus', 'language', 'java', 'c++', 'beneficial', 'future', 'also', 'fun', 'learn', '?']","[[('experience', 'NN')], [('python', 'NN')], [('.', '.')], [('learn', 'NN')], [('web', 'NN')], [('development', 'NN')], [('using', 'VBG')], [('html', 'NN')], [(',', ',')], [('css', 'NN')], [(',', ',')], [('javascript', 'NN')], [('focus', 'NN')], [('language', 'NN')], [('java', 'NN')], [('c++', 'NN')], [('beneficial', 'JJ')], [('future', 'NN')], [('also', 'RB')], [('fun', 'NN')], [('learn', 'NN')], [('?', '.')]]","experience python . learn web development use html , cs , javascript focus language java c++ beneficial future also fun learn ?",-1_abazbz2abz_2520_problem_use,3
6,t6qcd8,"I feel stupid for not being able to solve the ""practice problems"" of textbooks.",,76,0.93,computerscience,https://www.reddit.com/r/computerscience/comments/t6qcd8/i_feel_stupid_for_not_being_able_to_solve_the/,12,"hello cs community! so i was taking courses on operating systems and i feel this way not just for this course but nearly every other course. so the problem is while reading the textbook for this course, i fully understand what the text is saying and it makes sense to me. but when i try to solve any of the 'practice problems' at the end of the chapter or 'programming assignments' related to the chapter i get stuck. first 10-20% of the problems are quite normal, but the rest just gets progressively harder. the questions require you to think 'outside the box' and come up with solutions that are very unintuitive and quite frankly, not found in the text itself. 

&#x200b;

so i am asking: am i stupid for not being able to solve these questions? are our courses too shallow for not covering every single problem and every single chapter of the textbook? does anyone else feel that way too?",1646420745.0,"['hello', 'c', 'community', '!', 'take', 'course', 'operating', 'system', 'feel', 'way', 'course', 'nearly', 'every', 'course', '.', 'problem', 'reading', 'textbook', 'course', ',', 'fully', 'understand', 'text', 'say', 'make', 'sense', '.', 'try', 'solve', ""'practice"", 'problem', ""'"", 'end', 'chapter', ""'programming"", 'assignment', ""'"", 'related', 'chapter', 'get', 'stuck', '.', 'first', '10-20', '%', 'problem', 'quite', 'normal', ',', 'rest', 'get', 'progressively', 'harder', '.', 'question', 'require', 'think', ""'outside"", 'box', ""'"", 'come', 'solution', 'unintuitive', 'quite', 'frankly', ',', 'found', 'text', '.', '&', '#', 'x200b', ';', 'ask', ':', 'stupid', 'able', 'solve', 'question', '?', 'course', 'shallow', 'cover', 'every', 'single', 'problem', 'every', 'single', 'chapter', 'textbook', '?', 'anyone', 'else', 'feel', 'way', '?']","[[('hello', 'NN')], [('cs', 'NN')], [('community', 'NN')], [('!', '.')], [('taking', 'VBG')], [('courses', 'NNS')], [('operating', 'NN')], [('systems', 'NNS')], [('feel', 'NN')], [('way', 'NN')], [('course', 'NN')], [('nearly', 'RB')], [('every', 'DT')], [('course', 'NN')], [('.', '.')], [('problem', 'NN')], [('reading', 'NN')], [('textbook', 'NN')], [('course', 'NN')], [(',', ',')], [('fully', 'RB')], [('understand', 'NN')], [('text', 'NN')], [('saying', 'VBG')], [('makes', 'VBZ')], [('sense', 'NN')], [('.', '.')], [('try', 'NN')], [('solve', 'NN')], [(""'practice"", 'NN')], [('problems', 'NNS')], [(""'"", ""''"")], [('end', 'NN')], [('chapter', 'NN')], [(""'programming"", 'VBG')], [('assignments', 'NNS')], [(""'"", ""''"")], [('related', 'JJ')], [('chapter', 'NN')], [('get', 'VB')], [('stuck', 'NN')], [('.', '.')], [('first', 'RB')], [('10-20', 'JJ')], [('%', 'NN')], [('problems', 'NNS')], [('quite', 'RB')], [('normal', 'JJ')], [(',', ',')], [('rest', 'NN')], [('gets', 'VBZ')], [('progressively', 'RB')], [('harder', 'NN')], [('.', '.')], [('questions', 'NNS')], [('require', 'NN')], [('think', 'NN')], [(""'outside"", 'IN')], [('box', 'NN')], [(""'"", ""''"")], [('come', 'VB')], [('solutions', 'NNS')], [('unintuitive', 'JJ')], [('quite', 'RB')], [('frankly', 'RB')], [(',', ',')], [('found', 'NN')], [('text', 'NN')], [('.', '.')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('asking', 'VBG')], [(':', ':')], [('stupid', 'JJ')], [('able', 'JJ')], [('solve', 'NN')], [('questions', 'NNS')], [('?', '.')], [('courses', 'NNS')], [('shallow', 'NN')], [('covering', 'VBG')], [('every', 'DT')], [('single', 'JJ')], [('problem', 'NN')], [('every', 'DT')], [('single', 'JJ')], [('chapter', 'NN')], [('textbook', 'NN')], [('?', '.')], [('anyone', 'NN')], [('else', 'RB')], [('feel', 'NN')], [('way', 'NN')], [('?', '.')]]","hello c community ! take course operating system feel way course nearly every course . problem reading textbook course , fully understand text say make sense . try solve 'practice problem ' end chapter 'programming assignment ' related chapter get stuck . first 10-20 % problem quite normal , rest get progressively harder . question require think 'outside box ' come solution unintuitive quite frankly , found text . & # x200b ; ask : stupid able solve question ? course shallow cover every single problem every single chapter textbook ? anyone else feel way ?",2_computer_learn_science_study,3
7,t7fwog,Can Anyone Give Me An Explanation Or Point To Papers That Might Explain What Is Happening When I Purposefully Glitch An Image File By Opening It As Audio In Audacity?,,0,0.33,computerscience,https://www.reddit.com/r/computerscience/comments/t7fwog/can_anyone_give_me_an_explanation_or_point_to/,2,"how do you!

excuse the verbose title but i could not really think of a more succinct one. i muck around with glitch art as hobby and lately i have been wondering what is actually happening to the image files i glitch. one techinique i use is called ""databending,"" and it involves opening an image file as raw data in audacity. you use effects to edit the shape of the waveform and those edits render as visual glitches in the resulting image file. 

i am curious if anyone out there has investigated what is happening to the image file itself when it is being i want to say, reencoded as audio. i do not have any formal cs or math background but i work in an academic field so i am not afraid of technical stuff or getting my hands dirty so to speak.

i am just curious because it is a really visually interesting effect and i am trying to figure out *how* it works/if anyone has actually studied the mechanics of visual data corruption.

thank you for reading, hopefully this is the right place for this kind of question.",1646505762.0,"['!', 'excuse', 'verbose', 'title', 'could', 'really', 'think', 'succinct', 'one', '.', 'muck', 'around', 'glitch', 'art', 'hobby', 'lately', 'wonder', 'actually', 'happen', 'image', 'file', 'glitch', '.', 'one', 'techinique', 'use', 'call', '``', 'databending', ',', ""''"", 'involves', 'opening', 'image', 'file', 'raw', 'data', 'audacity', '.', 'use', 'effect', 'edit', 'shape', 'waveform', 'edits', 'render', 'visual', 'glitch', 'result', 'image', 'file', '.', 'curious', 'anyone', 'investigate', 'happen', 'image', 'file', 'want', 'say', ',', 'reencoded', 'audio', '.', 'formal', 'c', 'math', 'background', 'work', 'academic', 'field', 'afraid', 'technical', 'stuff', 'get', 'hand', 'dirty', 'speak', '.', 'curious', 'really', 'visually', 'interest', 'effect', 'try', 'figure', '*', '*', 'works/if', 'anyone', 'actually', 'study', 'mechanic', 'visual', 'data', 'corruption', '.', 'thank', 'reading', ',', 'hopefully', 'right', 'place', 'kind', 'question', '.']","[[('!', '.')], [('excuse', 'NN')], [('verbose', 'NN')], [('title', 'NN')], [('could', 'MD')], [('really', 'RB')], [('think', 'NN')], [('succinct', 'NN')], [('one', 'CD')], [('.', '.')], [('muck', 'NN')], [('around', 'IN')], [('glitch', 'NN')], [('art', 'NN')], [('hobby', 'NN')], [('lately', 'RB')], [('wondering', 'VBG')], [('actually', 'RB')], [('happening', 'VBG')], [('image', 'NN')], [('files', 'NNS')], [('glitch', 'NN')], [('.', '.')], [('one', 'CD')], [('techinique', 'NN')], [('use', 'NN')], [('called', 'VBN')], [('``', '``')], [('databending', 'VBG')], [(',', ',')], [(""''"", ""''"")], [('involves', 'NNS')], [('opening', 'NN')], [('image', 'NN')], [('file', 'NN')], [('raw', 'NN')], [('data', 'NNS')], [('audacity', 'NN')], [('.', '.')], [('use', 'NN')], [('effects', 'NNS')], [('edit', 'NN')], [('shape', 'NN')], [('waveform', 'NN')], [('edits', 'NNS')], [('render', 'NN')], [('visual', 'JJ')], [('glitches', 'NNS')], [('resulting', 'VBG')], [('image', 'NN')], [('file', 'NN')], [('.', '.')], [('curious', 'JJ')], [('anyone', 'NN')], [('investigated', 'VBN')], [('happening', 'VBG')], [('image', 'NN')], [('file', 'NN')], [('want', 'NN')], [('say', 'VB')], [(',', ',')], [('reencoded', 'VBN')], [('audio', 'NN')], [('.', '.')], [('formal', 'JJ')], [('cs', 'NN')], [('math', 'NN')], [('background', 'NN')], [('work', 'NN')], [('academic', 'JJ')], [('field', 'NN')], [('afraid', 'NN')], [('technical', 'JJ')], [('stuff', 'NN')], [('getting', 'VBG')], [('hands', 'NNS')], [('dirty', 'NN')], [('speak', 'NN')], [('.', '.')], [('curious', 'JJ')], [('really', 'RB')], [('visually', 'RB')], [('interesting', 'VBG')], [('effect', 'NN')], [('trying', 'VBG')], [('figure', 'NN')], [('*', 'NN')], [('*', 'NN')], [('works/if', 'NN')], [('anyone', 'NN')], [('actually', 'RB')], [('studied', 'VBN')], [('mechanics', 'NNS')], [('visual', 'JJ')], [('data', 'NNS')], [('corruption', 'NN')], [('.', '.')], [('thank', 'NN')], [('reading', 'NN')], [(',', ',')], [('hopefully', 'RB')], [('right', 'NN')], [('place', 'NN')], [('kind', 'NN')], [('question', 'NN')], [('.', '.')]]","! excuse verbose title could really think succinct one . muck around glitch art hobby lately wonder actually happen image file glitch . one techinique use call `` databending , '' involves opening image file raw data audacity . use effect edit shape waveform edits render visual glitch result image file . curious anyone investigate happen image file want say , reencoded audio . formal c math background work academic field afraid technical stuff get hand dirty speak . curious really visually interest effect try figure * * works/if anyone actually study mechanic visual data corruption . thank reading , hopefully right place kind question .",3_search_ai_think_google,4
8,t6wumf,Network protocol parser prior art?,,4,1.0,computerscience,https://www.reddit.com/r/computerscience/comments/t6wumf/network_protocol_parser_prior_art/,0,"i am working on a code base needing to parse a custom protocol on top of a non-standard (sub ghz rf network) physical and data link layer. i basically get data from a serial port on the radio module, which is in their packet format, with the custom protocol in the payload. i then forward that via serial or udp. i can also get custom protocol packets in from the serial or udp interfaces and then i package it in the radio module's protocol and send it to the radio.

i have my serial ports configured to receive data into a buffer via dma and i enabled the idle line interrupt on the serial ports, which fires an interrupt when the line is silent for more than 1 byte's time.

the problem i am running into is that i do not want to just discard data when it does not check out, since it might be an incomplete packet. the issue is that a genuine broken packet gets stuck in the pipeline with the current approach.

without going into too much detail about the current solution, what is the standard theory for this kind of thing? what are the ""prior art"" for parsing incoming streams of data coming from network interfaces?",1646439234.0,"['work', 'code', 'base', 'need', 'parse', 'custom', 'protocol', 'top', 'non-standard', '(', 'sub', 'ghz', 'rf', 'network', ')', 'physical', 'data', 'link', 'layer', '.', 'basically', 'get', 'data', 'serial', 'port', 'radio', 'module', ',', 'packet', 'format', ',', 'custom', 'protocol', 'payload', '.', 'forward', 'via', 'serial', 'udp', '.', 'also', 'get', 'custom', 'protocol', 'packet', 'serial', 'udp', 'interface', 'package', 'radio', 'module', ""'s"", 'protocol', 'send', 'radio', '.', 'serial', 'port', 'configure', 'receive', 'data', 'buffer', 'via', 'dma', 'enable', 'idle', 'line', 'interrupt', 'serial', 'port', ',', 'fire', 'interrupt', 'line', 'silent', '1', 'byte', ""'s"", 'time', '.', 'problem', 'run', 'want', 'discard', 'data', 'check', ',', 'since', 'might', 'incomplete', 'packet', '.', 'issue', 'genuine', 'broken', 'packet', 'get', 'stuck', 'pipeline', 'current', 'approach', '.', 'without', 'go', 'much', 'detail', 'current', 'solution', ',', 'standard', 'theory', 'kind', 'thing', '?', '``', 'prior', 'art', ""''"", 'parse', 'incoming', 'stream', 'data', 'come', 'network', 'interface', '?']","[[('working', 'VBG')], [('code', 'NN')], [('base', 'NN')], [('needing', 'VBG')], [('parse', 'NN')], [('custom', 'NN')], [('protocol', 'NN')], [('top', 'NN')], [('non-standard', 'JJ')], [('(', '(')], [('sub', 'NN')], [('ghz', 'NN')], [('rf', 'NN')], [('network', 'NN')], [(')', ')')], [('physical', 'JJ')], [('data', 'NNS')], [('link', 'NN')], [('layer', 'NN')], [('.', '.')], [('basically', 'RB')], [('get', 'VB')], [('data', 'NNS')], [('serial', 'JJ')], [('port', 'NN')], [('radio', 'NN')], [('module', 'NN')], [(',', ',')], [('packet', 'NN')], [('format', 'NN')], [(',', ',')], [('custom', 'NN')], [('protocol', 'NN')], [('payload', 'NN')], [('.', '.')], [('forward', 'RB')], [('via', 'IN')], [('serial', 'JJ')], [('udp', 'NN')], [('.', '.')], [('also', 'RB')], [('get', 'VB')], [('custom', 'NN')], [('protocol', 'NN')], [('packets', 'NNS')], [('serial', 'JJ')], [('udp', 'NN')], [('interfaces', 'NNS')], [('package', 'NN')], [('radio', 'NN')], [('module', 'NN')], [(""'s"", 'POS')], [('protocol', 'NN')], [('send', 'NN')], [('radio', 'NN')], [('.', '.')], [('serial', 'JJ')], [('ports', 'NNS')], [('configured', 'VBN')], [('receive', 'NN')], [('data', 'NNS')], [('buffer', 'NN')], [('via', 'IN')], [('dma', 'NN')], [('enabled', 'VBN')], [('idle', 'JJ')], [('line', 'NN')], [('interrupt', 'NN')], [('serial', 'JJ')], [('ports', 'NNS')], [(',', ',')], [('fires', 'NNS')], [('interrupt', 'NN')], [('line', 'NN')], [('silent', 'NN')], [('1', 'CD')], [('byte', 'NN')], [(""'s"", 'POS')], [('time', 'NN')], [('.', '.')], [('problem', 'NN')], [('running', 'VBG')], [('want', 'NN')], [('discard', 'NN')], [('data', 'NNS')], [('check', 'NN')], [(',', ',')], [('since', 'IN')], [('might', 'MD')], [('incomplete', 'NN')], [('packet', 'NN')], [('.', '.')], [('issue', 'NN')], [('genuine', 'NN')], [('broken', 'NN')], [('packet', 'NN')], [('gets', 'VBZ')], [('stuck', 'NN')], [('pipeline', 'NN')], [('current', 'JJ')], [('approach', 'NN')], [('.', '.')], [('without', 'IN')], [('going', 'VBG')], [('much', 'JJ')], [('detail', 'NN')], [('current', 'JJ')], [('solution', 'NN')], [(',', ',')], [('standard', 'NN')], [('theory', 'NN')], [('kind', 'NN')], [('thing', 'NN')], [('?', '.')], [('``', '``')], [('prior', 'RB')], [('art', 'NN')], [(""''"", ""''"")], [('parsing', 'VBG')], [('incoming', 'VBG')], [('streams', 'NNS')], [('data', 'NNS')], [('coming', 'VBG')], [('network', 'NN')], [('interfaces', 'NNS')], [('?', '.')]]","work code base need parse custom protocol top non-standard ( sub ghz rf network ) physical data link layer . basically get data serial port radio module , packet format , custom protocol payload . forward via serial udp . also get custom protocol packet serial udp interface package radio module 's protocol send radio . serial port configure receive data buffer via dma enable idle line interrupt serial port , fire interrupt line silent 1 byte 's time . problem run want discard data check , since might incomplete packet . issue genuine broken packet get stuck pipeline current approach . without go much detail current solution , standard theory kind thing ? `` prior art '' parse incoming stream data come network interface ?",6_server_packet_key_hash,4
9,t5xsgh,"Good at CS, no so much at math...",Discussion,92,0.88,computerscience,https://www.reddit.com/r/computerscience/comments/t5xsgh/good_at_cs_no_so_much_at_math/,71,"this is a little weird, because people told me that cs was all about math, but i do not find it to be like that at all. i have done many competitions/olympiads without studying or practicing and scored higher than those who grind questions all day and sit at high math marks. i find that thinking logically and algorithmically is far more important than thinking mathematically in cs.

i also want to clarify that i am not bad at math, in fact, the thing that lowers my marks is -pretty much- only improper formatting. i just solve problems completely differently when working with cs questions versus math questions, i do not find them to be the same at all.

does anyone else feel like this?",1646331042.0,"['little', 'weird', ',', 'people', 'told', 'c', 'math', ',', 'find', 'like', '.', 'do', 'many', 'competitions/olympiads', 'without', 'study', 'practice', 'score', 'high', 'grind', 'question', 'day', 'sit', 'high', 'math', 'mark', '.', 'find', 'think', 'logically', 'algorithmically', 'far', 'important', 'think', 'mathematically', 'c', '.', 'also', 'want', 'clarify', 'bad', 'math', ',', 'fact', ',', 'thing', 'lower', 'mark', '-pretty', 'much-', 'improper', 'format', '.', 'solve', 'problem', 'completely', 'differently', 'work', 'c', 'question', 'versus', 'math', 'question', ',', 'find', '.', 'anyone', 'else', 'feel', 'like', '?']","[[('little', 'JJ')], [('weird', 'NN')], [(',', ',')], [('people', 'NNS')], [('told', 'NN')], [('cs', 'NN')], [('math', 'NN')], [(',', ',')], [('find', 'VB')], [('like', 'IN')], [('.', '.')], [('done', 'VBN')], [('many', 'JJ')], [('competitions/olympiads', 'NNS')], [('without', 'IN')], [('studying', 'VBG')], [('practicing', 'VBG')], [('scored', 'VBN')], [('higher', 'JJR')], [('grind', 'NN')], [('questions', 'NNS')], [('day', 'NN')], [('sit', 'NN')], [('high', 'JJ')], [('math', 'NN')], [('marks', 'NNS')], [('.', '.')], [('find', 'VB')], [('thinking', 'VBG')], [('logically', 'RB')], [('algorithmically', 'RB')], [('far', 'RB')], [('important', 'JJ')], [('thinking', 'VBG')], [('mathematically', 'RB')], [('cs', 'NN')], [('.', '.')], [('also', 'RB')], [('want', 'NN')], [('clarify', 'NN')], [('bad', 'JJ')], [('math', 'NN')], [(',', ',')], [('fact', 'NN')], [(',', ',')], [('thing', 'NN')], [('lowers', 'NNS')], [('marks', 'NNS')], [('-pretty', 'NN')], [('much-', 'NN')], [('improper', 'NN')], [('formatting', 'VBG')], [('.', '.')], [('solve', 'NN')], [('problems', 'NNS')], [('completely', 'RB')], [('differently', 'RB')], [('working', 'VBG')], [('cs', 'NN')], [('questions', 'NNS')], [('versus', 'NN')], [('math', 'NN')], [('questions', 'NNS')], [(',', ',')], [('find', 'VB')], [('.', '.')], [('anyone', 'NN')], [('else', 'RB')], [('feel', 'NN')], [('like', 'IN')], [('?', '.')]]","little weird , people told c math , find like . do many competitions/olympiads without study practice score high grind question day sit high math mark . find think logically algorithmically far important think mathematically c . also want clarify bad math , fact , thing lower mark -pretty much- improper format . solve problem completely differently work c question versus math question , find . anyone else feel like ?",-1_abazbz2abz_2520_problem_use,4
10,t63qk4,Are theoretical concepts really that important in computer science?,,8,0.7,computerscience,https://www.reddit.com/r/computerscience/comments/t63qk4/are_theoretical_concepts_really_that_important_in/,7," within almost a full year into my computer science degree you start to see two types of modules; the ones that are more practical (programming, statistics, data analytics) and the ones that are theoretical (linear algebra, logic, set theory, discrete math’s etc.).

my question is how useful/practical are these theoretical concepts. yes, i understand how there can be applications, i.e, truth tables can be used to replicate logic gates in a computer. but i am talking about if i will use this knowledge beyond my degree. how often will i find the number of permutations of the number of dice rolls, how often will i reduce a matrix to row-echelon form or prove how two propositions are logically equivalent. 

i actually really enjoy learning these theoretical concepts, even more so than i do programming. but the reason why i pose this question is to see whether it is beneficial for me to really study these topics, or whether i should just do enough to pass these classes and focus my time on the more in-demand skills like programming. i lose motivation when i study theory because in my head i am like ‘i could really be improving my java skills instead of learning about finite state automata’, so i close the book and just open my laptop. 

i understand computer science is a very large field and the obvious answer is probably ‘it depends on what you want to do in the future’. if anything, i am simply trying to get a grasp of the involvement of theory in the practical field. thank you",1646347196.0,"['within', 'almost', 'full', 'year', 'computer', 'science', 'degree', 'start', 'see', 'two', 'type', 'module', ';', 'one', 'practical', '(', 'program', ',', 'statistic', ',', 'data', 'analytics', ')', 'one', 'theoretical', '(', 'linear', 'algebra', ',', 'logic', ',', 'set', 'theory', ',', 'discrete', 'math', '’', 'etc', '.', ')', '.', 'question', 'useful/practical', 'theoretical', 'concept', '.', 'yes', ',', 'understand', 'application', ',', 'i.e', ',', 'truth', 'table', 'use', 'replicate', 'logic', 'gate', 'computer', '.', 'talk', 'use', 'knowledge', 'beyond', 'degree', '.', 'often', 'find', 'number', 'permutation', 'number', 'dice', 'roll', ',', 'often', 'reduce', 'matrix', 'row-echelon', 'form', 'prove', 'two', 'proposition', 'logically', 'equivalent', '.', 'actually', 'really', 'enjoy', 'learn', 'theoretical', 'concept', ',', 'even', 'program', '.', 'reason', 'pose', 'question', 'see', 'whether', 'beneficial', 'really', 'study', 'topic', ',', 'whether', 'enough', 'pas', 'class', 'focus', 'time', 'in-demand', 'skill', 'like', 'program', '.', 'lose', 'motivation', 'study', 'theory', 'head', 'like', '‘', 'could', 'really', 'improve', 'java', 'skill', 'instead', 'learn', 'finite', 'state', 'automaton', '’', ',', 'close', 'book', 'open', 'laptop', '.', 'understand', 'computer', 'science', 'large', 'field', 'obvious', 'answer', 'probably', '‘', 'depends', 'want', 'future', '’', '.', 'anything', ',', 'simply', 'try', 'get', 'grasp', 'involvement', 'theory', 'practical', 'field', '.', 'thank']","[[('within', 'IN')], [('almost', 'RB')], [('full', 'JJ')], [('year', 'NN')], [('computer', 'NN')], [('science', 'NN')], [('degree', 'NN')], [('start', 'NN')], [('see', 'VB')], [('two', 'CD')], [('types', 'NNS')], [('modules', 'NNS')], [(';', ':')], [('ones', 'NNS')], [('practical', 'JJ')], [('(', '(')], [('programming', 'VBG')], [(',', ',')], [('statistics', 'NNS')], [(',', ',')], [('data', 'NNS')], [('analytics', 'NNS')], [(')', ')')], [('ones', 'NNS')], [('theoretical', 'JJ')], [('(', '(')], [('linear', 'NN')], [('algebra', 'NN')], [(',', ',')], [('logic', 'NN')], [(',', ',')], [('set', 'NN')], [('theory', 'NN')], [(',', ',')], [('discrete', 'NN')], [('math', 'NN')], [('’', 'NN')], [('etc', 'NN')], [('.', '.')], [(')', ')')], [('.', '.')], [('question', 'NN')], [('useful/practical', 'JJ')], [('theoretical', 'JJ')], [('concepts', 'NNS')], [('.', '.')], [('yes', 'NNS')], [(',', ',')], [('understand', 'NN')], [('applications', 'NNS')], [(',', ',')], [('i.e', 'NN')], [(',', ',')], [('truth', 'NN')], [('tables', 'NNS')], [('used', 'VBN')], [('replicate', 'NN')], [('logic', 'NN')], [('gates', 'NNS')], [('computer', 'NN')], [('.', '.')], [('talking', 'VBG')], [('use', 'NN')], [('knowledge', 'NN')], [('beyond', 'IN')], [('degree', 'NN')], [('.', '.')], [('often', 'RB')], [('find', 'VB')], [('number', 'NN')], [('permutations', 'NNS')], [('number', 'NN')], [('dice', 'NN')], [('rolls', 'NNS')], [(',', ',')], [('often', 'RB')], [('reduce', 'VB')], [('matrix', 'NN')], [('row-echelon', 'NN')], [('form', 'NN')], [('prove', 'NN')], [('two', 'CD')], [('propositions', 'NNS')], [('logically', 'RB')], [('equivalent', 'NN')], [('.', '.')], [('actually', 'RB')], [('really', 'RB')], [('enjoy', 'NN')], [('learning', 'VBG')], [('theoretical', 'JJ')], [('concepts', 'NNS')], [(',', ',')], [('even', 'RB')], [('programming', 'VBG')], [('.', '.')], [('reason', 'NN')], [('pose', 'NN')], [('question', 'NN')], [('see', 'VB')], [('whether', 'IN')], [('beneficial', 'JJ')], [('really', 'RB')], [('study', 'NN')], [('topics', 'NNS')], [(',', ',')], [('whether', 'IN')], [('enough', 'RB')], [('pass', 'NN')], [('classes', 'NNS')], [('focus', 'NN')], [('time', 'NN')], [('in-demand', 'NN')], [('skills', 'NNS')], [('like', 'IN')], [('programming', 'VBG')], [('.', '.')], [('lose', 'VB')], [('motivation', 'NN')], [('study', 'NN')], [('theory', 'NN')], [('head', 'NN')], [('like', 'IN')], [('‘', 'NN')], [('could', 'MD')], [('really', 'RB')], [('improving', 'VBG')], [('java', 'NN')], [('skills', 'NNS')], [('instead', 'RB')], [('learning', 'VBG')], [('finite', 'NN')], [('state', 'NN')], [('automata', 'NNS')], [('’', 'NN')], [(',', ',')], [('close', 'RB')], [('book', 'NN')], [('open', 'JJ')], [('laptop', 'NN')], [('.', '.')], [('understand', 'NN')], [('computer', 'NN')], [('science', 'NN')], [('large', 'JJ')], [('field', 'NN')], [('obvious', 'JJ')], [('answer', 'NN')], [('probably', 'RB')], [('‘', 'NN')], [('depends', 'NNS')], [('want', 'NN')], [('future', 'NN')], [('’', 'NN')], [('.', '.')], [('anything', 'NN')], [(',', ',')], [('simply', 'RB')], [('trying', 'VBG')], [('get', 'VB')], [('grasp', 'NN')], [('involvement', 'NN')], [('theory', 'NN')], [('practical', 'JJ')], [('field', 'NN')], [('.', '.')], [('thank', 'NN')]]","within almost full year computer science degree start see two type module ; one practical ( program , statistic , data analytics ) one theoretical ( linear algebra , logic , set theory , discrete math ’ etc . ) . question useful/practical theoretical concept . yes , understand application , i.e , truth table use replicate logic gate computer . talk use knowledge beyond degree . often find number permutation number dice roll , often reduce matrix row-echelon form prove two proposition logically equivalent . actually really enjoy learn theoretical concept , even program . reason pose question see whether beneficial really study topic , whether enough pas class focus time in-demand skill like program . lose motivation study theory head like ‘ could really improve java skill instead learn finite state automaton ’ , close book open laptop . understand computer science large field obvious answer probably ‘ depends want future ’ . anything , simply try get grasp involvement theory practical field . thank",2_computer_learn_science_study,2
12,t5phed,"What do people here make of MIT computer scientist Joscha Bach's statement below? I don't know enough about computer science, but it all seems a bit scifi to me",Discussion,63,0.92,computerscience,https://www.reddit.com/r/computerscience/comments/t5phed/what_do_people_here_make_of_mit_computer/,25,"because programming is harder than truck-driving, it seems clear that self-driving cars are more imminent than self-programming computers. but i suspect that even with current ai methods, we will soon see dramatic changes in how software is written. to me, the success of alphago seems to be quite significant in this regard.

go has long been elusive to game programmers, because the problem space of go is extremely large and deep. unlike chess, we cannot address go with brute forcing our way through that space, but have to adaptively look for complex patterns and meta-patterns, combine association with reasoning, random exploration with systematic proof. deepmind has made dramatic progress in this task, not by equipping their machines with human-like intelligence, but by finding ways to identify relevant patterns in billions of games.

programming has substantial similarities to go: the programmer must plan ahead on many levels, for problems that the programmer cannot quite yet see, many of those resulting from the design decisions that are made early on. now imagine if we could automate parts of this! even relatively primitive alphago-like ais could rapidly explore billions of possible complex architectures, using a combination of evolutionary design, adaptive pattern matching, gradient descent, and giant, growing libraries of established building blocks. unlike humans, ais will never make syntactic errors, simple logic errors, or known design errors. above and beyond that, ais will have perfect capacity to learn from past and hypothetical mistakes: once a particular approach is shown to have a flaw or vulnerability, the system will never try to implement it again.

i believe that even in the absence of general ai, programming is going to change very fast very soon. we will no longer brood over tricky algorithms, invent clever optimizations, find and eliminate bugs, evaluate pull requests, perform code reviews, come to terms with updates of our tools and libraries, fiddle with deployment strategies and so on. instead, we will focus on specifying our problem in ways that allow our machines to autonomously explore the resulting space of solutions. if we have a way to tell our machines what problems need to be solved, and we can narrow the problems down to go sized chunks, we can leave the actual programming to the computers. the computers can work on this for minutes or days or months, dynamically rent cpus, interface with other machines working on similar problems, and peruse giant, growing global libraries of useful building blocks. the resulting code will usually be provably correct, free of trivial bugs and inconsistencies, and completely incomprehensible to human brains.

i still want my children to learn how to program, but mostly so we can have interesting conversations. i do not expect that many programmers will still earn a living by writing actual code once my children are out of school.",1646306831.0,"['program', 'harder', 'truck-driving', ',', 'seem', 'clear', 'self-driving', 'car', 'imminent', 'self-programming', 'computer', '.', 'suspect', 'even', 'current', 'ai', 'method', ',', 'soon', 'see', 'dramatic', 'change', 'software', 'write', '.', ',', 'success', 'alphago', 'seem', 'quite', 'significant', 'regard', '.', 'go', 'long', 'elusive', 'game', 'programmer', ',', 'problem', 'space', 'go', 'extremely', 'large', 'deep', '.', 'unlike', 'chess', ',', 'address', 'go', 'brute', 'force', 'way', 'space', ',', 'adaptively', 'look', 'complex', 'pattern', 'meta-patterns', ',', 'combine', 'association', 'reason', ',', 'random', 'exploration', 'systematic', 'proof', '.', 'deepmind', 'make', 'dramatic', 'progress', 'task', ',', 'equip', 'machine', 'human-like', 'intelligence', ',', 'find', 'way', 'identify', 'relevant', 'pattern', 'billion', 'game', '.', 'program', 'substantial', 'similarity', 'go', ':', 'programmer', 'must', 'plan', 'ahead', 'many', 'level', ',', 'problem', 'programmer', 'quite', 'yet', 'see', ',', 'many', 'result', 'design', 'decision', 'make', 'early', '.', 'imagine', 'could', 'automate', 'part', '!', 'even', 'relatively', 'primitive', 'alphago-like', 'ai', 'could', 'rapidly', 'explore', 'billion', 'possible', 'complex', 'architecture', ',', 'use', 'combination', 'evolutionary', 'design', ',', 'adaptive', 'pattern', 'match', ',', 'gradient', 'descent', ',', 'giant', ',', 'grow', 'library', 'establish', 'building', 'block', '.', 'unlike', 'human', ',', 'ai', 'never', 'make', 'syntactic', 'error', ',', 'simple', 'logic', 'error', ',', 'know', 'design', 'error', '.', 'beyond', ',', 'ai', 'perfect', 'capacity', 'learn', 'past', 'hypothetical', 'mistake', ':', 'particular', 'approach', 'show', 'flaw', 'vulnerability', ',', 'system', 'never', 'try', 'implement', '.', 'believe', 'even', 'absence', 'general', 'ai', ',', 'program', 'go', 'change', 'fast', 'soon', '.', 'longer', 'brood', 'tricky', 'algorithm', ',', 'invent', 'clever', 'optimization', ',', 'find', 'eliminate', 'bug', ',', 'evaluate', 'pull', 'request', ',', 'perform', 'code', 'review', ',', 'come', 'term', 'update', 'tool', 'library', ',', 'fiddle', 'deployment', 'strategy', '.', 'instead', ',', 'focus', 'specify', 'problem', 'way', 'allow', 'machine', 'autonomously', 'explore', 'result', 'space', 'solution', '.', 'way', 'tell', 'machine', 'problem', 'need', 'solve', ',', 'narrow', 'problem', 'go', 'size', 'chunk', ',', 'leave', 'actual', 'program', 'computer', '.', 'computer', 'work', 'minute', 'day', 'month', ',', 'dynamically', 'rent', 'cpu', ',', 'interface', 'machine', 'work', 'similar', 'problem', ',', 'peruse', 'giant', ',', 'grow', 'global', 'library', 'useful', 'building', 'block', '.', 'result', 'code', 'usually', 'provably', 'correct', ',', 'free', 'trivial', 'bug', 'inconsistency', ',', 'completely', 'incomprehensible', 'human', 'brain', '.', 'still', 'want', 'child', 'learn', 'program', ',', 'mostly', 'interest', 'conversation', '.', 'expect', 'many', 'programmer', 'still', 'earn', 'living', 'write', 'actual', 'code', 'child', 'school', '.']","[[('programming', 'VBG')], [('harder', 'NN')], [('truck-driving', 'NN')], [(',', ',')], [('seems', 'VBZ')], [('clear', 'JJ')], [('self-driving', 'NN')], [('cars', 'NNS')], [('imminent', 'NN')], [('self-programming', 'NN')], [('computers', 'NNS')], [('.', '.')], [('suspect', 'NN')], [('even', 'RB')], [('current', 'JJ')], [('ai', 'NN')], [('methods', 'NNS')], [(',', ',')], [('soon', 'RB')], [('see', 'VB')], [('dramatic', 'JJ')], [('changes', 'NNS')], [('software', 'NN')], [('written', 'VBN')], [('.', '.')], [(',', ',')], [('success', 'NN')], [('alphago', 'NN')], [('seems', 'VBZ')], [('quite', 'RB')], [('significant', 'JJ')], [('regard', 'NN')], [('.', '.')], [('go', 'VB')], [('long', 'RB')], [('elusive', 'JJ')], [('game', 'NN')], [('programmers', 'NNS')], [(',', ',')], [('problem', 'NN')], [('space', 'NN')], [('go', 'VB')], [('extremely', 'RB')], [('large', 'JJ')], [('deep', 'NN')], [('.', '.')], [('unlike', 'IN')], [('chess', 'NN')], [(',', ',')], [('address', 'NN')], [('go', 'VB')], [('brute', 'NN')], [('forcing', 'VBG')], [('way', 'NN')], [('space', 'NN')], [(',', ',')], [('adaptively', 'RB')], [('look', 'NN')], [('complex', 'JJ')], [('patterns', 'NNS')], [('meta-patterns', 'NNS')], [(',', ',')], [('combine', 'NN')], [('association', 'NN')], [('reasoning', 'VBG')], [(',', ',')], [('random', 'NN')], [('exploration', 'NN')], [('systematic', 'JJ')], [('proof', 'NN')], [('.', '.')], [('deepmind', 'NN')], [('made', 'VBN')], [('dramatic', 'JJ')], [('progress', 'NN')], [('task', 'NN')], [(',', ',')], [('equipping', 'VBG')], [('machines', 'NNS')], [('human-like', 'NN')], [('intelligence', 'NN')], [(',', ',')], [('finding', 'VBG')], [('ways', 'NNS')], [('identify', 'VB')], [('relevant', 'NN')], [('patterns', 'NNS')], [('billions', 'NNS')], [('games', 'NNS')], [('.', '.')], [('programming', 'VBG')], [('substantial', 'JJ')], [('similarities', 'NNS')], [('go', 'VB')], [(':', ':')], [('programmer', 'NN')], [('must', 'MD')], [('plan', 'NN')], [('ahead', 'RB')], [('many', 'JJ')], [('levels', 'NNS')], [(',', ',')], [('problems', 'NNS')], [('programmer', 'NN')], [('quite', 'RB')], [('yet', 'RB')], [('see', 'VB')], [(',', ',')], [('many', 'JJ')], [('resulting', 'VBG')], [('design', 'NN')], [('decisions', 'NNS')], [('made', 'VBN')], [('early', 'RB')], [('.', '.')], [('imagine', 'NN')], [('could', 'MD')], [('automate', 'NN')], [('parts', 'NNS')], [('!', '.')], [('even', 'RB')], [('relatively', 'RB')], [('primitive', 'NN')], [('alphago-like', 'NN')], [('ais', 'NN')], [('could', 'MD')], [('rapidly', 'RB')], [('explore', 'NN')], [('billions', 'NNS')], [('possible', 'JJ')], [('complex', 'JJ')], [('architectures', 'NNS')], [(',', ',')], [('using', 'VBG')], [('combination', 'NN')], [('evolutionary', 'JJ')], [('design', 'NN')], [(',', ',')], [('adaptive', 'JJ')], [('pattern', 'NN')], [('matching', 'VBG')], [(',', ',')], [('gradient', 'NN')], [('descent', 'NN')], [(',', ',')], [('giant', 'NN')], [(',', ',')], [('growing', 'VBG')], [('libraries', 'NNS')], [('established', 'VBN')], [('building', 'NN')], [('blocks', 'NNS')], [('.', '.')], [('unlike', 'IN')], [('humans', 'NNS')], [(',', ',')], [('ais', 'NN')], [('never', 'RB')], [('make', 'VB')], [('syntactic', 'JJ')], [('errors', 'NNS')], [(',', ',')], [('simple', 'NN')], [('logic', 'NN')], [('errors', 'NNS')], [(',', ',')], [('known', 'VBN')], [('design', 'NN')], [('errors', 'NNS')], [('.', '.')], [('beyond', 'IN')], [(',', ',')], [('ais', 'NN')], [('perfect', 'NN')], [('capacity', 'NN')], [('learn', 'NN')], [('past', 'NN')], [('hypothetical', 'JJ')], [('mistakes', 'NNS')], [(':', ':')], [('particular', 'JJ')], [('approach', 'NN')], [('shown', 'VBN')], [('flaw', 'NN')], [('vulnerability', 'NN')], [(',', ',')], [('system', 'NN')], [('never', 'RB')], [('try', 'NN')], [('implement', 'NN')], [('.', '.')], [('believe', 'VB')], [('even', 'RB')], [('absence', 'NN')], [('general', 'JJ')], [('ai', 'NN')], [(',', ',')], [('programming', 'VBG')], [('going', 'VBG')], [('change', 'NN')], [('fast', 'NN')], [('soon', 'RB')], [('.', '.')], [('longer', 'NN')], [('brood', 'NN')], [('tricky', 'NN')], [('algorithms', 'NN')], [(',', ',')], [('invent', 'NN')], [('clever', 'NN')], [('optimizations', 'NNS')], [(',', ',')], [('find', 'VB')], [('eliminate', 'NN')], [('bugs', 'NNS')], [(',', ',')], [('evaluate', 'NN')], [('pull', 'NN')], [('requests', 'NNS')], [(',', ',')], [('perform', 'NN')], [('code', 'NN')], [('reviews', 'NNS')], [(',', ',')], [('come', 'VB')], [('terms', 'NNS')], [('updates', 'NNS')], [('tools', 'NNS')], [('libraries', 'NNS')], [(',', ',')], [('fiddle', 'NN')], [('deployment', 'NN')], [('strategies', 'NNS')], [('.', '.')], [('instead', 'RB')], [(',', ',')], [('focus', 'NN')], [('specifying', 'VBG')], [('problem', 'NN')], [('ways', 'NNS')], [('allow', 'VB')], [('machines', 'NNS')], [('autonomously', 'RB')], [('explore', 'NN')], [('resulting', 'VBG')], [('space', 'NN')], [('solutions', 'NNS')], [('.', '.')], [('way', 'NN')], [('tell', 'NN')], [('machines', 'NNS')], [('problems', 'NNS')], [('need', 'NN')], [('solved', 'VBN')], [(',', ',')], [('narrow', 'NN')], [('problems', 'NNS')], [('go', 'VB')], [('sized', 'VBN')], [('chunks', 'NNS')], [(',', ',')], [('leave', 'VB')], [('actual', 'JJ')], [('programming', 'VBG')], [('computers', 'NNS')], [('.', '.')], [('computers', 'NNS')], [('work', 'NN')], [('minutes', 'NNS')], [('days', 'NNS')], [('months', 'NNS')], [(',', ',')], [('dynamically', 'RB')], [('rent', 'NN')], [('cpus', 'NN')], [(',', ',')], [('interface', 'NN')], [('machines', 'NNS')], [('working', 'VBG')], [('similar', 'JJ')], [('problems', 'NNS')], [(',', ',')], [('peruse', 'NN')], [('giant', 'NN')], [(',', ',')], [('growing', 'VBG')], [('global', 'JJ')], [('libraries', 'NNS')], [('useful', 'JJ')], [('building', 'NN')], [('blocks', 'NNS')], [('.', '.')], [('resulting', 'VBG')], [('code', 'NN')], [('usually', 'RB')], [('provably', 'RB')], [('correct', 'NN')], [(',', ',')], [('free', 'JJ')], [('trivial', 'JJ')], [('bugs', 'NNS')], [('inconsistencies', 'NNS')], [(',', ',')], [('completely', 'RB')], [('incomprehensible', 'JJ')], [('human', 'NN')], [('brains', 'NNS')], [('.', '.')], [('still', 'RB')], [('want', 'NN')], [('children', 'NNS')], [('learn', 'NN')], [('program', 'NN')], [(',', ',')], [('mostly', 'RB')], [('interesting', 'VBG')], [('conversations', 'NNS')], [('.', '.')], [('expect', 'VB')], [('many', 'JJ')], [('programmers', 'NNS')], [('still', 'RB')], [('earn', 'NN')], [('living', 'NN')], [('writing', 'VBG')], [('actual', 'JJ')], [('code', 'NN')], [('children', 'NNS')], [('school', 'NN')], [('.', '.')]]","program harder truck-driving , seem clear self-driving car imminent self-programming computer . suspect even current ai method , soon see dramatic change software write . , success alphago seem quite significant regard . go long elusive game programmer , problem space go extremely large deep . unlike chess , address go brute force way space , adaptively look complex pattern meta-patterns , combine association reason , random exploration systematic proof . deepmind make dramatic progress task , equip machine human-like intelligence , find way identify relevant pattern billion game . program substantial similarity go : programmer must plan ahead many level , problem programmer quite yet see , many result design decision make early . imagine could automate part ! even relatively primitive alphago-like ai could rapidly explore billion possible complex architecture , use combination evolutionary design , adaptive pattern match , gradient descent , giant , grow library establish building block . unlike human , ai never make syntactic error , simple logic error , know design error . beyond , ai perfect capacity learn past hypothetical mistake : particular approach show flaw vulnerability , system never try implement . believe even absence general ai , program go change fast soon . longer brood tricky algorithm , invent clever optimization , find eliminate bug , evaluate pull request , perform code review , come term update tool library , fiddle deployment strategy . instead , focus specify problem way allow machine autonomously explore result space solution . way tell machine problem need solve , narrow problem go size chunk , leave actual program computer . computer work minute day month , dynamically rent cpu , interface machine work similar problem , peruse giant , grow global library useful building block . result code usually provably correct , free trivial bug inconsistency , completely incomprehensible human brain . still want child learn program , mostly interest conversation . expect many programmer still earn living write actual code child school .",3_search_ai_think_google,4
14,t678u0,My thoughts about Linus Torvalds on moving the Linux Kernel to modern C.,,0,0.45,computerscience,https://www.reddit.com/r/computerscience/comments/t678u0/my_thoughts_about_linus_torvalds_on_moving_the/,1,"""we all know linux is written in c. what you may not know is that it is written in a long-outdated c dialect: the 1989 version of the [c language standard, c89](). this is also known as ansi x3.159-1989, or ansi c. linus torvalds has decided that enough is enough and will move linux's official c to 2011's [c11 standard](-std.org/jtc1/sc22/wg14/www/docs/n1548.pdf)."" - steven j. vaughan-nichols. 

the linux kernel is the soul of modern computers, this implies that from time to time it is seen with new updates, many people in forums comment on the migration of the c language to c++.

the linux kernel has always been, and will continue to be, c. it is just moving from c89 standard (back when it was largely us ansi maintained, not iso/iec) compatible to c11 (which is also c17, c11 with some fixes/improvements) standard compliant.

i.e., the kernel will need a c11 (or c17) standard compatible compiler to build. there maybe further compiler implementation-specific aspects beyond that, such as how the rest of the gnu/linux system is built.

c++ would not benefit the kernel much, ++ only adds class declaration and behaviour, as far as i know it is just applying a higher standard. 

more or less the same functionality, with some more efficient implementation of some things.",1646357546.0,"['``', 'know', 'linux', 'write', 'c.', 'may', 'know', 'write', 'long-outdated', 'c', 'dialect', ':', '1989', 'version', '[', 'c', 'language', 'standard', ',', 'c89', ']', '(', ')', '.', 'also', 'know', 'ansi', 'x3.159-1989', ',', 'ansi', 'c.', 'linus', 'torvalds', 'decide', 'enough', 'enough', 'move', 'linux', ""'s"", 'official', 'c', '2011', ""'s"", '[', 'c11', 'standard', ']', '(', '-std.org/jtc1/sc22/wg14/www/docs/n1548.pdf', ')', '.', ""''"", '-', 'steven', 'j.', 'vaughan-nichols', '.', 'linux', 'kernel', 'soul', 'modern', 'computer', ',', 'implies', 'time', 'time', 'see', 'new', 'update', ',', 'many', 'people', 'forum', 'comment', 'migration', 'c', 'language', 'c++', '.', 'linux', 'kernel', 'always', ',', 'continue', ',', 'c.', 'move', 'c89', 'standard', '(', 'back', 'largely', 'u', 'ansi', 'maintain', ',', 'iso/iec', ')', 'compatible', 'c11', '(', 'also', 'c17', ',', 'c11', 'fixes/improvements', ')', 'standard', 'compliant', '.', 'i.e.', ',', 'kernel', 'need', 'c11', '(', 'c17', ')', 'standard', 'compatible', 'compiler', 'build', '.', 'maybe', 'compiler', 'implementation-specific', 'aspect', 'beyond', ',', 'rest', 'gnu/linux', 'system', 'built', '.', 'c++', 'would', 'benefit', 'kernel', 'much', ',', '++', 'add', 'class', 'declaration', 'behaviour', ',', 'far', 'know', 'apply', 'high', 'standard', '.', 'less', 'functionality', ',', 'efficient', 'implementation', 'thing', '.']","[[('``', '``')], [('know', 'VB')], [('linux', 'NN')], [('written', 'VBN')], [('c.', 'NN')], [('may', 'MD')], [('know', 'VB')], [('written', 'VBN')], [('long-outdated', 'JJ')], [('c', 'NNS')], [('dialect', 'NN')], [(':', ':')], [('1989', 'CD')], [('version', 'NN')], [('[', 'NN')], [('c', 'NNS')], [('language', 'NN')], [('standard', 'NN')], [(',', ',')], [('c89', 'NN')], [(']', 'NN')], [('(', '(')], [(')', ')')], [('.', '.')], [('also', 'RB')], [('known', 'VBN')], [('ansi', 'NN')], [('x3.159-1989', 'NN')], [(',', ',')], [('ansi', 'NN')], [('c.', 'NN')], [('linus', 'NN')], [('torvalds', 'NNS')], [('decided', 'VBD')], [('enough', 'RB')], [('enough', 'RB')], [('move', 'NN')], [('linux', 'NN')], [(""'s"", 'POS')], [('official', 'NN')], [('c', 'NNS')], [('2011', 'CD')], [(""'s"", 'POS')], [('[', 'NN')], [('c11', 'NN')], [('standard', 'NN')], [(']', 'NN')], [('(', '(')], [('-std.org/jtc1/sc22/wg14/www/docs/n1548.pdf', 'NN')], [(')', ')')], [('.', '.')], [(""''"", ""''"")], [('-', ':')], [('steven', 'NN')], [('j.', 'NN')], [('vaughan-nichols', 'NNS')], [('.', '.')], [('linux', 'NN')], [('kernel', 'NNS')], [('soul', 'NN')], [('modern', 'JJ')], [('computers', 'NNS')], [(',', ',')], [('implies', 'NNS')], [('time', 'NN')], [('time', 'NN')], [('seen', 'VBN')], [('new', 'JJ')], [('updates', 'NNS')], [(',', ',')], [('many', 'JJ')], [('people', 'NNS')], [('forums', 'NNS')], [('comment', 'NN')], [('migration', 'NN')], [('c', 'NNS')], [('language', 'NN')], [('c++', 'NN')], [('.', '.')], [('linux', 'NN')], [('kernel', 'NNS')], [('always', 'RB')], [(',', ',')], [('continue', 'NN')], [(',', ',')], [('c.', 'NN')], [('moving', 'VBG')], [('c89', 'NN')], [('standard', 'NN')], [('(', '(')], [('back', 'RB')], [('largely', 'RB')], [('us', 'PRP')], [('ansi', 'NN')], [('maintained', 'VBN')], [(',', ',')], [('iso/iec', 'NN')], [(')', ')')], [('compatible', 'JJ')], [('c11', 'NN')], [('(', '(')], [('also', 'RB')], [('c17', 'NN')], [(',', ',')], [('c11', 'NN')], [('fixes/improvements', 'NNS')], [(')', ')')], [('standard', 'NN')], [('compliant', 'NN')], [('.', '.')], [('i.e.', 'NN')], [(',', ',')], [('kernel', 'NNS')], [('need', 'NN')], [('c11', 'NN')], [('(', '(')], [('c17', 'NN')], [(')', ')')], [('standard', 'NN')], [('compatible', 'JJ')], [('compiler', 'NN')], [('build', 'NN')], [('.', '.')], [('maybe', 'RB')], [('compiler', 'NN')], [('implementation-specific', 'JJ')], [('aspects', 'NNS')], [('beyond', 'IN')], [(',', ',')], [('rest', 'NN')], [('gnu/linux', 'NN')], [('system', 'NN')], [('built', 'NN')], [('.', '.')], [('c++', 'NN')], [('would', 'MD')], [('benefit', 'NN')], [('kernel', 'NNS')], [('much', 'JJ')], [(',', ',')], [('++', 'NN')], [('adds', 'VBZ')], [('class', 'NN')], [('declaration', 'NN')], [('behaviour', 'NN')], [(',', ',')], [('far', 'RB')], [('know', 'VB')], [('applying', 'VBG')], [('higher', 'JJR')], [('standard', 'NN')], [('.', '.')], [('less', 'RBR')], [('functionality', 'NN')], [(',', ',')], [('efficient', 'NN')], [('implementation', 'NN')], [('things', 'NNS')], [('.', '.')]]","`` know linux write c. may know write long-outdated c dialect : 1989 version [ c language standard , c89 ] ( ) . also know ansi x3.159-1989 , ansi c. linus torvalds decide enough enough move linux 's official c 2011 's [ c11 standard ] ( -std.org/jtc1/sc22/wg14/www/docs/n1548.pdf ) . '' - steven j. vaughan-nichols . linux kernel soul modern computer , implies time time see new update , many people forum comment migration c language c++ . linux kernel always , continue , c. move c89 standard ( back largely u ansi maintain , iso/iec ) compatible c11 ( also c17 , c11 fixes/improvements ) standard compliant . i.e. , kernel need c11 ( c17 ) standard compatible compiler build . maybe compiler implementation-specific aspect beyond , rest gnu/linux system built . c++ would benefit kernel much , ++ add class declaration behaviour , far know apply high standard . less functionality , efficient implementation thing .",-1_abazbz2abz_2520_problem_use,4
16,t5yyn2,"Can someone explain to me, what is cloud? Or cloud-security.",Discussion,1,0.6,computerscience,https://www.reddit.com/r/computerscience/comments/t5yyn2/can_someone_explain_to_me_what_is_cloud_or/,2,"i know it is a dumb question, but i genuinely did not understand it, when my friend explained it to me.",1646334153.0,"['know', 'dumb', 'question', ',', 'genuinely', 'understand', ',', 'friend', 'explain', '.']","[[('know', 'VB')], [('dumb', 'NN')], [('question', 'NN')], [(',', ',')], [('genuinely', 'RB')], [('understand', 'NN')], [(',', ',')], [('friend', 'NN')], [('explained', 'VBD')], [('.', '.')]]","know dumb question , genuinely understand , friend explain .",-1_abazbz2abz_2520_problem_use,2
19,t5xfdw,Wanna learn about base64? check this out!,,0,0.29,computerscience,https://www.reddit.com/r/computerscience/comments/t5xfdw/wanna_learn_about_base64_check_this_out/,0,"hey folks,

wrote a post about base64 which i believe could be informative and helpful for many software engineers.

you are welcome to read and have fun: [/@tomerdbz/let us-understand-base64-a67c1831dfc0](/@tomerdbz/let us-understand-base64-a67c1831dfc0)

feedback would be much apperciated :)",1646330113.0,"['hey', 'folk', ',', 'write', 'post', 'base64', 'believe', 'could', 'informative', 'helpful', 'many', 'software', 'engineer', '.', 'welcome', 'read', 'fun', ':', '[', '/', '@', 'tomerdbz/let', 'us-understand-base64-a67c1831dfc0', ']', '(', '/', '@', 'tomerdbz/let', 'us-understand-base64-a67c1831dfc0', ')', 'feedback', 'would', 'much', 'apperciated', ':', ')']","[[('hey', 'NN')], [('folks', 'NNS')], [(',', ',')], [('wrote', 'VBD')], [('post', 'NN')], [('base64', 'NN')], [('believe', 'VB')], [('could', 'MD')], [('informative', 'JJ')], [('helpful', 'NN')], [('many', 'JJ')], [('software', 'NN')], [('engineers', 'NNS')], [('.', '.')], [('welcome', 'NN')], [('read', 'NN')], [('fun', 'NN')], [(':', ':')], [('[', 'NN')], [('/', 'NN')], [('@', 'NN')], [('tomerdbz/let', 'NN')], [('us-understand-base64-a67c1831dfc0', 'JJ')], [(']', 'NN')], [('(', '(')], [('/', 'NN')], [('@', 'NN')], [('tomerdbz/let', 'NN')], [('us-understand-base64-a67c1831dfc0', 'JJ')], [(')', ')')], [('feedback', 'NN')], [('would', 'MD')], [('much', 'JJ')], [('apperciated', 'VBN')], [(':', ':')], [(')', ')')]]","hey folk , write post base64 believe could informative helpful many software engineer . welcome read fun : [ / @ tomerdbz/let us-understand-base64-a67c1831dfc0 ] ( / @ tomerdbz/let us-understand-base64-a67c1831dfc0 ) feedback would much apperciated : )",1_memory_byte_data_alignment,4
20,t5p78w,Why are internet search engines are getting really bad today?,,0,0.33,computerscience,https://www.reddit.com/r/computerscience/comments/t5p78w/why_are_internet_search_engines_are_getting/,1,"it does not matter if you use google, bing or duckduckgo they are all bad.  if any thing i find the ai software is making it worse every year. and no, i know some basic boolean search and many search engines are moving away from boolean search these days going by ai search.

i have used windows 95 and windows 98 os search to search for files on the computer and they far better than google, bing or duckduckgo and this is like 25 year old software and os.

one of the biggest complaints i have with google, bing and very much so duckduckgo is they do not like to show me posts from message boards, forums, reddit and quora. i will get some but not many.

i find bing the best at showing message boards, reddit, quora and forums. well google comes in second. and duckduckgo is just beyond terrible at showing message boards, reddit, quora and forums.

with ai things are suppose to be getting better not worse. what is going on with the developed of making search engine it is so bad today?

why are search engines moving away from key word search to what they think you should and should not see. and it seems even boolean search is being down plaid these days by the search engine makers.

why are computer database search million times better than search engine? why 10 to 14 years ago google was showing many and i say again many websites from message boards than later on started to remove this from the search? where search engines hate to show this today?",1646305707.0,"['matter', 'use', 'google', ',', 'bing', 'duckduckgo', 'bad', '.', 'thing', 'find', 'ai', 'software', 'make', 'bad', 'every', 'year', '.', ',', 'know', 'basic', 'boolean', 'search', 'many', 'search', 'engine', 'move', 'away', 'boolean', 'search', 'day', 'go', 'ai', 'search', '.', 'use', 'window', '95', 'window', '98', 'o', 'search', 'search', 'file', 'computer', 'far', 'well', 'google', ',', 'bing', 'duckduckgo', 'like', '25', 'year', 'old', 'software', 'o', '.', 'one', 'big', 'complaint', 'google', ',', 'bing', 'much', 'duckduckgo', 'like', 'show', 'post', 'message', 'board', ',', 'forum', ',', 'reddit', 'quora', '.', 'get', 'many', '.', 'find', 'bing', 'best', 'show', 'message', 'board', ',', 'reddit', ',', 'quora', 'forum', '.', 'well', 'google', 'come', 'second', '.', 'duckduckgo', 'beyond', 'terrible', 'show', 'message', 'board', ',', 'reddit', ',', 'quora', 'forum', '.', 'ai', 'thing', 'suppose', 'get', 'well', 'bad', '.', 'go', 'developed', 'make', 'search', 'engine', 'bad', 'today', '?', 'search', 'engine', 'move', 'away', 'key', 'word', 'search', 'think', 'see', '.', 'seem', 'even', 'boolean', 'search', 'plaid', 'day', 'search', 'engine', 'maker', '.', 'computer', 'database', 'search', 'million', 'time', 'well', 'search', 'engine', '?', '10', '14', 'year', 'ago', 'google', 'show', 'many', 'say', 'many', 'website', 'message', 'board', 'later', 'start', 'remove', 'search', '?', 'search', 'engine', 'hate', 'show', 'today', '?']","[[('matter', 'NN')], [('use', 'NN')], [('google', 'NN')], [(',', ',')], [('bing', 'NN')], [('duckduckgo', 'NN')], [('bad', 'JJ')], [('.', '.')], [('thing', 'NN')], [('find', 'VB')], [('ai', 'NN')], [('software', 'NN')], [('making', 'VBG')], [('worse', 'JJR')], [('every', 'DT')], [('year', 'NN')], [('.', '.')], [(',', ',')], [('know', 'VB')], [('basic', 'JJ')], [('boolean', 'NN')], [('search', 'NN')], [('many', 'JJ')], [('search', 'NN')], [('engines', 'NNS')], [('moving', 'VBG')], [('away', 'RB')], [('boolean', 'NN')], [('search', 'NN')], [('days', 'NNS')], [('going', 'VBG')], [('ai', 'NN')], [('search', 'NN')], [('.', '.')], [('used', 'VBN')], [('windows', 'NNS')], [('95', 'CD')], [('windows', 'NNS')], [('98', 'CD')], [('os', 'NN')], [('search', 'NN')], [('search', 'NN')], [('files', 'NNS')], [('computer', 'NN')], [('far', 'RB')], [('better', 'RBR')], [('google', 'NN')], [(',', ',')], [('bing', 'NN')], [('duckduckgo', 'NN')], [('like', 'IN')], [('25', 'CD')], [('year', 'NN')], [('old', 'JJ')], [('software', 'NN')], [('os', 'NN')], [('.', '.')], [('one', 'CD')], [('biggest', 'JJS')], [('complaints', 'NNS')], [('google', 'NN')], [(',', ',')], [('bing', 'NN')], [('much', 'JJ')], [('duckduckgo', 'NN')], [('like', 'IN')], [('show', 'NN')], [('posts', 'NNS')], [('message', 'NN')], [('boards', 'NNS')], [(',', ',')], [('forums', 'NNS')], [(',', ',')], [('reddit', 'NN')], [('quora', 'NNS')], [('.', '.')], [('get', 'VB')], [('many', 'JJ')], [('.', '.')], [('find', 'VB')], [('bing', 'NN')], [('best', 'JJS')], [('showing', 'VBG')], [('message', 'NN')], [('boards', 'NNS')], [(',', ',')], [('reddit', 'NN')], [(',', ',')], [('quora', 'NNS')], [('forums', 'NNS')], [('.', '.')], [('well', 'RB')], [('google', 'NN')], [('comes', 'VBZ')], [('second', 'JJ')], [('.', '.')], [('duckduckgo', 'NN')], [('beyond', 'IN')], [('terrible', 'JJ')], [('showing', 'VBG')], [('message', 'NN')], [('boards', 'NNS')], [(',', ',')], [('reddit', 'NN')], [(',', ',')], [('quora', 'NNS')], [('forums', 'NNS')], [('.', '.')], [('ai', 'NN')], [('things', 'NNS')], [('suppose', 'NN')], [('getting', 'VBG')], [('better', 'RBR')], [('worse', 'JJR')], [('.', '.')], [('going', 'VBG')], [('developed', 'NN')], [('making', 'VBG')], [('search', 'NN')], [('engine', 'NN')], [('bad', 'JJ')], [('today', 'NN')], [('?', '.')], [('search', 'NN')], [('engines', 'NNS')], [('moving', 'VBG')], [('away', 'RB')], [('key', 'NN')], [('word', 'NN')], [('search', 'NN')], [('think', 'NN')], [('see', 'VB')], [('.', '.')], [('seems', 'VBZ')], [('even', 'RB')], [('boolean', 'NN')], [('search', 'NN')], [('plaid', 'NN')], [('days', 'NNS')], [('search', 'NN')], [('engine', 'NN')], [('makers', 'NNS')], [('.', '.')], [('computer', 'NN')], [('database', 'NN')], [('search', 'NN')], [('million', 'CD')], [('times', 'NNS')], [('better', 'RBR')], [('search', 'NN')], [('engine', 'NN')], [('?', '.')], [('10', 'CD')], [('14', 'CD')], [('years', 'NNS')], [('ago', 'RB')], [('google', 'NN')], [('showing', 'VBG')], [('many', 'JJ')], [('say', 'VB')], [('many', 'JJ')], [('websites', 'NNS')], [('message', 'NN')], [('boards', 'NNS')], [('later', 'RB')], [('started', 'VBN')], [('remove', 'VB')], [('search', 'NN')], [('?', '.')], [('search', 'NN')], [('engines', 'NNS')], [('hate', 'NN')], [('show', 'NN')], [('today', 'NN')], [('?', '.')]]","matter use google , bing duckduckgo bad . thing find ai software make bad every year . , know basic boolean search many search engine move away boolean search day go ai search . use window 95 window 98 o search search file computer far well google , bing duckduckgo like 25 year old software o . one big complaint google , bing much duckduckgo like show post message board , forum , reddit quora . get many . find bing best show message board , reddit , quora forum . well google come second . duckduckgo beyond terrible show message board , reddit , quora forum . ai thing suppose get well bad . go developed make search engine bad today ? search engine move away key word search think see . seem even boolean search plaid day search engine maker . computer database search million time well search engine ? 10 14 year ago google show many say many website message board later start remove search ? search engine hate show today ?",3_search_ai_think_google,1
22,t55e0p,Efficiently use decimal numbers in C,Help,0,0.5,computerscience,https://www.reddit.com/r/computerscience/comments/t55e0p/efficiently_use_decimal_numbers_in_c/,3,"tl;dr: can someone point me to research on very efficient decimal number manipulation and interoperability with floats and ints, written in the c language?

---

sorry for the wall of text, but i want to give the full background here. as most of you know, floating point numbers are a pain when you need a certain level of exact mathematical calculations.

for example, `.1 + .2 - .3` equals zero, but not for most programming languages (static languages, for varying definitions of static tend to have this issue, too):

    $ perl -e 'say .1+.2-.3'
    5.55111512312578e-17
    $ ruby -e 'puts 0.1 + 0.2 - 0.3'
    5.551115123125783e-17
    $ python -c 'print .1 + .2 - .3'
    5.55111512313e-17
    $ echo ""puts [expr .1+.2-.3]""|tclsh
    5.551115123125783e-17

those are very small numbers, but they are not zero. if you divide the mass of the sun by those values of ""zero"", you get something which is roughly the mass of mount everest. you want an exception instead.

for any of you working on financial systems, you know about converting floats to ints, doing math on them, and converting them back, but it is a pain:

    $ python -c 'print (10*.1 + 10*.2 - 10*.3)/10'
    0.0

then there is raku's approach:

    $ rakudo -e 'say .1+.2-.3'
    0

the last example from [the raku programming language](/) looks interesting, but it is not using decimal numbers. it is using rationals:

    $ rakudo -e 'say (.1+.2-.3).what'
    (rat)

that looks pretty cool, but as soon as you get something that cannot be represented as a rational (numerator over denominator), such as the square root of 2, it falls back to `num`, a floating point:

    $ rakudo -e 'say (.5+1.5).what'
    (rat)
    $ rakudo -e 'say (.5+1.5).sqrt.what'
    (num)

with decimal numbers, i could specify an arbitrary precision and i will get a decimal number back. some languages offer built-in classes to support this, such as `java.math.bigdecimal` in java, or `decimal.decimal` in python. however, there is a catch: they are classes that wrap native numbers, not direct native support for decimals.

what many people do not know is that cobol not only offers native decimal number support, but cobol to java conversions sometimes fails because java simulates this at the language level, not the compiler level. as a result, i have read about cobol to java conversion projects that failed because java implementations were often _slower_ than their cobol counterparts. this is a massive problem when dealing with millions of dollars of financial transactions in a batch process. those errors add up, so using decimals minimizes errors, but at the cost of performance.

it is also worth noting that many mainframes have native hardware support for decimal numbers, something cobol takes advantage of, but most languages do not.

i was recently investigating introducing a native decimal type to the perl programming language, but while some interest was expressed, i could not provide decent background on extremely efficient implementations. having a native decimal type would be a huge boon for producing programs that need very accurate math. can someone offer suggestions on where to go for more information?",1646242348.0,"['tl', ';', 'dr', ':', 'someone', 'point', 'research', 'efficient', 'decimal', 'number', 'manipulation', 'interoperability', 'float', 'ints', ',', 'write', 'c', 'language', '?', '--', '-', 'sorry', 'wall', 'text', ',', 'want', 'give', 'full', 'background', '.', 'know', ',', 'float', 'point', 'number', 'pain', 'need', 'certain', 'level', 'exact', 'mathematical', 'calculation', '.', 'example', ',', '`', '.1', '+', '.2', '-', '.3', '`', 'equal', 'zero', ',', 'program', 'language', '(', 'static', 'language', ',', 'vary', 'definition', 'static', 'tend', 'issue', ',', ')', ':', '$', 'perl', '-e', ""'say"", "".1+.2-.3'"", '5.55111512312578e-17', '$', 'ruby', '-e', ""'puts"", '0.1', '+', '0.2', '-', ""0.3'"", '5.551115123125783e-17', '$', 'python', '-c', ""'print"", '.1', '+', '.2', '-', "".3'"", '5.55111512313e-17', '$', 'echo', '``', 'put', '[', 'expr', '.1+.2-.3', ']', ""''"", '|tclsh', '5.551115123125783e-17', 'small', 'number', ',', 'zero', '.', 'divide', 'mass', 'sun', 'value', '``', 'zero', ""''"", ',', 'get', 'something', 'roughly', 'mass', 'mount', 'everest', '.', 'want', 'exception', 'instead', '.', 'work', 'financial', 'system', ',', 'know', 'convert', 'float', 'ints', ',', 'math', ',', 'convert', 'back', ',', 'pain', ':', '$', 'python', '-c', ""'print"", '(', '10', '*', '.1', '+', '10', '*', '.2', '-', '10', '*', '.3', ')', ""/10'"", '0.0', 'raku', ""'s"", 'approach', ':', '$', 'rakudo', '-e', ""'say"", "".1+.2-.3'"", '0', 'last', 'example', '[', 'raku', 'program', 'language', ']', '(', '/', ')', 'look', 'interest', ',', 'use', 'decimal', 'number', '.', 'use', 'rational', ':', '$', 'rakudo', '-e', ""'say"", '(', '.1+.2-.3', ')', "".what'"", '(', 'rat', ')', 'look', 'pretty', 'cool', ',', 'soon', 'get', 'something', 'represent', 'rational', '(', 'numerator', 'denominator', ')', ',', 'square', 'root', '2', ',', 'fall', 'back', '`', 'num', '`', ',', 'float', 'point', ':', '$', 'rakudo', '-e', ""'say"", '(', '.5+1.5', ')', "".what'"", '(', 'rat', ')', '$', 'rakudo', '-e', ""'say"", '(', '.5+1.5', ')', "".sqrt.what'"", '(', 'num', ')', 'decimal', 'number', ',', 'could', 'specify', 'arbitrary', 'precision', 'get', 'decimal', 'number', 'back', '.', 'language', 'offer', 'built-in', 'class', 'support', ',', '`', 'java.math.bigdecimal', '`', 'java', ',', '`', 'decimal.decimal', '`', 'python', '.', 'however', ',', 'catch', ':', 'class', 'wrap', 'native', 'number', ',', 'direct', 'native', 'support', 'decimal', '.', 'many', 'people', 'know', 'cobol', 'offer', 'native', 'decimal', 'number', 'support', ',', 'cobol', 'java', 'conversion', 'sometimes', 'fails', 'java', 'simulates', 'language', 'level', ',', 'compiler', 'level', '.', 'result', ',', 'read', 'cobol', 'java', 'conversion', 'project', 'fail', 'java', 'implementation', 'often', '_slower_', 'cobol', 'counterpart', '.', 'massive', 'problem', 'deal', 'million', 'dollar', 'financial', 'transaction', 'batch', 'process', '.', 'error', 'add', ',', 'use', 'decimal', 'minimizes', 'error', ',', 'cost', 'performance', '.', 'also', 'worth', 'note', 'many', 'mainframe', 'native', 'hardware', 'support', 'decimal', 'number', ',', 'something', 'cobol', 'take', 'advantage', ',', 'language', '.', 'recently', 'investigate', 'introduce', 'native', 'decimal', 'type', 'perl', 'program', 'language', ',', 'interest', 'express', ',', 'could', 'provide', 'decent', 'background', 'extremely', 'efficient', 'implementation', '.', 'native', 'decimal', 'type', 'would', 'huge', 'boon', 'produce', 'program', 'need', 'accurate', 'math', '.', 'someone', 'offer', 'suggestion', 'go', 'information', '?']","[[('tl', 'NN')], [(';', ':')], [('dr', 'NN')], [(':', ':')], [('someone', 'NN')], [('point', 'NN')], [('research', 'NN')], [('efficient', 'NN')], [('decimal', 'NN')], [('number', 'NN')], [('manipulation', 'NN')], [('interoperability', 'NN')], [('floats', 'NNS')], [('ints', 'NNS')], [(',', ',')], [('written', 'VBN')], [('c', 'NNS')], [('language', 'NN')], [('?', '.')], [('--', ':')], [('-', ':')], [('sorry', 'NN')], [('wall', 'NN')], [('text', 'NN')], [(',', ',')], [('want', 'NN')], [('give', 'VB')], [('full', 'JJ')], [('background', 'NN')], [('.', '.')], [('know', 'VB')], [(',', ',')], [('floating', 'VBG')], [('point', 'NN')], [('numbers', 'NNS')], [('pain', 'NN')], [('need', 'NN')], [('certain', 'JJ')], [('level', 'NN')], [('exact', 'NN')], [('mathematical', 'JJ')], [('calculations', 'NNS')], [('.', '.')], [('example', 'NN')], [(',', ',')], [('`', '``')], [('.1', 'NN')], [('+', 'NN')], [('.2', 'NN')], [('-', ':')], [('.3', 'NN')], [('`', '``')], [('equals', 'NNS')], [('zero', 'NN')], [(',', ',')], [('programming', 'VBG')], [('languages', 'NNS')], [('(', '(')], [('static', 'JJ')], [('languages', 'NNS')], [(',', ',')], [('varying', 'VBG')], [('definitions', 'NNS')], [('static', 'JJ')], [('tend', 'NN')], [('issue', 'NN')], [(',', ',')], [(')', ')')], [(':', ':')], [('$', '$')], [('perl', 'NN')], [('-e', 'NN')], [(""'say"", 'VB')], [("".1+.2-.3'"", 'NN')], [('5.55111512312578e-17', 'JJ')], [('$', '$')], [('ruby', 'NN')], [('-e', 'NN')], [(""'puts"", 'NNS')], [('0.1', 'CD')], [('+', 'NN')], [('0.2', 'CD')], [('-', ':')], [(""0.3'"", 'CD')], [('5.551115123125783e-17', 'JJ')], [('$', '$')], [('python', 'NN')], [('-c', 'NN')], [(""'print"", 'NN')], [('.1', 'NN')], [('+', 'NN')], [('.2', 'NN')], [('-', ':')], [("".3'"", 'NN')], [('5.55111512313e-17', 'JJ')], [('$', '$')], [('echo', 'NN')], [('``', '``')], [('puts', 'NNS')], [('[', 'NN')], [('expr', 'NN')], [('.1+.2-.3', 'NN')], [(']', 'NN')], [(""''"", ""''"")], [('|tclsh', 'NN')], [('5.551115123125783e-17', 'JJ')], [('small', 'JJ')], [('numbers', 'NNS')], [(',', ',')], [('zero', 'NN')], [('.', '.')], [('divide', 'NN')], [('mass', 'NN')], [('sun', 'NN')], [('values', 'NNS')], [('``', '``')], [('zero', 'NN')], [(""''"", ""''"")], [(',', ',')], [('get', 'VB')], [('something', 'NN')], [('roughly', 'RB')], [('mass', 'NN')], [('mount', 'NN')], [('everest', 'NN')], [('.', '.')], [('want', 'NN')], [('exception', 'NN')], [('instead', 'RB')], [('.', '.')], [('working', 'VBG')], [('financial', 'JJ')], [('systems', 'NNS')], [(',', ',')], [('know', 'VB')], [('converting', 'VBG')], [('floats', 'NNS')], [('ints', 'NNS')], [(',', ',')], [('math', 'NN')], [(',', ',')], [('converting', 'VBG')], [('back', 'RB')], [(',', ',')], [('pain', 'NN')], [(':', ':')], [('$', '$')], [('python', 'NN')], [('-c', 'NN')], [(""'print"", 'NN')], [('(', '(')], [('10', 'CD')], [('*', 'NN')], [('.1', 'NN')], [('+', 'NN')], [('10', 'CD')], [('*', 'NN')], [('.2', 'NN')], [('-', ':')], [('10', 'CD')], [('*', 'NN')], [('.3', 'NN')], [(')', ')')], [(""/10'"", 'NN')], [('0.0', 'CD')], [('raku', 'NN')], [(""'s"", 'POS')], [('approach', 'NN')], [(':', ':')], [('$', '$')], [('rakudo', 'NN')], [('-e', 'NN')], [(""'say"", 'VB')], [("".1+.2-.3'"", 'NN')], [('0', 'CD')], [('last', 'JJ')], [('example', 'NN')], [('[', 'NN')], [('raku', 'NN')], [('programming', 'VBG')], [('language', 'NN')], [(']', 'NN')], [('(', '(')], [('/', 'NN')], [(')', ')')], [('looks', 'NNS')], [('interesting', 'VBG')], [(',', ',')], [('using', 'VBG')], [('decimal', 'NN')], [('numbers', 'NNS')], [('.', '.')], [('using', 'VBG')], [('rationals', 'NNS')], [(':', ':')], [('$', '$')], [('rakudo', 'NN')], [('-e', 'NN')], [(""'say"", 'VB')], [('(', '(')], [('.1+.2-.3', 'NN')], [(')', ')')], [("".what'"", 'NN')], [('(', '(')], [('rat', 'NN')], [(')', ')')], [('looks', 'NNS')], [('pretty', 'RB')], [('cool', 'NN')], [(',', ',')], [('soon', 'RB')], [('get', 'VB')], [('something', 'NN')], [('represented', 'VBN')], [('rational', 'JJ')], [('(', '(')], [('numerator', 'NN')], [('denominator', 'NN')], [(')', ')')], [(',', ',')], [('square', 'NN')], [('root', 'NN')], [('2', 'CD')], [(',', ',')], [('falls', 'NNS')], [('back', 'RB')], [('`', '``')], [('num', 'NN')], [('`', '``')], [(',', ',')], [('floating', 'VBG')], [('point', 'NN')], [(':', ':')], [('$', '$')], [('rakudo', 'NN')], [('-e', 'NN')], [(""'say"", 'VB')], [('(', '(')], [('.5+1.5', 'NN')], [(')', ')')], [("".what'"", 'NN')], [('(', '(')], [('rat', 'NN')], [(')', ')')], [('$', '$')], [('rakudo', 'NN')], [('-e', 'NN')], [(""'say"", 'VB')], [('(', '(')], [('.5+1.5', 'NN')], [(')', ')')], [("".sqrt.what'"", 'NN')], [('(', '(')], [('num', 'NN')], [(')', ')')], [('decimal', 'NN')], [('numbers', 'NNS')], [(',', ',')], [('could', 'MD')], [('specify', 'NN')], [('arbitrary', 'JJ')], [('precision', 'NN')], [('get', 'VB')], [('decimal', 'NN')], [('number', 'NN')], [('back', 'RB')], [('.', '.')], [('languages', 'NNS')], [('offer', 'NN')], [('built-in', 'NN')], [('classes', 'NNS')], [('support', 'NN')], [(',', ',')], [('`', '``')], [('java.math.bigdecimal', 'NN')], [('`', '``')], [('java', 'NN')], [(',', ',')], [('`', '``')], [('decimal.decimal', 'NN')], [('`', '``')], [('python', 'NN')], [('.', '.')], [('however', 'RB')], [(',', ',')], [('catch', 'NN')], [(':', ':')], [('classes', 'NNS')], [('wrap', 'NN')], [('native', 'JJ')], [('numbers', 'NNS')], [(',', ',')], [('direct', 'JJ')], [('native', 'JJ')], [('support', 'NN')], [('decimals', 'NNS')], [('.', '.')], [('many', 'JJ')], [('people', 'NNS')], [('know', 'VB')], [('cobol', 'NN')], [('offers', 'NNS')], [('native', 'JJ')], [('decimal', 'NN')], [('number', 'NN')], [('support', 'NN')], [(',', ',')], [('cobol', 'NN')], [('java', 'NN')], [('conversions', 'NNS')], [('sometimes', 'RB')], [('fails', 'NNS')], [('java', 'NN')], [('simulates', 'NNS')], [('language', 'NN')], [('level', 'NN')], [(',', ',')], [('compiler', 'NN')], [('level', 'NN')], [('.', '.')], [('result', 'NN')], [(',', ',')], [('read', 'NN')], [('cobol', 'NN')], [('java', 'NN')], [('conversion', 'NN')], [('projects', 'NNS')], [('failed', 'VBD')], [('java', 'NN')], [('implementations', 'NNS')], [('often', 'RB')], [('_slower_', 'NN')], [('cobol', 'NN')], [('counterparts', 'NNS')], [('.', '.')], [('massive', 'JJ')], [('problem', 'NN')], [('dealing', 'VBG')], [('millions', 'NNS')], [('dollars', 'NNS')], [('financial', 'JJ')], [('transactions', 'NNS')], [('batch', 'NN')], [('process', 'NN')], [('.', '.')], [('errors', 'NNS')], [('add', 'VB')], [(',', ',')], [('using', 'VBG')], [('decimals', 'NNS')], [('minimizes', 'NNS')], [('errors', 'NNS')], [(',', ',')], [('cost', 'NN')], [('performance', 'NN')], [('.', '.')], [('also', 'RB')], [('worth', 'NN')], [('noting', 'VBG')], [('many', 'JJ')], [('mainframes', 'NNS')], [('native', 'JJ')], [('hardware', 'NN')], [('support', 'NN')], [('decimal', 'NN')], [('numbers', 'NNS')], [(',', ',')], [('something', 'NN')], [('cobol', 'NN')], [('takes', 'VBZ')], [('advantage', 'NN')], [(',', ',')], [('languages', 'NNS')], [('.', '.')], [('recently', 'RB')], [('investigating', 'VBG')], [('introducing', 'VBG')], [('native', 'JJ')], [('decimal', 'NN')], [('type', 'NN')], [('perl', 'NN')], [('programming', 'VBG')], [('language', 'NN')], [(',', ',')], [('interest', 'NN')], [('expressed', 'VBN')], [(',', ',')], [('could', 'MD')], [('provide', 'NN')], [('decent', 'NN')], [('background', 'NN')], [('extremely', 'RB')], [('efficient', 'NN')], [('implementations', 'NNS')], [('.', '.')], [('native', 'JJ')], [('decimal', 'NN')], [('type', 'NN')], [('would', 'MD')], [('huge', 'JJ')], [('boon', 'NN')], [('producing', 'VBG')], [('programs', 'NNS')], [('need', 'NN')], [('accurate', 'NN')], [('math', 'NN')], [('.', '.')], [('someone', 'NN')], [('offer', 'NN')], [('suggestions', 'NNS')], [('go', 'VB')], [('information', 'NN')], [('?', '.')]]","tl ; dr : someone point research efficient decimal number manipulation interoperability float ints , write c language ? -- - sorry wall text , want give full background . know , float point number pain need certain level exact mathematical calculation . example , ` .1 + .2 - .3 ` equal zero , program language ( static language , vary definition static tend issue , ) : $ perl -e 'say .1+.2-.3' 5.55111512312578e-17 $ ruby -e 'puts 0.1 + 0.2 - 0.3' 5.551115123125783e-17 $ python -c 'print .1 + .2 - .3' 5.55111512313e-17 $ echo `` put [ expr .1+.2-.3 ] '' |tclsh 5.551115123125783e-17 small number , zero . divide mass sun value `` zero '' , get something roughly mass mount everest . want exception instead . work financial system , know convert float ints , math , convert back , pain : $ python -c 'print ( 10 * .1 + 10 * .2 - 10 * .3 ) /10' 0.0 raku 's approach : $ rakudo -e 'say .1+.2-.3' 0 last example [ raku program language ] ( / ) look interest , use decimal number . use rational : $ rakudo -e 'say ( .1+.2-.3 ) .what' ( rat ) look pretty cool , soon get something represent rational ( numerator denominator ) , square root 2 , fall back ` num ` , float point : $ rakudo -e 'say ( .5+1.5 ) .what' ( rat ) $ rakudo -e 'say ( .5+1.5 ) .sqrt.what' ( num ) decimal number , could specify arbitrary precision get decimal number back . language offer built-in class support , ` java.math.bigdecimal ` java , ` decimal.decimal ` python . however , catch : class wrap native number , direct native support decimal . many people know cobol offer native decimal number support , cobol java conversion sometimes fails java simulates language level , compiler level . result , read cobol java conversion project fail java implementation often _slower_ cobol counterpart . massive problem deal million dollar financial transaction batch process . error add , use decimal minimizes error , cost performance . also worth note many mainframe native hardware support decimal number , something cobol take advantage , language . recently investigate introduce native decimal type perl program language , interest express , could provide decent background extremely efficient implementation . native decimal type would huge boon produce program need accurate math . someone offer suggestion go information ?",-1_abazbz2abz_2520_problem_use,3
24,t4wi72,"What is a board game like TicTacToe, Connect4 and Othello that my students can program?",Advice,2,1.0,computerscience,https://www.reddit.com/r/computerscience/comments/t4wi72/what_is_a_board_game_like_tictactoe_connect4_and/,4,"i am teaching introductory oop and for the next project i want the students to extend an existing framework with a new board game. the previous years we have had tictactoe, connect4 and othello. the game must be for two players, use a single grid and the pieces must have three states (player1, player2, null).  
games like chess would not work because of different types of pieces. checkers would also be hard due to stacking rules and some difficulties in movement.

any idea of a game that might fit?",1646213547.0,"['teach', 'introductory', 'oop', 'next', 'project', 'want', 'student', 'extend', 'exist', 'framework', 'new', 'board', 'game', '.', 'previous', 'year', 'tictactoe', ',', 'connect4', 'othello', '.', 'game', 'must', 'two', 'player', ',', 'use', 'single', 'grid', 'piece', 'must', 'three', 'state', '(', 'player1', ',', 'player2', ',', 'null', ')', '.', 'game', 'like', 'chess', 'would', 'work', 'different', 'type', 'piece', '.', 'checker', 'would', 'also', 'hard', 'due', 'stack', 'rule', 'difficulty', 'movement', '.', 'idea', 'game', 'might', 'fit', '?']","[[('teaching', 'VBG')], [('introductory', 'NN')], [('oop', 'NN')], [('next', 'JJ')], [('project', 'NN')], [('want', 'NN')], [('students', 'NNS')], [('extend', 'NN')], [('existing', 'VBG')], [('framework', 'NN')], [('new', 'JJ')], [('board', 'NN')], [('game', 'NN')], [('.', '.')], [('previous', 'JJ')], [('years', 'NNS')], [('tictactoe', 'NN')], [(',', ',')], [('connect4', 'NN')], [('othello', 'NN')], [('.', '.')], [('game', 'NN')], [('must', 'MD')], [('two', 'CD')], [('players', 'NNS')], [(',', ',')], [('use', 'NN')], [('single', 'JJ')], [('grid', 'NN')], [('pieces', 'NNS')], [('must', 'MD')], [('three', 'CD')], [('states', 'NNS')], [('(', '(')], [('player1', 'NN')], [(',', ',')], [('player2', 'NN')], [(',', ',')], [('null', 'NN')], [(')', ')')], [('.', '.')], [('games', 'NNS')], [('like', 'IN')], [('chess', 'NN')], [('would', 'MD')], [('work', 'NN')], [('different', 'JJ')], [('types', 'NNS')], [('pieces', 'NNS')], [('.', '.')], [('checkers', 'NNS')], [('would', 'MD')], [('also', 'RB')], [('hard', 'JJ')], [('due', 'JJ')], [('stacking', 'VBG')], [('rules', 'NNS')], [('difficulties', 'NNS')], [('movement', 'NN')], [('.', '.')], [('idea', 'NN')], [('game', 'NN')], [('might', 'MD')], [('fit', 'NN')], [('?', '.')]]","teach introductory oop next project want student extend exist framework new board game . previous year tictactoe , connect4 othello . game must two player , use single grid piece must three state ( player1 , player2 , null ) . game like chess would work different type piece . checker would also hard due stack rule difficulty movement . idea game might fit ?",-1_abazbz2abz_2520_problem_use,3
25,t4sxsp,"I saw in an exam paper that it says if a floating point number starts with consecutive bits that are the same (i.e. 00 or 11), then it's not normalised? Is that true? For 00, I understand, but wouldn't any number -0.5 >= x > 0 start with 11?",,5,1.0,computerscience,https://www.reddit.com/r/computerscience/comments/t4sxsp/i_saw_in_an_exam_paper_that_it_says_if_a_floating/,1,"even in the same textbook, it seems to suggest -0.5 x 2\^3 would be represented as 1100 0011, which the first 4 bits representing the mantissa and the next 4 representing the exponent

&#x200b;

following that, to me, it would seem that to represent 0.5, you would just have 1.100 (-1 + 0.5) for the mantissa and 0000 for the exponent

&#x200b;

is there some kind of caveat that the exponent cannot be 0 or something? or are my calculations way off?

&#x200b;

since i have seen this fact mentioned multiple times, but could not seem to find any explanation for why this is true

&#x200b;

>note that you cannot represent zero in the normalised form because normalised numbers must begin with 01 for positive numbers and 10 for negative numbers. 

&#x200b;

note: this seems to be some simplified floating point format that the books/exam mentions - it does not seem to be the ieee-754 version i see mentioned everywhere",1646199562.0,"['even', 'textbook', ',', 'seem', 'suggest', '-0.5', 'x', '2\\^3', 'would', 'represent', '1100', '0011', ',', 'first', '4', 'bit', 'represent', 'mantissa', 'next', '4', 'represent', 'exponent', '&', '#', 'x200b', ';', 'follow', ',', ',', 'would', 'seem', 'represent', '0.5', ',', 'would', '1.100', '(', '-1', '+', '0.5', ')', 'mantissa', '0000', 'exponent', '&', '#', 'x200b', ';', 'kind', 'caveat', 'exponent', '0', 'something', '?', 'calculation', 'way', '?', '&', '#', 'x200b', ';', 'since', 'see', 'fact', 'mention', 'multiple', 'time', ',', 'could', 'seem', 'find', 'explanation', 'true', '&', '#', 'x200b', ';', '>', 'note', 'represent', 'zero', 'normalise', 'form', 'normalise', 'number', 'must', 'begin', '01', 'positive', 'number', '10', 'negative', 'number', '.', '&', '#', 'x200b', ';', 'note', ':', 'seem', 'simplify', 'float', 'point', 'format', 'books/exam', 'mention', '-', 'seem', 'ieee-754', 'version', 'see', 'mention', 'everywhere']","[[('even', 'RB')], [('textbook', 'NN')], [(',', ',')], [('seems', 'VBZ')], [('suggest', 'NN')], [('-0.5', 'NN')], [('x', 'NN')], [('2\\^3', 'CD')], [('would', 'MD')], [('represented', 'VBN')], [('1100', 'CD')], [('0011', 'CD')], [(',', ',')], [('first', 'RB')], [('4', 'CD')], [('bits', 'NNS')], [('representing', 'VBG')], [('mantissa', 'NN')], [('next', 'JJ')], [('4', 'CD')], [('representing', 'VBG')], [('exponent', 'NN')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('following', 'VBG')], [(',', ',')], [(',', ',')], [('would', 'MD')], [('seem', 'NN')], [('represent', 'NN')], [('0.5', 'CD')], [(',', ',')], [('would', 'MD')], [('1.100', 'CD')], [('(', '(')], [('-1', 'NN')], [('+', 'NN')], [('0.5', 'CD')], [(')', ')')], [('mantissa', 'NN')], [('0000', 'CD')], [('exponent', 'NN')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('kind', 'NN')], [('caveat', 'NN')], [('exponent', 'NN')], [('0', 'CD')], [('something', 'NN')], [('?', '.')], [('calculations', 'NNS')], [('way', 'NN')], [('?', '.')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('since', 'IN')], [('seen', 'VBN')], [('fact', 'NN')], [('mentioned', 'VBN')], [('multiple', 'NN')], [('times', 'NNS')], [(',', ',')], [('could', 'MD')], [('seem', 'NN')], [('find', 'VB')], [('explanation', 'NN')], [('true', 'JJ')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('>', 'NN')], [('note', 'NN')], [('represent', 'NN')], [('zero', 'NN')], [('normalised', 'VBN')], [('form', 'NN')], [('normalised', 'VBN')], [('numbers', 'NNS')], [('must', 'MD')], [('begin', 'NN')], [('01', 'CD')], [('positive', 'JJ')], [('numbers', 'NNS')], [('10', 'CD')], [('negative', 'JJ')], [('numbers', 'NNS')], [('.', '.')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('note', 'NN')], [(':', ':')], [('seems', 'VBZ')], [('simplified', 'VBN')], [('floating', 'VBG')], [('point', 'NN')], [('format', 'NN')], [('books/exam', 'NN')], [('mentions', 'NNS')], [('-', ':')], [('seem', 'NN')], [('ieee-754', 'NN')], [('version', 'NN')], [('see', 'VB')], [('mentioned', 'VBN')], [('everywhere', 'RB')]]","even textbook , seem suggest -0.5 x 2\^3 would represent 1100 0011 , first 4 bit represent mantissa next 4 represent exponent & # x200b ; follow , , would seem represent 0.5 , would 1.100 ( -1 + 0.5 ) mantissa 0000 exponent & # x200b ; kind caveat exponent 0 something ? calculation way ? & # x200b ; since see fact mention multiple time , could seem find explanation true & # x200b ; > note represent zero normalise form normalise number must begin 01 positive number 10 negative number . & # x200b ; note : seem simplify float point format books/exam mention - seem ieee-754 version see mention everywhere",-1_abazbz2abz_2520_problem_use,2
26,t4vrpq,Books for Computing section of a new school library,,2,1.0,computerscience,https://www.reddit.com/r/computerscience/comments/t4vrpq/books_for_computing_section_of_a_new_school/,1,"i have been working on a list of books to fill a new school library's computer science section. it is a secondary school so students are 11-18

so far i have focused worked through amazon and picked out things on coding (python, c#, unity and scratch for the younger ones), a few bits on web 3.0, blockchain, bit of cybersecurity stuff, some biographies (kevin mitnick, elon musk etc...), i think i am up to about 50 titles or so.

are there any books you would recommend? or topics i have missed that would be appropriate? budget is not an issue, we just want it to be as inspirational and useful for the students as possible. 

thanks a lot in advance",1646210417.0,"['work', 'list', 'book', 'fill', 'new', 'school', 'library', ""'s"", 'computer', 'science', 'section', '.', 'secondary', 'school', 'student', '11-18', 'far', 'focus', 'work', 'amazon', 'picked', 'thing', 'cod', '(', 'python', ',', 'c', '#', ',', 'unity', 'scratch', 'young', 'one', ')', ',', 'bit', 'web', '3.0', ',', 'blockchain', ',', 'bit', 'cybersecurity', 'stuff', ',', 'biography', '(', 'kevin', 'mitnick', ',', 'elon', 'musk', 'etc', '...', ')', ',', 'think', '50', 'title', '.', 'book', 'would', 'recommend', '?', 'topic', 'miss', 'would', 'appropriate', '?', 'budget', 'issue', ',', 'want', 'inspirational', 'useful', 'student', 'possible', '.', 'thanks', 'lot', 'advance']","[[('working', 'VBG')], [('list', 'NN')], [('books', 'NNS')], [('fill', 'NN')], [('new', 'JJ')], [('school', 'NN')], [('library', 'NN')], [(""'s"", 'POS')], [('computer', 'NN')], [('science', 'NN')], [('section', 'NN')], [('.', '.')], [('secondary', 'JJ')], [('school', 'NN')], [('students', 'NNS')], [('11-18', 'JJ')], [('far', 'RB')], [('focused', 'VBN')], [('worked', 'VBN')], [('amazon', 'NN')], [('picked', 'NNS')], [('things', 'NNS')], [('coding', 'VBG')], [('(', '(')], [('python', 'NN')], [(',', ',')], [('c', 'NNS')], [('#', '#')], [(',', ',')], [('unity', 'NN')], [('scratch', 'NN')], [('younger', 'JJR')], [('ones', 'NNS')], [(')', ')')], [(',', ',')], [('bits', 'NNS')], [('web', 'NN')], [('3.0', 'CD')], [(',', ',')], [('blockchain', 'NN')], [(',', ',')], [('bit', 'NN')], [('cybersecurity', 'NN')], [('stuff', 'NN')], [(',', ',')], [('biographies', 'NNS')], [('(', '(')], [('kevin', 'NN')], [('mitnick', 'NN')], [(',', ',')], [('elon', 'NN')], [('musk', 'NN')], [('etc', 'NN')], [('...', ':')], [(')', ')')], [(',', ',')], [('think', 'NN')], [('50', 'CD')], [('titles', 'NNS')], [('.', '.')], [('books', 'NNS')], [('would', 'MD')], [('recommend', 'NN')], [('?', '.')], [('topics', 'NNS')], [('missed', 'VBN')], [('would', 'MD')], [('appropriate', 'NN')], [('?', '.')], [('budget', 'NN')], [('issue', 'NN')], [(',', ',')], [('want', 'NN')], [('inspirational', 'JJ')], [('useful', 'JJ')], [('students', 'NNS')], [('possible', 'JJ')], [('.', '.')], [('thanks', 'NNS')], [('lot', 'NN')], [('advance', 'NN')]]","work list book fill new school library 's computer science section . secondary school student 11-18 far focus work amazon picked thing cod ( python , c # , unity scratch young one ) , bit web 3.0 , blockchain , bit cybersecurity stuff , biography ( kevin mitnick , elon musk etc ... ) , think 50 title . book would recommend ? topic miss would appropriate ? budget issue , want inspirational useful student possible . thanks lot advance",4_book_learn_computer_good,4
27,t4bslx,How to build a compiler...,Advice,27,0.73,computerscience,https://www.reddit.com/r/computerscience/comments/t4bslx/how_to_build_a_compiler/,18,"i am interested in building a compiler from scratch....   
i would love if any experts or anybody in the field could guide me to take my first steps.

<3",1646151962.0,"['interested', 'building', 'compiler', 'scratch', '....', 'would', 'love', 'expert', 'anybody', 'field', 'could', 'guide', 'take', 'first', 'step', '.', '<', '3']","[[('interested', 'JJ')], [('building', 'NN')], [('compiler', 'NN')], [('scratch', 'NN')], [('....', 'NN')], [('would', 'MD')], [('love', 'NN')], [('experts', 'NNS')], [('anybody', 'NN')], [('field', 'NN')], [('could', 'MD')], [('guide', 'NN')], [('take', 'VB')], [('first', 'RB')], [('steps', 'NNS')], [('.', '.')], [('<', 'NN')], [('3', 'CD')]]",interested building compiler scratch .... would love expert anybody field could guide take first step . < 3,-1_abazbz2abz_2520_problem_use,3
28,t4oaxq,A Discussion on Readability,Discussion,0,0.5,computerscience,https://www.reddit.com/r/computerscience/comments/t4oaxq/a_discussion_on_readability/,3,"i have noticed that it has become increasingly popular to use minimal code to cache achieve a task with a program. i am not talking about reusability of code and reducing redundant logic. i am talking about the complex one liners and the excessive syntactic sugar. for myself, i find these shortened solutions to be more cumbersome, harder to read, and more complex while others pride themselves on it. i believe direct and to the point logic is more readable, easier to comprehend, and less prone to error. 

so my question is, what are your thoughts on readability? what is excessive and what do you think is effective? do some take it too far or is minimization of code effective?",1646185121.0,"['notice', 'become', 'increasingly', 'popular', 'use', 'minimal', 'code', 'cache', 'achieve', 'task', 'program', '.', 'talk', 'reusability', 'code', 'reduce', 'redundant', 'logic', '.', 'talk', 'complex', 'one', 'liner', 'excessive', 'syntactic', 'sugar', '.', ',', 'find', 'shorten', 'solution', 'cumbersome', ',', 'harder', 'read', ',', 'complex', 'others', 'pride', '.', 'believe', 'direct', 'point', 'logic', 'readable', ',', 'easy', 'comprehend', ',', 'less', 'prone', 'error', '.', 'question', ',', 'thought', 'readability', '?', 'excessive', 'think', 'effective', '?', 'take', 'far', 'minimization', 'code', 'effective', '?']","[[('noticed', 'VBN')], [('become', 'NN')], [('increasingly', 'RB')], [('popular', 'JJ')], [('use', 'NN')], [('minimal', 'NN')], [('code', 'NN')], [('cache', 'NN')], [('achieve', 'NN')], [('task', 'NN')], [('program', 'NN')], [('.', '.')], [('talking', 'VBG')], [('reusability', 'NN')], [('code', 'NN')], [('reducing', 'VBG')], [('redundant', 'NN')], [('logic', 'NN')], [('.', '.')], [('talking', 'VBG')], [('complex', 'JJ')], [('one', 'CD')], [('liners', 'NNS')], [('excessive', 'JJ')], [('syntactic', 'JJ')], [('sugar', 'NN')], [('.', '.')], [(',', ',')], [('find', 'VB')], [('shortened', 'VBN')], [('solutions', 'NNS')], [('cumbersome', 'NN')], [(',', ',')], [('harder', 'NN')], [('read', 'NN')], [(',', ',')], [('complex', 'JJ')], [('others', 'NNS')], [('pride', 'NN')], [('.', '.')], [('believe', 'VB')], [('direct', 'JJ')], [('point', 'NN')], [('logic', 'NN')], [('readable', 'JJ')], [(',', ',')], [('easier', 'JJR')], [('comprehend', 'NN')], [(',', ',')], [('less', 'RBR')], [('prone', 'NN')], [('error', 'NN')], [('.', '.')], [('question', 'NN')], [(',', ',')], [('thoughts', 'NNS')], [('readability', 'NN')], [('?', '.')], [('excessive', 'JJ')], [('think', 'NN')], [('effective', 'JJ')], [('?', '.')], [('take', 'VB')], [('far', 'RB')], [('minimization', 'NN')], [('code', 'NN')], [('effective', 'JJ')], [('?', '.')]]","notice become increasingly popular use minimal code cache achieve task program . talk reusability code reduce redundant logic . talk complex one liner excessive syntactic sugar . , find shorten solution cumbersome , harder read , complex others pride . believe direct point logic readable , easy comprehend , less prone error . question , thought readability ? excessive think effective ? take far minimization code effective ?",-1_abazbz2abz_2520_problem_use,3
30,t3ic7t,Did anyone else struggle with the calculus part of their computer science degree?,,150,0.95,computerscience,https://www.reddit.com/r/computerscience/comments/t3ic7t/did_anyone_else_struggle_with_the_calculus_part/,85,"i am in my second semester of computer science and i pass every class easily and i love the programming classes but these calculus classes are killing me. i am resorting to rewatching all my recorded lectures and re-doing all the problems to make sure i get it. just finished my first exam and got a 65% which really had me in a bad mood for a few days. there is no way i am going to give up because i know for sure this is what i want to do, but i just get frustrated with the difficulty of the advanced math sometimes because i know i will probably never use most of it in the course of a job as a developer/programmer. yes i understand it is good for learning to problem solve and yes i understand that i may end up programming things like video games/ robotics that do need some advanced mathematics. i am just not happy with how esoteric it all feels because i cannot see how any of the mathematics is applied to the real world. it is like learning things in a vaccum. that is why i did great in physics in high school but struggle with calculus now. i need practical examples of problem solving to really solidify my knowledge of something. anyone else feel disdain for the calculus during their degree?",1646062653.0,"['second', 'semester', 'computer', 'science', 'pas', 'every', 'class', 'easily', 'love', 'program', 'class', 'calculus', 'class', 'kill', '.', 'resort', 'rewatching', 'record', 'lecture', 're-doing', 'problem', 'make', 'sure', 'get', '.', 'finish', 'first', 'exam', 'get', '65', '%', 'really', 'bad', 'mood', 'day', '.', 'way', 'go', 'give', 'know', 'sure', 'want', ',', 'get', 'frustrate', 'difficulty', 'advanced', 'math', 'sometimes', 'know', 'probably', 'never', 'use', 'course', 'job', 'developer/programmer', '.', 'yes', 'understand', 'good', 'learn', 'problem', 'solve', 'yes', 'understand', 'may', 'end', 'program', 'thing', 'like', 'video', 'games/', 'robotics', 'need', 'advanced', 'mathematics', '.', 'happy', 'esoteric', 'feel', 'see', 'mathematics', 'apply', 'real', 'world', '.', 'like', 'learn', 'thing', 'vaccum', '.', 'great', 'physic', 'high', 'school', 'struggle', 'calculus', '.', 'need', 'practical', 'example', 'problem', 'solve', 'really', 'solidify', 'knowledge', 'something', '.', 'anyone', 'else', 'feel', 'disdain', 'calculus', 'degree', '?']","[[('second', 'JJ')], [('semester', 'NN')], [('computer', 'NN')], [('science', 'NN')], [('pass', 'NN')], [('every', 'DT')], [('class', 'NN')], [('easily', 'RB')], [('love', 'NN')], [('programming', 'VBG')], [('classes', 'NNS')], [('calculus', 'NN')], [('classes', 'NNS')], [('killing', 'VBG')], [('.', '.')], [('resorting', 'VBG')], [('rewatching', 'VBG')], [('recorded', 'VBN')], [('lectures', 'NNS')], [('re-doing', 'NN')], [('problems', 'NNS')], [('make', 'VB')], [('sure', 'NN')], [('get', 'VB')], [('.', '.')], [('finished', 'VBN')], [('first', 'RB')], [('exam', 'NN')], [('got', 'VBD')], [('65', 'CD')], [('%', 'NN')], [('really', 'RB')], [('bad', 'JJ')], [('mood', 'NN')], [('days', 'NNS')], [('.', '.')], [('way', 'NN')], [('going', 'VBG')], [('give', 'VB')], [('know', 'VB')], [('sure', 'NN')], [('want', 'NN')], [(',', ',')], [('get', 'VB')], [('frustrated', 'VBN')], [('difficulty', 'NN')], [('advanced', 'JJ')], [('math', 'NN')], [('sometimes', 'RB')], [('know', 'VB')], [('probably', 'RB')], [('never', 'RB')], [('use', 'NN')], [('course', 'NN')], [('job', 'NN')], [('developer/programmer', 'NN')], [('.', '.')], [('yes', 'NNS')], [('understand', 'NN')], [('good', 'JJ')], [('learning', 'VBG')], [('problem', 'NN')], [('solve', 'NN')], [('yes', 'NNS')], [('understand', 'NN')], [('may', 'MD')], [('end', 'NN')], [('programming', 'VBG')], [('things', 'NNS')], [('like', 'IN')], [('video', 'NN')], [('games/', 'NN')], [('robotics', 'NNS')], [('need', 'NN')], [('advanced', 'JJ')], [('mathematics', 'NNS')], [('.', '.')], [('happy', 'JJ')], [('esoteric', 'NN')], [('feels', 'NNS')], [('see', 'VB')], [('mathematics', 'NNS')], [('applied', 'VBN')], [('real', 'JJ')], [('world', 'NN')], [('.', '.')], [('like', 'IN')], [('learning', 'VBG')], [('things', 'NNS')], [('vaccum', 'NN')], [('.', '.')], [('great', 'JJ')], [('physics', 'NNS')], [('high', 'JJ')], [('school', 'NN')], [('struggle', 'NN')], [('calculus', 'NN')], [('.', '.')], [('need', 'NN')], [('practical', 'JJ')], [('examples', 'NNS')], [('problem', 'NN')], [('solving', 'VBG')], [('really', 'RB')], [('solidify', 'NN')], [('knowledge', 'NN')], [('something', 'NN')], [('.', '.')], [('anyone', 'NN')], [('else', 'RB')], [('feel', 'NN')], [('disdain', 'NN')], [('calculus', 'NN')], [('degree', 'NN')], [('?', '.')]]","second semester computer science pas every class easily love program class calculus class kill . resort rewatching record lecture re-doing problem make sure get . finish first exam get 65 % really bad mood day . way go give know sure want , get frustrate difficulty advanced math sometimes know probably never use course job developer/programmer . yes understand good learn problem solve yes understand may end program thing like video games/ robotics need advanced mathematics . happy esoteric feel see mathematics apply real world . like learn thing vaccum . great physic high school struggle calculus . need practical example problem solve really solidify knowledge something . anyone else feel disdain calculus degree ?",2_computer_learn_science_study,2
31,t3yzfh,Why don't tech companies use source-to-source compilers/ transcompilers?,Discussion,0,0.38,computerscience,https://www.reddit.com/r/computerscience/comments/t3yzfh/why_dont_tech_companies_use_sourcetosource/,22,"this is a genuine question.


tech companies need to hire a lot of different swes with different tech stacks. instead of doing that, why do not they just create transpilers to translate programming languages reducing hiring costs for multiple stacks?",1646107963.0,"['genuine', 'question', '.', 'tech', 'company', 'need', 'hire', 'lot', 'different', 'swes', 'different', 'tech', 'stack', '.', 'instead', ',', 'create', 'transpilers', 'translate', 'program', 'language', 'reduce', 'hire', 'cost', 'multiple', 'stack', '?']","[[('genuine', 'NN')], [('question', 'NN')], [('.', '.')], [('tech', 'NN')], [('companies', 'NNS')], [('need', 'NN')], [('hire', 'NN')], [('lot', 'NN')], [('different', 'JJ')], [('swes', 'NN')], [('different', 'JJ')], [('tech', 'NN')], [('stacks', 'NNS')], [('.', '.')], [('instead', 'RB')], [(',', ',')], [('create', 'NN')], [('transpilers', 'NNS')], [('translate', 'NN')], [('programming', 'VBG')], [('languages', 'NNS')], [('reducing', 'VBG')], [('hiring', 'VBG')], [('costs', 'NNS')], [('multiple', 'NN')], [('stacks', 'NNS')], [('?', '.')]]","genuine question . tech company need hire lot different swes different tech stack . instead , create transpilers translate program language reduce hire cost multiple stack ?",8_language_one_program_write,1
32,t3nltj,ELI5: What is the difference between a GPU and a CPU from a data processing perspective,Discussion,1,0.56,computerscience,https://www.reddit.com/r/computerscience/comments/t3nltj/eli5_what_is_the_difference_between_a_gpu_and_a/,5,"i have built a few computers and in general i am pretty comfortable with how most of the parts in a standard computer function, both in terms of what they do, and in broad strokes how they do it. something i have for some reason never been able to understand though is the difference between a gpu and a cpu from a data processing perspective. obviously a graphics processing unit works with graphics, but it is just running calculations on its compute modules to output images, right? gpu’s can also mine crypto so there is no magic sauce in the display out to make them work. what makes the two components actually different from each other?",1646076386.0,"['built', 'computer', 'general', 'pretty', 'comfortable', 'part', 'standard', 'computer', 'function', ',', 'term', ',', 'broad', 'stroke', '.', 'something', 'reason', 'never', 'able', 'understand', 'though', 'difference', 'gpu', 'cpu', 'data', 'processing', 'perspective', '.', 'obviously', 'graphic', 'processing', 'unit', 'work', 'graphic', ',', 'run', 'calculation', 'compute', 'module', 'output', 'image', ',', 'right', '?', 'gpu', '’', 'also', 'mine', 'crypto', 'magic', 'sauce', 'display', 'make', 'work', '.', 'make', 'two', 'component', 'actually', 'different', '?']","[[('built', 'NN')], [('computers', 'NNS')], [('general', 'JJ')], [('pretty', 'RB')], [('comfortable', 'JJ')], [('parts', 'NNS')], [('standard', 'NN')], [('computer', 'NN')], [('function', 'NN')], [(',', ',')], [('terms', 'NNS')], [(',', ',')], [('broad', 'JJ')], [('strokes', 'NNS')], [('.', '.')], [('something', 'NN')], [('reason', 'NN')], [('never', 'RB')], [('able', 'JJ')], [('understand', 'NN')], [('though', 'IN')], [('difference', 'NN')], [('gpu', 'NN')], [('cpu', 'NN')], [('data', 'NNS')], [('processing', 'NN')], [('perspective', 'NN')], [('.', '.')], [('obviously', 'RB')], [('graphics', 'NNS')], [('processing', 'NN')], [('unit', 'NN')], [('works', 'NNS')], [('graphics', 'NNS')], [(',', ',')], [('running', 'VBG')], [('calculations', 'NNS')], [('compute', 'NN')], [('modules', 'NNS')], [('output', 'NN')], [('images', 'NNS')], [(',', ',')], [('right', 'NN')], [('?', '.')], [('gpu', 'NN')], [('’', 'NN')], [('also', 'RB')], [('mine', 'NN')], [('crypto', 'NN')], [('magic', 'NN')], [('sauce', 'NN')], [('display', 'NN')], [('make', 'VB')], [('work', 'NN')], [('.', '.')], [('makes', 'VBZ')], [('two', 'CD')], [('components', 'NNS')], [('actually', 'RB')], [('different', 'JJ')], [('?', '.')]]","built computer general pretty comfortable part standard computer function , term , broad stroke . something reason never able understand though difference gpu cpu data processing perspective . obviously graphic processing unit work graphic , run calculation compute module output image , right ? gpu ’ also mine crypto magic sauce display make work . make two component actually different ?",5_cpu_computer_run_process,4
33,t42bo4,A question,,0,0.31,computerscience,https://www.reddit.com/r/computerscience/comments/t42bo4/a_question/,5,do anyone know the best yt channel for learning logic design and computer organisation???,1646119616.0,"['anyone', 'know', 'best', 'yt', 'channel', 'learn', 'logic', 'design', 'computer', 'organisation', '?', '?', '?']","[[('anyone', 'NN')], [('know', 'VB')], [('best', 'JJS')], [('yt', 'NN')], [('channel', 'NNS')], [('learning', 'VBG')], [('logic', 'NN')], [('design', 'NN')], [('computer', 'NN')], [('organisation', 'NN')], [('?', '.')], [('?', '.')], [('?', '.')]]",anyone know best yt channel learn logic design computer organisation ? ? ?,4_book_learn_computer_good,5
35,t2n8jw,Floating Point Normalisation,Help,15,0.95,computerscience,https://www.reddit.com/r/computerscience/comments/t2n8jw/floating_point_normalisation/,4,"i just had a quick question regarding the floating point number normalisation standards.

i know that a normalised floating point number can only start with 01 or 10 depending on whether it is positive or negative, but is there any particular reason that it cannot start with let us say 11?",1645964976.0,"['quick', 'question', 'regard', 'float', 'point', 'number', 'normalisation', 'standard', '.', 'know', 'normalise', 'float', 'point', 'number', 'start', '01', '10', 'depend', 'whether', 'positive', 'negative', ',', 'particular', 'reason', 'start', 'let', 'u', 'say', '11', '?']","[[('quick', 'NN')], [('question', 'NN')], [('regarding', 'VBG')], [('floating', 'VBG')], [('point', 'NN')], [('number', 'NN')], [('normalisation', 'NN')], [('standards', 'NNS')], [('.', '.')], [('know', 'VB')], [('normalised', 'VBN')], [('floating', 'VBG')], [('point', 'NN')], [('number', 'NN')], [('start', 'NN')], [('01', 'CD')], [('10', 'CD')], [('depending', 'VBG')], [('whether', 'IN')], [('positive', 'JJ')], [('negative', 'JJ')], [(',', ',')], [('particular', 'JJ')], [('reason', 'NN')], [('start', 'NN')], [('let', 'VB')], [('us', 'PRP')], [('say', 'VB')], [('11', 'CD')], [('?', '.')]]","quick question regard float point number normalisation standard . know normalise float point number start 01 10 depend whether positive negative , particular reason start let u say 11 ?",1_memory_byte_data_alignment,3
36,t25gm6,"In pass by reference, can we say that the value on the heap is modified directly?",,36,0.91,computerscience,https://www.reddit.com/r/computerscience/comments/t25gm6/in_pass_by_reference_can_we_say_that_the_value_on/,13,"in the actual pass by reference approach to functions, am i right in thinking that when the function gets a variable, it looks at its pointer, looks at the value stored where that is pointing too in the heap, then changes that?",1645905026.0,"['actual', 'pas', 'reference', 'approach', 'function', ',', 'right', 'think', 'function', 'get', 'variable', ',', 'look', 'pointer', ',', 'look', 'value', 'store', 'point', 'heap', ',', 'change', '?']","[[('actual', 'JJ')], [('pass', 'NN')], [('reference', 'NN')], [('approach', 'NN')], [('functions', 'NNS')], [(',', ',')], [('right', 'NN')], [('thinking', 'VBG')], [('function', 'NN')], [('gets', 'VBZ')], [('variable', 'JJ')], [(',', ',')], [('looks', 'NNS')], [('pointer', 'NN')], [(',', ',')], [('looks', 'NNS')], [('value', 'NN')], [('stored', 'VBN')], [('pointing', 'VBG')], [('heap', 'NN')], [(',', ',')], [('changes', 'NNS')], [('?', '.')]]","actual pas reference approach function , right think function get variable , look pointer , look value store point heap , change ?",1_memory_byte_data_alignment,3
37,t2pdve,Web Latency,Help,1,0.67,computerscience,https://www.reddit.com/r/computerscience/comments/t2pdve/web_latency/,9,"dear community,

i saw multiple articles on how increase in bandwidth does no effect on decreasing page load time after a certain threshold, but they do not seem to explain why is that so?

can i ask why the increase in bandwidth after certain threshold not decrease page load time? and why it is at that threshold that the plt stops decreasing? is it something to do with how web server loads page? thanks in advance for all the replies!

[-latency-effect/](-latency-effect/)",1645972155.0,"['dear', 'community', ',', 'saw', 'multiple', 'article', 'increase', 'bandwidth', 'effect', 'decrease', 'page', 'load', 'time', 'certain', 'threshold', ',', 'seem', 'explain', '?', 'ask', 'increase', 'bandwidth', 'certain', 'threshold', 'decrease', 'page', 'load', 'time', '?', 'threshold', 'plt', 'stop', 'decrease', '?', 'something', 'web', 'server', 'load', 'page', '?', 'thanks', 'advance', 'reply', '!', '[', '-latency-effect/', ']', '(', '-latency-effect/', ')']","[[('dear', 'NN')], [('community', 'NN')], [(',', ',')], [('saw', 'NN')], [('multiple', 'NN')], [('articles', 'NNS')], [('increase', 'NN')], [('bandwidth', 'NN')], [('effect', 'NN')], [('decreasing', 'VBG')], [('page', 'NN')], [('load', 'NN')], [('time', 'NN')], [('certain', 'JJ')], [('threshold', 'NN')], [(',', ',')], [('seem', 'NN')], [('explain', 'NN')], [('?', '.')], [('ask', 'NN')], [('increase', 'NN')], [('bandwidth', 'NN')], [('certain', 'JJ')], [('threshold', 'NN')], [('decrease', 'NN')], [('page', 'NN')], [('load', 'NN')], [('time', 'NN')], [('?', '.')], [('threshold', 'NN')], [('plt', 'NN')], [('stops', 'NNS')], [('decreasing', 'VBG')], [('?', '.')], [('something', 'NN')], [('web', 'NN')], [('server', 'NN')], [('loads', 'NNS')], [('page', 'NN')], [('?', '.')], [('thanks', 'NNS')], [('advance', 'NN')], [('replies', 'NNS')], [('!', '.')], [('[', 'NN')], [('-latency-effect/', 'NN')], [(']', 'NN')], [('(', '(')], [('-latency-effect/', 'NN')], [(')', ')')]]","dear community , saw multiple article increase bandwidth effect decrease page load time certain threshold , seem explain ? ask increase bandwidth certain threshold decrease page load time ? threshold plt stop decrease ? something web server load page ? thanks advance reply ! [ -latency-effect/ ] ( -latency-effect/ )",-1_abazbz2abz_2520_problem_use,4
38,t2kkbb,How is 2^10 1024 bytes and not 10 bits?,,0,0.5,computerscience,https://www.reddit.com/r/computerscience/comments/t2kkbb/how_is_210_1024_bytes_and_not_10_bits/,15,"ok. i am very confused about this. please help me understand this concept.

2^1 means we can use 1 bit to store the decimal numbers 1 or 2; 2^2 means we can use 2 bits to store the decimal numbers 1, 2, 3, or 4; 2^3 means we can use 3 bits to store the decimal numbers 1, 2, 3, 4, 5, 6, 7, or 8; and so on.

and 2^8 is 8 bits, which is 1 byte.

then how is 2^10 1024 bytes and not 1 byte and 2 bits?

is my understanding completely wrong about this? 
i would be glad if someone helps me understand this correctly!!! :)",1645954037.0,"['ok.', 'confuse', '.', 'please', 'help', 'understand', 'concept', '.', '2^1', 'mean', 'use', '1', 'bit', 'store', 'decimal', 'number', '1', '2', ';', '2^2', 'mean', 'use', '2', 'bit', 'store', 'decimal', 'number', '1', ',', '2', ',', '3', ',', '4', ';', '2^3', 'mean', 'use', '3', 'bit', 'store', 'decimal', 'number', '1', ',', '2', ',', '3', ',', '4', ',', '5', ',', '6', ',', '7', ',', '8', ';', '.', '2^8', '8', 'bit', ',', '1', 'byte', '.', '2^10', '1024', 'byte', '1', 'byte', '2', 'bit', '?', 'understand', 'completely', 'wrong', '?', 'would', 'glad', 'someone', 'help', 'understand', 'correctly', '!', '!', '!', ':', ')']","[[('ok.', 'NN')], [('confused', 'VBN')], [('.', '.')], [('please', 'NN')], [('help', 'NN')], [('understand', 'NN')], [('concept', 'NN')], [('.', '.')], [('2^1', 'CD')], [('means', 'NNS')], [('use', 'NN')], [('1', 'CD')], [('bit', 'NN')], [('store', 'NN')], [('decimal', 'NN')], [('numbers', 'NNS')], [('1', 'CD')], [('2', 'CD')], [(';', ':')], [('2^2', 'CD')], [('means', 'NNS')], [('use', 'NN')], [('2', 'CD')], [('bits', 'NNS')], [('store', 'NN')], [('decimal', 'NN')], [('numbers', 'NNS')], [('1', 'CD')], [(',', ',')], [('2', 'CD')], [(',', ',')], [('3', 'CD')], [(',', ',')], [('4', 'CD')], [(';', ':')], [('2^3', 'CD')], [('means', 'NNS')], [('use', 'NN')], [('3', 'CD')], [('bits', 'NNS')], [('store', 'NN')], [('decimal', 'NN')], [('numbers', 'NNS')], [('1', 'CD')], [(',', ',')], [('2', 'CD')], [(',', ',')], [('3', 'CD')], [(',', ',')], [('4', 'CD')], [(',', ',')], [('5', 'CD')], [(',', ',')], [('6', 'CD')], [(',', ',')], [('7', 'CD')], [(',', ',')], [('8', 'CD')], [(';', ':')], [('.', '.')], [('2^8', 'CD')], [('8', 'CD')], [('bits', 'NNS')], [(',', ',')], [('1', 'CD')], [('byte', 'NN')], [('.', '.')], [('2^10', 'CD')], [('1024', 'CD')], [('bytes', 'NNS')], [('1', 'CD')], [('byte', 'NN')], [('2', 'CD')], [('bits', 'NNS')], [('?', '.')], [('understanding', 'VBG')], [('completely', 'RB')], [('wrong', 'JJ')], [('?', '.')], [('would', 'MD')], [('glad', 'NN')], [('someone', 'NN')], [('helps', 'NNS')], [('understand', 'NN')], [('correctly', 'RB')], [('!', '.')], [('!', '.')], [('!', '.')], [(':', ':')], [(')', ')')]]","ok. confuse . please help understand concept . 2^1 mean use 1 bit store decimal number 1 2 ; 2^2 mean use 2 bit store decimal number 1 , 2 , 3 , 4 ; 2^3 mean use 3 bit store decimal number 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 ; . 2^8 8 bit , 1 byte . 2^10 1024 byte 1 byte 2 bit ? understand completely wrong ? would glad someone help understand correctly ! ! ! : )",1_memory_byte_data_alignment,3
39,t1jz33,Which step in modern cryptographic hash functions (such as SHA-256) is the most computationally expensive to reverse?,Help,44,0.94,computerscience,https://www.reddit.com/r/computerscience/comments/t1jz33/which_step_in_modern_cryptographic_hash_functions/,16,"i know what a hash function is -- but i do not understand what makes modern cryptographic hash functions (such as sha-256) so infeasible to reverse and work step-by-step backwards?

furthermore, i watched [this video by 3blue-1brown]() and he says that to break sha-256 security, it would be easier to take billions of guesses one at a time hoping to get lucky with a collision rather than to try and work backwards through the algorithm which converts an input string into an output ""digest"". **why is not the latter method faster?**

i read the psuedocode section for what sha-256 does on the [corresponding wikipedia page](-2) but i do not have any math/cs background so it is all gibberish to me... 😅

i do not plan to understand the algorithm which the sha-256 process uses to convert a string into a digest, but hopefully i can get 1 step closer by knowing **which step in in the sha-256 sequence of operations on a string is the most computationally expensive to reverse?**",1645837994.0,"['know', 'hash', 'function', '--', 'understand', 'make', 'modern', 'cryptographic', 'hash', 'function', '(', 'sha-256', ')', 'infeasible', 'reverse', 'work', 'step-by-step', 'backwards', '?', 'furthermore', ',', 'watch', '[', 'video', '3blue-1brown', ']', '(', ')', 'say', 'break', 'sha-256', 'security', ',', 'would', 'easy', 'take', 'billion', 'guess', 'one', 'time', 'hop', 'get', 'lucky', 'collision', 'rather', 'try', 'work', 'backwards', 'algorithm', 'convert', 'input', 'string', 'output', '``', 'digest', ""''"", '.', '*', '*', 'latter', 'method', 'faster', '?', '*', '*', 'read', 'psuedocode', 'section', 'sha-256', '[', 'correspond', 'wikipedia', 'page', ']', '(', '-2', ')', 'math/cs', 'background', 'gibberish', '...', '😅', 'plan', 'understand', 'algorithm', 'sha-256', 'process', 'us', 'convert', 'string', 'digest', ',', 'hopefully', 'get', '1', 'step', 'closer', 'know', '*', '*', 'step', 'sha-256', 'sequence', 'operation', 'string', 'computationally', 'expensive', 'reverse', '?', '*', '*']","[[('know', 'VB')], [('hash', 'NN')], [('function', 'NN')], [('--', ':')], [('understand', 'NN')], [('makes', 'VBZ')], [('modern', 'JJ')], [('cryptographic', 'JJ')], [('hash', 'NN')], [('functions', 'NNS')], [('(', '(')], [('sha-256', 'NN')], [(')', ')')], [('infeasible', 'JJ')], [('reverse', 'NN')], [('work', 'NN')], [('step-by-step', 'NN')], [('backwards', 'NNS')], [('?', '.')], [('furthermore', 'RB')], [(',', ',')], [('watched', 'VBN')], [('[', 'NN')], [('video', 'NN')], [('3blue-1brown', 'JJ')], [(']', 'NN')], [('(', '(')], [(')', ')')], [('says', 'VBZ')], [('break', 'NN')], [('sha-256', 'NN')], [('security', 'NN')], [(',', ',')], [('would', 'MD')], [('easier', 'JJR')], [('take', 'VB')], [('billions', 'NNS')], [('guesses', 'NNS')], [('one', 'CD')], [('time', 'NN')], [('hoping', 'VBG')], [('get', 'VB')], [('lucky', 'JJ')], [('collision', 'NN')], [('rather', 'RB')], [('try', 'NN')], [('work', 'NN')], [('backwards', 'NNS')], [('algorithm', 'NN')], [('converts', 'NNS')], [('input', 'NN')], [('string', 'NN')], [('output', 'NN')], [('``', '``')], [('digest', 'NN')], [(""''"", ""''"")], [('.', '.')], [('*', 'NN')], [('*', 'NN')], [('latter', 'NN')], [('method', 'NN')], [('faster', 'NN')], [('?', '.')], [('*', 'NN')], [('*', 'NN')], [('read', 'NN')], [('psuedocode', 'NN')], [('section', 'NN')], [('sha-256', 'NN')], [('[', 'NN')], [('corresponding', 'VBG')], [('wikipedia', 'NN')], [('page', 'NN')], [(']', 'NN')], [('(', '(')], [('-2', 'NN')], [(')', ')')], [('math/cs', 'NN')], [('background', 'NN')], [('gibberish', 'NN')], [('...', ':')], [('😅', 'NN')], [('plan', 'NN')], [('understand', 'NN')], [('algorithm', 'NN')], [('sha-256', 'NN')], [('process', 'NN')], [('uses', 'NNS')], [('convert', 'NN')], [('string', 'NN')], [('digest', 'NN')], [(',', ',')], [('hopefully', 'RB')], [('get', 'VB')], [('1', 'CD')], [('step', 'NN')], [('closer', 'NN')], [('knowing', 'VBG')], [('*', 'NN')], [('*', 'NN')], [('step', 'NN')], [('sha-256', 'NN')], [('sequence', 'NN')], [('operations', 'NNS')], [('string', 'NN')], [('computationally', 'RB')], [('expensive', 'JJ')], [('reverse', 'NN')], [('?', '.')], [('*', 'NN')], [('*', 'NN')]]","know hash function -- understand make modern cryptographic hash function ( sha-256 ) infeasible reverse work step-by-step backwards ? furthermore , watch [ video 3blue-1brown ] ( ) say break sha-256 security , would easy take billion guess one time hop get lucky collision rather try work backwards algorithm convert input string output `` digest '' . * * latter method faster ? * * read psuedocode section sha-256 [ correspond wikipedia page ] ( -2 ) math/cs background gibberish ... 😅 plan understand algorithm sha-256 process us convert string digest , hopefully get 1 step closer know * * step sha-256 sequence operation string computationally expensive reverse ? * *",-1_abazbz2abz_2520_problem_use,2
40,t26lo8,Issue with Data Structures I,Help,0,0.25,computerscience,https://www.reddit.com/r/computerscience/comments/t26lo8/issue_with_data_structures_i/,10,"hey, just had my first data structures course and the instructor was not so clear about how to do proofs and disproof's of different algorithms being equal to each other via asymptotic notation. are there good resources to brush up on it in under 2 hours?",1645908211.0,"['hey', ',', 'first', 'data', 'structure', 'course', 'instructor', 'clear', 'proof', 'disproof', ""'s"", 'different', 'algorithm', 'equal', 'via', 'asymptotic', 'notation', '.', 'good', 'resource', 'brush', '2', 'hour', '?']","[[('hey', 'NN')], [(',', ',')], [('first', 'RB')], [('data', 'NNS')], [('structures', 'NNS')], [('course', 'NN')], [('instructor', 'NN')], [('clear', 'JJ')], [('proofs', 'NN')], [('disproof', 'NN')], [(""'s"", 'POS')], [('different', 'JJ')], [('algorithms', 'NN')], [('equal', 'JJ')], [('via', 'IN')], [('asymptotic', 'JJ')], [('notation', 'NN')], [('.', '.')], [('good', 'JJ')], [('resources', 'NNS')], [('brush', 'NN')], [('2', 'CD')], [('hours', 'NNS')], [('?', '.')]]","hey , first data structure course instructor clear proof disproof 's different algorithm equal via asymptotic notation . good resource brush 2 hour ?",0_algorithm_time_node_bill,2
41,t1fiti,Modifying the Bellmen ford Algorithm for finding Arbitrage opportunities in finical markets.,,28,0.89,computerscience,https://www.reddit.com/r/computerscience/comments/t1fiti/modifying_the_bellmen_ford_algorithm_for_finding/,6,"i have been interested in creating an algorithm for finding arbitrage opportunities. the first algorithm that came to mind was the bellmen ford algorithm. however, when looking for arbitrage you are not looking for negative loops but a loop that meets the following condition

***w1 \* w2 \* w3 \* … \* wn > 1***

all of the sources i saw online end up modifying the weights between nodes to be the negative logarithm. this let us you change the condition you are looking for to

***(-log(w1)) + (-log(w2)) + (-log(w3)) + … + (-log(wn)) < 0***

this condition is looking for negative loops so the normal algorithm can be used with the modified weights. however, my first though was to change the relaxation in a few ways. first the start node has a distance of 1 and all other nodes have a distance of 0. during relaxation multiplication is used instead of addition to find the cost of a potential path. also instead of finding the lowest cost path it finds the highest cost path. during the finial relaxation if you find a path with a higher distance than is already there then this would imply a loop with a product of weights greater than one.

does any one else agree that this should work and if so why do you think the other method is preferred?",1645825785.0,"['interested', 'create', 'algorithm', 'find', 'arbitrage', 'opportunity', '.', 'first', 'algorithm', 'come', 'mind', 'bellman', 'ford', 'algorithm', '.', 'however', ',', 'look', 'arbitrage', 'look', 'negative', 'loop', 'loop', 'meet', 'follow', 'condition', '*', '*', '*', 'w1', '\\', '*', 'w2', '\\', '*', 'w3', '\\', '*', '…', '\\', '*', 'wn', '>', '1', '*', '*', '*', 'source', 'saw', 'online', 'end', 'modify', 'weight', 'node', 'negative', 'logarithm', '.', 'let', 'u', 'change', 'condition', 'look', '*', '*', '*', '(', '-log', '(', 'w1', ')', ')', '+', '(', '-log', '(', 'w2', ')', ')', '+', '(', '-log', '(', 'w3', ')', ')', '+', '…', '+', '(', '-log', '(', 'wn', ')', ')', '<', '0', '*', '*', '*', 'condition', 'look', 'negative', 'loop', 'normal', 'algorithm', 'use', 'modify', 'weight', '.', 'however', ',', 'first', 'though', 'change', 'relaxation', 'way', '.', 'first', 'start', 'node', 'distance', '1', 'node', 'distance', '0.', 'relaxation', 'multiplication', 'use', 'instead', 'addition', 'find', 'cost', 'potential', 'path', '.', 'also', 'instead', 'find', 'low', 'cost', 'path', 'find', 'high', 'cost', 'path', '.', 'finial', 'relaxation', 'find', 'path', 'high', 'distance', 'already', 'would', 'imply', 'loop', 'product', 'weight', 'great', 'one', '.', 'one', 'else', 'agree', 'work', 'think', 'method', 'prefer', '?']","[[('interested', 'JJ')], [('creating', 'VBG')], [('algorithm', 'NN')], [('finding', 'VBG')], [('arbitrage', 'NN')], [('opportunities', 'NNS')], [('.', '.')], [('first', 'RB')], [('algorithm', 'NN')], [('came', 'VBD')], [('mind', 'NN')], [('bellmen', 'NNS')], [('ford', 'NN')], [('algorithm', 'NN')], [('.', '.')], [('however', 'RB')], [(',', ',')], [('looking', 'VBG')], [('arbitrage', 'NN')], [('looking', 'VBG')], [('negative', 'JJ')], [('loops', 'NNS')], [('loop', 'NN')], [('meets', 'NNS')], [('following', 'VBG')], [('condition', 'NN')], [('*', 'NN')], [('*', 'NN')], [('*', 'NN')], [('w1', 'NN')], [('\\', 'NN')], [('*', 'NN')], [('w2', 'NN')], [('\\', 'NN')], [('*', 'NN')], [('w3', 'NN')], [('\\', 'NN')], [('*', 'NN')], [('…', 'NN')], [('\\', 'NN')], [('*', 'NN')], [('wn', 'NN')], [('>', 'NN')], [('1', 'CD')], [('*', 'NN')], [('*', 'NN')], [('*', 'NN')], [('sources', 'NNS')], [('saw', 'NN')], [('online', 'NN')], [('end', 'NN')], [('modifying', 'VBG')], [('weights', 'NNS')], [('nodes', 'NNS')], [('negative', 'JJ')], [('logarithm', 'NN')], [('.', '.')], [('let', 'VB')], [('us', 'PRP')], [('change', 'NN')], [('condition', 'NN')], [('looking', 'VBG')], [('*', 'NN')], [('*', 'NN')], [('*', 'NN')], [('(', '(')], [('-log', 'NN')], [('(', '(')], [('w1', 'NN')], [(')', ')')], [(')', ')')], [('+', 'NN')], [('(', '(')], [('-log', 'NN')], [('(', '(')], [('w2', 'NN')], [(')', ')')], [(')', ')')], [('+', 'NN')], [('(', '(')], [('-log', 'NN')], [('(', '(')], [('w3', 'NN')], [(')', ')')], [(')', ')')], [('+', 'NN')], [('…', 'NN')], [('+', 'NN')], [('(', '(')], [('-log', 'NN')], [('(', '(')], [('wn', 'NN')], [(')', ')')], [(')', ')')], [('<', 'NN')], [('0', 'CD')], [('*', 'NN')], [('*', 'NN')], [('*', 'NN')], [('condition', 'NN')], [('looking', 'VBG')], [('negative', 'JJ')], [('loops', 'NNS')], [('normal', 'JJ')], [('algorithm', 'NN')], [('used', 'VBN')], [('modified', 'VBN')], [('weights', 'NNS')], [('.', '.')], [('however', 'RB')], [(',', ',')], [('first', 'RB')], [('though', 'IN')], [('change', 'NN')], [('relaxation', 'NN')], [('ways', 'NNS')], [('.', '.')], [('first', 'RB')], [('start', 'NN')], [('node', 'NN')], [('distance', 'NN')], [('1', 'CD')], [('nodes', 'NNS')], [('distance', 'NN')], [('0.', 'CD')], [('relaxation', 'NN')], [('multiplication', 'NN')], [('used', 'VBN')], [('instead', 'RB')], [('addition', 'NN')], [('find', 'VB')], [('cost', 'NN')], [('potential', 'JJ')], [('path', 'NN')], [('.', '.')], [('also', 'RB')], [('instead', 'RB')], [('finding', 'VBG')], [('lowest', 'JJS')], [('cost', 'NN')], [('path', 'NN')], [('finds', 'NNS')], [('highest', 'JJS')], [('cost', 'NN')], [('path', 'NN')], [('.', '.')], [('finial', 'JJ')], [('relaxation', 'NN')], [('find', 'VB')], [('path', 'NN')], [('higher', 'JJR')], [('distance', 'NN')], [('already', 'RB')], [('would', 'MD')], [('imply', 'NN')], [('loop', 'NN')], [('product', 'NN')], [('weights', 'NNS')], [('greater', 'JJR')], [('one', 'CD')], [('.', '.')], [('one', 'CD')], [('else', 'RB')], [('agree', 'NN')], [('work', 'NN')], [('think', 'NN')], [('method', 'NN')], [('preferred', 'VBN')], [('?', '.')]]","interested create algorithm find arbitrage opportunity . first algorithm come mind bellman ford algorithm . however , look arbitrage look negative loop loop meet follow condition * * * w1 \ * w2 \ * w3 \ * … \ * wn > 1 * * * source saw online end modify weight node negative logarithm . let u change condition look * * * ( -log ( w1 ) ) + ( -log ( w2 ) ) + ( -log ( w3 ) ) + … + ( -log ( wn ) ) < 0 * * * condition look negative loop normal algorithm use modify weight . however , first though change relaxation way . first start node distance 1 node distance 0. relaxation multiplication use instead addition find cost potential path . also instead find low cost path find high cost path . finial relaxation find path high distance already would imply loop product weight great one . one else agree work think method prefer ?",0_algorithm_time_node_bill,3
42,t1vfy6,indexes in DBMS.,General,0,0.4,computerscience,https://www.reddit.com/r/computerscience/comments/t1vfy6/indexes_in_dbms/,1,"been reading recently on how indexes work in dbms, everything was cool until i reached the secondary index.

i read that secondary index will point to the block with the first record containing that value, but then i did not understand how this will improve our performance? also i read the secondary index structure does not force a uniqueness, meaning in we can find 3 pointers that point to 3 different blocks that have the same value, if this is the case why do not we just use a direct pointer to the records themselves instead of the blocks?

&#x200b;

so shortly i want to know how does secondary index improve our performance in any searching system !",1645876564.0,"['reading', 'recently', 'index', 'work', 'dbms', ',', 'everything', 'cool', 'reach', 'secondary', 'index', '.', 'read', 'secondary', 'index', 'point', 'block', 'first', 'record', 'contain', 'value', ',', 'understand', 'improve', 'performance', '?', 'also', 'read', 'secondary', 'index', 'structure', 'force', 'uniqueness', ',', 'meaning', 'find', '3', 'pointer', 'point', '3', 'different', 'block', 'value', ',', 'case', 'use', 'direct', 'pointer', 'record', 'instead', 'block', '?', '&', '#', 'x200b', ';', 'shortly', 'want', 'know', 'secondary', 'index', 'improve', 'performance', 'search', 'system', '!']","[[('reading', 'NN')], [('recently', 'RB')], [('indexes', 'NNS')], [('work', 'NN')], [('dbms', 'NN')], [(',', ',')], [('everything', 'NN')], [('cool', 'NN')], [('reached', 'VBN')], [('secondary', 'JJ')], [('index', 'NN')], [('.', '.')], [('read', 'NN')], [('secondary', 'JJ')], [('index', 'NN')], [('point', 'NN')], [('block', 'NN')], [('first', 'RB')], [('record', 'NN')], [('containing', 'VBG')], [('value', 'NN')], [(',', ',')], [('understand', 'NN')], [('improve', 'VB')], [('performance', 'NN')], [('?', '.')], [('also', 'RB')], [('read', 'NN')], [('secondary', 'JJ')], [('index', 'NN')], [('structure', 'NN')], [('force', 'NN')], [('uniqueness', 'NN')], [(',', ',')], [('meaning', 'NN')], [('find', 'VB')], [('3', 'CD')], [('pointers', 'NNS')], [('point', 'NN')], [('3', 'CD')], [('different', 'JJ')], [('blocks', 'NNS')], [('value', 'NN')], [(',', ',')], [('case', 'NN')], [('use', 'NN')], [('direct', 'JJ')], [('pointer', 'NN')], [('records', 'NNS')], [('instead', 'RB')], [('blocks', 'NNS')], [('?', '.')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('shortly', 'RB')], [('want', 'NN')], [('know', 'VB')], [('secondary', 'JJ')], [('index', 'NN')], [('improve', 'VB')], [('performance', 'NN')], [('searching', 'VBG')], [('system', 'NN')], [('!', '.')]]","reading recently index work dbms , everything cool reach secondary index . read secondary index point block first record contain value , understand improve performance ? also read secondary index structure force uniqueness , meaning find 3 pointer point 3 different block value , case use direct pointer record instead block ? & # x200b ; shortly want know secondary index improve performance search system !",1_memory_byte_data_alignment,2
43,t1i3op,How intelligent do you have to be to invent software which shrinks file sizes for video files without losing much in the way of quality?,Discussion,3,0.6,computerscience,https://www.reddit.com/r/computerscience/comments/t1i3op/how_intelligent_do_you_have_to_be_to_invent/,8,"i remember a long time ago reading some mind-blowing articles about how the technology works to make a hollywood-length film look decent quality and come in at under 700 megabytes. 

lastly -- why was 700mb chosen as the most common or most ideal file size for a movie? was it based on the size of a cd-rom storage? or was it based on average internet speeds across the world? or based on something else?",1645832782.0,"['remember', 'long', 'time', 'ago', 'reading', 'mind-blowing', 'article', 'technology', 'work', 'make', 'hollywood-length', 'film', 'look', 'decent', 'quality', 'come', '700', 'megabyte', '.', 'lastly', '--', '700mb', 'chosen', 'common', 'ideal', 'file', 'size', 'movie', '?', 'base', 'size', 'cd-rom', 'storage', '?', 'base', 'average', 'internet', 'speed', 'across', 'world', '?', 'base', 'something', 'else', '?']","[[('remember', 'VB')], [('long', 'RB')], [('time', 'NN')], [('ago', 'RB')], [('reading', 'NN')], [('mind-blowing', 'NN')], [('articles', 'NNS')], [('technology', 'NN')], [('works', 'NNS')], [('make', 'VB')], [('hollywood-length', 'NN')], [('film', 'NN')], [('look', 'NN')], [('decent', 'NN')], [('quality', 'NN')], [('come', 'VB')], [('700', 'CD')], [('megabytes', 'NNS')], [('.', '.')], [('lastly', 'RB')], [('--', ':')], [('700mb', 'CD')], [('chosen', 'NN')], [('common', 'JJ')], [('ideal', 'NN')], [('file', 'NN')], [('size', 'NN')], [('movie', 'NN')], [('?', '.')], [('based', 'VBN')], [('size', 'NN')], [('cd-rom', 'NN')], [('storage', 'NN')], [('?', '.')], [('based', 'VBN')], [('average', 'JJ')], [('internet', 'NN')], [('speeds', 'NNS')], [('across', 'IN')], [('world', 'NN')], [('?', '.')], [('based', 'VBN')], [('something', 'NN')], [('else', 'RB')], [('?', '.')]]",remember long time ago reading mind-blowing article technology work make hollywood-length film look decent quality come 700 megabyte . lastly -- 700mb chosen common ideal file size movie ? base size cd-rom storage ? base average internet speed across world ? base something else ?,1_memory_byte_data_alignment,2
44,t0sxp4,"If ""Hello World"" is the first program a programmer makes, what are the top 5 or 10?",,126,0.94,computerscience,https://www.reddit.com/r/computerscience/comments/t0sxp4/if_hello_world_is_the_first_program_a_programmer/,72,"so obviously hello world is the first program we all learn in a programming language, but what are some of the ones we should do after that?

ex. fizzbuzz, \* trianges, pascals triangle maybe... what are the others?",1645757607.0,"['obviously', 'hello', 'world', 'first', 'program', 'learn', 'program', 'language', ',', 'one', '?', 'ex', '.', 'fizzbuzz', ',', '\\', '*', 'trianges', ',', 'pascal', 'triangle', 'maybe', '...', 'others', '?']","[[('obviously', 'RB')], [('hello', 'NN')], [('world', 'NN')], [('first', 'RB')], [('program', 'NN')], [('learn', 'NN')], [('programming', 'VBG')], [('language', 'NN')], [(',', ',')], [('ones', 'NNS')], [('?', '.')], [('ex', 'NN')], [('.', '.')], [('fizzbuzz', 'NN')], [(',', ',')], [('\\', 'NN')], [('*', 'NN')], [('trianges', 'NNS')], [(',', ',')], [('pascals', 'NNS')], [('triangle', 'NN')], [('maybe', 'RB')], [('...', ':')], [('others', 'NNS')], [('?', '.')]]","obviously hello world first program learn program language , one ? ex . fizzbuzz , \ * trianges , pascal triangle maybe ... others ?",8_language_one_program_write,3
45,t0z4bp,I want to understand how computers think. What concepts should I learn and what books(or online resources) can teach me those concepts,Help,4,0.63,computerscience,https://www.reddit.com/r/computerscience/comments/t0z4bp/i_want_to_understand_how_computers_think_what/,23,"i want to understand how computers process programs and understand what operations it should do. like how computers use memory and alu to find solutions of the programs. what books and concepts in computer science should i learn to understand this thoroughly. one guess i have made is i should study (switching theory and logic design), (computer organisation and architecture), (computer system architecture), (microprocessors and microcontrollers), (assembly language), (compiler design), (theory of computation) and (data structures). am i missing out on anything? what books (or online resources) can help me learn and understand all of this topics and finally help me understand how computer thinks?",1645778247.0,"['want', 'understand', 'computer', 'process', 'program', 'understand', 'operation', '.', 'like', 'computer', 'use', 'memory', 'alu', 'find', 'solution', 'program', '.', 'book', 'concept', 'computer', 'science', 'learn', 'understand', 'thoroughly', '.', 'one', 'guess', 'make', 'study', '(', 'switch', 'theory', 'logic', 'design', ')', ',', '(', 'computer', 'organisation', 'architecture', ')', ',', '(', 'computer', 'system', 'architecture', ')', ',', '(', 'microprocessor', 'microcontrollers', ')', ',', '(', 'assembly', 'language', ')', ',', '(', 'compiler', 'design', ')', ',', '(', 'theory', 'computation', ')', '(', 'data', 'structure', ')', '.', 'miss', 'anything', '?', 'book', '(', 'online', 'resource', ')', 'help', 'learn', 'understand', 'topic', 'finally', 'help', 'understand', 'computer', 'think', '?']","[[('want', 'NN')], [('understand', 'NN')], [('computers', 'NNS')], [('process', 'NN')], [('programs', 'NNS')], [('understand', 'NN')], [('operations', 'NNS')], [('.', '.')], [('like', 'IN')], [('computers', 'NNS')], [('use', 'NN')], [('memory', 'NN')], [('alu', 'NN')], [('find', 'VB')], [('solutions', 'NNS')], [('programs', 'NNS')], [('.', '.')], [('books', 'NNS')], [('concepts', 'NNS')], [('computer', 'NN')], [('science', 'NN')], [('learn', 'NN')], [('understand', 'NN')], [('thoroughly', 'RB')], [('.', '.')], [('one', 'CD')], [('guess', 'NN')], [('made', 'VBN')], [('study', 'NN')], [('(', '(')], [('switching', 'VBG')], [('theory', 'NN')], [('logic', 'NN')], [('design', 'NN')], [(')', ')')], [(',', ',')], [('(', '(')], [('computer', 'NN')], [('organisation', 'NN')], [('architecture', 'NN')], [(')', ')')], [(',', ',')], [('(', '(')], [('computer', 'NN')], [('system', 'NN')], [('architecture', 'NN')], [(')', ')')], [(',', ',')], [('(', '(')], [('microprocessors', 'NNS')], [('microcontrollers', 'NNS')], [(')', ')')], [(',', ',')], [('(', '(')], [('assembly', 'RB')], [('language', 'NN')], [(')', ')')], [(',', ',')], [('(', '(')], [('compiler', 'NN')], [('design', 'NN')], [(')', ')')], [(',', ',')], [('(', '(')], [('theory', 'NN')], [('computation', 'NN')], [(')', ')')], [('(', '(')], [('data', 'NNS')], [('structures', 'NNS')], [(')', ')')], [('.', '.')], [('missing', 'VBG')], [('anything', 'NN')], [('?', '.')], [('books', 'NNS')], [('(', '(')], [('online', 'NN')], [('resources', 'NNS')], [(')', ')')], [('help', 'NN')], [('learn', 'NN')], [('understand', 'NN')], [('topics', 'NNS')], [('finally', 'RB')], [('help', 'NN')], [('understand', 'NN')], [('computer', 'NN')], [('thinks', 'NNS')], [('?', '.')]]","want understand computer process program understand operation . like computer use memory alu find solution program . book concept computer science learn understand thoroughly . one guess make study ( switch theory logic design ) , ( computer organisation architecture ) , ( computer system architecture ) , ( microprocessor microcontrollers ) , ( assembly language ) , ( compiler design ) , ( theory computation ) ( data structure ) . miss anything ? book ( online resource ) help learn understand topic finally help understand computer think ?",4_book_learn_computer_good,4
46,t14tkh,What would be the implications IF someone figures out how to generate TRNs purely using software?,Discussion,0,0.33,computerscience,https://www.reddit.com/r/computerscience/comments/t14tkh/what_would_be_the_implications_if_someone_figures/,13,"this is a big if. just to be clear. i am not even sure if it is possible. but if someone does what would that mean? 

i think it would turn out to be just another cool problem solved. i cannot imagine they would make any money off it, i do not think it would have any new applications because a lot of the current systems are already pretty good. so, i think that it would just be another cool discovery.  where would it even be used? do not we already have stuff that is more than good enough?

but i am not an expert in this field, and would love to get your inputs.",1645797925.0,"['big', '.', 'clear', '.', 'even', 'sure', 'possible', '.', 'someone', 'would', 'mean', '?', 'think', 'would', 'turn', 'another', 'cool', 'problem', 'solve', '.', 'imagine', 'would', 'make', 'money', ',', 'think', 'would', 'new', 'application', 'lot', 'current', 'system', 'already', 'pretty', 'good', '.', ',', 'think', 'would', 'another', 'cool', 'discovery', '.', 'would', 'even', 'use', '?', 'already', 'stuff', 'good', 'enough', '?', 'expert', 'field', ',', 'would', 'love', 'get', 'input', '.']","[[('big', 'JJ')], [('.', '.')], [('clear', 'JJ')], [('.', '.')], [('even', 'RB')], [('sure', 'NN')], [('possible', 'JJ')], [('.', '.')], [('someone', 'NN')], [('would', 'MD')], [('mean', 'NN')], [('?', '.')], [('think', 'NN')], [('would', 'MD')], [('turn', 'NN')], [('another', 'DT')], [('cool', 'NN')], [('problem', 'NN')], [('solved', 'VBN')], [('.', '.')], [('imagine', 'NN')], [('would', 'MD')], [('make', 'VB')], [('money', 'NN')], [(',', ',')], [('think', 'NN')], [('would', 'MD')], [('new', 'JJ')], [('applications', 'NNS')], [('lot', 'NN')], [('current', 'JJ')], [('systems', 'NNS')], [('already', 'RB')], [('pretty', 'RB')], [('good', 'JJ')], [('.', '.')], [(',', ',')], [('think', 'NN')], [('would', 'MD')], [('another', 'DT')], [('cool', 'NN')], [('discovery', 'NN')], [('.', '.')], [('would', 'MD')], [('even', 'RB')], [('used', 'VBN')], [('?', '.')], [('already', 'RB')], [('stuff', 'NN')], [('good', 'JJ')], [('enough', 'RB')], [('?', '.')], [('expert', 'NN')], [('field', 'NN')], [(',', ',')], [('would', 'MD')], [('love', 'NN')], [('get', 'VB')], [('inputs', 'NNS')], [('.', '.')]]","big . clear . even sure possible . someone would mean ? think would turn another cool problem solve . imagine would make money , think would new application lot current system already pretty good . , think would another cool discovery . would even use ? already stuff good enough ? expert field , would love get input .",-1_abazbz2abz_2520_problem_use,3
47,t0v7iw,Semiring Formulation,Discussion,2,1.0,computerscience,https://www.reddit.com/r/computerscience/comments/t0v7iw/semiring_formulation/,0,what is the actual properties of semiring formulation? how can do we define it exactly. i know it is an abstract algebric and contain add and mul binary operation. any key things to know about its properties to use in shortest job problem or flyod-warshall algorithms,1645764428.0,"['actual', 'property', 'semiring', 'formulation', '?', 'define', 'exactly', '.', 'know', 'abstract', 'algebric', 'contain', 'add', 'mul', 'binary', 'operation', '.', 'key', 'thing', 'know', 'property', 'use', 'shortest', 'job', 'problem', 'flyod-warshall', 'algorithm']","[[('actual', 'JJ')], [('properties', 'NNS')], [('semiring', 'VBG')], [('formulation', 'NN')], [('?', '.')], [('define', 'NN')], [('exactly', 'RB')], [('.', '.')], [('know', 'VB')], [('abstract', 'NN')], [('algebric', 'NN')], [('contain', 'NN')], [('add', 'VB')], [('mul', 'NN')], [('binary', 'NN')], [('operation', 'NN')], [('.', '.')], [('key', 'NN')], [('things', 'NNS')], [('know', 'VB')], [('properties', 'NNS')], [('use', 'NN')], [('shortest', 'NN')], [('job', 'NN')], [('problem', 'NN')], [('flyod-warshall', 'NN')], [('algorithms', 'NN')]]",actual property semiring formulation ? define exactly . know abstract algebric contain add mul binary operation . key thing know property use shortest job problem flyod-warshall algorithm,-1_abazbz2abz_2520_problem_use,3
50,szp1uf,what does it mean by 1D or 2D Traveling Salesman Problem?,,9,0.91,computerscience,https://www.reddit.com/r/computerscience/comments/szp1uf/what_does_it_mean_by_1d_or_2d_traveling_salesman/,14,"what is the difference between 1d and 2d cases? 

&#x200b;

thanks in advance!",1645642863.0,"['difference', '1d', '2d', 'case', '?', '&', '#', 'x200b', ';', 'thanks', 'advance', '!']","[[('difference', 'NN')], [('1d', 'CD')], [('2d', 'CD')], [('cases', 'NNS')], [('?', '.')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('thanks', 'NNS')], [('advance', 'NN')], [('!', '.')]]",difference 1d 2d case ? & # x200b ; thanks advance !,1_memory_byte_data_alignment,5
52,szda4g,Problem solving grinding study plan recommendation,,33,0.87,computerscience,https://www.reddit.com/r/computerscience/comments/szda4g/problem_solving_grinding_study_plan_recommendation/,2,"i am a computer science student in my last semester.

in  this semester i will be writing my bachelor thesis so i will have some  extra time to work on my problem solving skills which i believe i need  very much.

last semester i just  finished analysis and design of algorithms course however i did not  really put extra work to understand the concepts in depth or to solve  any questions on my own etc but most concepts are still fresh in my  mind.

my goal is:

\-  have a deep understanding of all fundamentals of data structures and  algorithms in order to be able to solve/tackle fang-like problems  systematically in 2-3 month

steps i think i should take:

\- steadily solve leetcode questions everyday (study plan is a big mystery)

\- emphasize understanding concepts/algorithms and recognizing patterns rather than memorizing anything

\- follow mits course along the way ([-engineering-and-computer-science/6-046j-design-and-analysis-of-algorithms-spring-2015/](-engineering-and-computer-science/6-046j-design-and-analysis-of-algorithms-spring-2015/))

or any other useful resources you recommend

my question is:

based  on my knowledge (last semester student, just finished course) how do  you recommend i design a study plan to meet my goals and whether the  above steps are valid or if some additions are necessary.

most  importantly what list of problems do i cover (leetcode study  guides/random leetcode problems by difficulty/team blind top 75  questions) and how to handle solving different topics dp, graph etc., do  i solve problems from each topics alone at first and then combine them  later for instance?

note:

i  really do want to compile a list of all the questions i will solve in  this period as i recognized that having to browese for question before i  start everytime is a real time and will killer, just like going to the  gym without a plan really.

of course some flexibilty along the way is no issue but that is just my observation.",1645608338.0,"['computer', 'science', 'student', 'last', 'semester', '.', 'semester', 'write', 'bachelor', 'thesis', 'extra', 'time', 'work', 'problem', 'solve', 'skill', 'believe', 'need', 'much', '.', 'last', 'semester', 'finish', 'analysis', 'design', 'algorithm', 'course', 'however', 'really', 'put', 'extra', 'work', 'understand', 'concept', 'depth', 'solve', 'question', 'etc', 'concept', 'still', 'fresh', 'mind', '.', 'goal', ':', '\\-', 'deep', 'understand', 'fundamental', 'data', 'structure', 'algorithm', 'order', 'able', 'solve/tackle', 'fang-like', 'problem', 'systematically', '2-3', 'month', 'step', 'think', 'take', ':', '\\-', 'steadily', 'solve', 'leetcode', 'question', 'everyday', '(', 'study', 'plan', 'big', 'mystery', ')', '\\-', 'emphasize', 'understand', 'concepts/algorithms', 'recognize', 'pattern', 'rather', 'memorize', 'anything', '\\-', 'follow', 'mit', 'course', 'along', 'way', '(', '[', '-engineering-and-computer-science/6-046j-design-and-analysis-of-algorithms-spring-2015/', ']', '(', '-engineering-and-computer-science/6-046j-design-and-analysis-of-algorithms-spring-2015/', ')', ')', 'useful', 'resource', 'recommend', 'question', ':', 'base', 'knowledge', '(', 'last', 'semester', 'student', ',', 'finish', 'course', ')', 'recommend', 'design', 'study', 'plan', 'meet', 'goal', 'whether', 'step', 'valid', 'addition', 'necessary', '.', 'importantly', 'list', 'problem', 'cover', '(', 'leetcode', 'study', 'guides/random', 'leetcode', 'problem', 'difficulty/team', 'blind', 'top', '75', 'question', ')', 'handle', 'solve', 'different', 'topic', 'dp', ',', 'graph', 'etc.', ',', 'solve', 'problem', 'topic', 'alone', 'first', 'combine', 'later', 'instance', '?', 'note', ':', 'really', 'want', 'compile', 'list', 'question', 'solve', 'period', 'recognize', 'browese', 'question', 'start', 'everytime', 'real', 'time', 'killer', ',', 'like', 'go', 'gym', 'without', 'plan', 'really', '.', 'course', 'flexibilty', 'along', 'way', 'issue', 'observation', '.']","[[('computer', 'NN')], [('science', 'NN')], [('student', 'NN')], [('last', 'JJ')], [('semester', 'NN')], [('.', '.')], [('semester', 'NN')], [('writing', 'VBG')], [('bachelor', 'NN')], [('thesis', 'NN')], [('extra', 'JJ')], [('time', 'NN')], [('work', 'NN')], [('problem', 'NN')], [('solving', 'VBG')], [('skills', 'NNS')], [('believe', 'VB')], [('need', 'NN')], [('much', 'JJ')], [('.', '.')], [('last', 'JJ')], [('semester', 'NN')], [('finished', 'VBN')], [('analysis', 'NN')], [('design', 'NN')], [('algorithms', 'NN')], [('course', 'NN')], [('however', 'RB')], [('really', 'RB')], [('put', 'NN')], [('extra', 'JJ')], [('work', 'NN')], [('understand', 'NN')], [('concepts', 'NNS')], [('depth', 'NN')], [('solve', 'NN')], [('questions', 'NNS')], [('etc', 'NN')], [('concepts', 'NNS')], [('still', 'RB')], [('fresh', 'JJ')], [('mind', 'NN')], [('.', '.')], [('goal', 'NN')], [(':', ':')], [('\\-', 'JJ')], [('deep', 'NN')], [('understanding', 'VBG')], [('fundamentals', 'NNS')], [('data', 'NNS')], [('structures', 'NNS')], [('algorithms', 'NN')], [('order', 'NN')], [('able', 'JJ')], [('solve/tackle', 'NN')], [('fang-like', 'NN')], [('problems', 'NNS')], [('systematically', 'RB')], [('2-3', 'JJ')], [('month', 'NN')], [('steps', 'NNS')], [('think', 'NN')], [('take', 'VB')], [(':', ':')], [('\\-', 'JJ')], [('steadily', 'RB')], [('solve', 'NN')], [('leetcode', 'NN')], [('questions', 'NNS')], [('everyday', 'NN')], [('(', '(')], [('study', 'NN')], [('plan', 'NN')], [('big', 'JJ')], [('mystery', 'NN')], [(')', ')')], [('\\-', 'JJ')], [('emphasize', 'VB')], [('understanding', 'VBG')], [('concepts/algorithms', 'NN')], [('recognizing', 'VBG')], [('patterns', 'NNS')], [('rather', 'RB')], [('memorizing', 'VBG')], [('anything', 'NN')], [('\\-', 'JJ')], [('follow', 'VB')], [('mits', 'NNS')], [('course', 'NN')], [('along', 'IN')], [('way', 'NN')], [('(', '(')], [('[', 'NN')], [('-engineering-and-computer-science/6-046j-design-and-analysis-of-algorithms-spring-2015/', 'NN')], [(']', 'NN')], [('(', '(')], [('-engineering-and-computer-science/6-046j-design-and-analysis-of-algorithms-spring-2015/', 'NN')], [(')', ')')], [(')', ')')], [('useful', 'JJ')], [('resources', 'NNS')], [('recommend', 'NN')], [('question', 'NN')], [(':', ':')], [('based', 'VBN')], [('knowledge', 'NN')], [('(', '(')], [('last', 'JJ')], [('semester', 'NN')], [('student', 'NN')], [(',', ',')], [('finished', 'VBN')], [('course', 'NN')], [(')', ')')], [('recommend', 'NN')], [('design', 'NN')], [('study', 'NN')], [('plan', 'NN')], [('meet', 'NN')], [('goals', 'NNS')], [('whether', 'IN')], [('steps', 'NNS')], [('valid', 'JJ')], [('additions', 'NNS')], [('necessary', 'JJ')], [('.', '.')], [('importantly', 'RB')], [('list', 'NN')], [('problems', 'NNS')], [('cover', 'NN')], [('(', '(')], [('leetcode', 'NN')], [('study', 'NN')], [('guides/random', 'NN')], [('leetcode', 'NN')], [('problems', 'NNS')], [('difficulty/team', 'NN')], [('blind', 'NN')], [('top', 'NN')], [('75', 'CD')], [('questions', 'NNS')], [(')', ')')], [('handle', 'NN')], [('solving', 'VBG')], [('different', 'JJ')], [('topics', 'NNS')], [('dp', 'NN')], [(',', ',')], [('graph', 'NN')], [('etc.', 'NN')], [(',', ',')], [('solve', 'NN')], [('problems', 'NNS')], [('topics', 'NNS')], [('alone', 'RB')], [('first', 'RB')], [('combine', 'NN')], [('later', 'RB')], [('instance', 'NN')], [('?', '.')], [('note', 'NN')], [(':', ':')], [('really', 'RB')], [('want', 'NN')], [('compile', 'NN')], [('list', 'NN')], [('questions', 'NNS')], [('solve', 'NN')], [('period', 'NN')], [('recognized', 'VBN')], [('browese', 'NN')], [('question', 'NN')], [('start', 'NN')], [('everytime', 'NN')], [('real', 'JJ')], [('time', 'NN')], [('killer', 'NN')], [(',', ',')], [('like', 'IN')], [('going', 'VBG')], [('gym', 'NN')], [('without', 'IN')], [('plan', 'NN')], [('really', 'RB')], [('.', '.')], [('course', 'NN')], [('flexibilty', 'NN')], [('along', 'IN')], [('way', 'NN')], [('issue', 'NN')], [('observation', 'NN')], [('.', '.')]]","computer science student last semester . semester write bachelor thesis extra time work problem solve skill believe need much . last semester finish analysis design algorithm course however really put extra work understand concept depth solve question etc concept still fresh mind . goal : \- deep understand fundamental data structure algorithm order able solve/tackle fang-like problem systematically 2-3 month step think take : \- steadily solve leetcode question everyday ( study plan big mystery ) \- emphasize understand concepts/algorithms recognize pattern rather memorize anything \- follow mit course along way ( [ -engineering-and-computer-science/6-046j-design-and-analysis-of-algorithms-spring-2015/ ] ( -engineering-and-computer-science/6-046j-design-and-analysis-of-algorithms-spring-2015/ ) ) useful resource recommend question : base knowledge ( last semester student , finish course ) recommend design study plan meet goal whether step valid addition necessary . importantly list problem cover ( leetcode study guides/random leetcode problem difficulty/team blind top 75 question ) handle solve different topic dp , graph etc. , solve problem topic alone first combine later instance ? note : really want compile list question solve period recognize browese question start everytime real time killer , like go gym without plan really . course flexibilty along way issue observation .",2_computer_learn_science_study,4
53,szvufg,How can a virus/worm be written in multiple languages?,Discussion,1,0.6,computerscience,https://www.reddit.com/r/computerscience/comments/szvufg/how_can_a_virusworm_be_written_in_multiple/,14,"i am a layman so i am not fully educated. i know a little bit about how there is different languages and syntax. how can you create something that uses multiple languages at once and why would you do it?

i was reading about stuxnet and it mentioned it was written in different languages. how is this possible? how can languages intermingle with each other? i have a theory here so let me know if i am right or wrong or close to the right answer. 

i am not saying this is how it is, i am asking if my impression is at least close to how it works:

so a worm is one file. then inside of that file are a certain amount of executables. 

can each executable be a different language but still work together because in the end they all execute a certain thing?

i am just having a hard time wrapping my head around how you could make one thing but have multiple languages. from the surface with little knowledge, i would just think one worm or virus would be one language and execute everything in one language. 

the way i look at it when i hear how it is written, it makes me think of it as putting monster truck tires on a car. sure, they are related to regular tires, but they were not made to work with a car. 

also are stuxnet and other worms/viruses written in multiple languages because it obfuscates them and makes them harder to be detected/interpreted or can antivirus detection pick up on that? it is just hard to wrap my head around as someone who has not gone past the basics of programming",1645660255.0,"['layman', 'fully', 'educate', '.', 'know', 'little', 'bit', 'different', 'language', 'syntax', '.', 'create', 'something', 'us', 'multiple', 'language', 'would', '?', 'reading', 'stuxnet', 'mention', 'write', 'different', 'language', '.', 'possible', '?', 'language', 'intermingle', '?', 'theory', 'let', 'know', 'right', 'wrong', 'close', 'right', 'answer', '.', 'say', ',', 'ask', 'impression', 'least', 'close', 'work', ':', 'worm', 'one', 'file', '.', 'inside', 'file', 'certain', 'amount', 'executables', '.', 'executable', 'different', 'language', 'still', 'work', 'together', 'end', 'execute', 'certain', 'thing', '?', 'hard', 'time', 'wrap', 'head', 'around', 'could', 'make', 'one', 'thing', 'multiple', 'language', '.', 'surface', 'little', 'knowledge', ',', 'would', 'think', 'one', 'worm', 'virus', 'would', 'one', 'language', 'execute', 'everything', 'one', 'language', '.', 'way', 'look', 'hear', 'write', ',', 'make', 'think', 'put', 'monster', 'truck', 'tire', 'car', '.', 'sure', ',', 'related', 'regular', 'tire', ',', 'make', 'work', 'car', '.', 'also', 'stuxnet', 'worms/viruses', 'write', 'multiple', 'language', 'obfuscates', 'make', 'harder', 'detected/interpreted', 'antivirus', 'detection', 'pick', '?', 'hard', 'wrap', 'head', 'around', 'someone', 'go', 'past', 'basic', 'program']","[[('layman', 'NN')], [('fully', 'RB')], [('educated', 'VBN')], [('.', '.')], [('know', 'VB')], [('little', 'JJ')], [('bit', 'NN')], [('different', 'JJ')], [('languages', 'NNS')], [('syntax', 'NN')], [('.', '.')], [('create', 'NN')], [('something', 'NN')], [('uses', 'NNS')], [('multiple', 'NN')], [('languages', 'NNS')], [('would', 'MD')], [('?', '.')], [('reading', 'NN')], [('stuxnet', 'NN')], [('mentioned', 'VBN')], [('written', 'VBN')], [('different', 'JJ')], [('languages', 'NNS')], [('.', '.')], [('possible', 'JJ')], [('?', '.')], [('languages', 'NNS')], [('intermingle', 'NN')], [('?', '.')], [('theory', 'NN')], [('let', 'VB')], [('know', 'VB')], [('right', 'NN')], [('wrong', 'JJ')], [('close', 'RB')], [('right', 'NN')], [('answer', 'NN')], [('.', '.')], [('saying', 'VBG')], [(',', ',')], [('asking', 'VBG')], [('impression', 'NN')], [('least', 'JJS')], [('close', 'RB')], [('works', 'NNS')], [(':', ':')], [('worm', 'NN')], [('one', 'CD')], [('file', 'NN')], [('.', '.')], [('inside', 'IN')], [('file', 'NN')], [('certain', 'JJ')], [('amount', 'NN')], [('executables', 'NNS')], [('.', '.')], [('executable', 'JJ')], [('different', 'JJ')], [('language', 'NN')], [('still', 'RB')], [('work', 'NN')], [('together', 'RB')], [('end', 'NN')], [('execute', 'NN')], [('certain', 'JJ')], [('thing', 'NN')], [('?', '.')], [('hard', 'JJ')], [('time', 'NN')], [('wrapping', 'VBG')], [('head', 'NN')], [('around', 'IN')], [('could', 'MD')], [('make', 'VB')], [('one', 'CD')], [('thing', 'NN')], [('multiple', 'NN')], [('languages', 'NNS')], [('.', '.')], [('surface', 'NN')], [('little', 'JJ')], [('knowledge', 'NN')], [(',', ',')], [('would', 'MD')], [('think', 'NN')], [('one', 'CD')], [('worm', 'NN')], [('virus', 'NN')], [('would', 'MD')], [('one', 'CD')], [('language', 'NN')], [('execute', 'NN')], [('everything', 'NN')], [('one', 'CD')], [('language', 'NN')], [('.', '.')], [('way', 'NN')], [('look', 'NN')], [('hear', 'NN')], [('written', 'VBN')], [(',', ',')], [('makes', 'VBZ')], [('think', 'NN')], [('putting', 'VBG')], [('monster', 'NN')], [('truck', 'NN')], [('tires', 'NNS')], [('car', 'NN')], [('.', '.')], [('sure', 'NN')], [(',', ',')], [('related', 'JJ')], [('regular', 'JJ')], [('tires', 'NNS')], [(',', ',')], [('made', 'VBN')], [('work', 'NN')], [('car', 'NN')], [('.', '.')], [('also', 'RB')], [('stuxnet', 'NN')], [('worms/viruses', 'NNS')], [('written', 'VBN')], [('multiple', 'NN')], [('languages', 'NNS')], [('obfuscates', 'NNS')], [('makes', 'VBZ')], [('harder', 'NN')], [('detected/interpreted', 'VBN')], [('antivirus', 'NN')], [('detection', 'NN')], [('pick', 'NN')], [('?', '.')], [('hard', 'JJ')], [('wrap', 'NN')], [('head', 'NN')], [('around', 'IN')], [('someone', 'NN')], [('gone', 'VBN')], [('past', 'NN')], [('basics', 'NNS')], [('programming', 'VBG')]]","layman fully educate . know little bit different language syntax . create something us multiple language would ? reading stuxnet mention write different language . possible ? language intermingle ? theory let know right wrong close right answer . say , ask impression least close work : worm one file . inside file certain amount executables . executable different language still work together end execute certain thing ? hard time wrap head around could make one thing multiple language . surface little knowledge , would think one worm virus would one language execute everything one language . way look hear write , make think put monster truck tire car . sure , related regular tire , make work car . also stuxnet worms/viruses write multiple language obfuscates make harder detected/interpreted antivirus detection pick ? hard wrap head around someone go past basic program",8_language_one_program_write,2
54,szsqjo,Why is it slower to read compressed data?,,1,0.56,computerscience,https://www.reddit.com/r/computerscience/comments/szsqjo/why_is_it_slower_to_read_compressed_data/,11,"if lossless compression is the same information but expressed in fewer bits, why does it take longer to read compressed data? is it only the result of the limitations of current computers? would a more efficient and advanced computer theoretically not be any slower reading compressed data?",1645652251.0,"['lossless', 'compression', 'information', 'express', 'few', 'bit', ',', 'take', 'longer', 'read', 'compress', 'data', '?', 'result', 'limitation', 'current', 'computer', '?', 'would', 'efficient', 'advanced', 'computer', 'theoretically', 'slow', 'reading', 'compress', 'data', '?']","[[('lossless', 'NN')], [('compression', 'NN')], [('information', 'NN')], [('expressed', 'VBN')], [('fewer', 'JJR')], [('bits', 'NNS')], [(',', ',')], [('take', 'VB')], [('longer', 'NN')], [('read', 'NN')], [('compressed', 'VBN')], [('data', 'NNS')], [('?', '.')], [('result', 'NN')], [('limitations', 'NNS')], [('current', 'JJ')], [('computers', 'NNS')], [('?', '.')], [('would', 'MD')], [('efficient', 'NN')], [('advanced', 'JJ')], [('computer', 'NN')], [('theoretically', 'RB')], [('slower', 'JJR')], [('reading', 'NN')], [('compressed', 'VBN')], [('data', 'NNS')], [('?', '.')]]","lossless compression information express few bit , take longer read compress data ? result limitation current computer ? would efficient advanced computer theoretically slow reading compress data ?",1_memory_byte_data_alignment,3
55,sys7fr,How did you gain Problem Solving skills? Do you believe it's in one's nature? Or its a skill that can be learned?,Discussion,92,0.93,computerscience,https://www.reddit.com/r/computerscience/comments/sys7fr/how_did_you_gain_problem_solving_skills_do_you/,39,"we frequently hear that computer science is about problem solving and creativity *(creative ability to solve problems)*. 
**do you believe this skills is in one's dna? why? or you can actually learn this skill? if so how and where could learn this?**",1645548702.0,"['frequently', 'hear', 'computer', 'science', 'problem', 'solve', 'creativity', '*', '(', 'creative', 'ability', 'solve', 'problem', ')', '*', '.', '*', '*', 'believe', 'skill', 'one', ""'s"", 'dna', '?', '?', 'actually', 'learn', 'skill', '?', 'could', 'learn', '?', '*', '*']","[[('frequently', 'RB')], [('hear', 'NN')], [('computer', 'NN')], [('science', 'NN')], [('problem', 'NN')], [('solving', 'VBG')], [('creativity', 'NN')], [('*', 'NN')], [('(', '(')], [('creative', 'JJ')], [('ability', 'NN')], [('solve', 'NN')], [('problems', 'NNS')], [(')', ')')], [('*', 'NN')], [('.', '.')], [('*', 'NN')], [('*', 'NN')], [('believe', 'VB')], [('skills', 'NNS')], [('one', 'CD')], [(""'s"", 'POS')], [('dna', 'NN')], [('?', '.')], [('?', '.')], [('actually', 'RB')], [('learn', 'NN')], [('skill', 'NN')], [('?', '.')], [('could', 'MD')], [('learn', 'NN')], [('?', '.')], [('*', 'NN')], [('*', 'NN')]]",frequently hear computer science problem solve creativity * ( creative ability solve problem ) * . * * believe skill one 's dna ? ? actually learn skill ? could learn ? * *,3_search_ai_think_google,3
56,szg2tp,Is OWL (Web Ontology Language) Turing-complete?,,2,0.67,computerscience,https://www.reddit.com/r/computerscience/comments/szg2tp/is_owl_web_ontology_language_turingcomplete/,2," it has apparently been proven that sql with cyclic tags is turing-complete (see \[1\]).  
there are also approaches that convert relational structures to owl (e.g. \[2\], \[3\]).  
can one conclude that one can define any algorithm in owl or in one of its derivatives?  
does anyone know a paper?  
thanks!  
best,  
felix grumbach  
\[1\] [\_turing\_complete.html]()  
\[2\] []()  
\[3\] [-transformation-of-sql-relational-to-owl-astrova-kalja/d92631b15ef80ab61d3a21a1eca0d7f7e8dc6c09](-transformation-of-sql-relational-to-owl-astrova-kalja%2fd92631b15ef80ab61d3a21a1eca0d7f7e8dc6c09)",1645618483.0,"['apparently', 'proven', 'sql', 'cyclic', 'tag', 'turing-complete', '(', 'see', '\\', '[', '1\\', ']', ')', '.', 'also', 'approach', 'convert', 'relational', 'structure', 'owl', '(', 'e.g', '.', '\\', '[', '2\\', ']', ',', '\\', '[', '3\\', ']', ')', '.', 'one', 'conclude', 'one', 'define', 'algorithm', 'owl', 'one', 'derivative', '?', 'anyone', 'know', 'paper', '?', 'thanks', '!', 'best', ',', 'felix', 'grumbach', '\\', '[', '1\\', ']', '[', '\\_turing\\_complete.html', ']', '(', ')', '\\', '[', '2\\', ']', '[', ']', '(', ')', '\\', '[', '3\\', ']', '[', '-transformation-of-sql-relational-to-owl-astrova-kalja/d92631b15ef80ab61d3a21a1eca0d7f7e8dc6c09', ']', '(', '-transformation-of-sql-relational-to-owl-astrova-kalja', '%', '2fd92631b15ef80ab61d3a21a1eca0d7f7e8dc6c09', ')']","[[('apparently', 'RB')], [('proven', 'NN')], [('sql', 'NN')], [('cyclic', 'NN')], [('tags', 'NNS')], [('turing-complete', 'JJ')], [('(', '(')], [('see', 'VB')], [('\\', 'NN')], [('[', 'NN')], [('1\\', 'CD')], [(']', 'NN')], [(')', ')')], [('.', '.')], [('also', 'RB')], [('approaches', 'NNS')], [('convert', 'NN')], [('relational', 'NN')], [('structures', 'NNS')], [('owl', 'NN')], [('(', '(')], [('e.g', 'NN')], [('.', '.')], [('\\', 'NN')], [('[', 'NN')], [('2\\', 'CD')], [(']', 'NN')], [(',', ',')], [('\\', 'NN')], [('[', 'NN')], [('3\\', 'CD')], [(']', 'NN')], [(')', ')')], [('.', '.')], [('one', 'CD')], [('conclude', 'NN')], [('one', 'CD')], [('define', 'NN')], [('algorithm', 'NN')], [('owl', 'NN')], [('one', 'CD')], [('derivatives', 'NNS')], [('?', '.')], [('anyone', 'NN')], [('know', 'VB')], [('paper', 'NN')], [('?', '.')], [('thanks', 'NNS')], [('!', '.')], [('best', 'JJS')], [(',', ',')], [('felix', 'NN')], [('grumbach', 'NN')], [('\\', 'NN')], [('[', 'NN')], [('1\\', 'CD')], [(']', 'NN')], [('[', 'NN')], [('\\_turing\\_complete.html', 'NN')], [(']', 'NN')], [('(', '(')], [(')', ')')], [('\\', 'NN')], [('[', 'NN')], [('2\\', 'CD')], [(']', 'NN')], [('[', 'NN')], [(']', 'NN')], [('(', '(')], [(')', ')')], [('\\', 'NN')], [('[', 'NN')], [('3\\', 'CD')], [(']', 'NN')], [('[', 'NN')], [('-transformation-of-sql-relational-to-owl-astrova-kalja/d92631b15ef80ab61d3a21a1eca0d7f7e8dc6c09', 'NN')], [(']', 'NN')], [('(', '(')], [('-transformation-of-sql-relational-to-owl-astrova-kalja', 'NN')], [('%', 'NN')], [('2fd92631b15ef80ab61d3a21a1eca0d7f7e8dc6c09', 'CD')], [(')', ')')]]","apparently proven sql cyclic tag turing-complete ( see \ [ 1\ ] ) . also approach convert relational structure owl ( e.g . \ [ 2\ ] , \ [ 3\ ] ) . one conclude one define algorithm owl one derivative ? anyone know paper ? thanks ! best , felix grumbach \ [ 1\ ] [ \_turing\_complete.html ] ( ) \ [ 2\ ] [ ] ( ) \ [ 3\ ] [ -transformation-of-sql-relational-to-owl-astrova-kalja/d92631b15ef80ab61d3a21a1eca0d7f7e8dc6c09 ] ( -transformation-of-sql-relational-to-owl-astrova-kalja % 2fd92631b15ef80ab61d3a21a1eca0d7f7e8dc6c09 )",7_tm_state_turing_universal,2
57,sywkhe,CNN Model Training - why was Epoch 5 chosen as the best instead of 7?,Help,1,0.67,computerscience,https://www.reddit.com/r/computerscience/comments/sywkhe/cnn_model_training_why_was_epoch_5_chosen_as_the/,3,"epoch 7 has better (less) loss and better (higher) accuracy than epoch 5. is there a good way to explain why was this not saved and used instead of epoch 5?

",1645559466.0,"['epoch', '7', 'well', '(', 'less', ')', 'loss', 'well', '(', 'high', ')', 'accuracy', 'epoch', '5.', 'good', 'way', 'explain', 'save', 'use', 'instead', 'epoch', '5', '?']","[[('epoch', 'NN')], [('7', 'CD')], [('better', 'RBR')], [('(', '(')], [('less', 'RBR')], [(')', ')')], [('loss', 'NN')], [('better', 'RBR')], [('(', '(')], [('higher', 'JJR')], [(')', ')')], [('accuracy', 'NN')], [('epoch', 'NN')], [('5.', 'CD')], [('good', 'JJ')], [('way', 'NN')], [('explain', 'NN')], [('saved', 'VBN')], [('used', 'VBN')], [('instead', 'RB')], [('epoch', 'NN')], [('5', 'CD')], [('?', '.')]]",epoch 7 well ( less ) loss well ( high ) accuracy epoch 5. good way explain save use instead epoch 5 ?,1_memory_byte_data_alignment,3
59,syffqo,"In your opinion, has the most popular programming language 50 years from now already been created? Or will a new programming language be invented that becomes more popular than those already in existence?",Discussion,4,0.7,computerscience,https://www.reddit.com/r/computerscience/comments/syffqo/in_your_opinion_has_the_most_popular_programming/,9,i am curious what are the conditions needed for someone to feel like it is a good investment of their time to create a new programming language. what motivates people to begin such a lofty endeavor? what type of personality must someone have to begin and finish such a huge goal?,1645507597.0,"['curious', 'condition', 'need', 'someone', 'feel', 'like', 'good', 'investment', 'time', 'create', 'new', 'program', 'language', '.', 'motivates', 'people', 'begin', 'lofty', 'endeavor', '?', 'type', 'personality', 'must', 'someone', 'begin', 'finish', 'huge', 'goal', '?']","[[('curious', 'JJ')], [('conditions', 'NNS')], [('needed', 'VBN')], [('someone', 'NN')], [('feel', 'NN')], [('like', 'IN')], [('good', 'JJ')], [('investment', 'NN')], [('time', 'NN')], [('create', 'NN')], [('new', 'JJ')], [('programming', 'VBG')], [('language', 'NN')], [('.', '.')], [('motivates', 'NNS')], [('people', 'NNS')], [('begin', 'NN')], [('lofty', 'NN')], [('endeavor', 'NN')], [('?', '.')], [('type', 'NN')], [('personality', 'NN')], [('must', 'MD')], [('someone', 'NN')], [('begin', 'NN')], [('finish', 'NN')], [('huge', 'JJ')], [('goal', 'NN')], [('?', '.')]]",curious condition need someone feel like good investment time create new program language . motivates people begin lofty endeavor ? type personality must someone begin finish huge goal ?,-1_abazbz2abz_2520_problem_use,3
60,sxv3dt,Is anyone familiar or knows Greedy Randomized Adaptive Search Procedure (GRASP).,Help,20,0.86,computerscience,https://www.reddit.com/r/computerscience/comments/sxv3dt/is_anyone_familiar_or_knows_greedy_randomized/,7,can someone please explain this to me in simple words.  i read about and it is kind of hard to understand. there are multiple applications to this but mostly in orienteering and the whole process is still kind of complicated for me. i am applying this to one of my projects and it would really help if someone can make me understand this algorithm better.,1645454484.0,"['someone', 'please', 'explain', 'simple', 'word', '.', 'read', 'kind', 'hard', 'understand', '.', 'multiple', 'application', 'mostly', 'orienteering', 'whole', 'process', 'still', 'kind', 'complicate', '.', 'apply', 'one', 'project', 'would', 'really', 'help', 'someone', 'make', 'understand', 'algorithm', 'well', '.']","[[('someone', 'NN')], [('please', 'NN')], [('explain', 'NN')], [('simple', 'NN')], [('words', 'NNS')], [('.', '.')], [('read', 'NN')], [('kind', 'NN')], [('hard', 'JJ')], [('understand', 'NN')], [('.', '.')], [('multiple', 'NN')], [('applications', 'NNS')], [('mostly', 'RB')], [('orienteering', 'VBG')], [('whole', 'JJ')], [('process', 'NN')], [('still', 'RB')], [('kind', 'NN')], [('complicated', 'VBN')], [('.', '.')], [('applying', 'VBG')], [('one', 'CD')], [('projects', 'NNS')], [('would', 'MD')], [('really', 'RB')], [('help', 'NN')], [('someone', 'NN')], [('make', 'VB')], [('understand', 'NN')], [('algorithm', 'NN')], [('better', 'RBR')], [('.', '.')]]",someone please explain simple word . read kind hard understand . multiple application mostly orienteering whole process still kind complicate . apply one project would really help someone make understand algorithm well .,0_algorithm_time_node_bill,3
61,sxwmi4,Weird Thought: Paraconsistent Computer Science,,13,0.88,computerscience,https://www.reddit.com/r/computerscience/comments/sxwmi4/weird_thought_paraconsistent_computer_science/,7,"paraconsistent logic is a form of logic where ***some*** contradictions are allowed. in other words, you can have two statements which are both true in the system, and yet one contradicts the other. if we applied paraconsistent logic to computer science, for instance, we could hold that indeed the halting problem is not computable, and yet we could no longer use ""if p is true then the halting problem is computable, thus p is false."" 

of course this idea would only have any real world merit (i think) if reality itself were not logically consistent, which is a whole other can of worms to open! still, i think it would be an interesting area of computer science to study.",1645458415.0,"['paraconsistent', 'logic', 'form', 'logic', '*', '*', '*', '*', '*', '*', 'contradiction', 'allow', '.', 'word', ',', 'two', 'statement', 'true', 'system', ',', 'yet', 'one', 'contradicts', '.', 'apply', 'paraconsistent', 'logic', 'computer', 'science', ',', 'instance', ',', 'could', 'hold', 'indeed', 'halt', 'problem', 'computable', ',', 'yet', 'could', 'longer', 'use', '``', 'p', 'true', 'halt', 'problem', 'computable', ',', 'thus', 'p', 'false', '.', ""''"", 'course', 'idea', 'would', 'real', 'world', 'merit', '(', 'think', ')', 'reality', 'logically', 'consistent', ',', 'whole', 'worm', 'open', '!', 'still', ',', 'think', 'would', 'interest', 'area', 'computer', 'science', 'study', '.']","[[('paraconsistent', 'NN')], [('logic', 'NN')], [('form', 'NN')], [('logic', 'NN')], [('*', 'NN')], [('*', 'NN')], [('*', 'NN')], [('*', 'NN')], [('*', 'NN')], [('*', 'NN')], [('contradictions', 'NNS')], [('allowed', 'VBN')], [('.', '.')], [('words', 'NNS')], [(',', ',')], [('two', 'CD')], [('statements', 'NNS')], [('true', 'JJ')], [('system', 'NN')], [(',', ',')], [('yet', 'RB')], [('one', 'CD')], [('contradicts', 'NNS')], [('.', '.')], [('applied', 'VBN')], [('paraconsistent', 'NN')], [('logic', 'NN')], [('computer', 'NN')], [('science', 'NN')], [(',', ',')], [('instance', 'NN')], [(',', ',')], [('could', 'MD')], [('hold', 'NN')], [('indeed', 'RB')], [('halting', 'VBG')], [('problem', 'NN')], [('computable', 'JJ')], [(',', ',')], [('yet', 'RB')], [('could', 'MD')], [('longer', 'NN')], [('use', 'NN')], [('``', '``')], [('p', 'NN')], [('true', 'JJ')], [('halting', 'VBG')], [('problem', 'NN')], [('computable', 'JJ')], [(',', ',')], [('thus', 'RB')], [('p', 'NN')], [('false', 'JJ')], [('.', '.')], [(""''"", ""''"")], [('course', 'NN')], [('idea', 'NN')], [('would', 'MD')], [('real', 'JJ')], [('world', 'NN')], [('merit', 'NN')], [('(', '(')], [('think', 'NN')], [(')', ')')], [('reality', 'NN')], [('logically', 'RB')], [('consistent', 'NN')], [(',', ',')], [('whole', 'JJ')], [('worms', 'NNS')], [('open', 'JJ')], [('!', '.')], [('still', 'RB')], [(',', ',')], [('think', 'NN')], [('would', 'MD')], [('interesting', 'VBG')], [('area', 'NN')], [('computer', 'NN')], [('science', 'NN')], [('study', 'NN')], [('.', '.')]]","paraconsistent logic form logic * * * * * * contradiction allow . word , two statement true system , yet one contradicts . apply paraconsistent logic computer science , instance , could hold indeed halt problem computable , yet could longer use `` p true halt problem computable , thus p false . '' course idea would real world merit ( think ) reality logically consistent , whole worm open ! still , think would interest area computer science study .",-1_abazbz2abz_2520_problem_use,2
62,syfpnn,Computer Teachers of Reddit! What do you teach?,Help,0,0.33,computerscience,https://www.reddit.com/r/computerscience/comments/syfpnn/computer_teachers_of_reddit_what_do_you_teach/,4,"hey all, former 9th & 10th grade science teacher here.

some friends and i are making a website for people to independently learn to code in javascript. we hope to soft launch in roughly 8 months. 

&#x200b;

1. what topics do you teach in your comp sci classes? 

2. roughly how much time do you spend on each topic? 

3. what features would you like to see?

4. how do you like to grade assignments in comp sci?

prototype link: [-can-code.netlify.app/](-can-code.netlify.app/)

&#x200b;

we are hoping to make some sections of the website usable for teachers. 

ex: let students do lesson on js functions for extra credit / have students choose 1 lesson of their choice per week.

&#x200b;

current lessons: 

\- variables

\- strings

\- comments

\- math

\- console.log

\- errors

\- functions

\- pseudocode

\- booleans

\- if & conditionals

\- how to google

\- rock paper scissors project",1645508526.0,"['hey', ',', 'former', '9th', '&', '10th', 'grade', 'science', 'teacher', '.', 'friend', 'make', 'website', 'people', 'independently', 'learn', 'code', 'javascript', '.', 'hope', 'soft', 'launch', 'roughly', '8', 'month', '.', '&', '#', 'x200b', ';', '1.', 'topic', 'teach', 'comp', 'sci', 'class', '?', '2.', 'roughly', 'much', 'time', 'spend', 'topic', '?', '3.', 'feature', 'would', 'like', 'see', '?', '4.', 'like', 'grade', 'assignment', 'comp', 'sci', '?', 'prototype', 'link', ':', '[', '-can-code.netlify.app/', ']', '(', '-can-code.netlify.app/', ')', '&', '#', 'x200b', ';', 'hop', 'make', 'section', 'website', 'usable', 'teacher', '.', 'ex', ':', 'let', 'student', 'lesson', 'j', 'function', 'extra', 'credit', '/', 'student', 'choose', '1', 'lesson', 'choice', 'per', 'week', '.', '&', '#', 'x200b', ';', 'current', 'lesson', ':', '\\-', 'variable', '\\-', 'string', '\\-', 'comment', '\\-', 'math', '\\-', 'console.log', '\\-', 'error', '\\-', 'function', '\\-', 'pseudocode', '\\-', 'booleans', '\\-', '&', 'conditionals', '\\-', 'google', '\\-', 'rock', 'paper', 'scissors', 'project']","[[('hey', 'NN')], [(',', ',')], [('former', 'JJ')], [('9th', 'CD')], [('&', 'CC')], [('10th', 'NNS')], [('grade', 'NN')], [('science', 'NN')], [('teacher', 'NN')], [('.', '.')], [('friends', 'NNS')], [('making', 'VBG')], [('website', 'NN')], [('people', 'NNS')], [('independently', 'RB')], [('learn', 'NN')], [('code', 'NN')], [('javascript', 'NN')], [('.', '.')], [('hope', 'NN')], [('soft', 'JJ')], [('launch', 'NN')], [('roughly', 'RB')], [('8', 'CD')], [('months', 'NNS')], [('.', '.')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('1.', 'CD')], [('topics', 'NNS')], [('teach', 'NN')], [('comp', 'NN')], [('sci', 'NN')], [('classes', 'NNS')], [('?', '.')], [('2.', 'CD')], [('roughly', 'RB')], [('much', 'JJ')], [('time', 'NN')], [('spend', 'NN')], [('topic', 'NN')], [('?', '.')], [('3.', 'CD')], [('features', 'NNS')], [('would', 'MD')], [('like', 'IN')], [('see', 'VB')], [('?', '.')], [('4.', 'CD')], [('like', 'IN')], [('grade', 'NN')], [('assignments', 'NNS')], [('comp', 'NN')], [('sci', 'NN')], [('?', '.')], [('prototype', 'NN')], [('link', 'NN')], [(':', ':')], [('[', 'NN')], [('-can-code.netlify.app/', 'NN')], [(']', 'NN')], [('(', '(')], [('-can-code.netlify.app/', 'NN')], [(')', ')')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('hoping', 'VBG')], [('make', 'VB')], [('sections', 'NNS')], [('website', 'NN')], [('usable', 'JJ')], [('teachers', 'NNS')], [('.', '.')], [('ex', 'NN')], [(':', ':')], [('let', 'VB')], [('students', 'NNS')], [('lesson', 'NN')], [('js', 'NN')], [('functions', 'NNS')], [('extra', 'JJ')], [('credit', 'NN')], [('/', 'NN')], [('students', 'NNS')], [('choose', 'NN')], [('1', 'CD')], [('lesson', 'NN')], [('choice', 'NN')], [('per', 'IN')], [('week', 'NN')], [('.', '.')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('current', 'JJ')], [('lessons', 'NNS')], [(':', ':')], [('\\-', 'JJ')], [('variables', 'NNS')], [('\\-', 'JJ')], [('strings', 'NNS')], [('\\-', 'JJ')], [('comments', 'NNS')], [('\\-', 'JJ')], [('math', 'NN')], [('\\-', 'JJ')], [('console.log', 'NN')], [('\\-', 'JJ')], [('errors', 'NNS')], [('\\-', 'JJ')], [('functions', 'NNS')], [('\\-', 'JJ')], [('pseudocode', 'NN')], [('\\-', 'JJ')], [('booleans', 'NNS')], [('\\-', 'JJ')], [('&', 'CC')], [('conditionals', 'NNS')], [('\\-', 'JJ')], [('google', 'NN')], [('\\-', 'JJ')], [('rock', 'NN')], [('paper', 'NN')], [('scissors', 'NNS')], [('project', 'NN')]]","hey , former 9th & 10th grade science teacher . friend make website people independently learn code javascript . hope soft launch roughly 8 month . & # x200b ; 1. topic teach comp sci class ? 2. roughly much time spend topic ? 3. feature would like see ? 4. like grade assignment comp sci ? prototype link : [ -can-code.netlify.app/ ] ( -can-code.netlify.app/ ) & # x200b ; hop make section website usable teacher . ex : let student lesson j function extra credit / student choose 1 lesson choice per week . & # x200b ; current lesson : \- variable \- string \- comment \- math \- console.log \- error \- function \- pseudocode \- booleans \- & conditionals \- google \- rock paper scissors project",-1_abazbz2abz_2520_problem_use,4
63,sxzgvj,How would I calculate the worst-case complexity of this algorithm?,,2,0.67,computerscience,https://www.reddit.com/r/computerscience/comments/sxzgvj/how_would_i_calculate_the_worstcase_complexity_of/,2,"i have a graph representing a city with multiple locations (nodes) with distances between each location (weight). if i have a sensor in each location in the city, then i have full coverage (hence: let full\_coverage be true). if every location in the city is linked to a sensor with a weight less than or equal to 50, then i also have full coverage. here is my algorithm:

1. let *city* be a weighted graph
2. let *sensors* be a set of nodes
3. let full\_*coverage* be false
4. if every node in *city* is a node in *sensors*:
   1. let full\_*coverage* be true
5. if every node in *city* is linked by an edge to a node in *sensors* with weight less than or equal to 50:
   1. let full\_*coverage* be true
6. return full\_*coverage*

this is my understanding of the time complexity of this algorithm. now time-complexity is by far my weakest topic so please excuse any mistakes:

1. let *city* be a weighted graph       constant time - o(1)
2. let *sensors* be a set of nodes       constant time - o(1)
3. let full\_*coverage* be false              constant time - o(1)
4. if every node in *city* is a node in *sensors*:
   1. let full\_*coverage* be true         linear time - o(n)
5. if every node in *city* is linked by an edge to a node in *sensors* with weight less than or equal to 50:
   1. let full\_*coverage* be true         linear time - o(n)
6. return full\_*coverage*                      constant time - o(1)

any help understanding time complexity would be greatly appreciated. thanks in advance!

p.s this is a generalized problem, not homework :) i just need a little help understanding this topic!",1645465387.0,"['graph', 'represent', 'city', 'multiple', 'location', '(', 'node', ')', 'distance', 'location', '(', 'weight', ')', '.', 'sensor', 'location', 'city', ',', 'full', 'coverage', '(', 'hence', ':', 'let', 'full\\_coverage', 'true', ')', '.', 'every', 'location', 'city', 'link', 'sensor', 'weight', 'less', 'equal', '50', ',', 'also', 'full', 'coverage', '.', 'algorithm', ':', '1.', 'let', '*', 'city', '*', 'weight', 'graph', '2.', 'let', '*', 'sensor', '*', 'set', 'node', '3.', 'let', 'full\\_', '*', 'coverage', '*', 'false', '4.', 'every', 'node', '*', 'city', '*', 'node', '*', 'sensor', '*', ':', '1.', 'let', 'full\\_', '*', 'coverage', '*', 'true', '5.', 'every', 'node', '*', 'city', '*', 'link', 'edge', 'node', '*', 'sensor', '*', 'weight', 'less', 'equal', '50', ':', '1.', 'let', 'full\\_', '*', 'coverage', '*', 'true', '6.', 'return', 'full\\_', '*', 'coverage', '*', 'understand', 'time', 'complexity', 'algorithm', '.', 'time-complexity', 'far', 'weak', 'topic', 'please', 'excuse', 'mistake', ':', '1.', 'let', '*', 'city', '*', 'weight', 'graph', 'constant', 'time', '-', '(', '1', ')', '2.', 'let', '*', 'sensor', '*', 'set', 'node', 'constant', 'time', '-', '(', '1', ')', '3.', 'let', 'full\\_', '*', 'coverage', '*', 'false', 'constant', 'time', '-', '(', '1', ')', '4.', 'every', 'node', '*', 'city', '*', 'node', '*', 'sensor', '*', ':', '1.', 'let', 'full\\_', '*', 'coverage', '*', 'true', 'linear', 'time', '-', '(', 'n', ')', '5.', 'every', 'node', '*', 'city', '*', 'link', 'edge', 'node', '*', 'sensor', '*', 'weight', 'less', 'equal', '50', ':', '1.', 'let', 'full\\_', '*', 'coverage', '*', 'true', 'linear', 'time', '-', '(', 'n', ')', '6.', 'return', 'full\\_', '*', 'coverage', '*', 'constant', 'time', '-', '(', '1', ')', 'help', 'understand', 'time', 'complexity', 'would', 'greatly', 'appreciate', '.', 'thanks', 'advance', '!', 'p.s', 'generalize', 'problem', ',', 'homework', ':', ')', 'need', 'little', 'help', 'understand', 'topic', '!']","[[('graph', 'NN')], [('representing', 'VBG')], [('city', 'NN')], [('multiple', 'NN')], [('locations', 'NNS')], [('(', '(')], [('nodes', 'NNS')], [(')', ')')], [('distances', 'NNS')], [('location', 'NN')], [('(', '(')], [('weight', 'NN')], [(')', ')')], [('.', '.')], [('sensor', 'NN')], [('location', 'NN')], [('city', 'NN')], [(',', ',')], [('full', 'JJ')], [('coverage', 'NN')], [('(', '(')], [('hence', 'NN')], [(':', ':')], [('let', 'VB')], [('full\\_coverage', 'NN')], [('true', 'JJ')], [(')', ')')], [('.', '.')], [('every', 'DT')], [('location', 'NN')], [('city', 'NN')], [('linked', 'VBN')], [('sensor', 'NN')], [('weight', 'NN')], [('less', 'RBR')], [('equal', 'JJ')], [('50', 'CD')], [(',', ',')], [('also', 'RB')], [('full', 'JJ')], [('coverage', 'NN')], [('.', '.')], [('algorithm', 'NN')], [(':', ':')], [('1.', 'CD')], [('let', 'VB')], [('*', 'NN')], [('city', 'NN')], [('*', 'NN')], [('weighted', 'VBN')], [('graph', 'NN')], [('2.', 'CD')], [('let', 'VB')], [('*', 'NN')], [('sensors', 'NNS')], [('*', 'NN')], [('set', 'NN')], [('nodes', 'NNS')], [('3.', 'CD')], [('let', 'VB')], [('full\\_', 'NN')], [('*', 'NN')], [('coverage', 'NN')], [('*', 'NN')], [('false', 'JJ')], [('4.', 'CD')], [('every', 'DT')], [('node', 'NN')], [('*', 'NN')], [('city', 'NN')], [('*', 'NN')], [('node', 'NN')], [('*', 'NN')], [('sensors', 'NNS')], [('*', 'NN')], [(':', ':')], [('1.', 'CD')], [('let', 'VB')], [('full\\_', 'NN')], [('*', 'NN')], [('coverage', 'NN')], [('*', 'NN')], [('true', 'JJ')], [('5.', 'CD')], [('every', 'DT')], [('node', 'NN')], [('*', 'NN')], [('city', 'NN')], [('*', 'NN')], [('linked', 'VBN')], [('edge', 'NN')], [('node', 'NN')], [('*', 'NN')], [('sensors', 'NNS')], [('*', 'NN')], [('weight', 'NN')], [('less', 'RBR')], [('equal', 'JJ')], [('50', 'CD')], [(':', ':')], [('1.', 'CD')], [('let', 'VB')], [('full\\_', 'NN')], [('*', 'NN')], [('coverage', 'NN')], [('*', 'NN')], [('true', 'JJ')], [('6.', 'CD')], [('return', 'NN')], [('full\\_', 'NN')], [('*', 'NN')], [('coverage', 'NN')], [('*', 'NN')], [('understanding', 'VBG')], [('time', 'NN')], [('complexity', 'NN')], [('algorithm', 'NN')], [('.', '.')], [('time-complexity', 'NN')], [('far', 'RB')], [('weakest', 'JJS')], [('topic', 'NN')], [('please', 'NN')], [('excuse', 'NN')], [('mistakes', 'NNS')], [(':', ':')], [('1.', 'CD')], [('let', 'VB')], [('*', 'NN')], [('city', 'NN')], [('*', 'NN')], [('weighted', 'VBN')], [('graph', 'NN')], [('constant', 'JJ')], [('time', 'NN')], [('-', ':')], [('(', '(')], [('1', 'CD')], [(')', ')')], [('2.', 'CD')], [('let', 'VB')], [('*', 'NN')], [('sensors', 'NNS')], [('*', 'NN')], [('set', 'NN')], [('nodes', 'NNS')], [('constant', 'JJ')], [('time', 'NN')], [('-', ':')], [('(', '(')], [('1', 'CD')], [(')', ')')], [('3.', 'CD')], [('let', 'VB')], [('full\\_', 'NN')], [('*', 'NN')], [('coverage', 'NN')], [('*', 'NN')], [('false', 'JJ')], [('constant', 'JJ')], [('time', 'NN')], [('-', ':')], [('(', '(')], [('1', 'CD')], [(')', ')')], [('4.', 'CD')], [('every', 'DT')], [('node', 'NN')], [('*', 'NN')], [('city', 'NN')], [('*', 'NN')], [('node', 'NN')], [('*', 'NN')], [('sensors', 'NNS')], [('*', 'NN')], [(':', ':')], [('1.', 'CD')], [('let', 'VB')], [('full\\_', 'NN')], [('*', 'NN')], [('coverage', 'NN')], [('*', 'NN')], [('true', 'JJ')], [('linear', 'NN')], [('time', 'NN')], [('-', ':')], [('(', '(')], [('n', 'NN')], [(')', ')')], [('5.', 'CD')], [('every', 'DT')], [('node', 'NN')], [('*', 'NN')], [('city', 'NN')], [('*', 'NN')], [('linked', 'VBN')], [('edge', 'NN')], [('node', 'NN')], [('*', 'NN')], [('sensors', 'NNS')], [('*', 'NN')], [('weight', 'NN')], [('less', 'RBR')], [('equal', 'JJ')], [('50', 'CD')], [(':', ':')], [('1.', 'CD')], [('let', 'VB')], [('full\\_', 'NN')], [('*', 'NN')], [('coverage', 'NN')], [('*', 'NN')], [('true', 'JJ')], [('linear', 'NN')], [('time', 'NN')], [('-', ':')], [('(', '(')], [('n', 'NN')], [(')', ')')], [('6.', 'CD')], [('return', 'NN')], [('full\\_', 'NN')], [('*', 'NN')], [('coverage', 'NN')], [('*', 'NN')], [('constant', 'JJ')], [('time', 'NN')], [('-', ':')], [('(', '(')], [('1', 'CD')], [(')', ')')], [('help', 'NN')], [('understanding', 'VBG')], [('time', 'NN')], [('complexity', 'NN')], [('would', 'MD')], [('greatly', 'RB')], [('appreciated', 'VBN')], [('.', '.')], [('thanks', 'NNS')], [('advance', 'NN')], [('!', '.')], [('p.s', 'NN')], [('generalized', 'VBN')], [('problem', 'NN')], [(',', ',')], [('homework', 'NN')], [(':', ':')], [(')', ')')], [('need', 'NN')], [('little', 'JJ')], [('help', 'NN')], [('understanding', 'VBG')], [('topic', 'NN')], [('!', '.')]]","graph represent city multiple location ( node ) distance location ( weight ) . sensor location city , full coverage ( hence : let full\_coverage true ) . every location city link sensor weight less equal 50 , also full coverage . algorithm : 1. let * city * weight graph 2. let * sensor * set node 3. let full\_ * coverage * false 4. every node * city * node * sensor * : 1. let full\_ * coverage * true 5. every node * city * link edge node * sensor * weight less equal 50 : 1. let full\_ * coverage * true 6. return full\_ * coverage * understand time complexity algorithm . time-complexity far weak topic please excuse mistake : 1. let * city * weight graph constant time - ( 1 ) 2. let * sensor * set node constant time - ( 1 ) 3. let full\_ * coverage * false constant time - ( 1 ) 4. every node * city * node * sensor * : 1. let full\_ * coverage * true linear time - ( n ) 5. every node * city * link edge node * sensor * weight less equal 50 : 1. let full\_ * coverage * true linear time - ( n ) 6. return full\_ * coverage * constant time - ( 1 ) help understand time complexity would greatly appreciate . thanks advance ! p.s generalize problem , homework : ) need little help understand topic !",0_algorithm_time_node_bill,4
64,sy5202,Finding Solutions to Bias in Machine Learning,General,1,1.0,computerscience,https://www.reddit.com/r/computerscience/comments/sy5202/finding_solutions_to_bias_in_machine_learning/,0,"[-xie-increasing-transparency-machine-learning-decision-making](-xie-increasing-transparency-machine-learning-decision-making)

the team found that the current state-of-the-art model, known as a “graph neural network,” can actually exacerbate bias in the data that it uses in its decisions. in response, they developed an optimization algorithm using the stochastic gradient method—lehigh ise professor sutton monro’s contribution once again—that could find optimal trade-offs among competing fairness goals that would allow domain experts to select a trade-off that is least harmful to all subpopulations.",1645479034.0,"['[', '-xie-increasing-transparency-machine-learning-decision-making', ']', '(', '-xie-increasing-transparency-machine-learning-decision-making', ')', 'team', 'found', 'current', 'state-of-the-art', 'model', ',', 'know', '“', 'graph', 'neural', 'network', ',', '”', 'actually', 'exacerbate', 'bias', 'data', 'us', 'decision', '.', 'response', ',', 'developed', 'optimization', 'algorithm', 'use', 'stochastic', 'gradient', 'method—lehigh', 'ise', 'professor', 'sutton', 'monro', '’', 'contribution', 'again—that', 'could', 'find', 'optimal', 'trade-off', 'among', 'compete', 'fairness', 'goal', 'would', 'allow', 'domain', 'expert', 'select', 'trade-off', 'least', 'harmful', 'subpopulation', '.']","[[('[', 'NN')], [('-xie-increasing-transparency-machine-learning-decision-making', 'VBG')], [(']', 'NN')], [('(', '(')], [('-xie-increasing-transparency-machine-learning-decision-making', 'VBG')], [(')', ')')], [('team', 'NN')], [('found', 'NN')], [('current', 'JJ')], [('state-of-the-art', 'NN')], [('model', 'NN')], [(',', ',')], [('known', 'VBN')], [('“', 'NN')], [('graph', 'NN')], [('neural', 'JJ')], [('network', 'NN')], [(',', ',')], [('”', 'NN')], [('actually', 'RB')], [('exacerbate', 'NN')], [('bias', 'NN')], [('data', 'NNS')], [('uses', 'NNS')], [('decisions', 'NNS')], [('.', '.')], [('response', 'NN')], [(',', ',')], [('developed', 'NN')], [('optimization', 'NN')], [('algorithm', 'NN')], [('using', 'VBG')], [('stochastic', 'JJ')], [('gradient', 'NN')], [('method—lehigh', 'NN')], [('ise', 'NN')], [('professor', 'NN')], [('sutton', 'NN')], [('monro', 'NN')], [('’', 'NN')], [('contribution', 'NN')], [('again—that', 'RB')], [('could', 'MD')], [('find', 'VB')], [('optimal', 'JJ')], [('trade-offs', 'NNS')], [('among', 'IN')], [('competing', 'VBG')], [('fairness', 'NN')], [('goals', 'NNS')], [('would', 'MD')], [('allow', 'VB')], [('domain', 'NN')], [('experts', 'NNS')], [('select', 'NN')], [('trade-off', 'NN')], [('least', 'JJS')], [('harmful', 'NN')], [('subpopulations', 'NNS')], [('.', '.')]]","[ -xie-increasing-transparency-machine-learning-decision-making ] ( -xie-increasing-transparency-machine-learning-decision-making ) team found current state-of-the-art model , know “ graph neural network , ” actually exacerbate bias data us decision . response , developed optimization algorithm use stochastic gradient method—lehigh ise professor sutton monro ’ contribution again—that could find optimal trade-off among compete fairness goal would allow domain expert select trade-off least harmful subpopulation .",3_search_ai_think_google,4
65,sy3zvc,Graph theory degree sequences,Help,0,0.25,computerscience,https://www.reddit.com/r/computerscience/comments/sy3zvc/graph_theory_degree_sequences/,1,"hi! thank you in advance to everyone who responds.

is there any way to interpret the following quantity? it came up in some of my research, and i was curious:

$ \sum_v deg(v)^2, $

where v represents the vertices of the graph and deg(v) is the degree of the vertex v.",1645476500.0,"['hi', '!', 'thank', 'advance', 'everyone', 'responds', '.', 'way', 'interpret', 'follow', 'quantity', '?', 'come', 'research', ',', 'curious', ':', '$', '\\sum_v', 'deg', '(', 'v', ')', '^2', ',', '$', 'v', 'represent', 'vertex', 'graph', 'deg', '(', 'v', ')', 'degree', 'vertex', 'v', '.']","[[('hi', 'NN')], [('!', '.')], [('thank', 'NN')], [('advance', 'NN')], [('everyone', 'NN')], [('responds', 'NNS')], [('.', '.')], [('way', 'NN')], [('interpret', 'NN')], [('following', 'VBG')], [('quantity', 'NN')], [('?', '.')], [('came', 'VBD')], [('research', 'NN')], [(',', ',')], [('curious', 'JJ')], [(':', ':')], [('$', '$')], [('\\sum_v', 'NN')], [('deg', 'NN')], [('(', '(')], [('v', 'NN')], [(')', ')')], [('^2', 'NN')], [(',', ',')], [('$', '$')], [('v', 'NN')], [('represents', 'VBZ')], [('vertices', 'NNS')], [('graph', 'NN')], [('deg', 'NN')], [('(', '(')], [('v', 'NN')], [(')', ')')], [('degree', 'NN')], [('vertex', 'NN')], [('v', 'NN')], [('.', '.')]]","hi ! thank advance everyone responds . way interpret follow quantity ? come research , curious : $ \sum_v deg ( v ) ^2 , $ v represent vertex graph deg ( v ) degree vertex v .",0_algorithm_time_node_bill,3
66,sxbbmi,Are hypervisors commonly used in the industry?,General,21,0.68,computerscience,https://www.reddit.com/r/computerscience/comments/sxbbmi/are_hypervisors_commonly_used_in_the_industry/,29,"hello

i noticed a couple of universities doing research on hypervisors but must admit i have not seen it used in the industry anywhere yet. i have worked at 6 companies so far (aerospace, medical, construction and automotive industries) and have heard about it only twice for a couple of minutes as a suggestion but it was quickly put on the side as it was not useful and seemingly a bit esoteric to most of my colleagues apparently.

so i was wondering whether anybody here encountered hypervisors a lot in the industry? is it too cutting-edge, which is why it is not widespread yet? maybe its use-cases are so limited it will never really be very widespread in the industry (which is my hypothesis). would be glad to hear your view on the matter.",1645390954.0,"['hello', 'notice', 'couple', 'university', 'research', 'hypervisors', 'must', 'admit', 'see', 'use', 'industry', 'anywhere', 'yet', '.', 'work', '6', 'company', 'far', '(', 'aerospace', ',', 'medical', ',', 'construction', 'automotive', 'industry', ')', 'heard', 'twice', 'couple', 'minute', 'suggestion', 'quickly', 'put', 'side', 'useful', 'seemingly', 'bit', 'esoteric', 'colleague', 'apparently', '.', 'wonder', 'whether', 'anybody', 'encounter', 'hypervisors', 'lot', 'industry', '?', 'cutting-edge', ',', 'widespread', 'yet', '?', 'maybe', 'use-cases', 'limited', 'never', 'really', 'widespread', 'industry', '(', 'hypothesis', ')', '.', 'would', 'glad', 'hear', 'view', 'matter', '.']","[[('hello', 'NN')], [('noticed', 'VBN')], [('couple', 'NN')], [('universities', 'NNS')], [('research', 'NN')], [('hypervisors', 'NNS')], [('must', 'MD')], [('admit', 'NN')], [('seen', 'VBN')], [('used', 'VBN')], [('industry', 'NN')], [('anywhere', 'RB')], [('yet', 'RB')], [('.', '.')], [('worked', 'VBN')], [('6', 'CD')], [('companies', 'NNS')], [('far', 'RB')], [('(', '(')], [('aerospace', 'NN')], [(',', ',')], [('medical', 'JJ')], [(',', ',')], [('construction', 'NN')], [('automotive', 'JJ')], [('industries', 'NNS')], [(')', ')')], [('heard', 'NN')], [('twice', 'RB')], [('couple', 'NN')], [('minutes', 'NNS')], [('suggestion', 'NN')], [('quickly', 'RB')], [('put', 'NN')], [('side', 'NN')], [('useful', 'JJ')], [('seemingly', 'RB')], [('bit', 'NN')], [('esoteric', 'NN')], [('colleagues', 'NNS')], [('apparently', 'RB')], [('.', '.')], [('wondering', 'VBG')], [('whether', 'IN')], [('anybody', 'NN')], [('encountered', 'VBN')], [('hypervisors', 'NNS')], [('lot', 'NN')], [('industry', 'NN')], [('?', '.')], [('cutting-edge', 'NN')], [(',', ',')], [('widespread', 'JJ')], [('yet', 'RB')], [('?', '.')], [('maybe', 'RB')], [('use-cases', 'NNS')], [('limited', 'JJ')], [('never', 'RB')], [('really', 'RB')], [('widespread', 'JJ')], [('industry', 'NN')], [('(', '(')], [('hypothesis', 'NN')], [(')', ')')], [('.', '.')], [('would', 'MD')], [('glad', 'NN')], [('hear', 'NN')], [('view', 'NN')], [('matter', 'NN')], [('.', '.')]]","hello notice couple university research hypervisors must admit see use industry anywhere yet . work 6 company far ( aerospace , medical , construction automotive industry ) heard twice couple minute suggestion quickly put side useful seemingly bit esoteric colleague apparently . wonder whether anybody encounter hypervisors lot industry ? cutting-edge , widespread yet ? maybe use-cases limited never really widespread industry ( hypothesis ) . would glad hear view matter .",-1_abazbz2abz_2520_problem_use,2
67,sxmdkc,How to study Graphs and Dynamic Programming from scratch?,,2,0.75,computerscience,https://www.reddit.com/r/computerscience/comments/sxmdkc/how_to_study_graphs_and_dynamic_programming_from/,2,"i have done some basic data structures but do not know anything about graphs and dynamic programming. 
can you suggest some sources from where can i learn these in best possible way.
because lot of time we keep on searching for articles and video sources and get confused more and more",1645423888.0,"['do', 'basic', 'data', 'structure', 'know', 'anything', 'graph', 'dynamic', 'program', '.', 'suggest', 'source', 'learn', 'best', 'possible', 'way', '.', 'lot', 'time', 'keep', 'search', 'article', 'video', 'source', 'get', 'confuse']","[[('done', 'VBN')], [('basic', 'JJ')], [('data', 'NNS')], [('structures', 'NNS')], [('know', 'VB')], [('anything', 'NN')], [('graphs', 'NN')], [('dynamic', 'JJ')], [('programming', 'VBG')], [('.', '.')], [('suggest', 'NN')], [('sources', 'NNS')], [('learn', 'NN')], [('best', 'JJS')], [('possible', 'JJ')], [('way', 'NN')], [('.', '.')], [('lot', 'NN')], [('time', 'NN')], [('keep', 'VB')], [('searching', 'VBG')], [('articles', 'NNS')], [('video', 'NN')], [('sources', 'NNS')], [('get', 'VB')], [('confused', 'VBN')]]",do basic data structure know anything graph dynamic program . suggest source learn best possible way . lot time keep search article video source get confuse,-1_abazbz2abz_2520_problem_use,3
68,swtlqm,Finding the optimal speedrun for a deterministic video game,Discussion,53,0.98,computerscience,https://www.reddit.com/r/computerscience/comments/swtlqm/finding_the_optimal_speedrun_for_a_deterministic/,16,"i have been fascinated watching the progress of tool assisted speedruns (tas) for video games, specifically super mario 64. in the last decade, they have found countless strategies and exploits to dramatically shorten the time to beat the game. great video summary of the current progress [here]().

i was curious what methods could be used to find the most optimal tas possible for super mario 64. additionally, how would verification of the record work.

some thoughts i have about this. since the game is completely deterministic, one method would be to brute force every possible combination. the n64 controller provides a 32bit integer to represent the state of all buttons and joystick directions. if the n64 allows 30 inputs per second, then each second you could provide (2^32)^30  ~10^289 combinations. the current record is 4 minutes and 20 seconds, so that must be the initial upper bound. this would mean you would have to search at most 10^249,600 possible runs (incomprehensible number).

since the goal is to get mario through each stage as fast as possible, you could assume that finding the geometrically optimal path is possible. however, the world record today cleverly exploits non-trivial bugs in the games code (see video link above). so it is possible that a seemingly nonsensical series of inputs could trigger a bug that has yet to be discovered and beat the game that way. 

assuming you had the full game source code, could you use that to your advantage and rule out large subset of inputs? certainly pressing no buttons for 4 minutes would not beat the world record.

curious what your thoughts are, thanks!",1645334298.0,"['fascinate', 'watch', 'progress', 'tool', 'assist', 'speedruns', '(', 'ta', ')', 'video', 'game', ',', 'specifically', 'super', 'mario', '64.', 'last', 'decade', ',', 'found', 'countless', 'strategy', 'exploit', 'dramatically', 'shorten', 'time', 'beat', 'game', '.', 'great', 'video', 'summary', 'current', 'progress', '[', ']', '(', ')', '.', 'curious', 'method', 'could', 'use', 'find', 'optimal', 'ta', 'possible', 'super', 'mario', '64.', 'additionally', ',', 'would', 'verification', 'record', 'work', '.', 'thought', '.', 'since', 'game', 'completely', 'deterministic', ',', 'one', 'method', 'would', 'brute', 'force', 'every', 'possible', 'combination', '.', 'n64', 'controller', 'provide', '32bit', 'integer', 'represent', 'state', 'button', 'joystick', 'direction', '.', 'n64', 'allows', '30', 'input', 'per', 'second', ',', 'second', 'could', 'provide', '(', '2^32', ')', '^30', '~10^289', 'combination', '.', 'current', 'record', '4', 'minute', '20', 'second', ',', 'must', 'initial', 'upper', 'bound', '.', 'would', 'mean', 'would', 'search', '10^249,600', 'possible', 'run', '(', 'incomprehensible', 'number', ')', '.', 'since', 'goal', 'get', 'mario', 'stage', 'fast', 'possible', ',', 'could', 'assume', 'find', 'geometrically', 'optimal', 'path', 'possible', '.', 'however', ',', 'world', 'record', 'today', 'cleverly', 'exploit', 'non-trivial', 'bug', 'game', 'code', '(', 'see', 'video', 'link', ')', '.', 'possible', 'seemingly', 'nonsensical', 'series', 'input', 'could', 'trigger', 'bug', 'yet', 'discover', 'beat', 'game', 'way', '.', 'assume', 'full', 'game', 'source', 'code', ',', 'could', 'use', 'advantage', 'rule', 'large', 'subset', 'input', '?', 'certainly', 'press', 'button', '4', 'minute', 'would', 'beat', 'world', 'record', '.', 'curious', 'thought', ',', 'thanks', '!']","[[('fascinated', 'VBN')], [('watching', 'VBG')], [('progress', 'NN')], [('tool', 'NN')], [('assisted', 'VBN')], [('speedruns', 'NNS')], [('(', '(')], [('tas', 'NNS')], [(')', ')')], [('video', 'NN')], [('games', 'NNS')], [(',', ',')], [('specifically', 'RB')], [('super', 'NN')], [('mario', 'NN')], [('64.', 'CD')], [('last', 'JJ')], [('decade', 'NN')], [(',', ',')], [('found', 'NN')], [('countless', 'NN')], [('strategies', 'NNS')], [('exploits', 'NNS')], [('dramatically', 'RB')], [('shorten', 'NN')], [('time', 'NN')], [('beat', 'NN')], [('game', 'NN')], [('.', '.')], [('great', 'JJ')], [('video', 'NN')], [('summary', 'NN')], [('current', 'JJ')], [('progress', 'NN')], [('[', 'NN')], [(']', 'NN')], [('(', '(')], [(')', ')')], [('.', '.')], [('curious', 'JJ')], [('methods', 'NNS')], [('could', 'MD')], [('used', 'VBN')], [('find', 'VB')], [('optimal', 'JJ')], [('tas', 'NNS')], [('possible', 'JJ')], [('super', 'NN')], [('mario', 'NN')], [('64.', 'CD')], [('additionally', 'RB')], [(',', ',')], [('would', 'MD')], [('verification', 'NN')], [('record', 'NN')], [('work', 'NN')], [('.', '.')], [('thoughts', 'NNS')], [('.', '.')], [('since', 'IN')], [('game', 'NN')], [('completely', 'RB')], [('deterministic', 'JJ')], [(',', ',')], [('one', 'CD')], [('method', 'NN')], [('would', 'MD')], [('brute', 'NN')], [('force', 'NN')], [('every', 'DT')], [('possible', 'JJ')], [('combination', 'NN')], [('.', '.')], [('n64', 'NN')], [('controller', 'NN')], [('provides', 'VBZ')], [('32bit', 'CD')], [('integer', 'NN')], [('represent', 'NN')], [('state', 'NN')], [('buttons', 'NNS')], [('joystick', 'NN')], [('directions', 'NNS')], [('.', '.')], [('n64', 'NN')], [('allows', 'NNS')], [('30', 'CD')], [('inputs', 'NNS')], [('per', 'IN')], [('second', 'JJ')], [(',', ',')], [('second', 'JJ')], [('could', 'MD')], [('provide', 'NN')], [('(', '(')], [('2^32', 'CD')], [(')', ')')], [('^30', 'NN')], [('~10^289', 'NN')], [('combinations', 'NNS')], [('.', '.')], [('current', 'JJ')], [('record', 'NN')], [('4', 'CD')], [('minutes', 'NNS')], [('20', 'CD')], [('seconds', 'NNS')], [(',', ',')], [('must', 'MD')], [('initial', 'JJ')], [('upper', 'JJ')], [('bound', 'NN')], [('.', '.')], [('would', 'MD')], [('mean', 'NN')], [('would', 'MD')], [('search', 'NN')], [('10^249,600', 'CD')], [('possible', 'JJ')], [('runs', 'NNS')], [('(', '(')], [('incomprehensible', 'JJ')], [('number', 'NN')], [(')', ')')], [('.', '.')], [('since', 'IN')], [('goal', 'NN')], [('get', 'VB')], [('mario', 'NN')], [('stage', 'NN')], [('fast', 'NN')], [('possible', 'JJ')], [(',', ',')], [('could', 'MD')], [('assume', 'VB')], [('finding', 'VBG')], [('geometrically', 'RB')], [('optimal', 'JJ')], [('path', 'NN')], [('possible', 'JJ')], [('.', '.')], [('however', 'RB')], [(',', ',')], [('world', 'NN')], [('record', 'NN')], [('today', 'NN')], [('cleverly', 'RB')], [('exploits', 'NNS')], [('non-trivial', 'JJ')], [('bugs', 'NNS')], [('games', 'NNS')], [('code', 'NN')], [('(', '(')], [('see', 'VB')], [('video', 'NN')], [('link', 'NN')], [(')', ')')], [('.', '.')], [('possible', 'JJ')], [('seemingly', 'RB')], [('nonsensical', 'JJ')], [('series', 'NN')], [('inputs', 'NNS')], [('could', 'MD')], [('trigger', 'NN')], [('bug', 'NN')], [('yet', 'RB')], [('discovered', 'VBN')], [('beat', 'NN')], [('game', 'NN')], [('way', 'NN')], [('.', '.')], [('assuming', 'VBG')], [('full', 'JJ')], [('game', 'NN')], [('source', 'NN')], [('code', 'NN')], [(',', ',')], [('could', 'MD')], [('use', 'NN')], [('advantage', 'NN')], [('rule', 'NN')], [('large', 'JJ')], [('subset', 'NN')], [('inputs', 'NNS')], [('?', '.')], [('certainly', 'RB')], [('pressing', 'VBG')], [('buttons', 'NNS')], [('4', 'CD')], [('minutes', 'NNS')], [('would', 'MD')], [('beat', 'NN')], [('world', 'NN')], [('record', 'NN')], [('.', '.')], [('curious', 'JJ')], [('thoughts', 'NNS')], [(',', ',')], [('thanks', 'NNS')], [('!', '.')]]","fascinate watch progress tool assist speedruns ( ta ) video game , specifically super mario 64. last decade , found countless strategy exploit dramatically shorten time beat game . great video summary current progress [ ] ( ) . curious method could use find optimal ta possible super mario 64. additionally , would verification record work . thought . since game completely deterministic , one method would brute force every possible combination . n64 controller provide 32bit integer represent state button joystick direction . n64 allows 30 input per second , second could provide ( 2^32 ) ^30 ~10^289 combination . current record 4 minute 20 second , must initial upper bound . would mean would search 10^249,600 possible run ( incomprehensible number ) . since goal get mario stage fast possible , could assume find geometrically optimal path possible . however , world record today cleverly exploit non-trivial bug game code ( see video link ) . possible seemingly nonsensical series input could trigger bug yet discover beat game way . assume full game source code , could use advantage rule large subset input ? certainly press button 4 minute would beat world record . curious thought , thanks !",-1_abazbz2abz_2520_problem_use,4
69,sx86op,Formally proving that a quadratic function is in big theta(n^2),Help,3,0.64,computerscience,https://www.reddit.com/r/computerscience/comments/sx86op/formally_proving_that_a_quadratic_function_is_in/,2,"i am reading [introduction to algorithms](-3rd%20edition.pdf) for the first time and i am currently at section 3.1 where asymptotic notation is formally described. in the second to last paragraph of page 46, it is proven that any standard quadratic formula is an element of big theta(n^2 ). i am not going to copy/paste the paragraph here because of formatting issues.

i am very confused as to how the constants c1, c2, and n0 are calculated. why is c1 = a/4? and c2 7a/4? why would n0 = 2 * max(|b|/a, sqrt(|c|/a))?

i apologize if this is not the correct sub for this.",1645382791.0,"['reading', '[', 'introduction', 'algorithm', ']', '(', '-3rd', '%', '20edition.pdf', ')', 'first', 'time', 'currently', 'section', '3.1', 'asymptotic', 'notation', 'formally', 'described', '.', 'second', 'last', 'paragraph', 'page', '46', ',', 'proven', 'standard', 'quadratic', 'formula', 'element', 'big', 'theta', '(', 'n^2', ')', '.', 'go', 'copy/paste', 'paragraph', 'format', 'issue', '.', 'confuse', 'constant', 'c1', ',', 'c2', ',', 'n0', 'calculate', '.', 'c1', '=', 'a/4', '?', 'c2', '7a/4', '?', 'would', 'n0', '=', '2', '*', 'max', '(', '|b|/a', ',', 'sqrt', '(', '|c|/a', ')', ')', '?', 'apologize', 'correct', 'sub', '.']","[[('reading', 'NN')], [('[', 'NN')], [('introduction', 'NN')], [('algorithms', 'NN')], [(']', 'NN')], [('(', '(')], [('-3rd', 'NN')], [('%', 'NN')], [('20edition.pdf', 'CD')], [(')', ')')], [('first', 'RB')], [('time', 'NN')], [('currently', 'RB')], [('section', 'NN')], [('3.1', 'CD')], [('asymptotic', 'JJ')], [('notation', 'NN')], [('formally', 'RB')], [('described', 'NN')], [('.', '.')], [('second', 'JJ')], [('last', 'JJ')], [('paragraph', 'NN')], [('page', 'NN')], [('46', 'CD')], [(',', ',')], [('proven', 'NN')], [('standard', 'NN')], [('quadratic', 'JJ')], [('formula', 'NN')], [('element', 'NN')], [('big', 'JJ')], [('theta', 'NN')], [('(', '(')], [('n^2', 'NN')], [(')', ')')], [('.', '.')], [('going', 'VBG')], [('copy/paste', 'NN')], [('paragraph', 'NN')], [('formatting', 'VBG')], [('issues', 'NNS')], [('.', '.')], [('confused', 'VBN')], [('constants', 'NNS')], [('c1', 'NN')], [(',', ',')], [('c2', 'NN')], [(',', ',')], [('n0', 'NN')], [('calculated', 'VBN')], [('.', '.')], [('c1', 'NN')], [('=', 'NN')], [('a/4', 'NN')], [('?', '.')], [('c2', 'NN')], [('7a/4', 'CD')], [('?', '.')], [('would', 'MD')], [('n0', 'NN')], [('=', 'NN')], [('2', 'CD')], [('*', 'NN')], [('max', 'NN')], [('(', '(')], [('|b|/a', 'NN')], [(',', ',')], [('sqrt', 'NN')], [('(', '(')], [('|c|/a', 'NN')], [(')', ')')], [(')', ')')], [('?', '.')], [('apologize', 'VB')], [('correct', 'NN')], [('sub', 'NN')], [('.', '.')]]","reading [ introduction algorithm ] ( -3rd % 20edition.pdf ) first time currently section 3.1 asymptotic notation formally described . second last paragraph page 46 , proven standard quadratic formula element big theta ( n^2 ) . go copy/paste paragraph format issue . confuse constant c1 , c2 , n0 calculate . c1 = a/4 ? c2 7a/4 ? would n0 = 2 * max ( |b|/a , sqrt ( |c|/a ) ) ? apologize correct sub .",0_algorithm_time_node_bill,2
70,sx12tk,Who or What is Encrypting the Data?!!,,10,0.71,computerscience,https://www.reddit.com/r/computerscience/comments/sx12tk/who_or_what_is_encrypting_the_data/,10,"first year studying cs. currently working on a cyber security and encryption and it is driving me crazy as i cannot seem to get my head around the encryption process. 

what i understand:

sender a sends a document to recipient b. document starts in plaintext and is then converted to ciphertext using a public or private key. recipient b receives document as ciphertext which is then decrypted into plaintext using a public or private key.

what i do not understand:

of all the explanations i have read, they all say the sender encrypts the message. how? how does a sender physically turn plaintext into cipher text? by using a password? and if so is the password the key??  i' not satisfied with this as in the case of intsant messaging encryption, i know people are not inserting passwords every single time they receive a message. 

&#x200b;

my intuition tells me that its the os performing the encryption process, but if so, who determines whether symmetric or asymmetric encryption is used. i am so confused!!",1645363059.0,"['first', 'year', 'study', 'c', '.', 'currently', 'work', 'cyber', 'security', 'encryption', 'drive', 'crazy', 'seem', 'get', 'head', 'around', 'encryption', 'process', '.', 'understand', ':', 'sender', 'sends', 'document', 'recipient', 'b.', 'document', 'start', 'plaintext', 'convert', 'ciphertext', 'use', 'public', 'private', 'key', '.', 'recipient', 'b', 'receives', 'document', 'ciphertext', 'decrypt', 'plaintext', 'use', 'public', 'private', 'key', '.', 'understand', ':', 'explanation', 'read', ',', 'say', 'sender', 'encrypts', 'message', '.', '?', 'sender', 'physically', 'turn', 'plaintext', 'cipher', 'text', '?', 'use', 'password', '?', 'password', 'key', '?', '?', ""'"", 'satisfied', 'case', 'intsant', 'message', 'encryption', ',', 'know', 'people', 'insert', 'password', 'every', 'single', 'time', 'receive', 'message', '.', '&', '#', 'x200b', ';', 'intuition', 'tell', 'o', 'perform', 'encryption', 'process', ',', ',', 'determines', 'whether', 'symmetric', 'asymmetric', 'encryption', 'use', '.', 'confuse', '!', '!']","[[('first', 'RB')], [('year', 'NN')], [('studying', 'VBG')], [('cs', 'NN')], [('.', '.')], [('currently', 'RB')], [('working', 'VBG')], [('cyber', 'NN')], [('security', 'NN')], [('encryption', 'NN')], [('driving', 'VBG')], [('crazy', 'NN')], [('seem', 'NN')], [('get', 'VB')], [('head', 'NN')], [('around', 'IN')], [('encryption', 'NN')], [('process', 'NN')], [('.', '.')], [('understand', 'NN')], [(':', ':')], [('sender', 'NN')], [('sends', 'NNS')], [('document', 'NN')], [('recipient', 'NN')], [('b.', 'NN')], [('document', 'NN')], [('starts', 'NNS')], [('plaintext', 'NN')], [('converted', 'VBN')], [('ciphertext', 'NN')], [('using', 'VBG')], [('public', 'NN')], [('private', 'JJ')], [('key', 'NN')], [('.', '.')], [('recipient', 'NN')], [('b', 'NN')], [('receives', 'NNS')], [('document', 'NN')], [('ciphertext', 'NN')], [('decrypted', 'VBN')], [('plaintext', 'NN')], [('using', 'VBG')], [('public', 'NN')], [('private', 'JJ')], [('key', 'NN')], [('.', '.')], [('understand', 'NN')], [(':', ':')], [('explanations', 'NNS')], [('read', 'NN')], [(',', ',')], [('say', 'VB')], [('sender', 'NN')], [('encrypts', 'NNS')], [('message', 'NN')], [('.', '.')], [('?', '.')], [('sender', 'NN')], [('physically', 'RB')], [('turn', 'NN')], [('plaintext', 'NN')], [('cipher', 'NN')], [('text', 'NN')], [('?', '.')], [('using', 'VBG')], [('password', 'NN')], [('?', '.')], [('password', 'NN')], [('key', 'NN')], [('?', '.')], [('?', '.')], [(""'"", ""''"")], [('satisfied', 'JJ')], [('case', 'NN')], [('intsant', 'NN')], [('messaging', 'VBG')], [('encryption', 'NN')], [(',', ',')], [('know', 'VB')], [('people', 'NNS')], [('inserting', 'VBG')], [('passwords', 'NNS')], [('every', 'DT')], [('single', 'JJ')], [('time', 'NN')], [('receive', 'NN')], [('message', 'NN')], [('.', '.')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('intuition', 'NN')], [('tells', 'NNS')], [('os', 'NN')], [('performing', 'VBG')], [('encryption', 'NN')], [('process', 'NN')], [(',', ',')], [(',', ',')], [('determines', 'NNS')], [('whether', 'IN')], [('symmetric', 'NN')], [('asymmetric', 'NN')], [('encryption', 'NN')], [('used', 'VBN')], [('.', '.')], [('confused', 'VBN')], [('!', '.')], [('!', '.')]]","first year study c . currently work cyber security encryption drive crazy seem get head around encryption process . understand : sender sends document recipient b. document start plaintext convert ciphertext use public private key . recipient b receives document ciphertext decrypt plaintext use public private key . understand : explanation read , say sender encrypts message . ? sender physically turn plaintext cipher text ? use password ? password key ? ? ' satisfied case intsant message encryption , know people insert password every single time receive message . & # x200b ; intuition tell o perform encryption process , , determines whether symmetric asymmetric encryption use . confuse ! !",6_server_packet_key_hash,2
71,sx170q,Can I make dead state a final state(Theory of automata),,0,0.5,computerscience,https://www.reddit.com/r/computerscience/comments/sx170q/can_i_make_dead_state_a_final_statetheory_of/,2,"i was solving dfa through state transition diagrams and wanted to know if a dead state could be my final state?
also if anyone could help me finding the best way to learn this course
thanks",1645363444.0,"['solve', 'dfa', 'state', 'transition', 'diagram', 'want', 'know', 'dead', 'state', 'could', 'final', 'state', '?', 'also', 'anyone', 'could', 'help', 'find', 'best', 'way', 'learn', 'course', 'thanks']","[[('solving', 'VBG')], [('dfa', 'NN')], [('state', 'NN')], [('transition', 'NN')], [('diagrams', 'NNS')], [('wanted', 'VBD')], [('know', 'VB')], [('dead', 'JJ')], [('state', 'NN')], [('could', 'MD')], [('final', 'JJ')], [('state', 'NN')], [('?', '.')], [('also', 'RB')], [('anyone', 'NN')], [('could', 'MD')], [('help', 'NN')], [('finding', 'VBG')], [('best', 'JJS')], [('way', 'NN')], [('learn', 'NN')], [('course', 'NN')], [('thanks', 'NNS')]]",solve dfa state transition diagram want know dead state could final state ? also anyone could help find best way learn course thanks,7_tm_state_turing_universal,3
73,swfzw6,Best books for a college student switching to CS?,Advice,4,0.83,computerscience,https://www.reddit.com/r/computerscience/comments/swfzw6/best_books_for_a_college_student_switching_to_cs/,7,"hello all, my brother’s birthday is around the corner and he expressed to me that he would like some computer science books as a gift. he is a college student switching from the premed route to software engineering. 

i will be honest, i have no idea what kind of books i should look for as i myself am in the medical field and do not know much about the world of cs. any recommendations for good books for someone who does not have a cs background?",1645293924.0,"['hello', ',', 'brother', '’', 'birthday', 'around', 'corner', 'express', 'would', 'like', 'computer', 'science', 'book', 'gift', '.', 'college', 'student', 'switch', 'premed', 'route', 'software', 'engineering', '.', 'honest', ',', 'idea', 'kind', 'book', 'look', 'medical', 'field', 'know', 'much', 'world', 'c', '.', 'recommendation', 'good', 'book', 'someone', 'c', 'background', '?']","[[('hello', 'NN')], [(',', ',')], [('brother', 'NN')], [('’', 'NN')], [('birthday', 'NN')], [('around', 'IN')], [('corner', 'NN')], [('expressed', 'VBN')], [('would', 'MD')], [('like', 'IN')], [('computer', 'NN')], [('science', 'NN')], [('books', 'NNS')], [('gift', 'NN')], [('.', '.')], [('college', 'NN')], [('student', 'NN')], [('switching', 'VBG')], [('premed', 'VBN')], [('route', 'NN')], [('software', 'NN')], [('engineering', 'NN')], [('.', '.')], [('honest', 'NN')], [(',', ',')], [('idea', 'NN')], [('kind', 'NN')], [('books', 'NNS')], [('look', 'NN')], [('medical', 'JJ')], [('field', 'NN')], [('know', 'VB')], [('much', 'JJ')], [('world', 'NN')], [('cs', 'NN')], [('.', '.')], [('recommendations', 'NNS')], [('good', 'JJ')], [('books', 'NNS')], [('someone', 'NN')], [('cs', 'NN')], [('background', 'NN')], [('?', '.')]]","hello , brother ’ birthday around corner express would like computer science book gift . college student switch premed route software engineering . honest , idea kind book look medical field know much world c . recommendation good book someone c background ?",4_book_learn_computer_good,1
74,swe6id,Regarding Bostrom’s argument that we could be living in a Computer Simulation - what is the minimum size of machine that could be used to accurately simulate the Universe?,Discussion,6,0.75,computerscience,https://www.reddit.com/r/computerscience/comments/swe6id/regarding_bostroms_argument_that_we_could_be/,3,"the argument can be found here: [-argument.com/simulation.pdf](-argument.com/simulation.pdf) 

i appreciate that it does not require a full simulation of the entire universe, as stated in the paper, but it has has led me to wonder whether our universe is computationally efficient. that is, could we build an accurate simulation of it that is significantly smaller than the universe itself? 

if so, does this assume that we sacrifice ‘speed’ - i.e. does such a simulation necessarily run slower than the actual universe since we are using less matter to achieve a similar outcome?

i have no background in computing so perhaps the answer is obvious - either way look forward to your replies.",1645289041.0,"['argument', 'found', ':', '[', '-argument.com/simulation.pdf', ']', '(', '-argument.com/simulation.pdf', ')', 'appreciate', 'require', 'full', 'simulation', 'entire', 'universe', ',', 'state', 'paper', ',', 'lead', 'wonder', 'whether', 'universe', 'computationally', 'efficient', '.', ',', 'could', 'build', 'accurate', 'simulation', 'significantly', 'small', 'universe', '?', ',', 'assume', 'sacrifice', '‘', 'speed', '’', '-', 'i.e', '.', 'simulation', 'necessarily', 'run', 'slow', 'actual', 'universe', 'since', 'use', 'less', 'matter', 'achieve', 'similar', 'outcome', '?', 'background', 'compute', 'perhaps', 'answer', 'obvious', '-', 'either', 'way', 'look', 'forward', 'reply', '.']","[[('argument', 'NN')], [('found', 'NN')], [(':', ':')], [('[', 'NN')], [('-argument.com/simulation.pdf', 'NN')], [(']', 'NN')], [('(', '(')], [('-argument.com/simulation.pdf', 'NN')], [(')', ')')], [('appreciate', 'NN')], [('require', 'NN')], [('full', 'JJ')], [('simulation', 'NN')], [('entire', 'JJ')], [('universe', 'NN')], [(',', ',')], [('stated', 'VBN')], [('paper', 'NN')], [(',', ',')], [('led', 'VBN')], [('wonder', 'NN')], [('whether', 'IN')], [('universe', 'NN')], [('computationally', 'RB')], [('efficient', 'NN')], [('.', '.')], [(',', ',')], [('could', 'MD')], [('build', 'NN')], [('accurate', 'NN')], [('simulation', 'NN')], [('significantly', 'RB')], [('smaller', 'JJR')], [('universe', 'NN')], [('?', '.')], [(',', ',')], [('assume', 'VB')], [('sacrifice', 'NN')], [('‘', 'NN')], [('speed', 'NN')], [('’', 'NN')], [('-', ':')], [('i.e', 'NN')], [('.', '.')], [('simulation', 'NN')], [('necessarily', 'RB')], [('run', 'VB')], [('slower', 'JJR')], [('actual', 'JJ')], [('universe', 'NN')], [('since', 'IN')], [('using', 'VBG')], [('less', 'RBR')], [('matter', 'NN')], [('achieve', 'NN')], [('similar', 'JJ')], [('outcome', 'NN')], [('?', '.')], [('background', 'NN')], [('computing', 'VBG')], [('perhaps', 'RB')], [('answer', 'NN')], [('obvious', 'JJ')], [('-', ':')], [('either', 'DT')], [('way', 'NN')], [('look', 'NN')], [('forward', 'RB')], [('replies', 'NNS')], [('.', '.')]]","argument found : [ -argument.com/simulation.pdf ] ( -argument.com/simulation.pdf ) appreciate require full simulation entire universe , state paper , lead wonder whether universe computationally efficient . , could build accurate simulation significantly small universe ? , assume sacrifice ‘ speed ’ - i.e . simulation necessarily run slow actual universe since use less matter achieve similar outcome ? background compute perhaps answer obvious - either way look forward reply .",7_tm_state_turing_universal,3
75,svwgkv,Dr. Ian Cutress stepping away from Anandtech after 11 years,General,20,0.8,computerscience,https://www.reddit.com/r/computerscience/comments/svwgkv/dr_ian_cutress_stepping_away_from_anandtech_after/,4,[-from-there-to-here-and-beyond](-from-there-to-here-and-beyond),1645229479.0,"['[', '-from-there-to-here-and-beyond', ']', '(', '-from-there-to-here-and-beyond', ')']","[[('[', 'NN')], [('-from-there-to-here-and-beyond', 'NN')], [(']', 'NN')], [('(', '(')], [('-from-there-to-here-and-beyond', 'NN')], [(')', ')')]]",[ -from-there-to-here-and-beyond ] ( -from-there-to-here-and-beyond ),-1_abazbz2abz_2520_problem_use,5
77,svsx31,How is this problem called? Real-time reservation of chain of resources that depend on each other,Advice,9,0.77,computerscience,https://www.reddit.com/r/computerscience/comments/svsx31/how_is_this_problem_called_realtime_reservation/,14,"hi, i am unable to find name, therefor known solutions for problems like this:

* you want to travel from one end of the country to another by foot.
* each day you visit the neighboring city.
* during night you want to stay in hotel of given city (i want to maximize nights\_in\_hotel / total\_nights for entire route)
* route (set and order of cities you visit) does not matter (but would like to minimize this)

**question:** how to make chain of hotel reservations prior to the trip in real-time?because availability of hotel rooms in each city affects the planning of route and it changes in real-time.

currently i search for shortest route and in case, it consists of at least single night without reservation, i search for every possible alternative route that excludes given city. when i have all the alternatives, i rate them with the metrics that depends on reservation ratio and route length.problem is, that given approach is  unusable in real life because meanwhile availability of rooms might have changed.

is there any name for this kind of problem?

or maybe can you see solution for this? only one i can think of is to make reservations kind of ""one-by-one"" and cancel those unnecessary as path-finding performs backtracking.

edit: planning reminds me of traveling salesman problem but there is an extra struggle: the ""protocol"" for the reservations.",1645219661.0,"['hi', ',', 'unable', 'find', 'name', ',', 'therefor', 'know', 'solution', 'problem', 'like', ':', '*', 'want', 'travel', 'one', 'end', 'country', 'another', 'foot', '.', '*', 'day', 'visit', 'neighbor', 'city', '.', '*', 'night', 'want', 'stay', 'hotel', 'give', 'city', '(', 'want', 'maximize', 'nights\\_in\\_hotel', '/', 'total\\_nights', 'entire', 'route', ')', '*', 'route', '(', 'set', 'order', 'city', 'visit', ')', 'matter', '(', 'would', 'like', 'minimize', ')', '*', '*', 'question', ':', '*', '*', 'make', 'chain', 'hotel', 'reservation', 'prior', 'trip', 'real-time', '?', 'availability', 'hotel', 'room', 'city', 'affect', 'planning', 'route', 'change', 'real-time', '.', 'currently', 'search', 'shortest', 'route', 'case', ',', 'consists', 'least', 'single', 'night', 'without', 'reservation', ',', 'search', 'every', 'possible', 'alternative', 'route', 'excludes', 'give', 'city', '.', 'alternative', ',', 'rate', 'metric', 'depends', 'reservation', 'ratio', 'route', 'length.problem', ',', 'give', 'approach', 'unusable', 'real', 'life', 'meanwhile', 'availability', 'room', 'might', 'change', '.', 'name', 'kind', 'problem', '?', 'maybe', 'see', 'solution', '?', 'one', 'think', 'make', 'reservation', 'kind', '``', 'one-by-one', ""''"", 'cancel', 'unnecessary', 'path-finding', 'performs', 'backtracking', '.', 'edit', ':', 'planning', 'reminds', 'travel', 'salesman', 'problem', 'extra', 'struggle', ':', '``', 'protocol', ""''"", 'reservation', '.']","[[('hi', 'NN')], [(',', ',')], [('unable', 'JJ')], [('find', 'VB')], [('name', 'NN')], [(',', ',')], [('therefor', 'NN')], [('known', 'VBN')], [('solutions', 'NNS')], [('problems', 'NNS')], [('like', 'IN')], [(':', ':')], [('*', 'NN')], [('want', 'NN')], [('travel', 'NN')], [('one', 'CD')], [('end', 'NN')], [('country', 'NN')], [('another', 'DT')], [('foot', 'NN')], [('.', '.')], [('*', 'NN')], [('day', 'NN')], [('visit', 'NN')], [('neighboring', 'VBG')], [('city', 'NN')], [('.', '.')], [('*', 'NN')], [('night', 'NN')], [('want', 'NN')], [('stay', 'NN')], [('hotel', 'NN')], [('given', 'VBN')], [('city', 'NN')], [('(', '(')], [('want', 'NN')], [('maximize', 'VB')], [('nights\\_in\\_hotel', 'NN')], [('/', 'NN')], [('total\\_nights', 'NNS')], [('entire', 'JJ')], [('route', 'NN')], [(')', ')')], [('*', 'NN')], [('route', 'NN')], [('(', '(')], [('set', 'NN')], [('order', 'NN')], [('cities', 'NNS')], [('visit', 'NN')], [(')', ')')], [('matter', 'NN')], [('(', '(')], [('would', 'MD')], [('like', 'IN')], [('minimize', 'VB')], [(')', ')')], [('*', 'NN')], [('*', 'NN')], [('question', 'NN')], [(':', ':')], [('*', 'NN')], [('*', 'NN')], [('make', 'VB')], [('chain', 'NN')], [('hotel', 'NN')], [('reservations', 'NNS')], [('prior', 'RB')], [('trip', 'NN')], [('real-time', 'NN')], [('?', '.')], [('availability', 'NN')], [('hotel', 'NN')], [('rooms', 'NNS')], [('city', 'NN')], [('affects', 'NNS')], [('planning', 'NN')], [('route', 'NN')], [('changes', 'NNS')], [('real-time', 'NN')], [('.', '.')], [('currently', 'RB')], [('search', 'NN')], [('shortest', 'NN')], [('route', 'NN')], [('case', 'NN')], [(',', ',')], [('consists', 'NNS')], [('least', 'JJS')], [('single', 'JJ')], [('night', 'NN')], [('without', 'IN')], [('reservation', 'NN')], [(',', ',')], [('search', 'NN')], [('every', 'DT')], [('possible', 'JJ')], [('alternative', 'NN')], [('route', 'NN')], [('excludes', 'NNS')], [('given', 'VBN')], [('city', 'NN')], [('.', '.')], [('alternatives', 'NNS')], [(',', ',')], [('rate', 'NN')], [('metrics', 'NNS')], [('depends', 'NNS')], [('reservation', 'NN')], [('ratio', 'NN')], [('route', 'NN')], [('length.problem', 'NN')], [(',', ',')], [('given', 'VBN')], [('approach', 'NN')], [('unusable', 'JJ')], [('real', 'JJ')], [('life', 'NN')], [('meanwhile', 'RB')], [('availability', 'NN')], [('rooms', 'NNS')], [('might', 'MD')], [('changed', 'VBN')], [('.', '.')], [('name', 'NN')], [('kind', 'NN')], [('problem', 'NN')], [('?', '.')], [('maybe', 'RB')], [('see', 'VB')], [('solution', 'NN')], [('?', '.')], [('one', 'CD')], [('think', 'NN')], [('make', 'VB')], [('reservations', 'NNS')], [('kind', 'NN')], [('``', '``')], [('one-by-one', 'NN')], [(""''"", ""''"")], [('cancel', 'NN')], [('unnecessary', 'JJ')], [('path-finding', 'NN')], [('performs', 'NNS')], [('backtracking', 'NN')], [('.', '.')], [('edit', 'NN')], [(':', ':')], [('planning', 'NN')], [('reminds', 'NNS')], [('traveling', 'VBG')], [('salesman', 'NN')], [('problem', 'NN')], [('extra', 'JJ')], [('struggle', 'NN')], [(':', ':')], [('``', '``')], [('protocol', 'NN')], [(""''"", ""''"")], [('reservations', 'NNS')], [('.', '.')]]","hi , unable find name , therefor know solution problem like : * want travel one end country another foot . * day visit neighbor city . * night want stay hotel give city ( want maximize nights\_in\_hotel / total\_nights entire route ) * route ( set order city visit ) matter ( would like minimize ) * * question : * * make chain hotel reservation prior trip real-time ? availability hotel room city affect planning route change real-time . currently search shortest route case , consists least single night without reservation , search every possible alternative route excludes give city . alternative , rate metric depends reservation ratio route length.problem , give approach unusable real life meanwhile availability room might change . name kind problem ? maybe see solution ? one think make reservation kind `` one-by-one '' cancel unnecessary path-finding performs backtracking . edit : planning reminds travel salesman problem extra struggle : `` protocol '' reservation .",0_algorithm_time_node_bill,2
78,svkhpw,How is the uncertainty in probability distribution valuable in Shannon's entropy?,Help,10,0.79,computerscience,https://www.reddit.com/r/computerscience/comments/svkhpw/how_is_the_uncertainty_in_probability/,5,"i am trying to get my head around shannon's entropy.
while i understand the mathematics behind it , i am finding it difficult to understand how shannon's entropy becomes so important in information theory.

""shannon's  entropy  is  simply  the  ""amount  of information""  in  a  variable""
-

also how does it help in estimating the amount of  information in a variable?
and for that matter how is ""amount of information in a variable"" defined? is it the bits required to store the data in the variable or the amount of uncertainty/suprise it has?

please provide an analogy if possible.

i do not know if i have even asked right questions as i am all confused. as i have read and watched videos about it and it still confuses me. correct me if i am wrong.
thanks",1645197733.0,"['try', 'get', 'head', 'around', 'shannon', ""'s"", 'entropy', '.', 'understand', 'mathematics', 'behind', ',', 'find', 'difficult', 'understand', 'shannon', ""'s"", 'entropy', 'becomes', 'important', 'information', 'theory', '.', '``', 'shannon', ""'s"", 'entropy', 'simply', '``', 'amount', 'information', ""''"", 'variable', ""''"", '-', 'also', 'help', 'estimate', 'amount', 'information', 'variable', '?', 'matter', '``', 'amount', 'information', 'variable', ""''"", 'define', '?', 'bit', 'require', 'store', 'data', 'variable', 'amount', 'uncertainty/suprise', '?', 'please', 'provide', 'analogy', 'possible', '.', 'know', 'even', 'ask', 'right', 'question', 'confuse', '.', 'read', 'watch', 'video', 'still', 'confuses', '.', 'correct', 'wrong', '.', 'thanks']","[[('trying', 'VBG')], [('get', 'VB')], [('head', 'NN')], [('around', 'IN')], [('shannon', 'NN')], [(""'s"", 'POS')], [('entropy', 'NN')], [('.', '.')], [('understand', 'NN')], [('mathematics', 'NNS')], [('behind', 'IN')], [(',', ',')], [('finding', 'VBG')], [('difficult', 'JJ')], [('understand', 'NN')], [('shannon', 'NN')], [(""'s"", 'POS')], [('entropy', 'NN')], [('becomes', 'NNS')], [('important', 'JJ')], [('information', 'NN')], [('theory', 'NN')], [('.', '.')], [('``', '``')], [('shannon', 'NN')], [(""'s"", 'POS')], [('entropy', 'NN')], [('simply', 'RB')], [('``', '``')], [('amount', 'NN')], [('information', 'NN')], [(""''"", ""''"")], [('variable', 'JJ')], [(""''"", ""''"")], [('-', ':')], [('also', 'RB')], [('help', 'NN')], [('estimating', 'VBG')], [('amount', 'NN')], [('information', 'NN')], [('variable', 'JJ')], [('?', '.')], [('matter', 'NN')], [('``', '``')], [('amount', 'NN')], [('information', 'NN')], [('variable', 'JJ')], [(""''"", ""''"")], [('defined', 'VBN')], [('?', '.')], [('bits', 'NNS')], [('required', 'VBN')], [('store', 'NN')], [('data', 'NNS')], [('variable', 'JJ')], [('amount', 'NN')], [('uncertainty/suprise', 'NN')], [('?', '.')], [('please', 'NN')], [('provide', 'NN')], [('analogy', 'NN')], [('possible', 'JJ')], [('.', '.')], [('know', 'VB')], [('even', 'RB')], [('asked', 'VBN')], [('right', 'NN')], [('questions', 'NNS')], [('confused', 'VBN')], [('.', '.')], [('read', 'NN')], [('watched', 'VBN')], [('videos', 'NNS')], [('still', 'RB')], [('confuses', 'NNS')], [('.', '.')], [('correct', 'NN')], [('wrong', 'JJ')], [('.', '.')], [('thanks', 'NNS')]]","try get head around shannon 's entropy . understand mathematics behind , find difficult understand shannon 's entropy becomes important information theory . `` shannon 's entropy simply `` amount information '' variable '' - also help estimate amount information variable ? matter `` amount information variable '' define ? bit require store data variable amount uncertainty/suprise ? please provide analogy possible . know even ask right question confuse . read watch video still confuses . correct wrong . thanks",1_memory_byte_data_alignment,3
79,suu8cb,How do timer modules convey what time it is to microcontrollers?,,38,0.95,computerscience,https://www.reddit.com/r/computerscience/comments/suu8cb/how_do_timer_modules_convey_what_time_it_is_to/,5,is there a binary code for every single second or minute? sorry i do not know much yet and google keeps thinking i am talking about clock frequencies,1645118862.0,"['binary', 'code', 'every', 'single', 'second', 'minute', '?', 'sorry', 'know', 'much', 'yet', 'google', 'keep', 'think', 'talk', 'clock', 'frequency']","[[('binary', 'NN')], [('code', 'NN')], [('every', 'DT')], [('single', 'JJ')], [('second', 'JJ')], [('minute', 'NN')], [('?', '.')], [('sorry', 'NN')], [('know', 'VB')], [('much', 'JJ')], [('yet', 'RB')], [('google', 'NN')], [('keeps', 'NNS')], [('thinking', 'VBG')], [('talking', 'VBG')], [('clock', 'NN')], [('frequencies', 'NNS')]]",binary code every single second minute ? sorry know much yet google keep think talk clock frequency,-1_abazbz2abz_2520_problem_use,1
80,sud5zn,What generates a signal in a computer?,Help,13,0.76,computerscience,https://www.reddit.com/r/computerscience/comments/sud5zn/what_generates_a_signal_in_a_computer/,11,"i cannot wrap around my head how inputs are genereated in a computer with no human intervention given that its just a piece of metal, similar to an oven that needs manual input to flip the logical boolean; in my world, when the power is on, then the computer is on. how tf can it do all the things it does?

for communication sake, i am just your regular cs undergrad where the lowest-level component known to me is a cpu.

sorry for unclear wordings, my knowledge is limited in this field.",1645064002.0,"['wrap', 'around', 'head', 'input', 'genereated', 'computer', 'human', 'intervention', 'give', 'piece', 'metal', ',', 'similar', 'oven', 'need', 'manual', 'input', 'flip', 'logical', 'boolean', ';', 'world', ',', 'power', ',', 'computer', '.', 'tf', 'thing', '?', 'communication', 'sake', ',', 'regular', 'c', 'undergrad', 'lowest-level', 'component', 'know', 'cpu', '.', 'sorry', 'unclear', 'wording', ',', 'knowledge', 'limited', 'field', '.']","[[('wrap', 'NN')], [('around', 'IN')], [('head', 'NN')], [('inputs', 'NNS')], [('genereated', 'VBN')], [('computer', 'NN')], [('human', 'NN')], [('intervention', 'NN')], [('given', 'VBN')], [('piece', 'NN')], [('metal', 'NN')], [(',', ',')], [('similar', 'JJ')], [('oven', 'RB')], [('needs', 'NNS')], [('manual', 'JJ')], [('input', 'NN')], [('flip', 'NN')], [('logical', 'JJ')], [('boolean', 'NN')], [(';', ':')], [('world', 'NN')], [(',', ',')], [('power', 'NN')], [(',', ',')], [('computer', 'NN')], [('.', '.')], [('tf', 'NN')], [('things', 'NNS')], [('?', '.')], [('communication', 'NN')], [('sake', 'NN')], [(',', ',')], [('regular', 'JJ')], [('cs', 'NN')], [('undergrad', 'NN')], [('lowest-level', 'NN')], [('component', 'NN')], [('known', 'VBN')], [('cpu', 'NN')], [('.', '.')], [('sorry', 'NN')], [('unclear', 'JJ')], [('wordings', 'NNS')], [(',', ',')], [('knowledge', 'NN')], [('limited', 'JJ')], [('field', 'NN')], [('.', '.')]]","wrap around head input genereated computer human intervention give piece metal , similar oven need manual input flip logical boolean ; world , power , computer . tf thing ? communication sake , regular c undergrad lowest-level component know cpu . sorry unclear wording , knowledge limited field .",-1_abazbz2abz_2520_problem_use,2
81,su3ybe,Project ArXiv Citation Network,General,39,0.94,computerscience,https://www.reddit.com/r/computerscience/comments/su3ybe/project_arxiv_citation_network/,0,"hello everybody, 👨‍💻

here is a project i developed about arxiv citation network. i hope you find it useful for those who want to get more involved in the topic of graph networks. 🦾💻

link: [-arxiv-citation-network](-arxiv-citation-network)

&#x200b;

",1645039275.0,"['hello', 'everybody', ',', '👨\u200d💻', 'project', 'developed', 'arxiv', 'citation', 'network', '.', 'hope', 'find', 'useful', 'want', 'get', 'involve', 'topic', 'graph', 'network', '.', '\U0001f9be💻', 'link', ':', '[', '-arxiv-citation-network', ']', '(', '-arxiv-citation-network', ')', '&', '#', 'x200b', ';']","[[('hello', 'NN')], [('everybody', 'NN')], [(',', ',')], [('👨\u200d💻', 'NN')], [('project', 'NN')], [('developed', 'NN')], [('arxiv', 'NN')], [('citation', 'NN')], [('network', 'NN')], [('.', '.')], [('hope', 'NN')], [('find', 'VB')], [('useful', 'JJ')], [('want', 'NN')], [('get', 'VB')], [('involved', 'VBN')], [('topic', 'NN')], [('graph', 'NN')], [('networks', 'NNS')], [('.', '.')], [('\U0001f9be💻', 'NN')], [('link', 'NN')], [(':', ':')], [('[', 'NN')], [('-arxiv-citation-network', 'NN')], [(']', 'NN')], [('(', '(')], [('-arxiv-citation-network', 'NN')], [(')', ')')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')]]","hello everybody , 👨‍💻 project developed arxiv citation network . hope find useful want get involve topic graph network . 🦾💻 link : [ -arxiv-citation-network ] ( -arxiv-citation-network ) & # x200b ;",4_book_learn_computer_good,4
82,suff79,HPC and Deep learning oriented research,Discussion,6,0.88,computerscience,https://www.reddit.com/r/computerscience/comments/suff79/hpc_and_deep_learning_oriented_research/,3,"what are the possible direction available to do research on hpc, distributed parallel system and deep learning? trio.",1645070560.0,"['possible', 'direction', 'available', 'research', 'hpc', ',', 'distribute', 'parallel', 'system', 'deep', 'learn', '?', 'trio', '.']","[[('possible', 'JJ')], [('direction', 'NN')], [('available', 'JJ')], [('research', 'NN')], [('hpc', 'NN')], [(',', ',')], [('distributed', 'VBN')], [('parallel', 'NN')], [('system', 'NN')], [('deep', 'NN')], [('learning', 'VBG')], [('?', '.')], [('trio', 'NN')], [('.', '.')]]","possible direction available research hpc , distribute parallel system deep learn ? trio .",5_cpu_computer_run_process,4
83,su6m6s,Why doesn't Karatsuba multiplication break numbers into word size blocks?,,5,1.0,computerscience,https://www.reddit.com/r/computerscience/comments/su6m6s/why_doesnt_karatsuba_multiplication_break_numbers/,0,"so under the word ram model of computation the word size w is at least log of the input size and arithmetic operations on words takes constant time.  


so rather than dividing an n bit number into bits, why not divide the number into n/w bytes?",1645046068.0,"['word', 'ram', 'model', 'computation', 'word', 'size', 'w', 'least', 'log', 'input', 'size', 'arithmetic', 'operation', 'word', 'take', 'constant', 'time', '.', 'rather', 'divide', 'n', 'bit', 'number', 'bit', ',', 'divide', 'number', 'n/w', 'byte', '?']","[[('word', 'NN')], [('ram', 'NN')], [('model', 'NN')], [('computation', 'NN')], [('word', 'NN')], [('size', 'NN')], [('w', 'NN')], [('least', 'JJS')], [('log', 'NN')], [('input', 'NN')], [('size', 'NN')], [('arithmetic', 'JJ')], [('operations', 'NNS')], [('words', 'NNS')], [('takes', 'VBZ')], [('constant', 'JJ')], [('time', 'NN')], [('.', '.')], [('rather', 'RB')], [('dividing', 'VBG')], [('n', 'NN')], [('bit', 'NN')], [('number', 'NN')], [('bits', 'NNS')], [(',', ',')], [('divide', 'NN')], [('number', 'NN')], [('n/w', 'NN')], [('bytes', 'NNS')], [('?', '.')]]","word ram model computation word size w least log input size arithmetic operation word take constant time . rather divide n bit number bit , divide number n/w byte ?",1_memory_byte_data_alignment,3
84,suaahj,Documentaries/books on the history of computer science,Help,1,0.6,computerscience,https://www.reddit.com/r/computerscience/comments/suaahj/documentariesbooks_on_the_history_of_computer/,5,"hello redditors,

i would like to know if you can recommend any good documentaries about the history of computer science (especially ai). if not, books are my next choice. :)

thanks!",1645055757.0,"['hello', 'redditors', ',', 'would', 'like', 'know', 'recommend', 'good', 'documentary', 'history', 'computer', 'science', '(', 'especially', 'ai', ')', '.', ',', 'book', 'next', 'choice', '.', ':', ')', 'thanks', '!']","[[('hello', 'NN')], [('redditors', 'NNS')], [(',', ',')], [('would', 'MD')], [('like', 'IN')], [('know', 'VB')], [('recommend', 'NN')], [('good', 'JJ')], [('documentaries', 'NNS')], [('history', 'NN')], [('computer', 'NN')], [('science', 'NN')], [('(', '(')], [('especially', 'RB')], [('ai', 'NN')], [(')', ')')], [('.', '.')], [(',', ',')], [('books', 'NNS')], [('next', 'JJ')], [('choice', 'NN')], [('.', '.')], [(':', ':')], [(')', ')')], [('thanks', 'NNS')], [('!', '.')]]","hello redditors , would like know recommend good documentary history computer science ( especially ai ) . , book next choice . : ) thanks !",4_book_learn_computer_good,5
88,st08lc,How important is C language?,Discussion,69,0.9,computerscience,https://www.reddit.com/r/computerscience/comments/st08lc/how_important_is_c_language/,53,"i have watched some youtube channels talking about different programming languages. the channel ""computerphile"" made a few episodes about c language. in my university, a lot of senior professors emphasize the historical importance of c language. i belong to the millenial group, so i cannot understand why it is important. nowadays, some younger professors are teaching newer languages like python. some famous universities like mit use python as the learning material.

i have done a little research on c language. as far as i know, c language is like a foundation upon which many other languages were built. is it necessary for younger people to know c language?",1644922034.0,"['watch', 'youtube', 'channel', 'talk', 'different', 'program', 'language', '.', 'channel', '``', 'computerphile', ""''"", 'make', 'episode', 'c', 'language', '.', 'university', ',', 'lot', 'senior', 'professor', 'emphasize', 'historical', 'importance', 'c', 'language', '.', 'belong', 'millenial', 'group', ',', 'understand', 'important', '.', 'nowadays', ',', 'young', 'professor', 'teach', 'newer', 'language', 'like', 'python', '.', 'famous', 'university', 'like', 'mit', 'use', 'python', 'learn', 'material', '.', 'do', 'little', 'research', 'c', 'language', '.', 'far', 'know', ',', 'c', 'language', 'like', 'foundation', 'upon', 'many', 'language', 'built', '.', 'necessary', 'young', 'people', 'know', 'c', 'language', '?']","[[('watched', 'VBN')], [('youtube', 'NN')], [('channels', 'NNS')], [('talking', 'VBG')], [('different', 'JJ')], [('programming', 'VBG')], [('languages', 'NNS')], [('.', '.')], [('channel', 'NNS')], [('``', '``')], [('computerphile', 'NN')], [(""''"", ""''"")], [('made', 'VBN')], [('episodes', 'NNS')], [('c', 'NNS')], [('language', 'NN')], [('.', '.')], [('university', 'NN')], [(',', ',')], [('lot', 'NN')], [('senior', 'JJ')], [('professors', 'NNS')], [('emphasize', 'VB')], [('historical', 'JJ')], [('importance', 'NN')], [('c', 'NNS')], [('language', 'NN')], [('.', '.')], [('belong', 'NN')], [('millenial', 'NN')], [('group', 'NN')], [(',', ',')], [('understand', 'NN')], [('important', 'JJ')], [('.', '.')], [('nowadays', 'NNS')], [(',', ',')], [('younger', 'JJR')], [('professors', 'NNS')], [('teaching', 'VBG')], [('newer', 'NN')], [('languages', 'NNS')], [('like', 'IN')], [('python', 'NN')], [('.', '.')], [('famous', 'JJ')], [('universities', 'NNS')], [('like', 'IN')], [('mit', 'NN')], [('use', 'NN')], [('python', 'NN')], [('learning', 'VBG')], [('material', 'NN')], [('.', '.')], [('done', 'VBN')], [('little', 'JJ')], [('research', 'NN')], [('c', 'NNS')], [('language', 'NN')], [('.', '.')], [('far', 'RB')], [('know', 'VB')], [(',', ',')], [('c', 'NNS')], [('language', 'NN')], [('like', 'IN')], [('foundation', 'NN')], [('upon', 'IN')], [('many', 'JJ')], [('languages', 'NNS')], [('built', 'NN')], [('.', '.')], [('necessary', 'JJ')], [('younger', 'JJR')], [('people', 'NNS')], [('know', 'VB')], [('c', 'NNS')], [('language', 'NN')], [('?', '.')]]","watch youtube channel talk different program language . channel `` computerphile '' make episode c language . university , lot senior professor emphasize historical importance c language . belong millenial group , understand important . nowadays , young professor teach newer language like python . famous university like mit use python learn material . do little research c language . far know , c language like foundation upon many language built . necessary young people know c language ?",-1_abazbz2abz_2520_problem_use,4
89,stb8pj,Whats the optimal method to find the biggest subset of nodes on a graph which arent directly connected?,Help,14,0.95,computerscience,https://www.reddit.com/r/computerscience/comments/stb8pj/whats_the_optimal_method_to_find_the_biggest/,3,"i have been thinking about this for a while. i was thinking of giving each node a score of how many nodes it would prevent from being added and then doing calculations with that.

but what would be the optimal way to solve this?",1644953674.0,"['think', '.', 'think', 'give', 'node', 'score', 'many', 'node', 'would', 'prevent', 'add', 'calculation', '.', 'would', 'optimal', 'way', 'solve', '?']","[[('thinking', 'VBG')], [('.', '.')], [('thinking', 'VBG')], [('giving', 'VBG')], [('node', 'NN')], [('score', 'NN')], [('many', 'JJ')], [('nodes', 'NNS')], [('would', 'MD')], [('prevent', 'NN')], [('added', 'VBD')], [('calculations', 'NNS')], [('.', '.')], [('would', 'MD')], [('optimal', 'JJ')], [('way', 'NN')], [('solve', 'NN')], [('?', '.')]]",think . think give node score many node would prevent add calculation . would optimal way solve ?,0_algorithm_time_node_bill,3
90,stdryq,Karnaugh maps question,Help,5,0.74,computerscience,https://www.reddit.com/r/computerscience/comments/stdryq/karnaugh_maps_question/,2,"i am creating a k-map for an fsm, in the fsm i have some binary values that go unused: 110 and 111. when i am creating the k-map do i write these down as ""do not care"" or 0?

any help is appreciated :)",1644960245.0,"['create', 'k-map', 'fsm', ',', 'fsm', 'binary', 'value', 'go', 'unused', ':', '110', '111.', 'create', 'k-map', 'write', '``', 'care', ""''"", '0', '?', 'help', 'appreciate', ':', ')']","[[('creating', 'VBG')], [('k-map', 'NN')], [('fsm', 'NN')], [(',', ',')], [('fsm', 'NN')], [('binary', 'NN')], [('values', 'NNS')], [('go', 'VB')], [('unused', 'JJ')], [(':', ':')], [('110', 'CD')], [('111.', 'CD')], [('creating', 'VBG')], [('k-map', 'NN')], [('write', 'NN')], [('``', '``')], [('care', 'NN')], [(""''"", ""''"")], [('0', 'CD')], [('?', '.')], [('help', 'NN')], [('appreciated', 'VBN')], [(':', ':')], [(')', ')')]]","create k-map fsm , fsm binary value go unused : 110 111. create k-map write `` care '' 0 ? help appreciate : )",7_tm_state_turing_universal,3
91,ssv8zr,"If I make a GUI app in Python that connects to the database and builds a billing system, what architecture it is – tier-1, tier-2, or tier-3?",Help,6,0.71,computerscience,https://www.reddit.com/r/computerscience/comments/ssv8zr/if_i_make_a_gui_app_in_python_that_connects_to/,11,"if i make a gui app in python that connects to the database and builds a billing system, what architecture it is – tier-1, tier-2, or tier-3?",1644902294.0,"['make', 'gui', 'app', 'python', 'connects', 'database', 'build', 'billing', 'system', ',', 'architecture', '–', 'tier-1', ',', 'tier-2', ',', 'tier-3', '?']","[[('make', 'VB')], [('gui', 'NN')], [('app', 'NN')], [('python', 'NN')], [('connects', 'NNS')], [('database', 'NN')], [('builds', 'NNS')], [('billing', 'NN')], [('system', 'NN')], [(',', ',')], [('architecture', 'NN')], [('–', 'NN')], [('tier-1', 'NN')], [(',', ',')], [('tier-2', 'NN')], [(',', ',')], [('tier-3', 'NN')], [('?', '.')]]","make gui app python connects database build billing system , architecture – tier-1 , tier-2 , tier-3 ?",-1_abazbz2abz_2520_problem_use,3
92,st2hhc,Networking i/o,,0,0.33,computerscience,https://www.reddit.com/r/computerscience/comments/st2hhc/networking_io/,2,"hello,

i am having a great time working through computer networks: a top down approach, however one of my big questions is yet to be answered.

i understand how packets move through networks but not quite how a computer physically takes in a package on more of the hardware (i/o) side of things. e.g. when i get a http response from a web server, what part of my computer is responsible for ""accepting"" the packets, where do these packets go (some kind of buffer?). i have searched around and have not yet found anything satisfying; could anyone recommend me some resources to learn more about this.

thanks!",1644930205.0,"['hello', ',', 'great', 'time', 'work', 'computer', 'network', ':', 'top', 'approach', ',', 'however', 'one', 'big', 'question', 'yet', 'answer', '.', 'understand', 'packet', 'move', 'network', 'quite', 'computer', 'physically', 'take', 'package', 'hardware', '(', 'i/o', ')', 'side', 'thing', '.', 'e.g', '.', 'get', 'http', 'response', 'web', 'server', ',', 'part', 'computer', 'responsible', '``', 'accept', ""''"", 'packet', ',', 'packet', 'go', '(', 'kind', 'buffer', '?', ')', '.', 'search', 'around', 'yet', 'found', 'anything', 'satisfy', ';', 'could', 'anyone', 'recommend', 'resource', 'learn', '.', 'thanks', '!']","[[('hello', 'NN')], [(',', ',')], [('great', 'JJ')], [('time', 'NN')], [('working', 'VBG')], [('computer', 'NN')], [('networks', 'NNS')], [(':', ':')], [('top', 'NN')], [('approach', 'NN')], [(',', ',')], [('however', 'RB')], [('one', 'CD')], [('big', 'JJ')], [('questions', 'NNS')], [('yet', 'RB')], [('answered', 'VBN')], [('.', '.')], [('understand', 'NN')], [('packets', 'NNS')], [('move', 'NN')], [('networks', 'NNS')], [('quite', 'RB')], [('computer', 'NN')], [('physically', 'RB')], [('takes', 'VBZ')], [('package', 'NN')], [('hardware', 'NN')], [('(', '(')], [('i/o', 'NN')], [(')', ')')], [('side', 'NN')], [('things', 'NNS')], [('.', '.')], [('e.g', 'NN')], [('.', '.')], [('get', 'VB')], [('http', 'NN')], [('response', 'NN')], [('web', 'NN')], [('server', 'NN')], [(',', ',')], [('part', 'NN')], [('computer', 'NN')], [('responsible', 'JJ')], [('``', '``')], [('accepting', 'VBG')], [(""''"", ""''"")], [('packets', 'NNS')], [(',', ',')], [('packets', 'NNS')], [('go', 'VB')], [('(', '(')], [('kind', 'NN')], [('buffer', 'NN')], [('?', '.')], [(')', ')')], [('.', '.')], [('searched', 'VBN')], [('around', 'IN')], [('yet', 'RB')], [('found', 'NN')], [('anything', 'NN')], [('satisfying', 'VBG')], [(';', ':')], [('could', 'MD')], [('anyone', 'NN')], [('recommend', 'NN')], [('resources', 'NNS')], [('learn', 'NN')], [('.', '.')], [('thanks', 'NNS')], [('!', '.')]]","hello , great time work computer network : top approach , however one big question yet answer . understand packet move network quite computer physically take package hardware ( i/o ) side thing . e.g . get http response web server , part computer responsible `` accept '' packet , packet go ( kind buffer ? ) . search around yet found anything satisfy ; could anyone recommend resource learn . thanks !",6_server_packet_key_hash,3
94,ss0efg,What would you have wanted from a CS class in school that you never got?,Advice,109,1.0,computerscience,https://www.reddit.com/r/computerscience/comments/ss0efg/what_would_you_have_wanted_from_a_cs_class_in/,34,i recently became a temp computers teacher at my school (kids aged 10-14) after some staffing issues. my school admin asked me to take on the class given my personal experience in computer science although i am a english teacher now. i have complete creative control over the course material as the admin is just happy to have an adult in the room essentially. i feel like this is a once in a blue moon opportunity to give these kids a really special experience. so if you were a kid 10-14 and you had a computer science class…what would her the most beneficial or coolest thing your teacher could do or let you do?,1644808534.0,"['recently', 'become', 'temp', 'computer', 'teacher', 'school', '(', 'kid', 'age', '10-14', ')', 'staff', 'issue', '.', 'school', 'admin', 'ask', 'take', 'class', 'give', 'personal', 'experience', 'computer', 'science', 'although', 'english', 'teacher', '.', 'complete', 'creative', 'control', 'course', 'material', 'admin', 'happy', 'adult', 'room', 'essentially', '.', 'feel', 'like', 'blue', 'moon', 'opportunity', 'give', 'kid', 'really', 'special', 'experience', '.', 'kid', '10-14', 'computer', 'science', 'class…what', 'would', 'beneficial', 'coolest', 'thing', 'teacher', 'could', 'let', '?']","[[('recently', 'RB')], [('became', 'VBD')], [('temp', 'NN')], [('computers', 'NNS')], [('teacher', 'NN')], [('school', 'NN')], [('(', '(')], [('kids', 'NNS')], [('aged', 'VBN')], [('10-14', 'JJ')], [(')', ')')], [('staffing', 'VBG')], [('issues', 'NNS')], [('.', '.')], [('school', 'NN')], [('admin', 'NN')], [('asked', 'VBN')], [('take', 'VB')], [('class', 'NN')], [('given', 'VBN')], [('personal', 'JJ')], [('experience', 'NN')], [('computer', 'NN')], [('science', 'NN')], [('although', 'IN')], [('english', 'JJ')], [('teacher', 'NN')], [('.', '.')], [('complete', 'JJ')], [('creative', 'JJ')], [('control', 'NN')], [('course', 'NN')], [('material', 'NN')], [('admin', 'NN')], [('happy', 'JJ')], [('adult', 'NN')], [('room', 'NN')], [('essentially', 'RB')], [('.', '.')], [('feel', 'NN')], [('like', 'IN')], [('blue', 'NN')], [('moon', 'NN')], [('opportunity', 'NN')], [('give', 'VB')], [('kids', 'NNS')], [('really', 'RB')], [('special', 'JJ')], [('experience', 'NN')], [('.', '.')], [('kid', 'NN')], [('10-14', 'JJ')], [('computer', 'NN')], [('science', 'NN')], [('class…what', 'NN')], [('would', 'MD')], [('beneficial', 'JJ')], [('coolest', 'NN')], [('thing', 'NN')], [('teacher', 'NN')], [('could', 'MD')], [('let', 'VB')], [('?', '.')]]",recently become temp computer teacher school ( kid age 10-14 ) staff issue . school admin ask take class give personal experience computer science although english teacher . complete creative control course material admin happy adult room essentially . feel like blue moon opportunity give kid really special experience . kid 10-14 computer science class…what would beneficial coolest thing teacher could let ?,2_computer_learn_science_study,4
95,ssagax,Do programmers spend a lot of time on setting up a new project folder structure?,,6,0.69,computerscience,https://www.reddit.com/r/computerscience/comments/ssagax/do_programmers_spend_a_lot_of_time_on_setting_up/,6,"when you start a new project, usually you will have some logical project structure. for example, you might want to put all your entities in one folder and common methods in a different folder. you will need a structure that makes managing the project files easier. do programmers spend a lot of time setting up a new project structure? i do not remember reading this anywhere during my academic years. but recently i personally find that i spend time setting my project structure. is it a common problem or is it just me?",1644844837.0,"['start', 'new', 'project', ',', 'usually', 'logical', 'project', 'structure', '.', 'example', ',', 'might', 'want', 'put', 'entity', 'one', 'folder', 'common', 'method', 'different', 'folder', '.', 'need', 'structure', 'make', 'manage', 'project', 'file', 'easy', '.', 'programmer', 'spend', 'lot', 'time', 'set', 'new', 'project', 'structure', '?', 'remember', 'reading', 'anywhere', 'academic', 'year', '.', 'recently', 'personally', 'find', 'spend', 'time', 'set', 'project', 'structure', '.', 'common', 'problem', '?']","[[('start', 'NN')], [('new', 'JJ')], [('project', 'NN')], [(',', ',')], [('usually', 'RB')], [('logical', 'JJ')], [('project', 'NN')], [('structure', 'NN')], [('.', '.')], [('example', 'NN')], [(',', ',')], [('might', 'MD')], [('want', 'NN')], [('put', 'NN')], [('entities', 'NNS')], [('one', 'CD')], [('folder', 'NN')], [('common', 'JJ')], [('methods', 'NNS')], [('different', 'JJ')], [('folder', 'NN')], [('.', '.')], [('need', 'NN')], [('structure', 'NN')], [('makes', 'VBZ')], [('managing', 'VBG')], [('project', 'NN')], [('files', 'NNS')], [('easier', 'JJR')], [('.', '.')], [('programmers', 'NNS')], [('spend', 'NN')], [('lot', 'NN')], [('time', 'NN')], [('setting', 'VBG')], [('new', 'JJ')], [('project', 'NN')], [('structure', 'NN')], [('?', '.')], [('remember', 'VB')], [('reading', 'NN')], [('anywhere', 'RB')], [('academic', 'JJ')], [('years', 'NNS')], [('.', '.')], [('recently', 'RB')], [('personally', 'RB')], [('find', 'VB')], [('spend', 'NN')], [('time', 'NN')], [('setting', 'VBG')], [('project', 'NN')], [('structure', 'NN')], [('.', '.')], [('common', 'JJ')], [('problem', 'NN')], [('?', '.')]]","start new project , usually logical project structure . example , might want put entity one folder common method different folder . need structure make manage project file easy . programmer spend lot time set new project structure ? remember reading anywhere academic year . recently personally find spend time set project structure . common problem ?",-1_abazbz2abz_2520_problem_use,3
96,sspvav,The story of how was created the Brain-computer interface,,0,0.33,computerscience,https://www.reddit.com/r/computerscience/comments/sspvav/the_story_of_how_was_created_the_braincomputer/,2,[-story-of-how-was-created-the-brain-computer-interface-ea922172fb78](-story-of-how-was-created-the-brain-computer-interface-ea922172fb78),1644885844.0,"['[', '-story-of-how-was-created-the-brain-computer-interface-ea922172fb78', ']', '(', '-story-of-how-was-created-the-brain-computer-interface-ea922172fb78', ')']","[[('[', 'NN')], [('-story-of-how-was-created-the-brain-computer-interface-ea922172fb78', 'NN')], [(']', 'NN')], [('(', '(')], [('-story-of-how-was-created-the-brain-computer-interface-ea922172fb78', 'NN')], [(')', ')')]]",[ -story-of-how-was-created-the-brain-computer-interface-ea922172fb78 ] ( -story-of-how-was-created-the-brain-computer-interface-ea922172fb78 ),-1_abazbz2abz_2520_problem_use,4
99,srw89o,"In the 2012 post linked below, N. J. Wildberger criticized a common definition of the term “function”. What is it that, according to his post, endangers that definition of “function”?",Help,1,0.57,computerscience,https://www.reddit.com/r/computerscience/comments/srw89o/in_the_2012_post_linked_below_n_j_wildberger/,1,"-problem-of-rigour-in-modern-mathematics/

he discusses the problems with the definition in the ninth paragraph.

what is it that, according to him, endangers the common definition?

is it the way that one of many phenomena can be meant with the term “function”?

or is it the fact that there are different ways of speaking about the same phenomenon (i mean the phenomenon of a function) that endangers this?

if he means that the latter of these is what endangers the common definition, then “defines the same ‘function’ as your program”, in the last sentence of that ninth paragraph, should be replaced with “defines ‘function’ in the same way as your program”…but i am not an expert.)",1644795197.0,"['-problem-of-rigour-in-modern-mathematics/', 'discus', 'problem', 'definition', 'ninth', 'paragraph', '.', ',', 'accord', ',', 'endangers', 'common', 'definition', '?', 'way', 'one', 'many', 'phenomenon', 'meant', 'term', '“', 'function', '”', '?', 'fact', 'different', 'way', 'speak', 'phenomenon', '(', 'mean', 'phenomenon', 'function', ')', 'endangers', '?', 'mean', 'latter', 'endangers', 'common', 'definition', ',', '“', 'defines', '‘', 'function', '’', 'program', '”', ',', 'last', 'sentence', 'ninth', 'paragraph', ',', 'replace', '“', 'defines', '‘', 'function', '’', 'way', 'program', '”', '…but', 'expert', '.', ')']","[[('-problem-of-rigour-in-modern-mathematics/', 'NN')], [('discusses', 'NNS')], [('problems', 'NNS')], [('definition', 'NN')], [('ninth', 'JJ')], [('paragraph', 'NN')], [('.', '.')], [(',', ',')], [('according', 'VBG')], [(',', ',')], [('endangers', 'NNS')], [('common', 'JJ')], [('definition', 'NN')], [('?', '.')], [('way', 'NN')], [('one', 'CD')], [('many', 'JJ')], [('phenomena', 'NN')], [('meant', 'NN')], [('term', 'NN')], [('“', 'NN')], [('function', 'NN')], [('”', 'NN')], [('?', '.')], [('fact', 'NN')], [('different', 'JJ')], [('ways', 'NNS')], [('speaking', 'VBG')], [('phenomenon', 'NN')], [('(', '(')], [('mean', 'NN')], [('phenomenon', 'NN')], [('function', 'NN')], [(')', ')')], [('endangers', 'NNS')], [('?', '.')], [('means', 'NNS')], [('latter', 'NN')], [('endangers', 'NNS')], [('common', 'JJ')], [('definition', 'NN')], [(',', ',')], [('“', 'NN')], [('defines', 'NNS')], [('‘', 'NN')], [('function', 'NN')], [('’', 'NN')], [('program', 'NN')], [('”', 'NN')], [(',', ',')], [('last', 'JJ')], [('sentence', 'NN')], [('ninth', 'JJ')], [('paragraph', 'NN')], [(',', ',')], [('replaced', 'VBN')], [('“', 'NN')], [('defines', 'NNS')], [('‘', 'NN')], [('function', 'NN')], [('’', 'NN')], [('way', 'NN')], [('program', 'NN')], [('”', 'NN')], [('…but', 'NN')], [('expert', 'NN')], [('.', '.')], [(')', ')')]]","-problem-of-rigour-in-modern-mathematics/ discus problem definition ninth paragraph . , accord , endangers common definition ? way one many phenomenon meant term “ function ” ? fact different way speak phenomenon ( mean phenomenon function ) endangers ? mean latter endangers common definition , “ defines ‘ function ’ program ” , last sentence ninth paragraph , replace “ defines ‘ function ’ way program ” …but expert . )",-1_abazbz2abz_2520_problem_use,3
100,srqmpy,How do you calculate a block-cut tree?,Help,4,0.75,computerscience,https://www.reddit.com/r/computerscience/comments/srqmpy/how_do_you_calculate_a_blockcut_tree/,1,"basically, given a graph, how do you split it into a block cut tree? i know how to find cut vertices, but am stumped on finding blocks, at least in a complexity less than o(n^2).

backstory:

recently, i was in a programming contest. (it is over now).

the last question was along the lines of 'there is a graph, find  which node, when removed, will make the graph the least connected' (where connectedness is the amount of node pairs who are connected). in the start, there are at most 10000 nodes and 200000  edges, and the graph is initially connected. 

the case for graphs is easy (count how many nodes are at each edge for all nodes in o(n+e), and for each edge add up n(n+1)/2 for each edge, for a total complexity of o(n+e).

therefore, i realized that a bct would be a good solution for the general case. i am mostly asking this question now because i was unable to find any resource during the competition, and am curious for my own learning.",1644780266.0,"['basically', ',', 'give', 'graph', ',', 'split', 'block', 'cut', 'tree', '?', 'know', 'find', 'cut', 'vertex', ',', 'stump', 'find', 'block', ',', 'least', 'complexity', 'less', '(', 'n^2', ')', '.', 'backstory', ':', 'recently', ',', 'program', 'contest', '.', '(', ')', '.', 'last', 'question', 'along', 'line', ""'there"", 'graph', ',', 'find', 'node', ',', 'remove', ',', 'make', 'graph', 'least', 'connect', ""'"", '(', 'connectedness', 'amount', 'node', 'pair', 'connect', ')', '.', 'start', ',', '10000', 'node', '200000', 'edge', ',', 'graph', 'initially', 'connect', '.', 'case', 'graph', 'easy', '(', 'count', 'many', 'node', 'edge', 'node', '(', 'n+e', ')', ',', 'edge', 'add', 'n', '(', 'n+1', ')', '/2', 'edge', ',', 'total', 'complexity', '(', 'n+e', ')', '.', 'therefore', ',', 'realize', 'bct', 'would', 'good', 'solution', 'general', 'case', '.', 'mostly', 'ask', 'question', 'unable', 'find', 'resource', 'competition', ',', 'curious', 'learn', '.']","[[('basically', 'RB')], [(',', ',')], [('given', 'VBN')], [('graph', 'NN')], [(',', ',')], [('split', 'NN')], [('block', 'NN')], [('cut', 'NN')], [('tree', 'NN')], [('?', '.')], [('know', 'VB')], [('find', 'VB')], [('cut', 'NN')], [('vertices', 'NNS')], [(',', ',')], [('stumped', 'VBD')], [('finding', 'VBG')], [('blocks', 'NNS')], [(',', ',')], [('least', 'JJS')], [('complexity', 'NN')], [('less', 'RBR')], [('(', '(')], [('n^2', 'NN')], [(')', ')')], [('.', '.')], [('backstory', 'NN')], [(':', ':')], [('recently', 'RB')], [(',', ',')], [('programming', 'VBG')], [('contest', 'NN')], [('.', '.')], [('(', '(')], [(')', ')')], [('.', '.')], [('last', 'JJ')], [('question', 'NN')], [('along', 'IN')], [('lines', 'NNS')], [(""'there"", 'RB')], [('graph', 'NN')], [(',', ',')], [('find', 'VB')], [('node', 'NN')], [(',', ',')], [('removed', 'VBN')], [(',', ',')], [('make', 'VB')], [('graph', 'NN')], [('least', 'JJS')], [('connected', 'VBN')], [(""'"", ""''"")], [('(', '(')], [('connectedness', 'NN')], [('amount', 'NN')], [('node', 'NN')], [('pairs', 'NNS')], [('connected', 'VBN')], [(')', ')')], [('.', '.')], [('start', 'NN')], [(',', ',')], [('10000', 'CD')], [('nodes', 'NNS')], [('200000', 'CD')], [('edges', 'NNS')], [(',', ',')], [('graph', 'NN')], [('initially', 'RB')], [('connected', 'VBN')], [('.', '.')], [('case', 'NN')], [('graphs', 'NN')], [('easy', 'JJ')], [('(', '(')], [('count', 'NN')], [('many', 'JJ')], [('nodes', 'NNS')], [('edge', 'NN')], [('nodes', 'NNS')], [('(', '(')], [('n+e', 'NN')], [(')', ')')], [(',', ',')], [('edge', 'NN')], [('add', 'VB')], [('n', 'NN')], [('(', '(')], [('n+1', 'NN')], [(')', ')')], [('/2', 'NN')], [('edge', 'NN')], [(',', ',')], [('total', 'JJ')], [('complexity', 'NN')], [('(', '(')], [('n+e', 'NN')], [(')', ')')], [('.', '.')], [('therefore', 'RB')], [(',', ',')], [('realized', 'VBN')], [('bct', 'NN')], [('would', 'MD')], [('good', 'JJ')], [('solution', 'NN')], [('general', 'JJ')], [('case', 'NN')], [('.', '.')], [('mostly', 'RB')], [('asking', 'VBG')], [('question', 'NN')], [('unable', 'JJ')], [('find', 'VB')], [('resource', 'NN')], [('competition', 'NN')], [(',', ',')], [('curious', 'JJ')], [('learning', 'VBG')], [('.', '.')]]","basically , give graph , split block cut tree ? know find cut vertex , stump find block , least complexity less ( n^2 ) . backstory : recently , program contest . ( ) . last question along line 'there graph , find node , remove , make graph least connect ' ( connectedness amount node pair connect ) . start , 10000 node 200000 edge , graph initially connect . case graph easy ( count many node edge node ( n+e ) , edge add n ( n+1 ) /2 edge , total complexity ( n+e ) . therefore , realize bct would good solution general case . mostly ask question unable find resource competition , curious learn .",0_algorithm_time_node_bill,2
101,sraf70,Want to learn how to implement relational databases,,39,0.91,computerscience,https://www.reddit.com/r/computerscience/comments/sraf70/want_to_learn_how_to_implement_relational/,8,"i did my undergrad in comp sci a couple of decades ago and i would like to refresh how relational databases are implemented. i mean how to write a query optimizer/executor, translating sql to relational algebra (not necessarily the parser part), how to use b-trees for storage, etc.

as far as i can tell, i would have to get a text book for this. however, most of the text books seem to cover everything from how to design a set of tables for an online store to protecting against sql injections. it is hard to tell which books are good. most such books have terrible reviews because undergrads hate their classes.

i want a resource which seriously covers the actual implementation. willing to get multiple books if necessary. i would love something modern, great if it covers columnar databases, such as monetdb/c-store.

ideally, i would like to implement a basic version a database, the way there are some toy operating systems which are only a few thousand lines of code.

i would love any pointers!",1644727787.0,"['undergrad', 'comp', 'sci', 'couple', 'decade', 'ago', 'would', 'like', 'refresh', 'relational', 'database', 'implement', '.', 'mean', 'write', 'query', 'optimizer/executor', ',', 'translate', 'sql', 'relational', 'algebra', '(', 'necessarily', 'parser', 'part', ')', ',', 'use', 'b-trees', 'storage', ',', 'etc', '.', 'far', 'tell', ',', 'would', 'get', 'text', 'book', '.', 'however', ',', 'text', 'book', 'seem', 'cover', 'everything', 'design', 'set', 'table', 'online', 'store', 'protect', 'sql', 'injection', '.', 'hard', 'tell', 'book', 'good', '.', 'book', 'terrible', 'review', 'undergrad', 'hate', 'class', '.', 'want', 'resource', 'seriously', 'cover', 'actual', 'implementation', '.', 'willing', 'get', 'multiple', 'book', 'necessary', '.', 'would', 'love', 'something', 'modern', ',', 'great', 'cover', 'columnar', 'database', ',', 'monetdb/c-store', '.', 'ideally', ',', 'would', 'like', 'implement', 'basic', 'version', 'database', ',', 'way', 'toy', 'operating', 'system', 'thousand', 'line', 'code', '.', 'would', 'love', 'pointer', '!']","[[('undergrad', 'NN')], [('comp', 'NN')], [('sci', 'NN')], [('couple', 'NN')], [('decades', 'NNS')], [('ago', 'RB')], [('would', 'MD')], [('like', 'IN')], [('refresh', 'NN')], [('relational', 'NN')], [('databases', 'NNS')], [('implemented', 'VBN')], [('.', '.')], [('mean', 'NN')], [('write', 'NN')], [('query', 'NN')], [('optimizer/executor', 'NN')], [(',', ',')], [('translating', 'VBG')], [('sql', 'NN')], [('relational', 'NN')], [('algebra', 'NN')], [('(', '(')], [('necessarily', 'RB')], [('parser', 'NN')], [('part', 'NN')], [(')', ')')], [(',', ',')], [('use', 'NN')], [('b-trees', 'NNS')], [('storage', 'NN')], [(',', ',')], [('etc', 'NN')], [('.', '.')], [('far', 'RB')], [('tell', 'NN')], [(',', ',')], [('would', 'MD')], [('get', 'VB')], [('text', 'NN')], [('book', 'NN')], [('.', '.')], [('however', 'RB')], [(',', ',')], [('text', 'NN')], [('books', 'NNS')], [('seem', 'NN')], [('cover', 'NN')], [('everything', 'NN')], [('design', 'NN')], [('set', 'NN')], [('tables', 'NNS')], [('online', 'NN')], [('store', 'NN')], [('protecting', 'VBG')], [('sql', 'NN')], [('injections', 'NNS')], [('.', '.')], [('hard', 'JJ')], [('tell', 'NN')], [('books', 'NNS')], [('good', 'JJ')], [('.', '.')], [('books', 'NNS')], [('terrible', 'JJ')], [('reviews', 'NNS')], [('undergrads', 'NNS')], [('hate', 'NN')], [('classes', 'NNS')], [('.', '.')], [('want', 'NN')], [('resource', 'NN')], [('seriously', 'RB')], [('covers', 'NNS')], [('actual', 'JJ')], [('implementation', 'NN')], [('.', '.')], [('willing', 'JJ')], [('get', 'VB')], [('multiple', 'NN')], [('books', 'NNS')], [('necessary', 'JJ')], [('.', '.')], [('would', 'MD')], [('love', 'NN')], [('something', 'NN')], [('modern', 'JJ')], [(',', ',')], [('great', 'JJ')], [('covers', 'NNS')], [('columnar', 'NN')], [('databases', 'NNS')], [(',', ',')], [('monetdb/c-store', 'NN')], [('.', '.')], [('ideally', 'RB')], [(',', ',')], [('would', 'MD')], [('like', 'IN')], [('implement', 'NN')], [('basic', 'JJ')], [('version', 'NN')], [('database', 'NN')], [(',', ',')], [('way', 'NN')], [('toy', 'NN')], [('operating', 'NN')], [('systems', 'NNS')], [('thousand', 'NN')], [('lines', 'NNS')], [('code', 'NN')], [('.', '.')], [('would', 'MD')], [('love', 'NN')], [('pointers', 'NNS')], [('!', '.')]]","undergrad comp sci couple decade ago would like refresh relational database implement . mean write query optimizer/executor , translate sql relational algebra ( necessarily parser part ) , use b-trees storage , etc . far tell , would get text book . however , text book seem cover everything design set table online store protect sql injection . hard tell book good . book terrible review undergrad hate class . want resource seriously cover actual implementation . willing get multiple book necessary . would love something modern , great cover columnar database , monetdb/c-store . ideally , would like implement basic version database , way toy operating system thousand line code . would love pointer !",4_book_learn_computer_good,3
102,srsbj1,Kruskal's Algorithm produces connected component,Help,0,0.5,computerscience,https://www.reddit.com/r/computerscience/comments/srsbj1/kruskals_algorithm_produces_connected_component/,1,"i am trying to understand the proof of kruskal algorithm. i understood that it cann't have a cycle but it not at all intuitive that its will be connected. here is is a explanation from wikipedia but i am unable to get it



can anyone please explain it.  
thanks  


wikipedia link -> [\_algorithm#proof\_of\_correctness](#proof_of_correctness)",1644784638.0,"['try', 'understand', 'proof', 'kruskal', 'algorithm', '.', 'understood', ""n't"", 'cycle', 'intuitive', 'connect', '.', 'explanation', 'wikipedia', 'unable', 'get', 'anyone', 'please', 'explain', '.', 'thanks', 'wikipedia', 'link', '-', '>', '[', '\\_algorithm', '#', 'proof\\_of\\_correctness', ']', '(', '#', 'proof_of_correctness', ')']","[[('trying', 'VBG')], [('understand', 'NN')], [('proof', 'NN')], [('kruskal', 'NN')], [('algorithm', 'NN')], [('.', '.')], [('understood', 'NN')], [(""n't"", 'RB')], [('cycle', 'NN')], [('intuitive', 'JJ')], [('connected', 'VBN')], [('.', '.')], [('explanation', 'NN')], [('wikipedia', 'NN')], [('unable', 'JJ')], [('get', 'VB')], [('anyone', 'NN')], [('please', 'NN')], [('explain', 'NN')], [('.', '.')], [('thanks', 'NNS')], [('wikipedia', 'NN')], [('link', 'NN')], [('-', ':')], [('>', 'NN')], [('[', 'NN')], [('\\_algorithm', 'NN')], [('#', '#')], [('proof\\_of\\_correctness', 'NN')], [(']', 'NN')], [('(', '(')], [('#', '#')], [('proof_of_correctness', 'NN')], [(')', ')')]]",try understand proof kruskal algorithm . understood n't cycle intuitive connect . explanation wikipedia unable get anyone please explain . thanks wikipedia link - > [ \_algorithm # proof\_of\_correctness ] ( # proof_of_correctness ),0_algorithm_time_node_bill,2
103,srbdx2,What is the path to self learning software engineering,,3,0.64,computerscience,https://www.reddit.com/r/computerscience/comments/srbdx2/what_is_the_path_to_self_learning_software/,2,"what is the path to go self-taught route of learning computer science and trying to be a software engineer?

&#x200b;

question is essentially in the title, but i will expand further here. i am trying to learn how to go learn computer science and eventually become a software developer. i do not care how long it takes, but ideally, i am trying to avoid the bootcamp and as well as going back to school. i would like to do this for fun, not for a job, so thankfully, i have the time and the leisure to practice as i please. that being said, i have been watching hours upon hours of computer programming language, python and javascript.   


aside from this, what is the best way to put into practice what i have learned? for those that go self-taught, what are you supposed to do? am i just supposed to learn all the languages? how do i build a website?

what githubs are there for walking me through the process? i would like to so side gigs here and there. thanks.",1644731140.0,"['path', 'go', 'self-taught', 'route', 'learn', 'computer', 'science', 'try', 'software', 'engineer', '?', '&', '#', 'x200b', ';', 'question', 'essentially', 'title', ',', 'expand', '.', 'try', 'learn', 'go', 'learn', 'computer', 'science', 'eventually', 'become', 'software', 'developer', '.', 'care', 'long', 'take', ',', 'ideally', ',', 'try', 'avoid', 'bootcamp', 'well', 'go', 'back', 'school', '.', 'would', 'like', 'fun', ',', 'job', ',', 'thankfully', ',', 'time', 'leisure', 'practice', 'please', '.', 'say', ',', 'watch', 'hour', 'upon', 'hour', 'computer', 'program', 'language', ',', 'python', 'javascript', '.', 'aside', ',', 'best', 'way', 'put', 'practice', 'learn', '?', 'go', 'self-taught', ',', 'suppose', '?', 'suppose', 'learn', 'language', '?', 'build', 'website', '?', 'githubs', 'walk', 'process', '?', 'would', 'like', 'side', 'gig', '.', 'thanks', '.']","[[('path', 'NN')], [('go', 'VB')], [('self-taught', 'NN')], [('route', 'NN')], [('learning', 'VBG')], [('computer', 'NN')], [('science', 'NN')], [('trying', 'VBG')], [('software', 'NN')], [('engineer', 'NN')], [('?', '.')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('question', 'NN')], [('essentially', 'RB')], [('title', 'NN')], [(',', ',')], [('expand', 'NN')], [('.', '.')], [('trying', 'VBG')], [('learn', 'NN')], [('go', 'VB')], [('learn', 'NN')], [('computer', 'NN')], [('science', 'NN')], [('eventually', 'RB')], [('become', 'NN')], [('software', 'NN')], [('developer', 'NN')], [('.', '.')], [('care', 'NN')], [('long', 'RB')], [('takes', 'VBZ')], [(',', ',')], [('ideally', 'RB')], [(',', ',')], [('trying', 'VBG')], [('avoid', 'NN')], [('bootcamp', 'NN')], [('well', 'RB')], [('going', 'VBG')], [('back', 'RB')], [('school', 'NN')], [('.', '.')], [('would', 'MD')], [('like', 'IN')], [('fun', 'NN')], [(',', ',')], [('job', 'NN')], [(',', ',')], [('thankfully', 'RB')], [(',', ',')], [('time', 'NN')], [('leisure', 'NN')], [('practice', 'NN')], [('please', 'NN')], [('.', '.')], [('said', 'VBD')], [(',', ',')], [('watching', 'VBG')], [('hours', 'NNS')], [('upon', 'IN')], [('hours', 'NNS')], [('computer', 'NN')], [('programming', 'VBG')], [('language', 'NN')], [(',', ',')], [('python', 'NN')], [('javascript', 'NN')], [('.', '.')], [('aside', 'RB')], [(',', ',')], [('best', 'JJS')], [('way', 'NN')], [('put', 'NN')], [('practice', 'NN')], [('learned', 'VBN')], [('?', '.')], [('go', 'VB')], [('self-taught', 'NN')], [(',', ',')], [('supposed', 'VBN')], [('?', '.')], [('supposed', 'VBN')], [('learn', 'NN')], [('languages', 'NNS')], [('?', '.')], [('build', 'NN')], [('website', 'NN')], [('?', '.')], [('githubs', 'NNS')], [('walking', 'VBG')], [('process', 'NN')], [('?', '.')], [('would', 'MD')], [('like', 'IN')], [('side', 'NN')], [('gigs', 'NNS')], [('.', '.')], [('thanks', 'NNS')], [('.', '.')]]","path go self-taught route learn computer science try software engineer ? & # x200b ; question essentially title , expand . try learn go learn computer science eventually become software developer . care long take , ideally , try avoid bootcamp well go back school . would like fun , job , thankfully , time leisure practice please . say , watch hour upon hour computer program language , python javascript . aside , best way put practice learn ? go self-taught , suppose ? suppose learn language ? build website ? githubs walk process ? would like side gig . thanks .",2_computer_learn_science_study,4
104,sqt9uf,Cryptographic hashes can't be reversed because information is lost but can it be reversed to some other string of bits that produces the same hash?,Discussion,49,0.92,computerscience,https://www.reddit.com/r/computerscience/comments/sqt9uf/cryptographic_hashes_cant_be_reversed_because/,26,"first of all, i am a total noob in my 1st semester. the intuition i built for hash functions being irreversible was that say i take a string ""abcd"" i can sum up their ascii values and get a hash of some sort (266) and i know that you cannot take this value and go back to abcd without brute forcing because their sum does not tell which value it was precisely was like 10 + 18 could also be written as 26 + 2 and therefore, information was lost here but what if instead of trying to reverse it to abcd, we could just reverse it to some other string of characters that make the same hash for example: àà which both have the ascii values 133 so if we compute it is hash from the simple *adding ascii values function*, we will get the same 266 hashed value i.e., a hash collision even though the information is not the same. as you all already know that passwords are verified this way by matching input's hash with the stored hash, is it theoretically possible to compute any other string of characters (or bits) without brute forcing from a sha-256 or even an md5 hash that although is not the same as the original set of bits,  produces the same hash. thanks for fulfilling the curiosity of a young one.",1644677801.0,"['first', ',', 'total', 'noob', '1st', 'semester', '.', 'intuition', 'built', 'hash', 'function', 'irreversible', 'say', 'take', 'string', '``', 'abcd', ""''"", 'sum', 'ascii', 'value', 'get', 'hash', 'sort', '(', '266', ')', 'know', 'take', 'value', 'go', 'back', 'abcd', 'without', 'brute', 'force', 'sum', 'tell', 'value', 'precisely', 'like', '10', '+', '18', 'could', 'also', 'write', '26', '+', '2', 'therefore', ',', 'information', 'lose', 'instead', 'try', 'reverse', 'abcd', ',', 'could', 'reverse', 'string', 'character', 'make', 'hash', 'example', ':', 'àà', 'ascii', 'value', '133', 'compute', 'hash', 'simple', '*', 'add', 'ascii', 'value', 'function', '*', ',', 'get', '266', 'hash', 'value', 'i.e.', ',', 'hash', 'collision', 'even', 'though', 'information', '.', 'already', 'know', 'password', 'verify', 'way', 'match', 'input', ""'s"", 'hash', 'store', 'hash', ',', 'theoretically', 'possible', 'compute', 'string', 'character', '(', 'bit', ')', 'without', 'brute', 'force', 'sha-256', 'even', 'md5', 'hash', 'although', 'original', 'set', 'bit', ',', 'produce', 'hash', '.', 'thanks', 'fulfil', 'curiosity', 'young', 'one', '.']","[[('first', 'RB')], [(',', ',')], [('total', 'JJ')], [('noob', 'NN')], [('1st', 'CD')], [('semester', 'NN')], [('.', '.')], [('intuition', 'NN')], [('built', 'NN')], [('hash', 'NN')], [('functions', 'NNS')], [('irreversible', 'JJ')], [('say', 'VB')], [('take', 'VB')], [('string', 'NN')], [('``', '``')], [('abcd', 'NN')], [(""''"", ""''"")], [('sum', 'NN')], [('ascii', 'NN')], [('values', 'NNS')], [('get', 'VB')], [('hash', 'NN')], [('sort', 'NN')], [('(', '(')], [('266', 'CD')], [(')', ')')], [('know', 'VB')], [('take', 'VB')], [('value', 'NN')], [('go', 'VB')], [('back', 'RB')], [('abcd', 'NN')], [('without', 'IN')], [('brute', 'NN')], [('forcing', 'VBG')], [('sum', 'NN')], [('tell', 'NN')], [('value', 'NN')], [('precisely', 'RB')], [('like', 'IN')], [('10', 'CD')], [('+', 'NN')], [('18', 'CD')], [('could', 'MD')], [('also', 'RB')], [('written', 'VBN')], [('26', 'CD')], [('+', 'NN')], [('2', 'CD')], [('therefore', 'RB')], [(',', ',')], [('information', 'NN')], [('lost', 'VBN')], [('instead', 'RB')], [('trying', 'VBG')], [('reverse', 'NN')], [('abcd', 'NN')], [(',', ',')], [('could', 'MD')], [('reverse', 'NN')], [('string', 'NN')], [('characters', 'NNS')], [('make', 'VB')], [('hash', 'NN')], [('example', 'NN')], [(':', ':')], [('àà', 'NN')], [('ascii', 'NN')], [('values', 'NNS')], [('133', 'CD')], [('compute', 'NN')], [('hash', 'NN')], [('simple', 'NN')], [('*', 'NN')], [('adding', 'VBG')], [('ascii', 'NN')], [('values', 'NNS')], [('function', 'NN')], [('*', 'NN')], [(',', ',')], [('get', 'VB')], [('266', 'CD')], [('hashed', 'VBN')], [('value', 'NN')], [('i.e.', 'NN')], [(',', ',')], [('hash', 'NN')], [('collision', 'NN')], [('even', 'RB')], [('though', 'IN')], [('information', 'NN')], [('.', '.')], [('already', 'RB')], [('know', 'VB')], [('passwords', 'NNS')], [('verified', 'VBN')], [('way', 'NN')], [('matching', 'VBG')], [('input', 'NN')], [(""'s"", 'POS')], [('hash', 'NN')], [('stored', 'VBN')], [('hash', 'NN')], [(',', ',')], [('theoretically', 'RB')], [('possible', 'JJ')], [('compute', 'NN')], [('string', 'NN')], [('characters', 'NNS')], [('(', '(')], [('bits', 'NNS')], [(')', ')')], [('without', 'IN')], [('brute', 'NN')], [('forcing', 'VBG')], [('sha-256', 'NN')], [('even', 'RB')], [('md5', 'NN')], [('hash', 'NN')], [('although', 'IN')], [('original', 'JJ')], [('set', 'NN')], [('bits', 'NNS')], [(',', ',')], [('produces', 'NNS')], [('hash', 'NN')], [('.', '.')], [('thanks', 'NNS')], [('fulfilling', 'VBG')], [('curiosity', 'NN')], [('young', 'JJ')], [('one', 'CD')], [('.', '.')]]","first , total noob 1st semester . intuition built hash function irreversible say take string `` abcd '' sum ascii value get hash sort ( 266 ) know take value go back abcd without brute force sum tell value precisely like 10 + 18 could also write 26 + 2 therefore , information lose instead try reverse abcd , could reverse string character make hash example : àà ascii value 133 compute hash simple * add ascii value function * , get 266 hash value i.e. , hash collision even though information . already know password verify way match input 's hash store hash , theoretically possible compute string character ( bit ) without brute force sha-256 even md5 hash although original set bit , produce hash . thanks fulfil curiosity young one .",6_server_packet_key_hash,1
105,sr998x,How Do Websites Find Books So Fast?,General,3,0.72,computerscience,https://www.reddit.com/r/computerscience/comments/sr998x/how_do_websites_find_books_so_fast/,4,"hello everyone,

so i was just using an mla citation generator for my class paper, and i copy pasted the name into the generator and it literally found the book in less than 2 seconds.

are they using a known database of books like maybe google had one or something? or are they literally searching the internet until they find that book publication?

&#x200b;

is not it still crazy fast even if they have a database already? **unless they use hashing and the books name is sent to a hashfunction which gives the bucket address in the database**

&#x200b;

thank you for explaining!",1644723847.0,"['hello', 'everyone', ',', 'use', 'mla', 'citation', 'generator', 'class', 'paper', ',', 'copy', 'paste', 'name', 'generator', 'literally', 'found', 'book', 'less', '2', 'second', '.', 'use', 'know', 'database', 'book', 'like', 'maybe', 'google', 'one', 'something', '?', 'literally', 'search', 'internet', 'find', 'book', 'publication', '?', '&', '#', 'x200b', ';', 'still', 'crazy', 'fast', 'even', 'database', 'already', '?', '*', '*', 'unless', 'use', 'hash', 'book', 'name', 'sent', 'hashfunction', 'give', 'bucket', 'address', 'database', '*', '*', '&', '#', 'x200b', ';', 'thank', 'explain', '!']","[[('hello', 'NN')], [('everyone', 'NN')], [(',', ',')], [('using', 'VBG')], [('mla', 'NN')], [('citation', 'NN')], [('generator', 'NN')], [('class', 'NN')], [('paper', 'NN')], [(',', ',')], [('copy', 'NN')], [('pasted', 'VBN')], [('name', 'NN')], [('generator', 'NN')], [('literally', 'RB')], [('found', 'NN')], [('book', 'NN')], [('less', 'RBR')], [('2', 'CD')], [('seconds', 'NNS')], [('.', '.')], [('using', 'VBG')], [('known', 'VBN')], [('database', 'NN')], [('books', 'NNS')], [('like', 'IN')], [('maybe', 'RB')], [('google', 'NN')], [('one', 'CD')], [('something', 'NN')], [('?', '.')], [('literally', 'RB')], [('searching', 'VBG')], [('internet', 'NN')], [('find', 'VB')], [('book', 'NN')], [('publication', 'NN')], [('?', '.')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('still', 'RB')], [('crazy', 'NN')], [('fast', 'NN')], [('even', 'RB')], [('database', 'NN')], [('already', 'RB')], [('?', '.')], [('*', 'NN')], [('*', 'NN')], [('unless', 'IN')], [('use', 'NN')], [('hashing', 'VBG')], [('books', 'NNS')], [('name', 'NN')], [('sent', 'NN')], [('hashfunction', 'NN')], [('gives', 'VBZ')], [('bucket', 'NN')], [('address', 'NN')], [('database', 'NN')], [('*', 'NN')], [('*', 'NN')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('thank', 'NN')], [('explaining', 'VBG')], [('!', '.')]]","hello everyone , use mla citation generator class paper , copy paste name generator literally found book less 2 second . use know database book like maybe google one something ? literally search internet find book publication ? & # x200b ; still crazy fast even database already ? * * unless use hash book name sent hashfunction give bucket address database * * & # x200b ; thank explain !",4_book_learn_computer_good,1
107,squ1lg,Questions about full stack development from a higher level,Help,5,0.73,computerscience,https://www.reddit.com/r/computerscience/comments/squ1lg/questions_about_full_stack_development_from_a/,8,"random questions about full stack development

so let us say for our frontend we are using a react application, our backend a flask server running, and a postgres database.

1. for the longest time i thought that react was a javascript framework that runs on a server (because npm start makes it seem like it is running on a server) but apparently that is only for local development. why does local development run on a server and not when you deploy it? what is the difference between running npm start versus if you had just static html files and opened those up?

2. i know that there is talk of frontend and backend frameworks, but if our flask server returned html and we got rid of our react application, what is our frontend tool in this case then? does that mean any backend framework (like django or flask) could also be considered a frontend framework? since we could have flask on the “frontend” returning html and a django server acting as our backend. or even just flask all by itself! i guess i am still confused about this separation in terms of the technology/frameworks i know of.

3. a bit of an add-on to question 2, but are all frontend frameworks/tools purely javascript frameworks? like angular, vue, react? i suspect it is because only javascript can run on the browser, in which case is this a good thing to only have one programming language dominate the scene?

4. i have deployed web applications before through heroku, but i have never deployed a database. in fact, i am not even sure that is the correct term. if i were to deploy my react and flask app, how would postgres for example be running remotely on a server? would this be done through heroku?

5. how does platforms like heroku make any money at all? i can create a free account and deploy websites for free (granted it will have the herokuapp domain), but does not it cost money for them to have those servers running?

i might have more questions later but that is all for now! i have been studying cs for 4 years now and i never quite got the answers to these. any answers would be much appreciated!",1644680023.0,"['random', 'question', 'full', 'stack', 'development', 'let', 'u', 'say', 'frontend', 'use', 'react', 'application', ',', 'backend', 'flask', 'server', 'run', ',', 'postgres', 'database', '.', '1.', 'long', 'time', 'thought', 'react', 'javascript', 'framework', 'run', 'server', '(', 'npm', 'start', 'make', 'seem', 'like', 'run', 'server', ')', 'apparently', 'local', 'development', '.', 'local', 'development', 'run', 'server', 'deploy', '?', 'difference', 'run', 'npm', 'start', 'versus', 'static', 'html', 'file', 'open', '?', '2.', 'know', 'talk', 'frontend', 'backend', 'framework', ',', 'flask', 'server', 'return', 'html', 'get', 'rid', 'react', 'application', ',', 'frontend', 'tool', 'case', '?', 'mean', 'backend', 'framework', '(', 'like', 'django', 'flask', ')', 'could', 'also', 'consider', 'frontend', 'framework', '?', 'since', 'could', 'flask', '“', 'frontend', '”', 'return', 'html', 'django', 'server', 'act', 'backend', '.', 'even', 'flask', '!', 'guess', 'still', 'confuse', 'separation', 'term', 'technology/frameworks', 'know', '.', '3.', 'bit', 'add-on', 'question', '2', ',', 'frontend', 'frameworks/tools', 'purely', 'javascript', 'framework', '?', 'like', 'angular', ',', 'vue', ',', 'react', '?', 'suspect', 'javascript', 'run', 'browser', ',', 'case', 'good', 'thing', 'one', 'program', 'language', 'dominate', 'scene', '?', '4.', 'deployed', 'web', 'application', 'heroku', ',', 'never', 'deployed', 'database', '.', 'fact', ',', 'even', 'sure', 'correct', 'term', '.', 'deploy', 'react', 'flask', 'app', ',', 'would', 'postgres', 'example', 'run', 'remotely', 'server', '?', 'would', 'do', 'heroku', '?', '5.', 'platform', 'like', 'heroku', 'make', 'money', '?', 'create', 'free', 'account', 'deploy', 'website', 'free', '(', 'grant', 'herokuapp', 'domain', ')', ',', 'cost', 'money', 'server', 'run', '?', 'might', 'question', 'later', '!', 'study', 'c', '4', 'year', 'never', 'quite', 'get', 'answer', '.', 'answer', 'would', 'much', 'appreciate', '!']","[[('random', 'NN')], [('questions', 'NNS')], [('full', 'JJ')], [('stack', 'NN')], [('development', 'NN')], [('let', 'VB')], [('us', 'PRP')], [('say', 'VB')], [('frontend', 'NN')], [('using', 'VBG')], [('react', 'NN')], [('application', 'NN')], [(',', ',')], [('backend', 'NN')], [('flask', 'NN')], [('server', 'NN')], [('running', 'VBG')], [(',', ',')], [('postgres', 'NNS')], [('database', 'NN')], [('.', '.')], [('1.', 'CD')], [('longest', 'JJS')], [('time', 'NN')], [('thought', 'NN')], [('react', 'NN')], [('javascript', 'NN')], [('framework', 'NN')], [('runs', 'NNS')], [('server', 'NN')], [('(', '(')], [('npm', 'NN')], [('start', 'NN')], [('makes', 'VBZ')], [('seem', 'NN')], [('like', 'IN')], [('running', 'VBG')], [('server', 'NN')], [(')', ')')], [('apparently', 'RB')], [('local', 'JJ')], [('development', 'NN')], [('.', '.')], [('local', 'JJ')], [('development', 'NN')], [('run', 'VB')], [('server', 'NN')], [('deploy', 'NN')], [('?', '.')], [('difference', 'NN')], [('running', 'VBG')], [('npm', 'NN')], [('start', 'NN')], [('versus', 'NN')], [('static', 'JJ')], [('html', 'NN')], [('files', 'NNS')], [('opened', 'VBN')], [('?', '.')], [('2.', 'CD')], [('know', 'VB')], [('talk', 'NN')], [('frontend', 'NN')], [('backend', 'NN')], [('frameworks', 'NNS')], [(',', ',')], [('flask', 'NN')], [('server', 'NN')], [('returned', 'VBN')], [('html', 'NN')], [('got', 'VBD')], [('rid', 'JJ')], [('react', 'NN')], [('application', 'NN')], [(',', ',')], [('frontend', 'NN')], [('tool', 'NN')], [('case', 'NN')], [('?', '.')], [('mean', 'NN')], [('backend', 'NN')], [('framework', 'NN')], [('(', '(')], [('like', 'IN')], [('django', 'NN')], [('flask', 'NN')], [(')', ')')], [('could', 'MD')], [('also', 'RB')], [('considered', 'VBN')], [('frontend', 'NN')], [('framework', 'NN')], [('?', '.')], [('since', 'IN')], [('could', 'MD')], [('flask', 'NN')], [('“', 'NN')], [('frontend', 'NN')], [('”', 'NN')], [('returning', 'VBG')], [('html', 'NN')], [('django', 'NN')], [('server', 'NN')], [('acting', 'VBG')], [('backend', 'NN')], [('.', '.')], [('even', 'RB')], [('flask', 'NN')], [('!', '.')], [('guess', 'NN')], [('still', 'RB')], [('confused', 'VBN')], [('separation', 'NN')], [('terms', 'NNS')], [('technology/frameworks', 'NNS')], [('know', 'VB')], [('.', '.')], [('3.', 'CD')], [('bit', 'NN')], [('add-on', 'JJ')], [('question', 'NN')], [('2', 'CD')], [(',', ',')], [('frontend', 'NN')], [('frameworks/tools', 'NNS')], [('purely', 'RB')], [('javascript', 'NN')], [('frameworks', 'NNS')], [('?', '.')], [('like', 'IN')], [('angular', 'NN')], [(',', ',')], [('vue', 'NN')], [(',', ',')], [('react', 'NN')], [('?', '.')], [('suspect', 'NN')], [('javascript', 'NN')], [('run', 'VB')], [('browser', 'NN')], [(',', ',')], [('case', 'NN')], [('good', 'JJ')], [('thing', 'NN')], [('one', 'CD')], [('programming', 'VBG')], [('language', 'NN')], [('dominate', 'NN')], [('scene', 'NN')], [('?', '.')], [('4.', 'CD')], [('deployed', 'NN')], [('web', 'NN')], [('applications', 'NNS')], [('heroku', 'NN')], [(',', ',')], [('never', 'RB')], [('deployed', 'NN')], [('database', 'NN')], [('.', '.')], [('fact', 'NN')], [(',', ',')], [('even', 'RB')], [('sure', 'NN')], [('correct', 'NN')], [('term', 'NN')], [('.', '.')], [('deploy', 'NN')], [('react', 'NN')], [('flask', 'NN')], [('app', 'NN')], [(',', ',')], [('would', 'MD')], [('postgres', 'NNS')], [('example', 'NN')], [('running', 'VBG')], [('remotely', 'RB')], [('server', 'NN')], [('?', '.')], [('would', 'MD')], [('done', 'VBN')], [('heroku', 'NN')], [('?', '.')], [('5.', 'CD')], [('platforms', 'NNS')], [('like', 'IN')], [('heroku', 'NN')], [('make', 'VB')], [('money', 'NN')], [('?', '.')], [('create', 'NN')], [('free', 'JJ')], [('account', 'NN')], [('deploy', 'NN')], [('websites', 'NNS')], [('free', 'JJ')], [('(', '(')], [('granted', 'VBN')], [('herokuapp', 'NN')], [('domain', 'NN')], [(')', ')')], [(',', ',')], [('cost', 'NN')], [('money', 'NN')], [('servers', 'NNS')], [('running', 'VBG')], [('?', '.')], [('might', 'MD')], [('questions', 'NNS')], [('later', 'RB')], [('!', '.')], [('studying', 'VBG')], [('cs', 'NN')], [('4', 'CD')], [('years', 'NNS')], [('never', 'RB')], [('quite', 'RB')], [('got', 'VBD')], [('answers', 'NNS')], [('.', '.')], [('answers', 'NNS')], [('would', 'MD')], [('much', 'JJ')], [('appreciated', 'VBN')], [('!', '.')]]","random question full stack development let u say frontend use react application , backend flask server run , postgres database . 1. long time thought react javascript framework run server ( npm start make seem like run server ) apparently local development . local development run server deploy ? difference run npm start versus static html file open ? 2. know talk frontend backend framework , flask server return html get rid react application , frontend tool case ? mean backend framework ( like django flask ) could also consider frontend framework ? since could flask “ frontend ” return html django server act backend . even flask ! guess still confuse separation term technology/frameworks know . 3. bit add-on question 2 , frontend frameworks/tools purely javascript framework ? like angular , vue , react ? suspect javascript run browser , case good thing one program language dominate scene ? 4. deployed web application heroku , never deployed database . fact , even sure correct term . deploy react flask app , would postgres example run remotely server ? would do heroku ? 5. platform like heroku make money ? create free account deploy website free ( grant herokuapp domain ) , cost money server run ? might question later ! study c 4 year never quite get answer . answer would much appreciate !",-1_abazbz2abz_2520_problem_use,2
108,sr0w0y,Any recommendation on learning Cloud concepts,,0,0.33,computerscience,https://www.reddit.com/r/computerscience/comments/sr0w0y/any_recommendation_on_learning_cloud_concepts/,1," hello, so to be brief. been in it for a few years now and have strong network and linux skills with a bit of sysadmin thrown in. i also have an affinity for foss and open-source hardware, so i would love to get into openstack. the problem is that it is just not common enough for me to transition to it naturally.

so i want to learn the principles behind all clouds platform preferably private oriented ones. that way i can jump from one platform like vmware or azure to stack easily without getting lost in vender specific terminologies & implementations

do you guys know any place i can look to learn the underlying techs in depth? only lead i have is cloud+ using sybex with todd's study guide. but not sure if it covers everything; going off my limited understanding on compute i do not see mentions of numa.... and somewhere else on reddit mentions that certificate barely cover 50% of all features, while going down azure to aws is a 90% similarity.",1644698987.0,"['hello', ',', 'brief', '.', 'year', 'strong', 'network', 'linux', 'skill', 'bit', 'sysadmin', 'thrown', '.', 'also', 'affinity', 'fo', 'open-source', 'hardware', ',', 'would', 'love', 'get', 'openstack', '.', 'problem', 'common', 'enough', 'transition', 'naturally', '.', 'want', 'learn', 'principle', 'behind', 'cloud', 'platform', 'preferably', 'private', 'orient', 'one', '.', 'way', 'jump', 'one', 'platform', 'like', 'vmware', 'azure', 'stack', 'easily', 'without', 'get', 'lose', 'vender', 'specific', 'terminology', '&', 'implementation', 'guy', 'know', 'place', 'look', 'learn', 'underlie', 'tech', 'depth', '?', 'lead', 'cloud+', 'use', 'sybex', 'todd', ""'s"", 'study', 'guide', '.', 'sure', 'cover', 'everything', ';', 'go', 'limited', 'understand', 'compute', 'see', 'mention', 'numa', '....', 'somewhere', 'else', 'reddit', 'mention', 'certificate', 'barely', 'cover', '50', '%', 'feature', ',', 'go', 'azure', 'aws', '90', '%', 'similarity', '.']","[[('hello', 'NN')], [(',', ',')], [('brief', 'NN')], [('.', '.')], [('years', 'NNS')], [('strong', 'JJ')], [('network', 'NN')], [('linux', 'NN')], [('skills', 'NNS')], [('bit', 'NN')], [('sysadmin', 'NN')], [('thrown', 'NN')], [('.', '.')], [('also', 'RB')], [('affinity', 'NN')], [('foss', 'NN')], [('open-source', 'NN')], [('hardware', 'NN')], [(',', ',')], [('would', 'MD')], [('love', 'NN')], [('get', 'VB')], [('openstack', 'NN')], [('.', '.')], [('problem', 'NN')], [('common', 'JJ')], [('enough', 'RB')], [('transition', 'NN')], [('naturally', 'RB')], [('.', '.')], [('want', 'NN')], [('learn', 'NN')], [('principles', 'NNS')], [('behind', 'IN')], [('clouds', 'NNS')], [('platform', 'NN')], [('preferably', 'RB')], [('private', 'JJ')], [('oriented', 'VBN')], [('ones', 'NNS')], [('.', '.')], [('way', 'NN')], [('jump', 'NN')], [('one', 'CD')], [('platform', 'NN')], [('like', 'IN')], [('vmware', 'NN')], [('azure', 'NN')], [('stack', 'NN')], [('easily', 'RB')], [('without', 'IN')], [('getting', 'VBG')], [('lost', 'VBN')], [('vender', 'NN')], [('specific', 'JJ')], [('terminologies', 'NNS')], [('&', 'CC')], [('implementations', 'NNS')], [('guys', 'NNS')], [('know', 'VB')], [('place', 'NN')], [('look', 'NN')], [('learn', 'NN')], [('underlying', 'VBG')], [('techs', 'NN')], [('depth', 'NN')], [('?', '.')], [('lead', 'NN')], [('cloud+', 'NN')], [('using', 'VBG')], [('sybex', 'NN')], [('todd', 'NN')], [(""'s"", 'POS')], [('study', 'NN')], [('guide', 'NN')], [('.', '.')], [('sure', 'NN')], [('covers', 'NNS')], [('everything', 'NN')], [(';', ':')], [('going', 'VBG')], [('limited', 'JJ')], [('understanding', 'VBG')], [('compute', 'NN')], [('see', 'VB')], [('mentions', 'NNS')], [('numa', 'NN')], [('....', 'NN')], [('somewhere', 'RB')], [('else', 'RB')], [('reddit', 'NN')], [('mentions', 'NNS')], [('certificate', 'NN')], [('barely', 'RB')], [('cover', 'NN')], [('50', 'CD')], [('%', 'NN')], [('features', 'NNS')], [(',', ',')], [('going', 'VBG')], [('azure', 'NN')], [('aws', 'NNS')], [('90', 'CD')], [('%', 'NN')], [('similarity', 'NN')], [('.', '.')]]","hello , brief . year strong network linux skill bit sysadmin thrown . also affinity fo open-source hardware , would love get openstack . problem common enough transition naturally . want learn principle behind cloud platform preferably private orient one . way jump one platform like vmware azure stack easily without get lose vender specific terminology & implementation guy know place look learn underlie tech depth ? lead cloud+ use sybex todd 's study guide . sure cover everything ; go limited understand compute see mention numa .... somewhere else reddit mention certificate barely cover 50 % feature , go azure aws 90 % similarity .",4_book_learn_computer_good,3
109,sq9tve,Sources that describe mechanical logic gates,Advice,36,0.94,computerscience,https://www.reddit.com/r/computerscience/comments/sq9tve/sources_that_describe_mechanical_logic_gates/,16,"i am working on implementing a mechanical computer to learn about basic binary logic and how they combine to produce machines. i have managed to make all the basic gates except xor and xnor using simple rods and pivots, but i am having... writers? block over trying to come up with a design for these two gates. maybe i need someone else's input for a paradigm shift. preferably it should be possible using rods and pivots but i am open to other forms of rigid or flexure based designs.",1644614177.0,"['work', 'implement', 'mechanical', 'computer', 'learn', 'basic', 'binary', 'logic', 'combine', 'produce', 'machine', '.', 'manage', 'make', 'basic', 'gate', 'except', 'xor', 'xnor', 'use', 'simple', 'rod', 'pivot', ',', '...', 'writer', '?', 'block', 'try', 'come', 'design', 'two', 'gate', '.', 'maybe', 'need', 'someone', 'else', ""'s"", 'input', 'paradigm', 'shift', '.', 'preferably', 'possible', 'use', 'rod', 'pivot', 'open', 'form', 'rigid', 'flexure', 'base', 'design', '.']","[[('working', 'VBG')], [('implementing', 'VBG')], [('mechanical', 'JJ')], [('computer', 'NN')], [('learn', 'NN')], [('basic', 'JJ')], [('binary', 'NN')], [('logic', 'NN')], [('combine', 'NN')], [('produce', 'NN')], [('machines', 'NNS')], [('.', '.')], [('managed', 'VBN')], [('make', 'VB')], [('basic', 'JJ')], [('gates', 'NNS')], [('except', 'IN')], [('xor', 'NN')], [('xnor', 'NN')], [('using', 'VBG')], [('simple', 'NN')], [('rods', 'NNS')], [('pivots', 'NNS')], [(',', ',')], [('...', ':')], [('writers', 'NNS')], [('?', '.')], [('block', 'NN')], [('trying', 'VBG')], [('come', 'VB')], [('design', 'NN')], [('two', 'CD')], [('gates', 'NNS')], [('.', '.')], [('maybe', 'RB')], [('need', 'NN')], [('someone', 'NN')], [('else', 'RB')], [(""'s"", 'POS')], [('input', 'NN')], [('paradigm', 'NN')], [('shift', 'NN')], [('.', '.')], [('preferably', 'RB')], [('possible', 'JJ')], [('using', 'VBG')], [('rods', 'NNS')], [('pivots', 'NNS')], [('open', 'JJ')], [('forms', 'NNS')], [('rigid', 'JJ')], [('flexure', 'NN')], [('based', 'VBN')], [('designs', 'NNS')], [('.', '.')]]","work implement mechanical computer learn basic binary logic combine produce machine . manage make basic gate except xor xnor use simple rod pivot , ... writer ? block try come design two gate . maybe need someone else 's input paradigm shift . preferably possible use rod pivot open form rigid flexure base design .",7_tm_state_turing_universal,3
110,sq0aef,Suggested Resources to Learn how to Write RISCV Emulator?,,20,0.96,computerscience,https://www.reddit.com/r/computerscience/comments/sq0aef/suggested_resources_to_learn_how_to_write_riscv/,4,"in order to gain a deeper understanding of computers and how they work, i wanted to write a riscv computer system emulator capable of running an operating system. this is a recreation project of a couple of projects that i found on github:

[\_em]()

[]()

i could just read through the code and try recreating what they have done but i want to be able to do this myself. so i want to know which resources i can use to learn enough about computer systems, their design, and organization in order to build this. i am currently looking into either the patterson & hennesy, cs:app, or harris books. any suggestions.",1644588566.0,"['order', 'gain', 'deeper', 'understand', 'computer', 'work', ',', 'want', 'write', 'riscv', 'computer', 'system', 'emulator', 'capable', 'run', 'operating', 'system', '.', 'recreation', 'project', 'couple', 'project', 'found', 'github', ':', '[', '\\_em', ']', '(', ')', '[', ']', '(', ')', 'could', 'read', 'code', 'try', 'recreate', 'do', 'want', 'able', '.', 'want', 'know', 'resource', 'use', 'learn', 'enough', 'computer', 'system', ',', 'design', ',', 'organization', 'order', 'build', '.', 'currently', 'look', 'either', 'patterson', '&', 'hennesy', ',', 'c', ':', 'app', ',', 'harris', 'book', '.', 'suggestion', '.']","[[('order', 'NN')], [('gain', 'NN')], [('deeper', 'NN')], [('understanding', 'VBG')], [('computers', 'NNS')], [('work', 'NN')], [(',', ',')], [('wanted', 'VBD')], [('write', 'NN')], [('riscv', 'NN')], [('computer', 'NN')], [('system', 'NN')], [('emulator', 'NN')], [('capable', 'JJ')], [('running', 'VBG')], [('operating', 'NN')], [('system', 'NN')], [('.', '.')], [('recreation', 'NN')], [('project', 'NN')], [('couple', 'NN')], [('projects', 'NNS')], [('found', 'NN')], [('github', 'NN')], [(':', ':')], [('[', 'NN')], [('\\_em', 'NN')], [(']', 'NN')], [('(', '(')], [(')', ')')], [('[', 'NN')], [(']', 'NN')], [('(', '(')], [(')', ')')], [('could', 'MD')], [('read', 'NN')], [('code', 'NN')], [('try', 'NN')], [('recreating', 'VBG')], [('done', 'VBN')], [('want', 'NN')], [('able', 'JJ')], [('.', '.')], [('want', 'NN')], [('know', 'VB')], [('resources', 'NNS')], [('use', 'NN')], [('learn', 'NN')], [('enough', 'RB')], [('computer', 'NN')], [('systems', 'NNS')], [(',', ',')], [('design', 'NN')], [(',', ',')], [('organization', 'NN')], [('order', 'NN')], [('build', 'NN')], [('.', '.')], [('currently', 'RB')], [('looking', 'VBG')], [('either', 'DT')], [('patterson', 'NN')], [('&', 'CC')], [('hennesy', 'NN')], [(',', ',')], [('cs', 'NN')], [(':', ':')], [('app', 'NN')], [(',', ',')], [('harris', 'NN')], [('books', 'NNS')], [('.', '.')], [('suggestions', 'NNS')], [('.', '.')]]","order gain deeper understand computer work , want write riscv computer system emulator capable run operating system . recreation project couple project found github : [ \_em ] ( ) [ ] ( ) could read code try recreate do want able . want know resource use learn enough computer system , design , organization order build . currently look either patterson & hennesy , c : app , harris book . suggestion .",5_cpu_computer_run_process,4
112,spnpvh,"Books about CS (Non-Fiction, Fiction, Biographies, ect)",General,60,0.94,computerscience,https://www.reddit.com/r/computerscience/comments/spnpvh/books_about_cs_nonfiction_fiction_biographies_ect/,23,"looking for books related to computer science **\*not learning material\*** but more of; biographies of computer scientists, history of cs, even fictional stories related to cs. 

anyone know of any?",1644546245.0,"['look', 'book', 'related', 'computer', 'science', '*', '*', '\\', '*', 'learn', 'material\\', '*', '*', '*', ';', 'biography', 'computer', 'scientist', ',', 'history', 'c', ',', 'even', 'fictional', 'story', 'related', 'c', '.', 'anyone', 'know', '?']","[[('looking', 'VBG')], [('books', 'NNS')], [('related', 'JJ')], [('computer', 'NN')], [('science', 'NN')], [('*', 'NN')], [('*', 'NN')], [('\\', 'NN')], [('*', 'NN')], [('learning', 'VBG')], [('material\\', 'NN')], [('*', 'NN')], [('*', 'NN')], [('*', 'NN')], [(';', ':')], [('biographies', 'NNS')], [('computer', 'NN')], [('scientists', 'NNS')], [(',', ',')], [('history', 'NN')], [('cs', 'NN')], [(',', ',')], [('even', 'RB')], [('fictional', 'JJ')], [('stories', 'NNS')], [('related', 'JJ')], [('cs', 'NN')], [('.', '.')], [('anyone', 'NN')], [('know', 'VB')], [('?', '.')]]","look book related computer science * * \ * learn material\ * * * ; biography computer scientist , history c , even fictional story related c . anyone know ?",4_book_learn_computer_good,1
113,spwb7n,What’s your favourite fun YouTube tutorial series?,Discussion,8,0.9,computerscience,https://www.reddit.com/r/computerscience/comments/spwb7n/whats_your_favourite_fun_youtube_tutorial_series/,2,tell me your favourite youtube tutorial series! i am looking for one to watch and am open to anything as long as the host keeps it fun and interesting.,1644575220.0,"['tell', 'favourite', 'youtube', 'tutorial', 'series', '!', 'look', 'one', 'watch', 'open', 'anything', 'long', 'host', 'keep', 'fun', 'interest', '.']","[[('tell', 'NN')], [('favourite', 'NN')], [('youtube', 'NN')], [('tutorial', 'NN')], [('series', 'NN')], [('!', '.')], [('looking', 'VBG')], [('one', 'CD')], [('watch', 'NN')], [('open', 'JJ')], [('anything', 'NN')], [('long', 'RB')], [('host', 'NN')], [('keeps', 'NNS')], [('fun', 'NN')], [('interesting', 'VBG')], [('.', '.')]]",tell favourite youtube tutorial series ! look one watch open anything long host keep fun interest .,4_book_learn_computer_good,5
114,sp7b3q,Prim's Algorithm produces a Spanning Tree,Help,33,0.94,computerscience,https://www.reddit.com/r/computerscience/comments/sp7b3q/prims_algorithm_produces_a_spanning_tree/,2,"i have been studing algorithms using stanford algorithms course (coursera)

[]()

i have understood how the concept of prim's algo works. i have understood that to prove prim's algorithm produces mst we have have to prove that it produces a st(spanning tree) but i am very confused with the argument made by the lecturer i.e. here basically he used graph's cut property specifically **lonely cut property** and argue that **each time we add a edge we are not creating a any cycle**



here is the excat part of the lecture --> [\_nrunthekp6ekaxtma&t=798]()

can any anyone please help me to understand prim's algorithm produces a st intutively using cut property.

p.s. i have already understood other way to proof that i.e. using number of vertex and number of edges (if you have n vertex and you have n-1 edges then it will be a tree)",1644501693.0,"['stud', 'algorithm', 'use', 'stanford', 'algorithm', 'course', '(', 'coursera', ')', '[', ']', '(', ')', 'understood', 'concept', 'prim', ""'s"", 'algo', 'work', '.', 'understood', 'prove', 'prim', ""'s"", 'algorithm', 'produce', 'mst', 'prove', 'produce', 'st', '(', 'span', 'tree', ')', 'confuse', 'argument', 'make', 'lecturer', 'i.e', '.', 'basically', 'use', 'graph', ""'s"", 'cut', 'property', 'specifically', '*', '*', 'lonely', 'cut', 'property', '*', '*', 'argue', '*', '*', 'time', 'add', 'edge', 'create', 'cycle', '*', '*', 'excat', 'part', 'lecture', '--', '>', '[', '\\_nrunthekp6ekaxtma', '&', 't=798', ']', '(', ')', 'anyone', 'please', 'help', 'understand', 'prim', ""'s"", 'algorithm', 'produce', 'st', 'intutively', 'use', 'cut', 'property', '.', 'p.s', '.', 'already', 'understood', 'way', 'proof', 'i.e', '.', 'use', 'number', 'vertex', 'number', 'edge', '(', 'n', 'vertex', 'n-1', 'edge', 'tree', ')']","[[('studing', 'VBG')], [('algorithms', 'NN')], [('using', 'VBG')], [('stanford', 'NN')], [('algorithms', 'NN')], [('course', 'NN')], [('(', '(')], [('coursera', 'NN')], [(')', ')')], [('[', 'NN')], [(']', 'NN')], [('(', '(')], [(')', ')')], [('understood', 'NN')], [('concept', 'NN')], [('prim', 'NN')], [(""'s"", 'POS')], [('algo', 'NN')], [('works', 'NNS')], [('.', '.')], [('understood', 'NN')], [('prove', 'NN')], [('prim', 'NN')], [(""'s"", 'POS')], [('algorithm', 'NN')], [('produces', 'NNS')], [('mst', 'NN')], [('prove', 'NN')], [('produces', 'NNS')], [('st', 'NN')], [('(', '(')], [('spanning', 'VBG')], [('tree', 'NN')], [(')', ')')], [('confused', 'VBN')], [('argument', 'NN')], [('made', 'VBN')], [('lecturer', 'NN')], [('i.e', 'NN')], [('.', '.')], [('basically', 'RB')], [('used', 'VBN')], [('graph', 'NN')], [(""'s"", 'POS')], [('cut', 'NN')], [('property', 'NN')], [('specifically', 'RB')], [('*', 'NN')], [('*', 'NN')], [('lonely', 'RB')], [('cut', 'NN')], [('property', 'NN')], [('*', 'NN')], [('*', 'NN')], [('argue', 'NN')], [('*', 'NN')], [('*', 'NN')], [('time', 'NN')], [('add', 'VB')], [('edge', 'NN')], [('creating', 'VBG')], [('cycle', 'NN')], [('*', 'NN')], [('*', 'NN')], [('excat', 'NN')], [('part', 'NN')], [('lecture', 'NN')], [('--', ':')], [('>', 'NN')], [('[', 'NN')], [('\\_nrunthekp6ekaxtma', 'NN')], [('&', 'CC')], [('t=798', 'NN')], [(']', 'NN')], [('(', '(')], [(')', ')')], [('anyone', 'NN')], [('please', 'NN')], [('help', 'NN')], [('understand', 'NN')], [('prim', 'NN')], [(""'s"", 'POS')], [('algorithm', 'NN')], [('produces', 'NNS')], [('st', 'NN')], [('intutively', 'RB')], [('using', 'VBG')], [('cut', 'NN')], [('property', 'NN')], [('.', '.')], [('p.s', 'NN')], [('.', '.')], [('already', 'RB')], [('understood', 'NN')], [('way', 'NN')], [('proof', 'NN')], [('i.e', 'NN')], [('.', '.')], [('using', 'VBG')], [('number', 'NN')], [('vertex', 'NN')], [('number', 'NN')], [('edges', 'NNS')], [('(', '(')], [('n', 'NN')], [('vertex', 'NN')], [('n-1', 'JJ')], [('edges', 'NNS')], [('tree', 'NN')], [(')', ')')]]",stud algorithm use stanford algorithm course ( coursera ) [ ] ( ) understood concept prim 's algo work . understood prove prim 's algorithm produce mst prove produce st ( span tree ) confuse argument make lecturer i.e . basically use graph 's cut property specifically * * lonely cut property * * argue * * time add edge create cycle * * excat part lecture -- > [ \_nrunthekp6ekaxtma & t=798 ] ( ) anyone please help understand prim 's algorithm produce st intutively use cut property . p.s . already understood way proof i.e . use number vertex number edge ( n vertex n-1 edge tree ),0_algorithm_time_node_bill,2
115,spay93,Where to learn Data Structures & Algorithms fundamentals?,,15,0.94,computerscience,https://www.reddit.com/r/computerscience/comments/spay93/where_to_learn_data_structures_algorithms/,5,"i want to get into coding interviews but first i want to learn foundation of data structures & algorithms. where to learn data structures & algorithms fundamentals? paid or not. 

thank you",1644511599.0,"['want', 'get', 'cod', 'interview', 'first', 'want', 'learn', 'foundation', 'data', 'structure', '&', 'algorithm', '.', 'learn', 'data', 'structure', '&', 'algorithm', 'fundamental', '?', 'paid', '.', 'thank']","[[('want', 'NN')], [('get', 'VB')], [('coding', 'VBG')], [('interviews', 'NNS')], [('first', 'RB')], [('want', 'NN')], [('learn', 'NN')], [('foundation', 'NN')], [('data', 'NNS')], [('structures', 'NNS')], [('&', 'CC')], [('algorithms', 'NN')], [('.', '.')], [('learn', 'NN')], [('data', 'NNS')], [('structures', 'NNS')], [('&', 'CC')], [('algorithms', 'NN')], [('fundamentals', 'NNS')], [('?', '.')], [('paid', 'NN')], [('.', '.')], [('thank', 'NN')]]",want get cod interview first want learn foundation data structure & algorithm . learn data structure & algorithm fundamental ? paid . thank,2_computer_learn_science_study,1
116,soq68k,Was there ever any competition for x86 and will there be in the future?,Discussion,17,0.88,computerscience,https://www.reddit.com/r/computerscience/comments/soq68k/was_there_ever_any_competition_for_x86_and_will/,10,"i was reading this article -is-x86-so-popular/ and wanted to hear from somebody who was around then. i figured i could find them here.

what do people think about x86 going forward? arm is up and coming but i am not sure it will ever fully displace x86.",1644446616.0,"['reading', 'article', '-is-x86-so-popular/', 'want', 'hear', 'somebody', 'around', '.', 'figure', 'could', 'find', '.', 'people', 'think', 'x86', 'go', 'forward', '?', 'arm', 'come', 'sure', 'ever', 'fully', 'displace', 'x86', '.']","[[('reading', 'NN')], [('article', 'NN')], [('-is-x86-so-popular/', 'NN')], [('wanted', 'VBD')], [('hear', 'NN')], [('somebody', 'NN')], [('around', 'IN')], [('.', '.')], [('figured', 'VBN')], [('could', 'MD')], [('find', 'VB')], [('.', '.')], [('people', 'NNS')], [('think', 'NN')], [('x86', 'NN')], [('going', 'VBG')], [('forward', 'RB')], [('?', '.')], [('arm', 'NN')], [('coming', 'VBG')], [('sure', 'NN')], [('ever', 'RB')], [('fully', 'RB')], [('displace', 'NN')], [('x86', 'NN')], [('.', '.')]]",reading article -is-x86-so-popular/ want hear somebody around . figure could find . people think x86 go forward ? arm come sure ever fully displace x86 .,5_cpu_computer_run_process,2
117,sob87b,Personally I can only learn stuff by understanding the core building blocks. How can I do so for programming languages without spending years on doing so? E.g. why is everything an object in js? What's behind that design? How do other languages work?,Discussion,67,0.92,computerscience,https://www.reddit.com/r/computerscience/comments/sob87b/personally_i_can_only_learn_stuff_by/,18,"what are the pieces i need to learn to wrap my head around this. right now i am learning an obscure new language related to cryptocurrencies and i have to say i have no clue why you can return an array but not a hashmap for example (i think you cannot). so i realise i am pretty lost still. now starting to understand better how memory works and that arrays and linked lists are the basic physical data structures. but i still feel lost about different languages. why can you do what when?

is there a good course on fundamental stuff around these things? i always feel like it is a complete blackbox i am interacting with and all i can is learning it by heart...",1644405516.0,"['piece', 'need', 'learn', 'wrap', 'head', 'around', '.', 'right', 'learn', 'obscure', 'new', 'language', 'related', 'cryptocurrencies', 'say', 'clue', 'return', 'array', 'hashmap', 'example', '(', 'think', ')', '.', 'realise', 'pretty', 'lose', 'still', '.', 'start', 'understand', 'well', 'memory', 'work', 'array', 'link', 'list', 'basic', 'physical', 'data', 'structure', '.', 'still', 'feel', 'lose', 'different', 'language', '.', '?', 'good', 'course', 'fundamental', 'stuff', 'around', 'thing', '?', 'always', 'feel', 'like', 'complete', 'blackbox', 'interact', 'learn', 'heart', '...']","[[('pieces', 'NNS')], [('need', 'NN')], [('learn', 'NN')], [('wrap', 'NN')], [('head', 'NN')], [('around', 'IN')], [('.', '.')], [('right', 'NN')], [('learning', 'VBG')], [('obscure', 'NN')], [('new', 'JJ')], [('language', 'NN')], [('related', 'JJ')], [('cryptocurrencies', 'NNS')], [('say', 'VB')], [('clue', 'NN')], [('return', 'NN')], [('array', 'NN')], [('hashmap', 'NN')], [('example', 'NN')], [('(', '(')], [('think', 'NN')], [(')', ')')], [('.', '.')], [('realise', 'NN')], [('pretty', 'RB')], [('lost', 'VBN')], [('still', 'RB')], [('.', '.')], [('starting', 'VBG')], [('understand', 'NN')], [('better', 'RBR')], [('memory', 'NN')], [('works', 'NNS')], [('arrays', 'NNS')], [('linked', 'VBN')], [('lists', 'NNS')], [('basic', 'JJ')], [('physical', 'JJ')], [('data', 'NNS')], [('structures', 'NNS')], [('.', '.')], [('still', 'RB')], [('feel', 'NN')], [('lost', 'VBN')], [('different', 'JJ')], [('languages', 'NNS')], [('.', '.')], [('?', '.')], [('good', 'JJ')], [('course', 'NN')], [('fundamental', 'JJ')], [('stuff', 'NN')], [('around', 'IN')], [('things', 'NNS')], [('?', '.')], [('always', 'RB')], [('feel', 'NN')], [('like', 'IN')], [('complete', 'JJ')], [('blackbox', 'NN')], [('interacting', 'VBG')], [('learning', 'VBG')], [('heart', 'NN')], [('...', ':')]]",piece need learn wrap head around . right learn obscure new language related cryptocurrencies say clue return array hashmap example ( think ) . realise pretty lose still . start understand well memory work array link list basic physical data structure . still feel lose different language . ? good course fundamental stuff around thing ? always feel like complete blackbox interact learn heart ...,2_computer_learn_science_study,4
118,soiieq,Query regarding computer architecture,,4,0.83,computerscience,https://www.reddit.com/r/computerscience/comments/soiieq/query_regarding_computer_architecture/,2,"hi, i am currently studying computer architecture at my university. i have learned how data is stored using flip flops on a very lower level, but i am confused how it is actually stored through a software we use in modern day. using a very basic example, suppose i open up a calculator on my pc and type a number, this gets stored in my computer's ram. what is troubling me is **how** is it stored, since you need to provide high and low current to hardware (flip flop) to save data, how does a software signal to send a high or a low signal?? creating a project in my logic design course, we did this by using a timer ic and some switches, but since no direct access to hardware is happening rather it is just me clicking buttons on my computer. 

i am trying to grasp a concept, please explain :)

thanks in advance",1644426488.0,"['hi', ',', 'currently', 'study', 'computer', 'architecture', 'university', '.', 'learn', 'data', 'store', 'use', 'flip', 'flop', 'low', 'level', ',', 'confuse', 'actually', 'store', 'software', 'use', 'modern', 'day', '.', 'use', 'basic', 'example', ',', 'suppose', 'open', 'calculator', 'pc', 'type', 'number', ',', 'get', 'store', 'computer', ""'s"", 'ram', '.', 'trouble', '*', '*', '*', '*', 'store', ',', 'since', 'need', 'provide', 'high', 'low', 'current', 'hardware', '(', 'flip', 'flop', ')', 'save', 'data', ',', 'software', 'signal', 'send', 'high', 'low', 'signal', '?', '?', 'create', 'project', 'logic', 'design', 'course', ',', 'use', 'timer', 'ic', 'switch', ',', 'since', 'direct', 'access', 'hardware', 'happen', 'rather', 'click', 'button', 'computer', '.', 'try', 'grasp', 'concept', ',', 'please', 'explain', ':', ')', 'thanks', 'advance']","[[('hi', 'NN')], [(',', ',')], [('currently', 'RB')], [('studying', 'VBG')], [('computer', 'NN')], [('architecture', 'NN')], [('university', 'NN')], [('.', '.')], [('learned', 'VBN')], [('data', 'NNS')], [('stored', 'VBN')], [('using', 'VBG')], [('flip', 'NN')], [('flops', 'NNS')], [('lower', 'JJR')], [('level', 'NN')], [(',', ',')], [('confused', 'VBN')], [('actually', 'RB')], [('stored', 'VBN')], [('software', 'NN')], [('use', 'NN')], [('modern', 'JJ')], [('day', 'NN')], [('.', '.')], [('using', 'VBG')], [('basic', 'JJ')], [('example', 'NN')], [(',', ',')], [('suppose', 'NN')], [('open', 'JJ')], [('calculator', 'NN')], [('pc', 'NN')], [('type', 'NN')], [('number', 'NN')], [(',', ',')], [('gets', 'VBZ')], [('stored', 'VBN')], [('computer', 'NN')], [(""'s"", 'POS')], [('ram', 'NN')], [('.', '.')], [('troubling', 'VBG')], [('*', 'NN')], [('*', 'NN')], [('*', 'NN')], [('*', 'NN')], [('stored', 'VBN')], [(',', ',')], [('since', 'IN')], [('need', 'NN')], [('provide', 'NN')], [('high', 'JJ')], [('low', 'JJ')], [('current', 'JJ')], [('hardware', 'NN')], [('(', '(')], [('flip', 'NN')], [('flop', 'NN')], [(')', ')')], [('save', 'VB')], [('data', 'NNS')], [(',', ',')], [('software', 'NN')], [('signal', 'NN')], [('send', 'NN')], [('high', 'JJ')], [('low', 'JJ')], [('signal', 'NN')], [('?', '.')], [('?', '.')], [('creating', 'VBG')], [('project', 'NN')], [('logic', 'NN')], [('design', 'NN')], [('course', 'NN')], [(',', ',')], [('using', 'VBG')], [('timer', 'NN')], [('ic', 'NN')], [('switches', 'NNS')], [(',', ',')], [('since', 'IN')], [('direct', 'JJ')], [('access', 'NN')], [('hardware', 'NN')], [('happening', 'VBG')], [('rather', 'RB')], [('clicking', 'VBG')], [('buttons', 'NNS')], [('computer', 'NN')], [('.', '.')], [('trying', 'VBG')], [('grasp', 'NN')], [('concept', 'NN')], [(',', ',')], [('please', 'NN')], [('explain', 'NN')], [(':', ':')], [(')', ')')], [('thanks', 'NNS')], [('advance', 'NN')]]","hi , currently study computer architecture university . learn data store use flip flop low level , confuse actually store software use modern day . use basic example , suppose open calculator pc type number , get store computer 's ram . trouble * * * * store , since need provide high low current hardware ( flip flop ) save data , software signal send high low signal ? ? create project logic design course , use timer ic switch , since direct access hardware happen rather click button computer . try grasp concept , please explain : ) thanks advance",5_cpu_computer_run_process,3
119,sofw4w,Can aligning a structure field in some other order reduce the padding in the structure?,,2,1.0,computerscience,https://www.reddit.com/r/computerscience/comments/sofw4w/can_aligning_a_structure_field_in_some_other/,1,"i was writing a document regarding memory alignment and i had described that the padding inserted in a structure can be reduced by aligning its fields in descending order. consider this struct:
```c
struct foo {
   char i;
   char *j;
   int k;
} bar;
```
the above struct is 24 bytes wide on a 64-bit system, out of which 13 bytes account for padding. reordering the fields of the struct in descending order of their alignment requirements reduces the size of the structure by 8 bytes.
```
// reordered fields
struct foo {
   char *j;
   int k;
   char i;
} bar;
``` 

i wrote that reordering the fields in some other way except in the descending order of their alignment requirement can never result in a smaller size as compared to reordering them in descending order. i thought about this for some time and came to the conclusion that this is right but then i thought i might as well ask in this sub to confirm. thanks :d",1644419573.0,"['write', 'document', 'regard', 'memory', 'alignment', 'described', 'pad', 'insert', 'structure', 'reduce', 'align', 'field', 'descend', 'order', '.', 'consider', 'struct', ':', '``', '`', 'c', 'struct', 'foo', '{', 'char', ';', 'char', '*', 'j', ';', 'int', 'k', ';', '}', 'bar', ';', '``', '`', 'struct', '24', 'byte', 'wide', '64-bit', 'system', ',', '13', 'byte', 'account', 'pad', '.', 'reorder', 'field', 'struct', 'descend', 'order', 'alignment', 'requirement', 'reduces', 'size', 'structure', '8', 'byte', '.', '``', '`', '//', 'reorder', 'field', 'struct', 'foo', '{', 'char', '*', 'j', ';', 'int', 'k', ';', 'char', ';', '}', 'bar', ';', '``', '`', 'write', 'reorder', 'field', 'way', 'except', 'descend', 'order', 'alignment', 'requirement', 'never', 'result', 'small', 'size', 'compare', 'reorder', 'descend', 'order', '.', 'thought', 'time', 'come', 'conclusion', 'right', 'thought', 'might', 'well', 'ask', 'sub', 'confirm', '.', 'thanks', ':']","[[('writing', 'VBG')], [('document', 'NN')], [('regarding', 'VBG')], [('memory', 'NN')], [('alignment', 'NN')], [('described', 'NN')], [('padding', 'VBG')], [('inserted', 'VBN')], [('structure', 'NN')], [('reduced', 'VBN')], [('aligning', 'VBG')], [('fields', 'NNS')], [('descending', 'VBG')], [('order', 'NN')], [('.', '.')], [('consider', 'VB')], [('struct', 'NN')], [(':', ':')], [('``', '``')], [('`', '``')], [('c', 'NNS')], [('struct', 'NN')], [('foo', 'NN')], [('{', '(')], [('char', 'NN')], [(';', ':')], [('char', 'NN')], [('*', 'NN')], [('j', 'NN')], [(';', ':')], [('int', 'NN')], [('k', 'NN')], [(';', ':')], [('}', ')')], [('bar', 'NN')], [(';', ':')], [('``', '``')], [('`', '``')], [('struct', 'NN')], [('24', 'CD')], [('bytes', 'NNS')], [('wide', 'JJ')], [('64-bit', 'NN')], [('system', 'NN')], [(',', ',')], [('13', 'CD')], [('bytes', 'NNS')], [('account', 'NN')], [('padding', 'VBG')], [('.', '.')], [('reordering', 'VBG')], [('fields', 'NNS')], [('struct', 'NN')], [('descending', 'VBG')], [('order', 'NN')], [('alignment', 'NN')], [('requirements', 'NNS')], [('reduces', 'NNS')], [('size', 'NN')], [('structure', 'NN')], [('8', 'CD')], [('bytes', 'NNS')], [('.', '.')], [('``', '``')], [('`', '``')], [('//', 'NN')], [('reordered', 'VBN')], [('fields', 'NNS')], [('struct', 'NN')], [('foo', 'NN')], [('{', '(')], [('char', 'NN')], [('*', 'NN')], [('j', 'NN')], [(';', ':')], [('int', 'NN')], [('k', 'NN')], [(';', ':')], [('char', 'NN')], [(';', ':')], [('}', ')')], [('bar', 'NN')], [(';', ':')], [('``', '``')], [('`', '``')], [('wrote', 'VBD')], [('reordering', 'VBG')], [('fields', 'NNS')], [('way', 'NN')], [('except', 'IN')], [('descending', 'VBG')], [('order', 'NN')], [('alignment', 'NN')], [('requirement', 'NN')], [('never', 'RB')], [('result', 'NN')], [('smaller', 'JJR')], [('size', 'NN')], [('compared', 'VBN')], [('reordering', 'VBG')], [('descending', 'VBG')], [('order', 'NN')], [('.', '.')], [('thought', 'NN')], [('time', 'NN')], [('came', 'VBD')], [('conclusion', 'NN')], [('right', 'NN')], [('thought', 'NN')], [('might', 'MD')], [('well', 'RB')], [('ask', 'NN')], [('sub', 'NN')], [('confirm', 'NN')], [('.', '.')], [('thanks', 'NNS')], [(':', ':')]]","write document regard memory alignment described pad insert structure reduce align field descend order . consider struct : `` ` c struct foo { char ; char * j ; int k ; } bar ; `` ` struct 24 byte wide 64-bit system , 13 byte account pad . reorder field struct descend order alignment requirement reduces size structure 8 byte . `` ` // reorder field struct foo { char * j ; int k ; char ; } bar ; `` ` write reorder field way except descend order alignment requirement never result small size compare reorder descend order . thought time come conclusion right thought might well ask sub confirm . thanks :",1_memory_byte_data_alignment,4
120,soamn6,Theoretical question about Blockchain-ish virtual worlds,,3,0.71,computerscience,https://www.reddit.com/r/computerscience/comments/soamn6/theoretical_question_about_blockchainish_virtual/,3,"i am writing a sci-fi story about an mmo type virtual world. this is a pretty common concept in modern sci-fi. but where most of these stories revolve around man-made, server based mmo's, i would like to bypass the looming gods/deus ex machina tropes this entails by going for an autonomous ai generated world that is beyond human tampering. from my limited understanding of blockchain technology, it seems that transactions and mining happens peer to peer, and people cannot temper with the process in any way. this would be perfect for my virtual world. are there any theoretical models or ideas out there for how a blockchain type of technology could generate a persistent virtual world?",1644403310.0,"['write', 'sci-fi', 'story', 'mmo', 'type', 'virtual', 'world', '.', 'pretty', 'common', 'concept', 'modern', 'sci-fi', '.', 'story', 'revolve', 'around', 'man-made', ',', 'server', 'base', 'mmo', ""'s"", ',', 'would', 'like', 'bypass', 'loom', 'gods/deus', 'ex', 'machina', 'trope', 'entail', 'go', 'autonomous', 'ai', 'generate', 'world', 'beyond', 'human', 'tamper', '.', 'limited', 'understand', 'blockchain', 'technology', ',', 'seem', 'transaction', 'mining', 'happens', 'peer', 'peer', ',', 'people', 'temper', 'process', 'way', '.', 'would', 'perfect', 'virtual', 'world', '.', 'theoretical', 'model', 'idea', 'blockchain', 'type', 'technology', 'could', 'generate', 'persistent', 'virtual', 'world', '?']","[[('writing', 'VBG')], [('sci-fi', 'NN')], [('story', 'NN')], [('mmo', 'NN')], [('type', 'NN')], [('virtual', 'JJ')], [('world', 'NN')], [('.', '.')], [('pretty', 'RB')], [('common', 'JJ')], [('concept', 'NN')], [('modern', 'JJ')], [('sci-fi', 'NN')], [('.', '.')], [('stories', 'NNS')], [('revolve', 'NN')], [('around', 'IN')], [('man-made', 'NN')], [(',', ',')], [('server', 'NN')], [('based', 'VBN')], [('mmo', 'NN')], [(""'s"", 'POS')], [(',', ',')], [('would', 'MD')], [('like', 'IN')], [('bypass', 'NN')], [('looming', 'VBG')], [('gods/deus', 'NN')], [('ex', 'NN')], [('machina', 'NN')], [('tropes', 'NNS')], [('entails', 'NNS')], [('going', 'VBG')], [('autonomous', 'JJ')], [('ai', 'NN')], [('generated', 'VBN')], [('world', 'NN')], [('beyond', 'IN')], [('human', 'NN')], [('tampering', 'VBG')], [('.', '.')], [('limited', 'JJ')], [('understanding', 'VBG')], [('blockchain', 'NN')], [('technology', 'NN')], [(',', ',')], [('seems', 'VBZ')], [('transactions', 'NNS')], [('mining', 'NN')], [('happens', 'NNS')], [('peer', 'NN')], [('peer', 'NN')], [(',', ',')], [('people', 'NNS')], [('temper', 'NN')], [('process', 'NN')], [('way', 'NN')], [('.', '.')], [('would', 'MD')], [('perfect', 'NN')], [('virtual', 'JJ')], [('world', 'NN')], [('.', '.')], [('theoretical', 'JJ')], [('models', 'NNS')], [('ideas', 'NNS')], [('blockchain', 'NN')], [('type', 'NN')], [('technology', 'NN')], [('could', 'MD')], [('generate', 'NN')], [('persistent', 'NN')], [('virtual', 'JJ')], [('world', 'NN')], [('?', '.')]]","write sci-fi story mmo type virtual world . pretty common concept modern sci-fi . story revolve around man-made , server base mmo 's , would like bypass loom gods/deus ex machina trope entail go autonomous ai generate world beyond human tamper . limited understand blockchain technology , seem transaction mining happens peer peer , people temper process way . would perfect virtual world . theoretical model idea blockchain type technology could generate persistent virtual world ?",3_search_ai_think_google,3
122,so25ut,Book Recommendations and Study Tips,,6,0.87,computerscience,https://www.reddit.com/r/computerscience/comments/so25ut/book_recommendations_and_study_tips/,2,"hi!

i am currently on a bsc hons computer science course, i find concentration a constant struggle when studying and getting into the mood to study i also find difficult, i do find reading enjoyable though and was wondering if people had recommendations for books on the topic which is more focussed on theory and concepts which are enjoyable as well as adequate at training and furthering my aptitude in the subject.",1644373805.0,"['hi', '!', 'currently', 'bsc', 'hons', 'computer', 'science', 'course', ',', 'find', 'concentration', 'constant', 'struggle', 'study', 'get', 'mood', 'study', 'also', 'find', 'difficult', ',', 'find', 'reading', 'enjoyable', 'though', 'wonder', 'people', 'recommendation', 'book', 'topic', 'focus', 'theory', 'concept', 'enjoyable', 'well', 'adequate', 'training', 'further', 'aptitude', 'subject', '.']","[[('hi', 'NN')], [('!', '.')], [('currently', 'RB')], [('bsc', 'NN')], [('hons', 'NNS')], [('computer', 'NN')], [('science', 'NN')], [('course', 'NN')], [(',', ',')], [('find', 'VB')], [('concentration', 'NN')], [('constant', 'JJ')], [('struggle', 'NN')], [('studying', 'VBG')], [('getting', 'VBG')], [('mood', 'NN')], [('study', 'NN')], [('also', 'RB')], [('find', 'VB')], [('difficult', 'JJ')], [(',', ',')], [('find', 'VB')], [('reading', 'NN')], [('enjoyable', 'JJ')], [('though', 'IN')], [('wondering', 'VBG')], [('people', 'NNS')], [('recommendations', 'NNS')], [('books', 'NNS')], [('topic', 'NN')], [('focussed', 'VBN')], [('theory', 'NN')], [('concepts', 'NNS')], [('enjoyable', 'JJ')], [('well', 'RB')], [('adequate', 'NN')], [('training', 'NN')], [('furthering', 'VBG')], [('aptitude', 'NN')], [('subject', 'NN')], [('.', '.')]]","hi ! currently bsc hons computer science course , find concentration constant struggle study get mood study also find difficult , find reading enjoyable though wonder people recommendation book topic focus theory concept enjoyable well adequate training further aptitude subject .",2_computer_learn_science_study,3
123,sn86ck,Claim: No bounded-time algorithm with access to uniform bit randomness can produce uniform ranges except powers of two.,Discussion,30,0.84,computerscience,https://www.reddit.com/r/computerscience/comments/sn86ck/claim_no_boundedtime_algorithm_with_access_to/,34,"claim:

> no bounded-time algorithm with access to uniform bit randomness can produce uniform ranges except powers of two. 

in plain english , you cannot use coin flips to generate a set of random positive integers within a given range, r whenever are != 2^k 

original thread :  /


i believe this claim is false.  false by counter-example. below is an algorithm that performs this for are = 9000 


    r=9000 
    total=10
    coinflips='010110010111001111110001100100110011100011101110'
    #
    soup=int(coinflips,2)
    br = len(  format(r,'b') )
    utot=min( (len(coinflips)-1)//br , total )
    for g in range(0,utot):
        print(soup % r)
        soup = soup // r

your thoughts?",1644286506.0,"['claim', ':', '>', 'bounded-time', 'algorithm', 'access', 'uniform', 'bit', 'randomness', 'produce', 'uniform', 'range', 'except', 'power', 'two', '.', 'plain', 'english', ',', 'use', 'coin', 'flip', 'generate', 'set', 'random', 'positive', 'integer', 'within', 'give', 'range', ',', 'r', 'whenever', '!', '=', '2^k', 'original', 'thread', ':', '/', 'believe', 'claim', 'false', '.', 'false', 'counter-example', '.', 'algorithm', 'performs', '=', '9000', 'r=9000', 'total=10', ""coinflips='010110010111001111110001100100110011100011101110'"", '#', 'soup=int', '(', 'coinflips,2', ')', 'br', '=', 'len', '(', 'format', '(', 'r', ',', ""'"", 'b', ""'"", ')', ')', 'utot=min', '(', '(', 'len', '(', 'coinflips', ')', '-1', ')', '//br', ',', 'total', ')', 'g', 'range', '(', '0', ',', 'utot', ')', ':', 'print', '(', 'soup', '%', 'r', ')', 'soup', '=', 'soup', '//', 'r', 'thought', '?']","[[('claim', 'NN')], [(':', ':')], [('>', 'NN')], [('bounded-time', 'NN')], [('algorithm', 'NN')], [('access', 'NN')], [('uniform', 'NN')], [('bit', 'NN')], [('randomness', 'NN')], [('produce', 'NN')], [('uniform', 'NN')], [('ranges', 'NNS')], [('except', 'IN')], [('powers', 'NNS')], [('two', 'CD')], [('.', '.')], [('plain', 'NN')], [('english', 'JJ')], [(',', ',')], [('use', 'NN')], [('coin', 'NN')], [('flips', 'NNS')], [('generate', 'NN')], [('set', 'NN')], [('random', 'NN')], [('positive', 'JJ')], [('integers', 'NNS')], [('within', 'IN')], [('given', 'VBN')], [('range', 'NN')], [(',', ',')], [('r', 'NN')], [('whenever', 'NN')], [('!', '.')], [('=', 'NN')], [('2^k', 'CD')], [('original', 'JJ')], [('thread', 'NN')], [(':', ':')], [('/', 'NN')], [('believe', 'VB')], [('claim', 'NN')], [('false', 'JJ')], [('.', '.')], [('false', 'JJ')], [('counter-example', 'NN')], [('.', '.')], [('algorithm', 'NN')], [('performs', 'NNS')], [('=', 'NN')], [('9000', 'CD')], [('r=9000', 'NN')], [('total=10', 'NN')], [(""coinflips='010110010111001111110001100100110011100011101110'"", 'NN')], [('#', '#')], [('soup=int', 'NN')], [('(', '(')], [('coinflips,2', 'NN')], [(')', ')')], [('br', 'NN')], [('=', 'NN')], [('len', 'NN')], [('(', '(')], [('format', 'NN')], [('(', '(')], [('r', 'NN')], [(',', ',')], [(""'"", ""''"")], [('b', 'NN')], [(""'"", ""''"")], [(')', ')')], [(')', ')')], [('utot=min', 'NN')], [('(', '(')], [('(', '(')], [('len', 'NN')], [('(', '(')], [('coinflips', 'NNS')], [(')', ')')], [('-1', 'NN')], [(')', ')')], [('//br', 'NN')], [(',', ',')], [('total', 'JJ')], [(')', ')')], [('g', 'NN')], [('range', 'NN')], [('(', '(')], [('0', 'CD')], [(',', ',')], [('utot', 'NN')], [(')', ')')], [(':', ':')], [('print', 'NN')], [('(', '(')], [('soup', 'NN')], [('%', 'NN')], [('r', 'NN')], [(')', ')')], [('soup', 'NN')], [('=', 'NN')], [('soup', 'NN')], [('//', 'NN')], [('r', 'NN')], [('thoughts', 'NNS')], [('?', '.')]]","claim : > bounded-time algorithm access uniform bit randomness produce uniform range except power two . plain english , use coin flip generate set random positive integer within give range , r whenever ! = 2^k original thread : / believe claim false . false counter-example . algorithm performs = 9000 r=9000 total=10 coinflips='010110010111001111110001100100110011100011101110' # soup=int ( coinflips,2 ) br = len ( format ( r , ' b ' ) ) utot=min ( ( len ( coinflips ) -1 ) //br , total ) g range ( 0 , utot ) : print ( soup % r ) soup = soup // r thought ?",-1_abazbz2abz_2520_problem_use,1
125,sndcd7,Is it possible that a computer destroys itself permanently? I mean software-wise speaking,General,7,0.63,computerscience,https://www.reddit.com/r/computerscience/comments/sndcd7/is_it_possible_that_a_computer_destroys_itself/,19,"hi i do not know anything about computers but this question intrigues me because i am investigating about the human brain capacity to take itself to the extent of killing itself by committing suicide. and i know machines are not a human brain (which is, i assume, tons of times more complex), but i am just curious about how such a complex thing (but simpler than the brain) as a computer could destroy itself.

if it can, how would the computer do so? does it need to be preprogrammed to do it? or does it need an external posterior intervention (like an alien virus or a code or something generated inside itself). sorry for my poor vocabulary in this area, i really have no idea.",1644301834.0,"['hi', 'know', 'anything', 'computer', 'question', 'intrigue', 'investigate', 'human', 'brain', 'capacity', 'take', 'extent', 'kill', 'commit', 'suicide', '.', 'know', 'machine', 'human', 'brain', '(', ',', 'assume', ',', 'ton', 'time', 'complex', ')', ',', 'curious', 'complex', 'thing', '(', 'simpler', 'brain', ')', 'computer', 'could', 'destroy', '.', ',', 'would', 'computer', '?', 'need', 'preprogrammed', '?', 'need', 'external', 'posterior', 'intervention', '(', 'like', 'alien', 'virus', 'code', 'something', 'generate', 'inside', ')', '.', 'sorry', 'poor', 'vocabulary', 'area', ',', 'really', 'idea', '.']","[[('hi', 'NN')], [('know', 'VB')], [('anything', 'NN')], [('computers', 'NNS')], [('question', 'NN')], [('intrigues', 'NNS')], [('investigating', 'VBG')], [('human', 'NN')], [('brain', 'NN')], [('capacity', 'NN')], [('take', 'VB')], [('extent', 'NN')], [('killing', 'VBG')], [('committing', 'VBG')], [('suicide', 'NN')], [('.', '.')], [('know', 'VB')], [('machines', 'NNS')], [('human', 'NN')], [('brain', 'NN')], [('(', '(')], [(',', ',')], [('assume', 'VB')], [(',', ',')], [('tons', 'NNS')], [('times', 'NNS')], [('complex', 'JJ')], [(')', ')')], [(',', ',')], [('curious', 'JJ')], [('complex', 'JJ')], [('thing', 'NN')], [('(', '(')], [('simpler', 'NN')], [('brain', 'NN')], [(')', ')')], [('computer', 'NN')], [('could', 'MD')], [('destroy', 'NN')], [('.', '.')], [(',', ',')], [('would', 'MD')], [('computer', 'NN')], [('?', '.')], [('need', 'NN')], [('preprogrammed', 'VBN')], [('?', '.')], [('need', 'NN')], [('external', 'JJ')], [('posterior', 'NN')], [('intervention', 'NN')], [('(', '(')], [('like', 'IN')], [('alien', 'NN')], [('virus', 'NN')], [('code', 'NN')], [('something', 'NN')], [('generated', 'VBN')], [('inside', 'IN')], [(')', ')')], [('.', '.')], [('sorry', 'NN')], [('poor', 'JJ')], [('vocabulary', 'JJ')], [('area', 'NN')], [(',', ',')], [('really', 'RB')], [('idea', 'NN')], [('.', '.')]]","hi know anything computer question intrigue investigate human brain capacity take extent kill commit suicide . know machine human brain ( , assume , ton time complex ) , curious complex thing ( simpler brain ) computer could destroy . , would computer ? need preprogrammed ? need external posterior intervention ( like alien virus code something generate inside ) . sorry poor vocabulary area , really idea .",-1_abazbz2abz_2520_problem_use,3
126,sndnjm,Question,,0,0.5,computerscience,https://www.reddit.com/r/computerscience/comments/sndnjm/question/,7,"in this paragraph that i am reading of structured computer organisation i do not understand what virtual machine means. i do not think its vm as running a vm on a pc i think its something else. here below is the paragraph: 

""rather than thinking in terms of translation or interpretation, it is often simpler to imagine the existence of ahypothetical computer or virtual machine whose machine language is l1. let us call this virtual machine m1 (and let us call the virtual machine corresponding to l0, m0). if such amachine could be constructed cheaplyenough, there would be no needfor having language l0 or machine that executed programs in l0 at all. people could simply write their programs in l1 and have the computer execute them directly. even if the virtual machine whose language is l1 is too expensive or complicated to construct out of electronic circuits,people can still write programs for it. these programs can either be interpreted or translated by aprogram written in l0 that itself can be directly executed by the existing computer. in other words, people can write programs for virtual machines, just as though they really existed""",1644302909.0,"['paragraph', 'reading', 'structure', 'computer', 'organisation', 'understand', 'virtual', 'machine', 'mean', '.', 'think', 'vm', 'run', 'vm', 'pc', 'think', 'something', 'else', '.', 'paragraph', ':', ""''"", 'rather', 'think', 'term', 'translation', 'interpretation', ',', 'often', 'simpler', 'imagine', 'existence', 'ahypothetical', 'computer', 'virtual', 'machine', 'whose', 'machine', 'language', 'l1', '.', 'let', 'u', 'call', 'virtual', 'machine', 'm1', '(', 'let', 'u', 'call', 'virtual', 'machine', 'correspond', 'l0', ',', 'm0', ')', '.', 'amachine', 'could', 'construct', 'cheaplyenough', ',', 'would', 'needfor', 'language', 'l0', 'machine', 'execute', 'program', 'l0', '.', 'people', 'could', 'simply', 'write', 'program', 'l1', 'computer', 'execute', 'directly', '.', 'even', 'virtual', 'machine', 'whose', 'language', 'l1', 'expensive', 'complicate', 'construct', 'electronic', 'circuit', ',', 'people', 'still', 'write', 'program', '.', 'program', 'either', 'interpret', 'translate', 'aprogram', 'write', 'l0', 'directly', 'execute', 'exist', 'computer', '.', 'word', ',', 'people', 'write', 'program', 'virtual', 'machine', ',', 'though', 'really', 'exist', ""''""]","[[('paragraph', 'NN')], [('reading', 'NN')], [('structured', 'VBN')], [('computer', 'NN')], [('organisation', 'NN')], [('understand', 'NN')], [('virtual', 'JJ')], [('machine', 'NN')], [('means', 'NNS')], [('.', '.')], [('think', 'NN')], [('vm', 'NN')], [('running', 'VBG')], [('vm', 'NN')], [('pc', 'NN')], [('think', 'NN')], [('something', 'NN')], [('else', 'RB')], [('.', '.')], [('paragraph', 'NN')], [(':', ':')], [(""''"", ""''"")], [('rather', 'RB')], [('thinking', 'VBG')], [('terms', 'NNS')], [('translation', 'NN')], [('interpretation', 'NN')], [(',', ',')], [('often', 'RB')], [('simpler', 'NN')], [('imagine', 'NN')], [('existence', 'NN')], [('ahypothetical', 'JJ')], [('computer', 'NN')], [('virtual', 'JJ')], [('machine', 'NN')], [('whose', 'WP$')], [('machine', 'NN')], [('language', 'NN')], [('l1', 'NN')], [('.', '.')], [('let', 'VB')], [('us', 'PRP')], [('call', 'NN')], [('virtual', 'JJ')], [('machine', 'NN')], [('m1', 'NN')], [('(', '(')], [('let', 'VB')], [('us', 'PRP')], [('call', 'NN')], [('virtual', 'JJ')], [('machine', 'NN')], [('corresponding', 'VBG')], [('l0', 'NN')], [(',', ',')], [('m0', 'NN')], [(')', ')')], [('.', '.')], [('amachine', 'NN')], [('could', 'MD')], [('constructed', 'VBN')], [('cheaplyenough', 'NN')], [(',', ',')], [('would', 'MD')], [('needfor', 'NNS')], [('language', 'NN')], [('l0', 'NN')], [('machine', 'NN')], [('executed', 'VBN')], [('programs', 'NNS')], [('l0', 'NN')], [('.', '.')], [('people', 'NNS')], [('could', 'MD')], [('simply', 'RB')], [('write', 'NN')], [('programs', 'NNS')], [('l1', 'NN')], [('computer', 'NN')], [('execute', 'NN')], [('directly', 'RB')], [('.', '.')], [('even', 'RB')], [('virtual', 'JJ')], [('machine', 'NN')], [('whose', 'WP$')], [('language', 'NN')], [('l1', 'NN')], [('expensive', 'JJ')], [('complicated', 'VBN')], [('construct', 'NN')], [('electronic', 'JJ')], [('circuits', 'NNS')], [(',', ',')], [('people', 'NNS')], [('still', 'RB')], [('write', 'NN')], [('programs', 'NNS')], [('.', '.')], [('programs', 'NNS')], [('either', 'DT')], [('interpreted', 'VBN')], [('translated', 'VBN')], [('aprogram', 'NN')], [('written', 'VBN')], [('l0', 'NN')], [('directly', 'RB')], [('executed', 'VBN')], [('existing', 'VBG')], [('computer', 'NN')], [('.', '.')], [('words', 'NNS')], [(',', ',')], [('people', 'NNS')], [('write', 'NN')], [('programs', 'NNS')], [('virtual', 'JJ')], [('machines', 'NNS')], [(',', ',')], [('though', 'IN')], [('really', 'RB')], [('existed', 'VBN')], [(""''"", ""''"")]]","paragraph reading structure computer organisation understand virtual machine mean . think vm run vm pc think something else . paragraph : '' rather think term translation interpretation , often simpler imagine existence ahypothetical computer virtual machine whose machine language l1 . let u call virtual machine m1 ( let u call virtual machine correspond l0 , m0 ) . amachine could construct cheaplyenough , would needfor language l0 machine execute program l0 . people could simply write program l1 computer execute directly . even virtual machine whose language l1 expensive complicate construct electronic circuit , people still write program . program either interpret translate aprogram write l0 directly execute exist computer . word , people write program virtual machine , though really exist ''",-1_abazbz2abz_2520_problem_use,1
127,snauwt,Need Clarification on a Symbol,Help,0,0.5,computerscience,https://www.reddit.com/r/computerscience/comments/snauwt/need_clarification_on_a_symbol/,4,"i get in computer language, sigma is basically the alphabet it is a set of characters, but what does sigma squared mean?

example: say sigma = { 0,1,2 } and  
a e sigma 

thus, the values of a would be { 0,1,2 }.

however, if a e sigma squared, would the values of a just be {0,1,4} or something else?",1644294065.0,"['get', 'computer', 'language', ',', 'sigma', 'basically', 'alphabet', 'set', 'character', ',', 'sigma', 'square', 'mean', '?', 'example', ':', 'say', 'sigma', '=', '{', '0,1,2', '}', 'e', 'sigma', 'thus', ',', 'value', 'would', '{', '0,1,2', '}', '.', 'however', ',', 'e', 'sigma', 'square', ',', 'would', 'value', '{', '0,1,4', '}', 'something', 'else', '?']","[[('get', 'VB')], [('computer', 'NN')], [('language', 'NN')], [(',', ',')], [('sigma', 'NN')], [('basically', 'RB')], [('alphabet', 'NN')], [('set', 'NN')], [('characters', 'NNS')], [(',', ',')], [('sigma', 'NN')], [('squared', 'VBN')], [('mean', 'NN')], [('?', '.')], [('example', 'NN')], [(':', ':')], [('say', 'VB')], [('sigma', 'NN')], [('=', 'NN')], [('{', '(')], [('0,1,2', 'CD')], [('}', ')')], [('e', 'NN')], [('sigma', 'NN')], [('thus', 'RB')], [(',', ',')], [('values', 'NNS')], [('would', 'MD')], [('{', '(')], [('0,1,2', 'CD')], [('}', ')')], [('.', '.')], [('however', 'RB')], [(',', ',')], [('e', 'NN')], [('sigma', 'NN')], [('squared', 'VBN')], [(',', ',')], [('would', 'MD')], [('values', 'NNS')], [('{', '(')], [('0,1,4', 'CD')], [('}', ')')], [('something', 'NN')], [('else', 'RB')], [('?', '.')]]","get computer language , sigma basically alphabet set character , sigma square mean ? example : say sigma = { 0,1,2 } e sigma thus , value would { 0,1,2 } . however , e sigma square , would value { 0,1,4 } something else ?",1_memory_byte_data_alignment,3
128,sn8ppi,Counting people in an area?,Advice,0,0.4,computerscience,https://www.reddit.com/r/computerscience/comments/sn8ppi/counting_people_in_an_area/,5,"is it possible to ""count"" the number of people in an area by tracking their mac addresses?? i am planning of making this for a project where users can check the crowd density of a specific area inside the university. thanks in advance!",1644287962.0,"['possible', '``', 'count', ""''"", 'number', 'people', 'area', 'track', 'mac', 'address', '?', '?', 'planning', 'make', 'project', 'user', 'check', 'crowd', 'density', 'specific', 'area', 'inside', 'university', '.', 'thanks', 'advance', '!']","[[('possible', 'JJ')], [('``', '``')], [('count', 'NN')], [(""''"", ""''"")], [('number', 'NN')], [('people', 'NNS')], [('area', 'NN')], [('tracking', 'VBG')], [('mac', 'NN')], [('addresses', 'NNS')], [('?', '.')], [('?', '.')], [('planning', 'NN')], [('making', 'VBG')], [('project', 'NN')], [('users', 'NNS')], [('check', 'NN')], [('crowd', 'NN')], [('density', 'NN')], [('specific', 'JJ')], [('area', 'NN')], [('inside', 'IN')], [('university', 'NN')], [('.', '.')], [('thanks', 'NNS')], [('advance', 'NN')], [('!', '.')]]",possible `` count '' number people area track mac address ? ? planning make project user check crowd density specific area inside university . thanks advance !,6_server_packet_key_hash,4
129,smanmb,Thoughts on teaching good programming skills versus computer science?,,59,0.85,computerscience,https://www.reddit.com/r/computerscience/comments/smanmb/thoughts_on_teaching_good_programming_skills/,24,"just wanted to get other people's thoughts about this. when i went to college, my computer science degree taught a bunch of theory. we learned about big o notation, a bunch of different algorithms, different types of data structures, and things like that. however, we did not really learn very many practical skills. for example, we did not really cover git/svn, debugging tools, proper code management, proper documentation, and things like that.

were other people's experiences in college the same? do you agree or disagree with how your courses were?",1644189277.0,"['want', 'get', 'people', ""'s"", 'thought', '.', 'go', 'college', ',', 'computer', 'science', 'degree', 'taught', 'bunch', 'theory', '.', 'learn', 'big', 'notation', ',', 'bunch', 'different', 'algorithm', ',', 'different', 'type', 'data', 'structure', ',', 'thing', 'like', '.', 'however', ',', 'really', 'learn', 'many', 'practical', 'skill', '.', 'example', ',', 'really', 'cover', 'git/svn', ',', 'debug', 'tool', ',', 'proper', 'code', 'management', ',', 'proper', 'documentation', ',', 'thing', 'like', '.', 'people', ""'s"", 'experience', 'college', '?', 'agree', 'disagree', 'course', '?']","[[('wanted', 'VBD')], [('get', 'VB')], [('people', 'NNS')], [(""'s"", 'POS')], [('thoughts', 'NNS')], [('.', '.')], [('went', 'VBD')], [('college', 'NN')], [(',', ',')], [('computer', 'NN')], [('science', 'NN')], [('degree', 'NN')], [('taught', 'NN')], [('bunch', 'NN')], [('theory', 'NN')], [('.', '.')], [('learned', 'VBN')], [('big', 'JJ')], [('notation', 'NN')], [(',', ',')], [('bunch', 'NN')], [('different', 'JJ')], [('algorithms', 'NN')], [(',', ',')], [('different', 'JJ')], [('types', 'NNS')], [('data', 'NNS')], [('structures', 'NNS')], [(',', ',')], [('things', 'NNS')], [('like', 'IN')], [('.', '.')], [('however', 'RB')], [(',', ',')], [('really', 'RB')], [('learn', 'NN')], [('many', 'JJ')], [('practical', 'JJ')], [('skills', 'NNS')], [('.', '.')], [('example', 'NN')], [(',', ',')], [('really', 'RB')], [('cover', 'NN')], [('git/svn', 'NN')], [(',', ',')], [('debugging', 'VBG')], [('tools', 'NNS')], [(',', ',')], [('proper', 'NN')], [('code', 'NN')], [('management', 'NN')], [(',', ',')], [('proper', 'NN')], [('documentation', 'NN')], [(',', ',')], [('things', 'NNS')], [('like', 'IN')], [('.', '.')], [('people', 'NNS')], [(""'s"", 'POS')], [('experiences', 'NNS')], [('college', 'NN')], [('?', '.')], [('agree', 'NN')], [('disagree', 'NN')], [('courses', 'NNS')], [('?', '.')]]","want get people 's thought . go college , computer science degree taught bunch theory . learn big notation , bunch different algorithm , different type data structure , thing like . however , really learn many practical skill . example , really cover git/svn , debug tool , proper code management , proper documentation , thing like . people 's experience college ? agree disagree course ?",2_computer_learn_science_study,2
130,sm1pz4,Assistance with IPv4 Classes and Ranges,General,27,0.89,computerscience,https://www.reddit.com/r/computerscience/comments/sm1pz4/assistance_with_ipv4_classes_and_ranges/,27,"working through some of my networking study material i started heading down the ipv4 rabbit hole over the past week or so. i am a visual person so i built this table to help me learn the information. as i have looked around websites i have found various different piece of information but this is the most ""right"" answer i could come up with. i had a few questions for everyone:

1) does all the information look correct. 

2) is the loopback ip ranges considered part of class a or are they on their own?

3) i may be completely misunderstanding where the numbers come from but why does class have has so many more no of hosts per network but class c has a lot more number of networks. i keep looking at the math but do not understand it.

* i promise this is not homework, i am studying for comptia exams and started going down the rabbit hole and need some help.

&#x200b;

",1644167291.0,"['work', 'networking', 'study', 'material', 'start', 'head', 'ipv4', 'rabbit', 'hole', 'past', 'week', '.', 'visual', 'person', 'built', 'table', 'help', 'learn', 'information', '.', 'look', 'around', 'website', 'found', 'various', 'different', 'piece', 'information', '``', 'right', ""''"", 'answer', 'could', 'come', '.', 'question', 'everyone', ':', '1', ')', 'information', 'look', 'correct', '.', '2', ')', 'loopback', 'ip', 'range', 'consider', 'part', 'class', '?', '3', ')', 'may', 'completely', 'misunderstand', 'number', 'come', 'class', 'many', 'host', 'per', 'network', 'class', 'c', 'lot', 'number', 'network', '.', 'keep', 'look', 'math', 'understand', '.', '*', 'promise', 'homework', ',', 'study', 'comptia', 'exam', 'start', 'go', 'rabbit', 'hole', 'need', 'help', '.', '&', '#', 'x200b', ';']","[[('working', 'VBG')], [('networking', 'NN')], [('study', 'NN')], [('material', 'NN')], [('started', 'VBN')], [('heading', 'VBG')], [('ipv4', 'NN')], [('rabbit', 'NN')], [('hole', 'NN')], [('past', 'NN')], [('week', 'NN')], [('.', '.')], [('visual', 'JJ')], [('person', 'NN')], [('built', 'NN')], [('table', 'NN')], [('help', 'NN')], [('learn', 'NN')], [('information', 'NN')], [('.', '.')], [('looked', 'VBD')], [('around', 'IN')], [('websites', 'NNS')], [('found', 'NN')], [('various', 'JJ')], [('different', 'JJ')], [('piece', 'NN')], [('information', 'NN')], [('``', '``')], [('right', 'NN')], [(""''"", ""''"")], [('answer', 'NN')], [('could', 'MD')], [('come', 'VB')], [('.', '.')], [('questions', 'NNS')], [('everyone', 'NN')], [(':', ':')], [('1', 'CD')], [(')', ')')], [('information', 'NN')], [('look', 'NN')], [('correct', 'NN')], [('.', '.')], [('2', 'CD')], [(')', ')')], [('loopback', 'NN')], [('ip', 'NN')], [('ranges', 'NNS')], [('considered', 'VBN')], [('part', 'NN')], [('class', 'NN')], [('?', '.')], [('3', 'CD')], [(')', ')')], [('may', 'MD')], [('completely', 'RB')], [('misunderstanding', 'VBG')], [('numbers', 'NNS')], [('come', 'VB')], [('class', 'NN')], [('many', 'JJ')], [('hosts', 'NNS')], [('per', 'IN')], [('network', 'NN')], [('class', 'NN')], [('c', 'NNS')], [('lot', 'NN')], [('number', 'NN')], [('networks', 'NNS')], [('.', '.')], [('keep', 'VB')], [('looking', 'VBG')], [('math', 'NN')], [('understand', 'NN')], [('.', '.')], [('*', 'NN')], [('promise', 'NN')], [('homework', 'NN')], [(',', ',')], [('studying', 'VBG')], [('comptia', 'NN')], [('exams', 'NNS')], [('started', 'VBN')], [('going', 'VBG')], [('rabbit', 'NN')], [('hole', 'NN')], [('need', 'NN')], [('help', 'NN')], [('.', '.')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')]]","work networking study material start head ipv4 rabbit hole past week . visual person built table help learn information . look around website found various different piece information `` right '' answer could come . question everyone : 1 ) information look correct . 2 ) loopback ip range consider part class ? 3 ) may completely misunderstand number come class many host per network class c lot number network . keep look math understand . * promise homework , study comptia exam start go rabbit hole need help . & # x200b ;",6_server_packet_key_hash,4
131,smdequ,Single-board computers for control robot by the mind with shield PiEEG (Open-source brain-computer interface),Article,5,0.86,computerscience,https://www.reddit.com/r/computerscience/comments/smdequ/singleboard_computers_for_control_robot_by_the/,0,"[]()

 this paper presents open-source software and a developed shield board for the raspberry pi family of single-board computers that can be used to read eeg signals.",1644196862.0,"['[', ']', '(', ')', 'paper', 'present', 'open-source', 'software', 'developed', 'shield', 'board', 'raspberry', 'pi', 'family', 'single-board', 'computer', 'use', 'read', 'eeg', 'signal', '.']","[[('[', 'NN')], [(']', 'NN')], [('(', '(')], [(')', ')')], [('paper', 'NN')], [('presents', 'NNS')], [('open-source', 'NN')], [('software', 'NN')], [('developed', 'NN')], [('shield', 'NN')], [('board', 'NN')], [('raspberry', 'NN')], [('pi', 'NN')], [('family', 'NN')], [('single-board', 'NN')], [('computers', 'NNS')], [('used', 'VBN')], [('read', 'NN')], [('eeg', 'NN')], [('signals', 'NNS')], [('.', '.')]]",[ ] ( ) paper present open-source software developed shield board raspberry pi family single-board computer use read eeg signal .,-1_abazbz2abz_2520_problem_use,4
132,sm9s5c,Hello! I want to build the computer described in the book: The Elements of Computing Systems: Building a Modern Computer from First Principles.,Help,5,0.78,computerscience,https://www.reddit.com/r/computerscience/comments/sm9s5c/hello_i_want_to_build_the_computer_described_in/,3,"i have just read the first chapter, and i noticed that it used to exist a web page that had all the resources. does anyone know if those resources still exist somewhere?

i append some pictures of the book's cover.

[images of the book and the web page link (which no longer work)]()

thanks in advance for your time and attention!",1644187102.0,"['read', 'first', 'chapter', ',', 'notice', 'use', 'exist', 'web', 'page', 'resource', '.', 'anyone', 'know', 'resource', 'still', 'exist', 'somewhere', '?', 'append', 'picture', 'book', ""'s"", 'cover', '.', '[', 'image', 'book', 'web', 'page', 'link', '(', 'longer', 'work', ')', ']', '(', ')', 'thanks', 'advance', 'time', 'attention', '!']","[[('read', 'NN')], [('first', 'RB')], [('chapter', 'NN')], [(',', ',')], [('noticed', 'VBN')], [('used', 'VBN')], [('exist', 'NN')], [('web', 'NN')], [('page', 'NN')], [('resources', 'NNS')], [('.', '.')], [('anyone', 'NN')], [('know', 'VB')], [('resources', 'NNS')], [('still', 'RB')], [('exist', 'NN')], [('somewhere', 'RB')], [('?', '.')], [('append', 'NN')], [('pictures', 'NNS')], [('book', 'NN')], [(""'s"", 'POS')], [('cover', 'NN')], [('.', '.')], [('[', 'NN')], [('images', 'NNS')], [('book', 'NN')], [('web', 'NN')], [('page', 'NN')], [('link', 'NN')], [('(', '(')], [('longer', 'NN')], [('work', 'NN')], [(')', ')')], [(']', 'NN')], [('(', '(')], [(')', ')')], [('thanks', 'NNS')], [('advance', 'NN')], [('time', 'NN')], [('attention', 'NN')], [('!', '.')]]","read first chapter , notice use exist web page resource . anyone know resource still exist somewhere ? append picture book 's cover . [ image book web page link ( longer work ) ] ( ) thanks advance time attention !",4_book_learn_computer_good,4
133,slcgd1,Algorithm for finding how many times substring occurs in string ? (does not need to be continuous),,43,0.9,computerscience,https://www.reddit.com/r/computerscience/comments/slcgd1/algorithm_for_finding_how_many_times_substring/,20,"hello,  
i am trying to make algorithm that can count how many times substring occurs in string, but i does not have to be continuous.

for example: `barbarar` cointains `bar` **9** times
```
1: bar.....
2: ba...r..
3: ba.....r
4: b.....ar
5: b..a...r
6: ...bar..
7: ...ba .r
8: ...b. ar
9: b...ar..
```

thanks for help

**edit:** i think there is o(n+m) solution using aho-corasic algorithm  
m = lenght of string  
n = lenght of substring",1644082529.0,"['hello', ',', 'try', 'make', 'algorithm', 'count', 'many', 'time', 'substring', 'occurs', 'string', ',', 'continuous', '.', 'example', ':', '`', 'barbarar', '`', 'cointains', '`', 'bar', '`', '*', '*', '9', '*', '*', 'time', '``', '`', '1', ':', 'bar', '.....', '2', ':', 'ba', '...', 'r', '..', '3', ':', 'ba', '.....', 'r', '4', ':', 'b', '.....', 'ar', '5', ':', 'b', '..', '...', 'r', '6', ':', '...', 'bar', '..', '7', ':', '...', 'ba', '.r', '8', ':', '...', 'b.', 'ar', '9', ':', 'b', '...', 'ar', '..', '``', '`', 'thanks', 'help', '*', '*', 'edit', ':', '*', '*', 'think', '(', 'n+m', ')', 'solution', 'use', 'aho-corasic', 'algorithm', '=', 'lenght', 'string', 'n', '=', 'lenght', 'substring']","[[('hello', 'NN')], [(',', ',')], [('trying', 'VBG')], [('make', 'VB')], [('algorithm', 'NN')], [('count', 'NN')], [('many', 'JJ')], [('times', 'NNS')], [('substring', 'VBG')], [('occurs', 'NNS')], [('string', 'NN')], [(',', ',')], [('continuous', 'JJ')], [('.', '.')], [('example', 'NN')], [(':', ':')], [('`', '``')], [('barbarar', 'NN')], [('`', '``')], [('cointains', 'NNS')], [('`', '``')], [('bar', 'NN')], [('`', '``')], [('*', 'NN')], [('*', 'NN')], [('9', 'CD')], [('*', 'NN')], [('*', 'NN')], [('times', 'NNS')], [('``', '``')], [('`', '``')], [('1', 'CD')], [(':', ':')], [('bar', 'NN')], [('.....', 'NN')], [('2', 'CD')], [(':', ':')], [('ba', 'NN')], [('...', ':')], [('r', 'NN')], [('..', 'NN')], [('3', 'CD')], [(':', ':')], [('ba', 'NN')], [('.....', 'NN')], [('r', 'NN')], [('4', 'CD')], [(':', ':')], [('b', 'NN')], [('.....', 'NN')], [('ar', 'NN')], [('5', 'CD')], [(':', ':')], [('b', 'NN')], [('..', 'NN')], [('...', ':')], [('r', 'NN')], [('6', 'CD')], [(':', ':')], [('...', ':')], [('bar', 'NN')], [('..', 'NN')], [('7', 'CD')], [(':', ':')], [('...', ':')], [('ba', 'NN')], [('.r', 'NN')], [('8', 'CD')], [(':', ':')], [('...', ':')], [('b.', 'NN')], [('ar', 'NN')], [('9', 'CD')], [(':', ':')], [('b', 'NN')], [('...', ':')], [('ar', 'NN')], [('..', 'NN')], [('``', '``')], [('`', '``')], [('thanks', 'NNS')], [('help', 'NN')], [('*', 'NN')], [('*', 'NN')], [('edit', 'NN')], [(':', ':')], [('*', 'NN')], [('*', 'NN')], [('think', 'NN')], [('(', '(')], [('n+m', 'NN')], [(')', ')')], [('solution', 'NN')], [('using', 'VBG')], [('aho-corasic', 'JJ')], [('algorithm', 'NN')], [('=', 'NN')], [('lenght', 'NN')], [('string', 'NN')], [('n', 'NN')], [('=', 'NN')], [('lenght', 'NN')], [('substring', 'VBG')]]","hello , try make algorithm count many time substring occurs string , continuous . example : ` barbarar ` cointains ` bar ` * * 9 * * time `` ` 1 : bar ..... 2 : ba ... r .. 3 : ba ..... r 4 : b ..... ar 5 : b .. ... r 6 : ... bar .. 7 : ... ba .r 8 : ... b. ar 9 : b ... ar .. `` ` thanks help * * edit : * * think ( n+m ) solution use aho-corasic algorithm = lenght string n = lenght substring",0_algorithm_time_node_bill,3
134,slotas,Integrals and Floats: Is that it?,,4,0.64,computerscience,https://www.reddit.com/r/computerscience/comments/slotas/integrals_and_floats_is_that_it/,7,"to represent values, it seems that computer scientists have settled that the only things they need are integral types that represent whole numbers (-1,0,1,2) and floating point numbers (.25, 10.0, positive infinity, nan). these come with modifiers for the size of the variable (eg int and long or float and double) and whether they are signed or unsigned (eg uint or int). 


after that, representations of any other mathematical object come from combinations of integrals and floats and the functions defining their uses. for example, a vector is a struct of floats that adds componentwise, can multiply with scalars by multiplying each element, and can dot product with another vector.


why do not computers support more data types? i know that there is specialized hardware for specific operations like fpgas, but there are types that any computer should be able to use. 


i am not an expert in hardware design or machine code, but i think that as an example, a “polynomial” data type could be used to reduce the size and increase the speed of many programs. 


a polynomial is an expression of the form “y = ax^b + cx^d …” to represent this with an array of bits, i suggest the following rules. i believe it should be possible to create circuits to support this. 


starting from the right, add the length of a string of ones times x to the power of the number of 0s to the right of the string. 


as an example, here are the polynomials that 4 bits can represent with this system:


0000: 0

0001: 1

0010: x

0011: 2

0100: x^2

0101: x + 1

0110: 2x

0111: 3

1000: x^3

1001: x^2 + 1

1010: x^2 + x

1011: x+ 2

1100: 2x^2

1101: 2x +1

1110: 3x

1111: 4


it should be possible to create circuits that take an integral or a float and a polynomial and output an integral or float that the polynomial returns when called on that value. it should also be possible to create circuits that add, subtract, multiply, divide, and do function composition on pairs of polynomials. 


the polynomial rule i described above does not support negative coefficients, but that can be fixed with the rule that the coefficient is, where l is the length of the string of ones: ((l%2==0)? -l-1 : l+1)//2. 



0000: 0

0001: 1

0010: x

0011: -1

0100: x^2

0101: x + 1

0110: -x

0111: 2

1000: x^3

1001: x^2 + 1

1010: x^2 + x

1011: x -1

1100: -x^2

1101: -x +1

1110: 2x

1111: -2


this rule extends to larger strings of bits in an intuitive way. 


variant ideas:
a type that multiplies all values by x to get rid of the constants. 


a type for floating point inputs that uses the inverse coefficient instead of the coefficient to better represent certain important infinite series including the taylor series expansions of sin(x) and e^x.



i want to hear more data type ideas in the comments! there is so much possibility for creativity; limiting computer scientists to ints and floats is a crime. are there not enough opcodes or something?",1644119426.0,"['represent', 'value', ',', 'seem', 'computer', 'scientist', 'settle', 'thing', 'need', 'integral', 'type', 'represent', 'whole', 'number', '(', '-1,0,1,2', ')', 'float', 'point', 'number', '(', '.25', ',', '10.0', ',', 'positive', 'infinity', ',', 'nan', ')', '.', 'come', 'modifier', 'size', 'variable', '(', 'eg', 'int', 'long', 'float', 'double', ')', 'whether', 'sign', 'unsigned', '(', 'eg', 'uint', 'int', ')', '.', ',', 'representation', 'mathematical', 'object', 'come', 'combination', 'integral', 'float', 'function', 'define', 'us', '.', 'example', ',', 'vector', 'struct', 'float', 'add', 'componentwise', ',', 'multiply', 'scalar', 'multiply', 'element', ',', 'dot', 'product', 'another', 'vector', '.', 'computer', 'support', 'data', 'type', '?', 'know', 'specialized', 'hardware', 'specific', 'operation', 'like', 'fpgas', ',', 'type', 'computer', 'able', 'use', '.', 'expert', 'hardware', 'design', 'machine', 'code', ',', 'think', 'example', ',', '“', 'polynomial', '”', 'data', 'type', 'could', 'use', 'reduce', 'size', 'increase', 'speed', 'many', 'program', '.', 'polynomial', 'expression', 'form', '“', '=', 'ax^b', '+', 'cx^d', '…', '”', 'represent', 'array', 'bit', ',', 'suggest', 'follow', 'rule', '.', 'believe', 'possible', 'create', 'circuit', 'support', '.', 'start', 'right', ',', 'add', 'length', 'string', 'one', 'time', 'x', 'power', 'number', '0', 'right', 'string', '.', 'example', ',', 'polynomial', '4', 'bit', 'represent', 'system', ':', '0000', ':', '0', '0001', ':', '1', '0010', ':', 'x', '0011', ':', '2', '0100', ':', 'x^2', '0101', ':', 'x', '+', '1', '0110', ':', '2x', '0111', ':', '3', '1000', ':', 'x^3', '1001', ':', 'x^2', '+', '1', '1010', ':', 'x^2', '+', 'x', '1011', ':', 'x+', '2', '1100', ':', '2x^2', '1101', ':', '2x', '+1', '1110', ':', '3x', '1111', ':', '4', 'possible', 'create', 'circuit', 'take', 'integral', 'float', 'polynomial', 'output', 'integral', 'float', 'polynomial', 'return', 'call', 'value', '.', 'also', 'possible', 'create', 'circuit', 'add', ',', 'subtract', ',', 'multiply', ',', 'divide', ',', 'function', 'composition', 'pair', 'polynomial', '.', 'polynomial', 'rule', 'described', 'support', 'negative', 'coefficient', ',', 'fix', 'rule', 'coefficient', ',', 'l', 'length', 'string', 'one', ':', '(', '(', 'l', '%', '2==0', ')', '?', '-l-1', ':', 'l+1', ')', '//2', '.', '0000', ':', '0', '0001', ':', '1', '0010', ':', 'x', '0011', ':', '-1', '0100', ':', 'x^2', '0101', ':', 'x', '+', '1', '0110', ':', '-x', '0111', ':', '2', '1000', ':', 'x^3', '1001', ':', 'x^2', '+', '1', '1010', ':', 'x^2', '+', 'x', '1011', ':', 'x', '-1', '1100', ':', '-x^2', '1101', ':', '-x', '+1', '1110', ':', '2x', '1111', ':', '-2', 'rule', 'extends', 'large', 'string', 'bit', 'intuitive', 'way', '.', 'variant', 'idea', ':', 'type', 'multiplies', 'value', 'x', 'get', 'rid', 'constant', '.', 'type', 'float', 'point', 'input', 'us', 'inverse', 'coefficient', 'instead', 'coefficient', 'well', 'represent', 'certain', 'important', 'infinite', 'series', 'include', 'taylor', 'series', 'expansion', 'sin', '(', 'x', ')', 'e^x', '.', 'want', 'hear', 'data', 'type', 'idea', 'comment', '!', 'much', 'possibility', 'creativity', ';', 'limit', 'computer', 'scientist', 'ints', 'float', 'crime', '.', 'enough', 'opcodes', 'something', '?']","[[('represent', 'NN')], [('values', 'NNS')], [(',', ',')], [('seems', 'VBZ')], [('computer', 'NN')], [('scientists', 'NNS')], [('settled', 'VBN')], [('things', 'NNS')], [('need', 'NN')], [('integral', 'JJ')], [('types', 'NNS')], [('represent', 'NN')], [('whole', 'JJ')], [('numbers', 'NNS')], [('(', '(')], [('-1,0,1,2', 'NN')], [(')', ')')], [('floating', 'VBG')], [('point', 'NN')], [('numbers', 'NNS')], [('(', '(')], [('.25', 'NN')], [(',', ',')], [('10.0', 'CD')], [(',', ',')], [('positive', 'JJ')], [('infinity', 'NN')], [(',', ',')], [('nan', 'NN')], [(')', ')')], [('.', '.')], [('come', 'VB')], [('modifiers', 'NNS')], [('size', 'NN')], [('variable', 'JJ')], [('(', '(')], [('eg', 'NN')], [('int', 'NN')], [('long', 'RB')], [('float', 'NN')], [('double', 'RB')], [(')', ')')], [('whether', 'IN')], [('signed', 'VBN')], [('unsigned', 'JJ')], [('(', '(')], [('eg', 'NN')], [('uint', 'NN')], [('int', 'NN')], [(')', ')')], [('.', '.')], [(',', ',')], [('representations', 'NNS')], [('mathematical', 'JJ')], [('object', 'NN')], [('come', 'VB')], [('combinations', 'NNS')], [('integrals', 'NNS')], [('floats', 'NNS')], [('functions', 'NNS')], [('defining', 'VBG')], [('uses', 'NNS')], [('.', '.')], [('example', 'NN')], [(',', ',')], [('vector', 'NN')], [('struct', 'NN')], [('floats', 'NNS')], [('adds', 'VBZ')], [('componentwise', 'NN')], [(',', ',')], [('multiply', 'NN')], [('scalars', 'NNS')], [('multiplying', 'VBG')], [('element', 'NN')], [(',', ',')], [('dot', 'NN')], [('product', 'NN')], [('another', 'DT')], [('vector', 'NN')], [('.', '.')], [('computers', 'NNS')], [('support', 'NN')], [('data', 'NNS')], [('types', 'NNS')], [('?', '.')], [('know', 'VB')], [('specialized', 'JJ')], [('hardware', 'NN')], [('specific', 'JJ')], [('operations', 'NNS')], [('like', 'IN')], [('fpgas', 'NN')], [(',', ',')], [('types', 'NNS')], [('computer', 'NN')], [('able', 'JJ')], [('use', 'NN')], [('.', '.')], [('expert', 'NN')], [('hardware', 'NN')], [('design', 'NN')], [('machine', 'NN')], [('code', 'NN')], [(',', ',')], [('think', 'NN')], [('example', 'NN')], [(',', ',')], [('“', 'NN')], [('polynomial', 'NN')], [('”', 'NN')], [('data', 'NNS')], [('type', 'NN')], [('could', 'MD')], [('used', 'VBN')], [('reduce', 'VB')], [('size', 'NN')], [('increase', 'NN')], [('speed', 'NN')], [('many', 'JJ')], [('programs', 'NNS')], [('.', '.')], [('polynomial', 'NN')], [('expression', 'NN')], [('form', 'NN')], [('“', 'NN')], [('=', 'NN')], [('ax^b', 'NN')], [('+', 'NN')], [('cx^d', 'NN')], [('…', 'NN')], [('”', 'NN')], [('represent', 'NN')], [('array', 'NN')], [('bits', 'NNS')], [(',', ',')], [('suggest', 'NN')], [('following', 'VBG')], [('rules', 'NNS')], [('.', '.')], [('believe', 'VB')], [('possible', 'JJ')], [('create', 'NN')], [('circuits', 'NNS')], [('support', 'NN')], [('.', '.')], [('starting', 'VBG')], [('right', 'NN')], [(',', ',')], [('add', 'VB')], [('length', 'NN')], [('string', 'NN')], [('ones', 'NNS')], [('times', 'NNS')], [('x', 'NN')], [('power', 'NN')], [('number', 'NN')], [('0s', 'CD')], [('right', 'NN')], [('string', 'NN')], [('.', '.')], [('example', 'NN')], [(',', ',')], [('polynomials', 'NNS')], [('4', 'CD')], [('bits', 'NNS')], [('represent', 'NN')], [('system', 'NN')], [(':', ':')], [('0000', 'CD')], [(':', ':')], [('0', 'CD')], [('0001', 'CD')], [(':', ':')], [('1', 'CD')], [('0010', 'CD')], [(':', ':')], [('x', 'NN')], [('0011', 'CD')], [(':', ':')], [('2', 'CD')], [('0100', 'CD')], [(':', ':')], [('x^2', 'NN')], [('0101', 'CD')], [(':', ':')], [('x', 'NN')], [('+', 'NN')], [('1', 'CD')], [('0110', 'CD')], [(':', ':')], [('2x', 'CD')], [('0111', 'CD')], [(':', ':')], [('3', 'CD')], [('1000', 'CD')], [(':', ':')], [('x^3', 'NN')], [('1001', 'CD')], [(':', ':')], [('x^2', 'NN')], [('+', 'NN')], [('1', 'CD')], [('1010', 'CD')], [(':', ':')], [('x^2', 'NN')], [('+', 'NN')], [('x', 'NN')], [('1011', 'CD')], [(':', ':')], [('x+', 'NN')], [('2', 'CD')], [('1100', 'CD')], [(':', ':')], [('2x^2', 'CD')], [('1101', 'CD')], [(':', ':')], [('2x', 'CD')], [('+1', 'NN')], [('1110', 'CD')], [(':', ':')], [('3x', 'CD')], [('1111', 'CD')], [(':', ':')], [('4', 'CD')], [('possible', 'JJ')], [('create', 'NN')], [('circuits', 'NNS')], [('take', 'VB')], [('integral', 'JJ')], [('float', 'NN')], [('polynomial', 'NN')], [('output', 'NN')], [('integral', 'JJ')], [('float', 'NN')], [('polynomial', 'NN')], [('returns', 'NNS')], [('called', 'VBN')], [('value', 'NN')], [('.', '.')], [('also', 'RB')], [('possible', 'JJ')], [('create', 'NN')], [('circuits', 'NNS')], [('add', 'VB')], [(',', ',')], [('subtract', 'NN')], [(',', ',')], [('multiply', 'NN')], [(',', ',')], [('divide', 'NN')], [(',', ',')], [('function', 'NN')], [('composition', 'NN')], [('pairs', 'NNS')], [('polynomials', 'NNS')], [('.', '.')], [('polynomial', 'NN')], [('rule', 'NN')], [('described', 'NN')], [('support', 'NN')], [('negative', 'JJ')], [('coefficients', 'NNS')], [(',', ',')], [('fixed', 'VBN')], [('rule', 'NN')], [('coefficient', 'NN')], [(',', ',')], [('l', 'NN')], [('length', 'NN')], [('string', 'NN')], [('ones', 'NNS')], [(':', ':')], [('(', '(')], [('(', '(')], [('l', 'NN')], [('%', 'NN')], [('2==0', 'CD')], [(')', ')')], [('?', '.')], [('-l-1', 'NN')], [(':', ':')], [('l+1', 'NN')], [(')', ')')], [('//2', 'NN')], [('.', '.')], [('0000', 'CD')], [(':', ':')], [('0', 'CD')], [('0001', 'CD')], [(':', ':')], [('1', 'CD')], [('0010', 'CD')], [(':', ':')], [('x', 'NN')], [('0011', 'CD')], [(':', ':')], [('-1', 'NN')], [('0100', 'CD')], [(':', ':')], [('x^2', 'NN')], [('0101', 'CD')], [(':', ':')], [('x', 'NN')], [('+', 'NN')], [('1', 'CD')], [('0110', 'CD')], [(':', ':')], [('-x', 'NN')], [('0111', 'CD')], [(':', ':')], [('2', 'CD')], [('1000', 'CD')], [(':', ':')], [('x^3', 'NN')], [('1001', 'CD')], [(':', ':')], [('x^2', 'NN')], [('+', 'NN')], [('1', 'CD')], [('1010', 'CD')], [(':', ':')], [('x^2', 'NN')], [('+', 'NN')], [('x', 'NN')], [('1011', 'CD')], [(':', ':')], [('x', 'NN')], [('-1', 'NN')], [('1100', 'CD')], [(':', ':')], [('-x^2', 'NN')], [('1101', 'CD')], [(':', ':')], [('-x', 'NN')], [('+1', 'NN')], [('1110', 'CD')], [(':', ':')], [('2x', 'CD')], [('1111', 'CD')], [(':', ':')], [('-2', 'NN')], [('rule', 'NN')], [('extends', 'NNS')], [('larger', 'JJR')], [('strings', 'NNS')], [('bits', 'NNS')], [('intuitive', 'JJ')], [('way', 'NN')], [('.', '.')], [('variant', 'NN')], [('ideas', 'NNS')], [(':', ':')], [('type', 'NN')], [('multiplies', 'NNS')], [('values', 'NNS')], [('x', 'NN')], [('get', 'VB')], [('rid', 'JJ')], [('constants', 'NNS')], [('.', '.')], [('type', 'NN')], [('floating', 'VBG')], [('point', 'NN')], [('inputs', 'NNS')], [('uses', 'NNS')], [('inverse', 'NN')], [('coefficient', 'NN')], [('instead', 'RB')], [('coefficient', 'NN')], [('better', 'RBR')], [('represent', 'NN')], [('certain', 'JJ')], [('important', 'JJ')], [('infinite', 'NN')], [('series', 'NN')], [('including', 'VBG')], [('taylor', 'NN')], [('series', 'NN')], [('expansions', 'NNS')], [('sin', 'NN')], [('(', '(')], [('x', 'NN')], [(')', ')')], [('e^x', 'NN')], [('.', '.')], [('want', 'NN')], [('hear', 'NN')], [('data', 'NNS')], [('type', 'NN')], [('ideas', 'NNS')], [('comments', 'NNS')], [('!', '.')], [('much', 'JJ')], [('possibility', 'NN')], [('creativity', 'NN')], [(';', ':')], [('limiting', 'VBG')], [('computer', 'NN')], [('scientists', 'NNS')], [('ints', 'NNS')], [('floats', 'NNS')], [('crime', 'NN')], [('.', '.')], [('enough', 'RB')], [('opcodes', 'NNS')], [('something', 'NN')], [('?', '.')]]","represent value , seem computer scientist settle thing need integral type represent whole number ( -1,0,1,2 ) float point number ( .25 , 10.0 , positive infinity , nan ) . come modifier size variable ( eg int long float double ) whether sign unsigned ( eg uint int ) . , representation mathematical object come combination integral float function define us . example , vector struct float add componentwise , multiply scalar multiply element , dot product another vector . computer support data type ? know specialized hardware specific operation like fpgas , type computer able use . expert hardware design machine code , think example , “ polynomial ” data type could use reduce size increase speed many program . polynomial expression form “ = ax^b + cx^d … ” represent array bit , suggest follow rule . believe possible create circuit support . start right , add length string one time x power number 0 right string . example , polynomial 4 bit represent system : 0000 : 0 0001 : 1 0010 : x 0011 : 2 0100 : x^2 0101 : x + 1 0110 : 2x 0111 : 3 1000 : x^3 1001 : x^2 + 1 1010 : x^2 + x 1011 : x+ 2 1100 : 2x^2 1101 : 2x +1 1110 : 3x 1111 : 4 possible create circuit take integral float polynomial output integral float polynomial return call value . also possible create circuit add , subtract , multiply , divide , function composition pair polynomial . polynomial rule described support negative coefficient , fix rule coefficient , l length string one : ( ( l % 2==0 ) ? -l-1 : l+1 ) //2 . 0000 : 0 0001 : 1 0010 : x 0011 : -1 0100 : x^2 0101 : x + 1 0110 : -x 0111 : 2 1000 : x^3 1001 : x^2 + 1 1010 : x^2 + x 1011 : x -1 1100 : -x^2 1101 : -x +1 1110 : 2x 1111 : -2 rule extends large string bit intuitive way . variant idea : type multiplies value x get rid constant . type float point input us inverse coefficient instead coefficient well represent certain important infinite series include taylor series expansion sin ( x ) e^x . want hear data type idea comment ! much possibility creativity ; limit computer scientist ints float crime . enough opcodes something ?",-1_abazbz2abz_2520_problem_use,3
135,slsxv7,Measuring Consistency of a Model,,0,0.4,computerscience,https://www.reddit.com/r/computerscience/comments/slsxv7/measuring_consistency_of_a_model/,1,"good day, i have an emotion detection model for my thesis, and one of my research problem is determining its consistency. is there any good way to measure this? i have read [what is the measure of consistency in the data?](-is-the-measure-of-consistency-in-the-data/7449) and i am not really sure if it would be applicable here.

&#x200b;

by consistency, i mean its consistency in being able to detect correct emotions

&#x200b;

thanks for the help!",1644140297.0,"['good', 'day', ',', 'emotion', 'detection', 'model', 'thesis', ',', 'one', 'research', 'problem', 'determine', 'consistency', '.', 'good', 'way', 'measure', '?', 'read', '[', 'measure', 'consistency', 'data', '?', ']', '(', '-is-the-measure-of-consistency-in-the-data/7449', ')', 'really', 'sure', 'would', 'applicable', '.', '&', '#', 'x200b', ';', 'consistency', ',', 'mean', 'consistency', 'able', 'detect', 'correct', 'emotion', '&', '#', 'x200b', ';', 'thanks', 'help', '!']","[[('good', 'JJ')], [('day', 'NN')], [(',', ',')], [('emotion', 'NN')], [('detection', 'NN')], [('model', 'NN')], [('thesis', 'NN')], [(',', ',')], [('one', 'CD')], [('research', 'NN')], [('problem', 'NN')], [('determining', 'VBG')], [('consistency', 'NN')], [('.', '.')], [('good', 'JJ')], [('way', 'NN')], [('measure', 'NN')], [('?', '.')], [('read', 'NN')], [('[', 'NN')], [('measure', 'NN')], [('consistency', 'NN')], [('data', 'NNS')], [('?', '.')], [(']', 'NN')], [('(', '(')], [('-is-the-measure-of-consistency-in-the-data/7449', 'NN')], [(')', ')')], [('really', 'RB')], [('sure', 'NN')], [('would', 'MD')], [('applicable', 'JJ')], [('.', '.')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('consistency', 'NN')], [(',', ',')], [('mean', 'NN')], [('consistency', 'NN')], [('able', 'JJ')], [('detect', 'NN')], [('correct', 'NN')], [('emotions', 'NNS')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('thanks', 'NNS')], [('help', 'NN')], [('!', '.')]]","good day , emotion detection model thesis , one research problem determine consistency . good way measure ? read [ measure consistency data ? ] ( -is-the-measure-of-consistency-in-the-data/7449 ) really sure would applicable . & # x200b ; consistency , mean consistency able detect correct emotion & # x200b ; thanks help !",-1_abazbz2abz_2520_problem_use,4
136,sl4tdf,Why is natural alignment used in most processor architecture over processor-word alignment?,Discussion,29,0.93,computerscience,https://www.reddit.com/r/computerscience/comments/sl4tdf/why_is_natural_alignment_used_in_most_processor/,5,"most processor architectures prefer natural alignment as the default alignment requirement but i think that processor-word alignment is a more efficient alignment requirement that saves memory without any performance overhead over natural alignment.

for example, a double has an alignment of 8 according to natural alignment but on 32-bit processors it would have no performance overhead if double had an alignment of 4 and it would have saved memory. this [source](-ia-32-architectures-optimization-manual.pdf)#3.6.4 states that double has an alignment of 8 on 32-bit processors:
> align 64-bit data so that its base address is a multiple of eight.

similar examples can be seen in 64-bit processors, 16 byte sized data type(int128) has an alignment of 16 whereas it could have been beneficial to keep the alignment equal to the size of the size of a processor word(i.e. 8 bytes long in 64-bit processors).

my guess is that this standard of natural alignment was created because when data was read directly from the wire, the machines could default to natural alignment and not have to deal with different alignments of the same data type according to the cpu architecture of the sender of the data.

when all the fields of a data structure are being stored in a single cpu word, they still have padding inside due to natural alignment whereas i do not think that padding is needed when all the fields are stored in a single cpu word because any field of the structure would take the same amount of byte shifts to access it despite of where in the cpu word it is stored(please correct me on this if i am wrong).

for example, consider this struct:
```
struct example {
   char i; // 1 byte
   // 1 byte padding
   short j; // 2 bytes
   int k; // 4 bytes
   char l; // 1 byte
   // 3 bytes trailing padding
} foo;
```
the padding between `foo.i` and `foo.j` is not needed in my opinion because `foo.j` would still need 6 byte shifts to access.

to summarize my question, i want to know that what are the benefits of natural alignment over processor-word based alignment.

i also want to know that whether inserting padding inbetween the cpu word where all your data is stored any better over storing those fields without any padding. also, does the position of fields in the same cpu word make any difference?

thank you!!",1644060234.0,"['processor', 'architecture', 'prefer', 'natural', 'alignment', 'default', 'alignment', 'requirement', 'think', 'processor-word', 'alignment', 'efficient', 'alignment', 'requirement', 'save', 'memory', 'without', 'performance', 'overhead', 'natural', 'alignment', '.', 'example', ',', 'double', 'alignment', '8', 'accord', 'natural', 'alignment', '32-bit', 'processor', 'would', 'performance', 'overhead', 'double', 'alignment', '4', 'would', 'save', 'memory', '.', '[', 'source', ']', '(', '-ia-32-architectures-optimization-manual.pdf', ')', '#', '3.6.4', 'state', 'double', 'alignment', '8', '32-bit', 'processor', ':', '>', 'align', '64-bit', 'data', 'base', 'address', 'multiple', 'eight', '.', 'similar', 'example', 'see', '64-bit', 'processor', ',', '16', 'byte', 'size', 'data', 'type', '(', 'int128', ')', 'alignment', '16', 'whereas', 'could', 'beneficial', 'keep', 'alignment', 'equal', 'size', 'size', 'processor', 'word', '(', 'i.e', '.', '8', 'byte', 'long', '64-bit', 'processor', ')', '.', 'guess', 'standard', 'natural', 'alignment', 'create', 'data', 'read', 'directly', 'wire', ',', 'machine', 'could', 'default', 'natural', 'alignment', 'deal', 'different', 'alignment', 'data', 'type', 'accord', 'cpu', 'architecture', 'sender', 'data', '.', 'field', 'data', 'structure', 'store', 'single', 'cpu', 'word', ',', 'still', 'pad', 'inside', 'due', 'natural', 'alignment', 'whereas', 'think', 'pad', 'need', 'field', 'store', 'single', 'cpu', 'word', 'field', 'structure', 'would', 'take', 'amount', 'byte', 'shift', 'access', 'despite', 'cpu', 'word', 'store', '(', 'please', 'correct', 'wrong', ')', '.', 'example', ',', 'consider', 'struct', ':', '``', '`', 'struct', 'example', '{', 'char', ';', '//', '1', 'byte', '//', '1', 'byte', 'pad', 'short', 'j', ';', '//', '2', 'byte', 'int', 'k', ';', '//', '4', 'byte', 'char', 'l', ';', '//', '1', 'byte', '//', '3', 'byte', 'trail', 'pad', '}', 'foo', ';', '``', '`', 'pad', '`', 'foo.i', '`', '`', 'foo.j', '`', 'need', 'opinion', '`', 'foo.j', '`', 'would', 'still', 'need', '6', 'byte', 'shift', 'access', '.', 'summarize', 'question', ',', 'want', 'know', 'benefit', 'natural', 'alignment', 'processor-word', 'base', 'alignment', '.', 'also', 'want', 'know', 'whether', 'insert', 'pad', 'inbetween', 'cpu', 'word', 'data', 'store', 'well', 'store', 'field', 'without', 'pad', '.', 'also', ',', 'position', 'field', 'cpu', 'word', 'make', 'difference', '?', 'thank', '!', '!']","[[('processor', 'NN')], [('architectures', 'NNS')], [('prefer', 'NN')], [('natural', 'JJ')], [('alignment', 'NN')], [('default', 'NN')], [('alignment', 'NN')], [('requirement', 'NN')], [('think', 'NN')], [('processor-word', 'NN')], [('alignment', 'NN')], [('efficient', 'NN')], [('alignment', 'NN')], [('requirement', 'NN')], [('saves', 'NNS')], [('memory', 'NN')], [('without', 'IN')], [('performance', 'NN')], [('overhead', 'NN')], [('natural', 'JJ')], [('alignment', 'NN')], [('.', '.')], [('example', 'NN')], [(',', ',')], [('double', 'RB')], [('alignment', 'NN')], [('8', 'CD')], [('according', 'VBG')], [('natural', 'JJ')], [('alignment', 'NN')], [('32-bit', 'JJ')], [('processors', 'NNS')], [('would', 'MD')], [('performance', 'NN')], [('overhead', 'NN')], [('double', 'RB')], [('alignment', 'NN')], [('4', 'CD')], [('would', 'MD')], [('saved', 'VBN')], [('memory', 'NN')], [('.', '.')], [('[', 'NN')], [('source', 'NN')], [(']', 'NN')], [('(', '(')], [('-ia-32-architectures-optimization-manual.pdf', 'NN')], [(')', ')')], [('#', '#')], [('3.6.4', 'CD')], [('states', 'NNS')], [('double', 'RB')], [('alignment', 'NN')], [('8', 'CD')], [('32-bit', 'JJ')], [('processors', 'NNS')], [(':', ':')], [('>', 'NN')], [('align', 'NN')], [('64-bit', 'NN')], [('data', 'NNS')], [('base', 'NN')], [('address', 'NN')], [('multiple', 'NN')], [('eight', 'CD')], [('.', '.')], [('similar', 'JJ')], [('examples', 'NNS')], [('seen', 'VBN')], [('64-bit', 'NN')], [('processors', 'NNS')], [(',', ',')], [('16', 'CD')], [('byte', 'NN')], [('sized', 'VBN')], [('data', 'NNS')], [('type', 'NN')], [('(', '(')], [('int128', 'NN')], [(')', ')')], [('alignment', 'NN')], [('16', 'CD')], [('whereas', 'NNS')], [('could', 'MD')], [('beneficial', 'JJ')], [('keep', 'VB')], [('alignment', 'NN')], [('equal', 'JJ')], [('size', 'NN')], [('size', 'NN')], [('processor', 'NN')], [('word', 'NN')], [('(', '(')], [('i.e', 'NN')], [('.', '.')], [('8', 'CD')], [('bytes', 'NNS')], [('long', 'RB')], [('64-bit', 'NN')], [('processors', 'NNS')], [(')', ')')], [('.', '.')], [('guess', 'NN')], [('standard', 'NN')], [('natural', 'JJ')], [('alignment', 'NN')], [('created', 'VBN')], [('data', 'NNS')], [('read', 'NN')], [('directly', 'RB')], [('wire', 'NN')], [(',', ',')], [('machines', 'NNS')], [('could', 'MD')], [('default', 'NN')], [('natural', 'JJ')], [('alignment', 'NN')], [('deal', 'NN')], [('different', 'JJ')], [('alignments', 'NNS')], [('data', 'NNS')], [('type', 'NN')], [('according', 'VBG')], [('cpu', 'NN')], [('architecture', 'NN')], [('sender', 'NN')], [('data', 'NNS')], [('.', '.')], [('fields', 'NNS')], [('data', 'NNS')], [('structure', 'NN')], [('stored', 'VBN')], [('single', 'JJ')], [('cpu', 'NN')], [('word', 'NN')], [(',', ',')], [('still', 'RB')], [('padding', 'VBG')], [('inside', 'IN')], [('due', 'JJ')], [('natural', 'JJ')], [('alignment', 'NN')], [('whereas', 'NNS')], [('think', 'NN')], [('padding', 'VBG')], [('needed', 'VBN')], [('fields', 'NNS')], [('stored', 'VBN')], [('single', 'JJ')], [('cpu', 'NN')], [('word', 'NN')], [('field', 'NN')], [('structure', 'NN')], [('would', 'MD')], [('take', 'VB')], [('amount', 'NN')], [('byte', 'NN')], [('shifts', 'NNS')], [('access', 'NN')], [('despite', 'IN')], [('cpu', 'NN')], [('word', 'NN')], [('stored', 'VBN')], [('(', '(')], [('please', 'NN')], [('correct', 'NN')], [('wrong', 'JJ')], [(')', ')')], [('.', '.')], [('example', 'NN')], [(',', ',')], [('consider', 'VB')], [('struct', 'NN')], [(':', ':')], [('``', '``')], [('`', '``')], [('struct', 'NN')], [('example', 'NN')], [('{', '(')], [('char', 'NN')], [(';', ':')], [('//', 'NN')], [('1', 'CD')], [('byte', 'NN')], [('//', 'NN')], [('1', 'CD')], [('byte', 'NN')], [('padding', 'VBG')], [('short', 'JJ')], [('j', 'NN')], [(';', ':')], [('//', 'NN')], [('2', 'CD')], [('bytes', 'NNS')], [('int', 'NN')], [('k', 'NN')], [(';', ':')], [('//', 'NN')], [('4', 'CD')], [('bytes', 'NNS')], [('char', 'NN')], [('l', 'NN')], [(';', ':')], [('//', 'NN')], [('1', 'CD')], [('byte', 'NN')], [('//', 'NN')], [('3', 'CD')], [('bytes', 'NNS')], [('trailing', 'VBG')], [('padding', 'VBG')], [('}', ')')], [('foo', 'NN')], [(';', ':')], [('``', '``')], [('`', '``')], [('padding', 'VBG')], [('`', '``')], [('foo.i', 'NN')], [('`', '``')], [('`', '``')], [('foo.j', 'NN')], [('`', '``')], [('needed', 'VBN')], [('opinion', 'NN')], [('`', '``')], [('foo.j', 'NN')], [('`', '``')], [('would', 'MD')], [('still', 'RB')], [('need', 'NN')], [('6', 'CD')], [('byte', 'NN')], [('shifts', 'NNS')], [('access', 'NN')], [('.', '.')], [('summarize', 'VB')], [('question', 'NN')], [(',', ',')], [('want', 'NN')], [('know', 'VB')], [('benefits', 'NNS')], [('natural', 'JJ')], [('alignment', 'NN')], [('processor-word', 'NN')], [('based', 'VBN')], [('alignment', 'NN')], [('.', '.')], [('also', 'RB')], [('want', 'NN')], [('know', 'VB')], [('whether', 'IN')], [('inserting', 'VBG')], [('padding', 'VBG')], [('inbetween', 'NN')], [('cpu', 'NN')], [('word', 'NN')], [('data', 'NNS')], [('stored', 'VBN')], [('better', 'RBR')], [('storing', 'VBG')], [('fields', 'NNS')], [('without', 'IN')], [('padding', 'VBG')], [('.', '.')], [('also', 'RB')], [(',', ',')], [('position', 'NN')], [('fields', 'NNS')], [('cpu', 'NN')], [('word', 'NN')], [('make', 'VB')], [('difference', 'NN')], [('?', '.')], [('thank', 'NN')], [('!', '.')], [('!', '.')]]","processor architecture prefer natural alignment default alignment requirement think processor-word alignment efficient alignment requirement save memory without performance overhead natural alignment . example , double alignment 8 accord natural alignment 32-bit processor would performance overhead double alignment 4 would save memory . [ source ] ( -ia-32-architectures-optimization-manual.pdf ) # 3.6.4 state double alignment 8 32-bit processor : > align 64-bit data base address multiple eight . similar example see 64-bit processor , 16 byte size data type ( int128 ) alignment 16 whereas could beneficial keep alignment equal size size processor word ( i.e . 8 byte long 64-bit processor ) . guess standard natural alignment create data read directly wire , machine could default natural alignment deal different alignment data type accord cpu architecture sender data . field data structure store single cpu word , still pad inside due natural alignment whereas think pad need field store single cpu word field structure would take amount byte shift access despite cpu word store ( please correct wrong ) . example , consider struct : `` ` struct example { char ; // 1 byte // 1 byte pad short j ; // 2 byte int k ; // 4 byte char l ; // 1 byte // 3 byte trail pad } foo ; `` ` pad ` foo.i ` ` foo.j ` need opinion ` foo.j ` would still need 6 byte shift access . summarize question , want know benefit natural alignment processor-word base alignment . also want know whether insert pad inbetween cpu word data store well store field without pad . also , position field cpu word make difference ? thank ! !",1_memory_byte_data_alignment,4
138,skltie,Confusion Between Different Types of Optimization Problems,,40,0.99,computerscience,https://www.reddit.com/r/computerscience/comments/skltie/confusion_between_different_types_of_optimization/,3,"i do not have a background in optimization and i am trying to teach myself more about this topic. i find myself having a lot of trouble understanding the different ""types"" of optimization problems that exist.

for example, i understand the idea of optimizing continuous functions (e.g. y = x\^2) - for example, we could be interested in finding out the value of ""x"" that results in the smallest value of ""y"". i also understand that continuous functions can be optimized subject to some constraints.

however, i find myself very confused when trying to sort through the following types of optimization problems:

* **discrete optimization**
* **integer optimization**
* **mixed integer optimization**
* **combinatorial optimization**

when i think of these problems, the first thing that comes to mind is that they are fundamentally different from optimizing continuous functions. for instance, the inputs of the above list of problems are usually ""categorial"" in nature - this is why i have heard that problems belong to the above list usually require ""gradient free optimization methods"" (e.g. evolutionary algorithms, branch and bound, etc.) , since it is impossible to take the derivatives of the objective functions corresponding to these problems.

for example, if you take problems such as **""travelling salesman"" or ""knapsack optimization""** (note: i have heard that these problems belong on the above list, but i am not sure), i would visualize the objective function as something like this:

&#x200b;

&#x200b;



 

this leads me to the following question:

* are 4 types of optimizations on the above list effectively the ""same thing""? the way i see it, all 4 types of these problems have ""discrete inputs"" and in a mathematical sense, ""integers"" are always considered as ""discrete"". in all 4 types of problems, we are interested in finding out a ""discrete combination"" of inputs - i.e. ""combinatorial"". thus, **are 4 types of optimizations on the above list effectively the ""same thing""?**
* i have heard the argument that ""any optimization problem that can be formulated into a linear problem is always convex (because linear objective functions are always convex)"". if we consider continuous optimization problems - we usually say that ""convex optimization problems are easier than non-convex optimization problems"" because non-convex functions can have ""saddle points"" that can result in the optimization algorithm getting stuck in these ""saddle points"". using this logic, i have seen the objective function of the ""travelling salesman problem"" being written as a linear function and thus the ""travelling salesman problem"" being considered as a convex optimization problem - i have also heard of the ""travelling salesman problem"" is a very difficult problem to solve. **if the ""travelling salesman problem"" is convex and difficult to solve - does this imply that there are non-convex discrete/combinatorial problems that are even more difficult to solve?**
* i have heard the following argument: discrete/combinatorial optimization problems are more difficult to solve compared to continuous optimization problems. this is apparently because discrete/combinatorial optimization problems involve ""treating the problem as a continuous problem"" to first come up with a solution, and then determine if the solution lies within the feasible region - thus effectively solving two optimization problems in one. **is this correct?**
* finally, i have seen both ""travelling salesman"" and ""knapsack optimization"" being formulated as a linear problem and therefore as convex. **are there any well known examples of non-convex discrete/combinatorial optimization problems?**

thanks!",1644002463.0,"['background', 'optimization', 'try', 'teach', 'topic', '.', 'find', 'lot', 'trouble', 'understand', 'different', '``', 'type', ""''"", 'optimization', 'problem', 'exist', '.', 'example', ',', 'understand', 'idea', 'optimize', 'continuous', 'function', '(', 'e.g', '.', '=', 'x\\^2', ')', '-', 'example', ',', 'could', 'interested', 'find', 'value', '``', 'x', ""''"", 'result', 'small', 'value', '``', ""''"", '.', 'also', 'understand', 'continuous', 'function', 'optimize', 'subject', 'constraint', '.', 'however', ',', 'find', 'confuse', 'try', 'sort', 'follow', 'type', 'optimization', 'problem', ':', '*', '*', '*', 'discrete', 'optimization', '*', '*', '*', '*', '*', 'integer', 'optimization', '*', '*', '*', '*', '*', 'mixed', 'integer', 'optimization', '*', '*', '*', '*', '*', 'combinatorial', 'optimization', '*', '*', 'think', 'problem', ',', 'first', 'thing', 'come', 'mind', 'fundamentally', 'different', 'optimize', 'continuous', 'function', '.', 'instance', ',', 'input', 'list', 'problem', 'usually', '``', 'categorial', ""''"", 'nature', '-', 'heard', 'problem', 'belong', 'list', 'usually', 'require', '``', 'gradient', 'free', 'optimization', 'method', ""''"", '(', 'e.g', '.', 'evolutionary', 'algorithm', ',', 'branch', 'bound', ',', 'etc', '.', ')', ',', 'since', 'impossible', 'take', 'derivative', 'objective', 'function', 'correspond', 'problem', '.', 'example', ',', 'take', 'problem', '*', '*', ""''"", 'travel', 'salesman', ""''"", '``', 'knapsack', 'optimization', ""''"", '*', '*', '(', 'note', ':', 'heard', 'problem', 'belong', 'list', ',', 'sure', ')', ',', 'would', 'visualize', 'objective', 'function', 'something', 'like', ':', '&', '#', 'x200b', ';', '&', '#', 'x200b', ';', 'lead', 'follow', 'question', ':', '*', '4', 'type', 'optimization', 'list', 'effectively', '``', 'thing', ""''"", '?', 'way', 'see', ',', '4', 'type', 'problem', '``', 'discrete', 'input', ""''"", 'mathematical', 'sense', ',', '``', 'integer', ""''"", 'always', 'consider', '``', 'discrete', ""''"", '.', '4', 'type', 'problem', ',', 'interested', 'find', '``', 'discrete', 'combination', ""''"", 'input', '-', 'i.e', '.', '``', 'combinatorial', ""''"", '.', 'thus', ',', '*', '*', '4', 'type', 'optimization', 'list', 'effectively', '``', 'thing', ""''"", '?', '*', '*', '*', 'heard', 'argument', '``', 'optimization', 'problem', 'formulate', 'linear', 'problem', 'always', 'convex', '(', 'linear', 'objective', 'function', 'always', 'convex', ')', ""''"", '.', 'consider', 'continuous', 'optimization', 'problem', '-', 'usually', 'say', '``', 'convex', 'optimization', 'problem', 'easy', 'non-convex', 'optimization', 'problem', ""''"", 'non-convex', 'function', '``', 'saddle', 'point', ""''"", 'result', 'optimization', 'algorithm', 'get', 'stuck', '``', 'saddle', 'point', ""''"", '.', 'use', 'logic', ',', 'see', 'objective', 'function', '``', 'travel', 'salesman', 'problem', ""''"", 'write', 'linear', 'function', 'thus', '``', 'travel', 'salesman', 'problem', ""''"", 'consider', 'convex', 'optimization', 'problem', '-', 'also', 'heard', '``', 'travel', 'salesman', 'problem', ""''"", 'difficult', 'problem', 'solve', '.', '*', '*', '``', 'travel', 'salesman', 'problem', ""''"", 'convex', 'difficult', 'solve', '-', 'imply', 'non-convex', 'discrete/combinatorial', 'problem', 'even', 'difficult', 'solve', '?', '*', '*', '*', 'heard', 'follow', 'argument', ':', 'discrete/combinatorial', 'optimization', 'problem', 'difficult', 'solve', 'compare', 'continuous', 'optimization', 'problem', '.', 'apparently', 'discrete/combinatorial', 'optimization', 'problem', 'involve', '``', 'treat', 'problem', 'continuous', 'problem', ""''"", 'first', 'come', 'solution', ',', 'determine', 'solution', 'lie', 'within', 'feasible', 'region', '-', 'thus', 'effectively', 'solve', 'two', 'optimization', 'problem', 'one', '.', '*', '*', 'correct', '?', '*', '*', '*', 'finally', ',', 'see', '``', 'travel', 'salesman', ""''"", '``', 'knapsack', 'optimization', ""''"", 'formulate', 'linear', 'problem', 'therefore', 'convex', '.', '*', '*', 'well', 'know', 'example', 'non-convex', 'discrete/combinatorial', 'optimization', 'problem', '?', '*', '*', 'thanks', '!']","[[('background', 'NN')], [('optimization', 'NN')], [('trying', 'VBG')], [('teach', 'NN')], [('topic', 'NN')], [('.', '.')], [('find', 'VB')], [('lot', 'NN')], [('trouble', 'NN')], [('understanding', 'VBG')], [('different', 'JJ')], [('``', '``')], [('types', 'NNS')], [(""''"", ""''"")], [('optimization', 'NN')], [('problems', 'NNS')], [('exist', 'NN')], [('.', '.')], [('example', 'NN')], [(',', ',')], [('understand', 'NN')], [('idea', 'NN')], [('optimizing', 'VBG')], [('continuous', 'JJ')], [('functions', 'NNS')], [('(', '(')], [('e.g', 'NN')], [('.', '.')], [('=', 'NN')], [('x\\^2', 'NN')], [(')', ')')], [('-', ':')], [('example', 'NN')], [(',', ',')], [('could', 'MD')], [('interested', 'JJ')], [('finding', 'VBG')], [('value', 'NN')], [('``', '``')], [('x', 'NN')], [(""''"", ""''"")], [('results', 'NNS')], [('smallest', 'JJS')], [('value', 'NN')], [('``', '``')], [(""''"", ""''"")], [('.', '.')], [('also', 'RB')], [('understand', 'NN')], [('continuous', 'JJ')], [('functions', 'NNS')], [('optimized', 'VBN')], [('subject', 'NN')], [('constraints', 'NNS')], [('.', '.')], [('however', 'RB')], [(',', ',')], [('find', 'VB')], [('confused', 'VBN')], [('trying', 'VBG')], [('sort', 'NN')], [('following', 'VBG')], [('types', 'NNS')], [('optimization', 'NN')], [('problems', 'NNS')], [(':', ':')], [('*', 'NN')], [('*', 'NN')], [('*', 'NN')], [('discrete', 'NN')], [('optimization', 'NN')], [('*', 'NN')], [('*', 'NN')], [('*', 'NN')], [('*', 'NN')], [('*', 'NN')], [('integer', 'NN')], [('optimization', 'NN')], [('*', 'NN')], [('*', 'NN')], [('*', 'NN')], [('*', 'NN')], [('*', 'NN')], [('mixed', 'JJ')], [('integer', 'NN')], [('optimization', 'NN')], [('*', 'NN')], [('*', 'NN')], [('*', 'NN')], [('*', 'NN')], [('*', 'NN')], [('combinatorial', 'NN')], [('optimization', 'NN')], [('*', 'NN')], [('*', 'NN')], [('think', 'NN')], [('problems', 'NNS')], [(',', ',')], [('first', 'RB')], [('thing', 'NN')], [('comes', 'VBZ')], [('mind', 'NN')], [('fundamentally', 'RB')], [('different', 'JJ')], [('optimizing', 'VBG')], [('continuous', 'JJ')], [('functions', 'NNS')], [('.', '.')], [('instance', 'NN')], [(',', ',')], [('inputs', 'NNS')], [('list', 'NN')], [('problems', 'NNS')], [('usually', 'RB')], [('``', '``')], [('categorial', 'NN')], [(""''"", ""''"")], [('nature', 'NN')], [('-', ':')], [('heard', 'NN')], [('problems', 'NNS')], [('belong', 'NN')], [('list', 'NN')], [('usually', 'RB')], [('require', 'NN')], [('``', '``')], [('gradient', 'NN')], [('free', 'JJ')], [('optimization', 'NN')], [('methods', 'NNS')], [(""''"", ""''"")], [('(', '(')], [('e.g', 'NN')], [('.', '.')], [('evolutionary', 'JJ')], [('algorithms', 'NN')], [(',', ',')], [('branch', 'NN')], [('bound', 'NN')], [(',', ',')], [('etc', 'NN')], [('.', '.')], [(')', ')')], [(',', ',')], [('since', 'IN')], [('impossible', 'JJ')], [('take', 'VB')], [('derivatives', 'NNS')], [('objective', 'NN')], [('functions', 'NNS')], [('corresponding', 'VBG')], [('problems', 'NNS')], [('.', '.')], [('example', 'NN')], [(',', ',')], [('take', 'VB')], [('problems', 'NNS')], [('*', 'NN')], [('*', 'NN')], [(""''"", ""''"")], [('travelling', 'VBG')], [('salesman', 'NN')], [(""''"", ""''"")], [('``', '``')], [('knapsack', 'NN')], [('optimization', 'NN')], [(""''"", ""''"")], [('*', 'NN')], [('*', 'NN')], [('(', '(')], [('note', 'NN')], [(':', ':')], [('heard', 'NN')], [('problems', 'NNS')], [('belong', 'NN')], [('list', 'NN')], [(',', ',')], [('sure', 'NN')], [(')', ')')], [(',', ',')], [('would', 'MD')], [('visualize', 'NN')], [('objective', 'NN')], [('function', 'NN')], [('something', 'NN')], [('like', 'IN')], [(':', ':')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('leads', 'NNS')], [('following', 'VBG')], [('question', 'NN')], [(':', ':')], [('*', 'NN')], [('4', 'CD')], [('types', 'NNS')], [('optimizations', 'NNS')], [('list', 'NN')], [('effectively', 'RB')], [('``', '``')], [('thing', 'NN')], [(""''"", ""''"")], [('?', '.')], [('way', 'NN')], [('see', 'VB')], [(',', ',')], [('4', 'CD')], [('types', 'NNS')], [('problems', 'NNS')], [('``', '``')], [('discrete', 'NN')], [('inputs', 'NNS')], [(""''"", ""''"")], [('mathematical', 'JJ')], [('sense', 'NN')], [(',', ',')], [('``', '``')], [('integers', 'NNS')], [(""''"", ""''"")], [('always', 'RB')], [('considered', 'VBN')], [('``', '``')], [('discrete', 'NN')], [(""''"", ""''"")], [('.', '.')], [('4', 'CD')], [('types', 'NNS')], [('problems', 'NNS')], [(',', ',')], [('interested', 'JJ')], [('finding', 'VBG')], [('``', '``')], [('discrete', 'NN')], [('combination', 'NN')], [(""''"", ""''"")], [('inputs', 'NNS')], [('-', ':')], [('i.e', 'NN')], [('.', '.')], [('``', '``')], [('combinatorial', 'NN')], [(""''"", ""''"")], [('.', '.')], [('thus', 'RB')], [(',', ',')], [('*', 'NN')], [('*', 'NN')], [('4', 'CD')], [('types', 'NNS')], [('optimizations', 'NNS')], [('list', 'NN')], [('effectively', 'RB')], [('``', '``')], [('thing', 'NN')], [(""''"", ""''"")], [('?', '.')], [('*', 'NN')], [('*', 'NN')], [('*', 'NN')], [('heard', 'NN')], [('argument', 'NN')], [('``', '``')], [('optimization', 'NN')], [('problem', 'NN')], [('formulated', 'VBN')], [('linear', 'NN')], [('problem', 'NN')], [('always', 'RB')], [('convex', 'NN')], [('(', '(')], [('linear', 'NN')], [('objective', 'NN')], [('functions', 'NNS')], [('always', 'RB')], [('convex', 'NN')], [(')', ')')], [(""''"", ""''"")], [('.', '.')], [('consider', 'VB')], [('continuous', 'JJ')], [('optimization', 'NN')], [('problems', 'NNS')], [('-', ':')], [('usually', 'RB')], [('say', 'VB')], [('``', '``')], [('convex', 'NN')], [('optimization', 'NN')], [('problems', 'NNS')], [('easier', 'JJR')], [('non-convex', 'JJ')], [('optimization', 'NN')], [('problems', 'NNS')], [(""''"", ""''"")], [('non-convex', 'JJ')], [('functions', 'NNS')], [('``', '``')], [('saddle', 'NN')], [('points', 'NNS')], [(""''"", ""''"")], [('result', 'NN')], [('optimization', 'NN')], [('algorithm', 'NN')], [('getting', 'VBG')], [('stuck', 'NN')], [('``', '``')], [('saddle', 'NN')], [('points', 'NNS')], [(""''"", ""''"")], [('.', '.')], [('using', 'VBG')], [('logic', 'NN')], [(',', ',')], [('seen', 'VBN')], [('objective', 'NN')], [('function', 'NN')], [('``', '``')], [('travelling', 'VBG')], [('salesman', 'NN')], [('problem', 'NN')], [(""''"", ""''"")], [('written', 'VBN')], [('linear', 'NN')], [('function', 'NN')], [('thus', 'RB')], [('``', '``')], [('travelling', 'VBG')], [('salesman', 'NN')], [('problem', 'NN')], [(""''"", ""''"")], [('considered', 'VBN')], [('convex', 'NN')], [('optimization', 'NN')], [('problem', 'NN')], [('-', ':')], [('also', 'RB')], [('heard', 'NN')], [('``', '``')], [('travelling', 'VBG')], [('salesman', 'NN')], [('problem', 'NN')], [(""''"", ""''"")], [('difficult', 'JJ')], [('problem', 'NN')], [('solve', 'NN')], [('.', '.')], [('*', 'NN')], [('*', 'NN')], [('``', '``')], [('travelling', 'VBG')], [('salesman', 'NN')], [('problem', 'NN')], [(""''"", ""''"")], [('convex', 'NN')], [('difficult', 'JJ')], [('solve', 'NN')], [('-', ':')], [('imply', 'NN')], [('non-convex', 'JJ')], [('discrete/combinatorial', 'NN')], [('problems', 'NNS')], [('even', 'RB')], [('difficult', 'JJ')], [('solve', 'NN')], [('?', '.')], [('*', 'NN')], [('*', 'NN')], [('*', 'NN')], [('heard', 'NN')], [('following', 'VBG')], [('argument', 'NN')], [(':', ':')], [('discrete/combinatorial', 'NN')], [('optimization', 'NN')], [('problems', 'NNS')], [('difficult', 'JJ')], [('solve', 'NN')], [('compared', 'VBN')], [('continuous', 'JJ')], [('optimization', 'NN')], [('problems', 'NNS')], [('.', '.')], [('apparently', 'RB')], [('discrete/combinatorial', 'NN')], [('optimization', 'NN')], [('problems', 'NNS')], [('involve', 'NN')], [('``', '``')], [('treating', 'VBG')], [('problem', 'NN')], [('continuous', 'JJ')], [('problem', 'NN')], [(""''"", ""''"")], [('first', 'RB')], [('come', 'VB')], [('solution', 'NN')], [(',', ',')], [('determine', 'NN')], [('solution', 'NN')], [('lies', 'NNS')], [('within', 'IN')], [('feasible', 'JJ')], [('region', 'NN')], [('-', ':')], [('thus', 'RB')], [('effectively', 'RB')], [('solving', 'VBG')], [('two', 'CD')], [('optimization', 'NN')], [('problems', 'NNS')], [('one', 'CD')], [('.', '.')], [('*', 'NN')], [('*', 'NN')], [('correct', 'NN')], [('?', '.')], [('*', 'NN')], [('*', 'NN')], [('*', 'NN')], [('finally', 'RB')], [(',', ',')], [('seen', 'VBN')], [('``', '``')], [('travelling', 'VBG')], [('salesman', 'NN')], [(""''"", ""''"")], [('``', '``')], [('knapsack', 'NN')], [('optimization', 'NN')], [(""''"", ""''"")], [('formulated', 'VBN')], [('linear', 'NN')], [('problem', 'NN')], [('therefore', 'RB')], [('convex', 'NN')], [('.', '.')], [('*', 'NN')], [('*', 'NN')], [('well', 'RB')], [('known', 'VBN')], [('examples', 'NNS')], [('non-convex', 'JJ')], [('discrete/combinatorial', 'NN')], [('optimization', 'NN')], [('problems', 'NNS')], [('?', '.')], [('*', 'NN')], [('*', 'NN')], [('thanks', 'NNS')], [('!', '.')]]","background optimization try teach topic . find lot trouble understand different `` type '' optimization problem exist . example , understand idea optimize continuous function ( e.g . = x\^2 ) - example , could interested find value `` x '' result small value `` '' . also understand continuous function optimize subject constraint . however , find confuse try sort follow type optimization problem : * * * discrete optimization * * * * * integer optimization * * * * * mixed integer optimization * * * * * combinatorial optimization * * think problem , first thing come mind fundamentally different optimize continuous function . instance , input list problem usually `` categorial '' nature - heard problem belong list usually require `` gradient free optimization method '' ( e.g . evolutionary algorithm , branch bound , etc . ) , since impossible take derivative objective function correspond problem . example , take problem * * '' travel salesman '' `` knapsack optimization '' * * ( note : heard problem belong list , sure ) , would visualize objective function something like : & # x200b ; & # x200b ; lead follow question : * 4 type optimization list effectively `` thing '' ? way see , 4 type problem `` discrete input '' mathematical sense , `` integer '' always consider `` discrete '' . 4 type problem , interested find `` discrete combination '' input - i.e . `` combinatorial '' . thus , * * 4 type optimization list effectively `` thing '' ? * * * heard argument `` optimization problem formulate linear problem always convex ( linear objective function always convex ) '' . consider continuous optimization problem - usually say `` convex optimization problem easy non-convex optimization problem '' non-convex function `` saddle point '' result optimization algorithm get stuck `` saddle point '' . use logic , see objective function `` travel salesman problem '' write linear function thus `` travel salesman problem '' consider convex optimization problem - also heard `` travel salesman problem '' difficult problem solve . * * `` travel salesman problem '' convex difficult solve - imply non-convex discrete/combinatorial problem even difficult solve ? * * * heard follow argument : discrete/combinatorial optimization problem difficult solve compare continuous optimization problem . apparently discrete/combinatorial optimization problem involve `` treat problem continuous problem '' first come solution , determine solution lie within feasible region - thus effectively solve two optimization problem one . * * correct ? * * * finally , see `` travel salesman '' `` knapsack optimization '' formulate linear problem therefore convex . * * well know example non-convex discrete/combinatorial optimization problem ? * * thanks !",-1_abazbz2abz_2520_problem_use,3
139,skp5fm,Equivalent propositions to P=NP that are not complexity theoretical?,,9,0.86,computerscience,https://www.reddit.com/r/computerscience/comments/skp5fm/equivalent_propositions_to_pnp_that_are_not/,2,"hello all,

so obviously, existence of a polynomial time algorithm for an np-complete problem is equivalent to p=np. and there are many other ways where you can talk about a program running in some time, and if such a program exists or does not exist determines if p=np.

i wanted to ask if there are other equivalent formulations of the p=?np question that does not make reference to turing machines, computation times or whatever. i actually want to ask how much non-complexity/computation theoretical a formulation can one give. i do not know how this could be, except that i think the whole thing is expressible as a statement about proof lengths in formal systems, but am not sure. would like to hear any and all ideas!

hope it makes sense.

thanks.",1644010816.0,"['hello', ',', 'obviously', ',', 'existence', 'polynomial', 'time', 'algorithm', 'np-complete', 'problem', 'equivalent', 'p=np', '.', 'many', 'way', 'talk', 'program', 'run', 'time', ',', 'program', 'exists', 'exist', 'determines', 'p=np', '.', 'want', 'ask', 'equivalent', 'formulation', 'p=', '?', 'np', 'question', 'make', 'reference', 'turing', 'machine', ',', 'computation', 'time', 'whatever', '.', 'actually', 'want', 'ask', 'much', 'non-complexity/computation', 'theoretical', 'formulation', 'one', 'give', '.', 'know', 'could', ',', 'except', 'think', 'whole', 'thing', 'expressible', 'statement', 'proof', 'length', 'formal', 'system', ',', 'sure', '.', 'would', 'like', 'hear', 'idea', '!', 'hope', 'make', 'sense', '.', 'thanks', '.']","[[('hello', 'NN')], [(',', ',')], [('obviously', 'RB')], [(',', ',')], [('existence', 'NN')], [('polynomial', 'NN')], [('time', 'NN')], [('algorithm', 'NN')], [('np-complete', 'JJ')], [('problem', 'NN')], [('equivalent', 'NN')], [('p=np', 'NN')], [('.', '.')], [('many', 'JJ')], [('ways', 'NNS')], [('talk', 'NN')], [('program', 'NN')], [('running', 'VBG')], [('time', 'NN')], [(',', ',')], [('program', 'NN')], [('exists', 'NNS')], [('exist', 'NN')], [('determines', 'NNS')], [('p=np', 'NN')], [('.', '.')], [('wanted', 'VBD')], [('ask', 'NN')], [('equivalent', 'NN')], [('formulations', 'NNS')], [('p=', 'NN')], [('?', '.')], [('np', 'NN')], [('question', 'NN')], [('make', 'VB')], [('reference', 'NN')], [('turing', 'VBG')], [('machines', 'NNS')], [(',', ',')], [('computation', 'NN')], [('times', 'NNS')], [('whatever', 'WDT')], [('.', '.')], [('actually', 'RB')], [('want', 'NN')], [('ask', 'NN')], [('much', 'JJ')], [('non-complexity/computation', 'NN')], [('theoretical', 'JJ')], [('formulation', 'NN')], [('one', 'CD')], [('give', 'VB')], [('.', '.')], [('know', 'VB')], [('could', 'MD')], [(',', ',')], [('except', 'IN')], [('think', 'NN')], [('whole', 'JJ')], [('thing', 'NN')], [('expressible', 'JJ')], [('statement', 'NN')], [('proof', 'NN')], [('lengths', 'NNS')], [('formal', 'JJ')], [('systems', 'NNS')], [(',', ',')], [('sure', 'NN')], [('.', '.')], [('would', 'MD')], [('like', 'IN')], [('hear', 'NN')], [('ideas', 'NNS')], [('!', '.')], [('hope', 'NN')], [('makes', 'VBZ')], [('sense', 'NN')], [('.', '.')], [('thanks', 'NNS')], [('.', '.')]]","hello , obviously , existence polynomial time algorithm np-complete problem equivalent p=np . many way talk program run time , program exists exist determines p=np . want ask equivalent formulation p= ? np question make reference turing machine , computation time whatever . actually want ask much non-complexity/computation theoretical formulation one give . know could , except think whole thing expressible statement proof length formal system , sure . would like hear idea ! hope make sense . thanks .",0_algorithm_time_node_bill,1
140,sksa9m,"Strengths and Weaknesses of ""Branch and Bound"" Algorithm",,3,0.81,computerscience,https://www.reddit.com/r/computerscience/comments/sksa9m/strengths_and_weaknesses_of_branch_and_bound/,0,"i am trying to better understand the strengths and weaknesses of the branch and bound algorithm that is often used in search and optimization.

for instance, i have heard that branch and bound algorithm can take more time than evolutionary algorithms, but in turn also has the ability to provide exact solutions compared to approximate solutions.

can someone please comment on this - is this correct?

thanks!",1644018691.0,"['try', 'well', 'understand', 'strength', 'weakness', 'branch', 'bound', 'algorithm', 'often', 'use', 'search', 'optimization', '.', 'instance', ',', 'heard', 'branch', 'bound', 'algorithm', 'take', 'time', 'evolutionary', 'algorithm', ',', 'turn', 'also', 'ability', 'provide', 'exact', 'solution', 'compare', 'approximate', 'solution', '.', 'someone', 'please', 'comment', '-', 'correct', '?', 'thanks', '!']","[[('trying', 'VBG')], [('better', 'RBR')], [('understand', 'NN')], [('strengths', 'NNS')], [('weaknesses', 'NNS')], [('branch', 'NN')], [('bound', 'NN')], [('algorithm', 'NN')], [('often', 'RB')], [('used', 'VBN')], [('search', 'NN')], [('optimization', 'NN')], [('.', '.')], [('instance', 'NN')], [(',', ',')], [('heard', 'NN')], [('branch', 'NN')], [('bound', 'NN')], [('algorithm', 'NN')], [('take', 'VB')], [('time', 'NN')], [('evolutionary', 'JJ')], [('algorithms', 'NN')], [(',', ',')], [('turn', 'NN')], [('also', 'RB')], [('ability', 'NN')], [('provide', 'NN')], [('exact', 'NN')], [('solutions', 'NNS')], [('compared', 'VBN')], [('approximate', 'NN')], [('solutions', 'NNS')], [('.', '.')], [('someone', 'NN')], [('please', 'NN')], [('comment', 'NN')], [('-', ':')], [('correct', 'NN')], [('?', '.')], [('thanks', 'NNS')], [('!', '.')]]","try well understand strength weakness branch bound algorithm often use search optimization . instance , heard branch bound algorithm take time evolutionary algorithm , turn also ability provide exact solution compare approximate solution . someone please comment - correct ? thanks !",0_algorithm_time_node_bill,4
141,sk7puv,Behaviour of TCP and UDP traffic on the same network,,25,0.94,computerscience,https://www.reddit.com/r/computerscience/comments/sk7puv/behaviour_of_tcp_and_udp_traffic_on_the_same/,4,"so, as we all know , one of the main advantages that tcp has over udp is its flow control mechanism, namely it will reduce its packet ack buffer if it detects a high number of packet loss, while udp just does not care. 
 
how does this translate to a bottleneck situation where a router is overwhelmed with both tcp and udp traffic? 

will the tcp traffic reduce its transmission rate while the udp traffic will then dominate the network?

e.g. let us say router has a 1.000 kbps bandwidth, there is an incoming 800 kbps  of tcp traffic and 800 kbps of udp traffic, how will the network settle?

my intuition says that eventually the tcp traffic will be reduced down to 200 kbps while the udp traffic stays at 800kbps",1643961054.0,"[',', 'know', ',', 'one', 'main', 'advantage', 'tcp', 'udp', 'flow', 'control', 'mechanism', ',', 'namely', 'reduce', 'packet', 'ack', 'buffer', 'detects', 'high', 'number', 'packet', 'loss', ',', 'udp', 'care', '.', 'translate', 'bottleneck', 'situation', 'router', 'overwhelmed', 'tcp', 'udp', 'traffic', '?', 'tcp', 'traffic', 'reduce', 'transmission', 'rate', 'udp', 'traffic', 'dominate', 'network', '?', 'e.g', '.', 'let', 'u', 'say', 'router', '1.000', 'kbps', 'bandwidth', ',', 'incoming', '800', 'kbps', 'tcp', 'traffic', '800', 'kbps', 'udp', 'traffic', ',', 'network', 'settle', '?', 'intuition', 'say', 'eventually', 'tcp', 'traffic', 'reduce', '200', 'kbps', 'udp', 'traffic', 'stay', '800kbps']","[[(',', ',')], [('know', 'VB')], [(',', ',')], [('one', 'CD')], [('main', 'JJ')], [('advantages', 'NNS')], [('tcp', 'NN')], [('udp', 'NN')], [('flow', 'NN')], [('control', 'NN')], [('mechanism', 'NN')], [(',', ',')], [('namely', 'RB')], [('reduce', 'VB')], [('packet', 'NN')], [('ack', 'NN')], [('buffer', 'NN')], [('detects', 'NNS')], [('high', 'JJ')], [('number', 'NN')], [('packet', 'NN')], [('loss', 'NN')], [(',', ',')], [('udp', 'NN')], [('care', 'NN')], [('.', '.')], [('translate', 'NN')], [('bottleneck', 'NN')], [('situation', 'NN')], [('router', 'NN')], [('overwhelmed', 'JJ')], [('tcp', 'NN')], [('udp', 'NN')], [('traffic', 'NN')], [('?', '.')], [('tcp', 'NN')], [('traffic', 'NN')], [('reduce', 'VB')], [('transmission', 'NN')], [('rate', 'NN')], [('udp', 'NN')], [('traffic', 'NN')], [('dominate', 'NN')], [('network', 'NN')], [('?', '.')], [('e.g', 'NN')], [('.', '.')], [('let', 'VB')], [('us', 'PRP')], [('say', 'VB')], [('router', 'NN')], [('1.000', 'CD')], [('kbps', 'NN')], [('bandwidth', 'NN')], [(',', ',')], [('incoming', 'VBG')], [('800', 'CD')], [('kbps', 'NN')], [('tcp', 'NN')], [('traffic', 'NN')], [('800', 'CD')], [('kbps', 'NN')], [('udp', 'NN')], [('traffic', 'NN')], [(',', ',')], [('network', 'NN')], [('settle', 'VB')], [('?', '.')], [('intuition', 'NN')], [('says', 'VBZ')], [('eventually', 'RB')], [('tcp', 'NN')], [('traffic', 'NN')], [('reduced', 'VBN')], [('200', 'CD')], [('kbps', 'NN')], [('udp', 'NN')], [('traffic', 'NN')], [('stays', 'NNS')], [('800kbps', 'CD')]]",", know , one main advantage tcp udp flow control mechanism , namely reduce packet ack buffer detects high number packet loss , udp care . translate bottleneck situation router overwhelmed tcp udp traffic ? tcp traffic reduce transmission rate udp traffic dominate network ? e.g . let u say router 1.000 kbps bandwidth , incoming 800 kbps tcp traffic 800 kbps udp traffic , network settle ? intuition say eventually tcp traffic reduce 200 kbps udp traffic stay 800kbps",6_server_packet_key_hash,3
142,skkkmf,Would you for sure get equal distribution of digits coming out of a TRNG?,Discussion,1,1.0,computerscience,https://www.reddit.com/r/computerscience/comments/skkkmf/would_you_for_sure_get_equal_distribution_of/,6,"if we ran 10,000,000 cycles would we see a million of each digit, if we are just generating digits?",1643999377.0,"['ran', '10,000,000', 'cycle', 'would', 'see', 'million', 'digit', ',', 'generate', 'digit', '?']","[[('ran', 'NN')], [('10,000,000', 'CD')], [('cycles', 'NNS')], [('would', 'MD')], [('see', 'VB')], [('million', 'CD')], [('digit', 'NN')], [(',', ',')], [('generating', 'VBG')], [('digits', 'NNS')], [('?', '.')]]","ran 10,000,000 cycle would see million digit , generate digit ?",1_memory_byte_data_alignment,2
143,sk80jv,Help with analysing time complexity of Karatsuba Algorithm.,,2,0.67,computerscience,https://www.reddit.com/r/computerscience/comments/sk80jv/help_with_analysing_time_complexity_of_karatsuba/,2,"i have done this much so far. i cannot proceed further. i computed the amount of work required for each step and added them all together. 
the no of steps are log2(n) and the summation of work done on each step forms a geometric progression.

",1643962179.0,"['do', 'much', 'far', '.', 'proceed', '.', 'compute', 'amount', 'work', 'require', 'step', 'add', 'together', '.', 'step', 'log2', '(', 'n', ')', 'summation', 'work', 'do', 'step', 'form', 'geometric', 'progression', '.']","[[('done', 'VBN')], [('much', 'JJ')], [('far', 'RB')], [('.', '.')], [('proceed', 'NN')], [('.', '.')], [('computed', 'VBN')], [('amount', 'NN')], [('work', 'NN')], [('required', 'VBN')], [('step', 'NN')], [('added', 'VBD')], [('together', 'RB')], [('.', '.')], [('steps', 'NNS')], [('log2', 'NN')], [('(', '(')], [('n', 'NN')], [(')', ')')], [('summation', 'NN')], [('work', 'NN')], [('done', 'VBN')], [('step', 'NN')], [('forms', 'NNS')], [('geometric', 'NN')], [('progression', 'NN')], [('.', '.')]]",do much far . proceed . compute amount work require step add together . step log2 ( n ) summation work do step form geometric progression .,0_algorithm_time_node_bill,5
144,sjn3gy,Estimating the Run Time of the Travelling Salesman Problem,,34,0.91,computerscience,https://www.reddit.com/r/computerscience/comments/sjn3gy/estimating_the_run_time_of_the_travelling/,7,"the ""travelling salesman problem"" is a problem where a person has to travel between ""n"" cities - but choose the itinerary such that:

* each city is visited only once
* the total distance travelled is minimized

i have heard that if a modern computer were the solve this problem using ""brute force"" (i.e. an exact solution) - if there are more than 15 cities, the time taken by the computer will exceed a hundred years!

i am interested in understanding ""how do we estimate the amount of time it will take for a computer to solve the travelling salesman problem (using ""brute force"") as the number of cities increase"". for instance, from the following reference ([-and-planetary-sciences/traveling-salesman-problem](-and-planetary-sciences/traveling-salesman-problem)):

&#x200b;

&#x200b;



**my question:** is there some formula we can use to estimate the number of time it will take a computer to solve travelling salesman using ""brute force""? for example:

* n cities = n! paths
* each of these n! paths will require ""n"" calculations
* thus, n \* n calculations would be required for the computer to check all paths and then be certain that the shortest path has been found : if we know the time each calculation takes, perhaps we could estimate the total run time as ""time per calculation \* n\*n! ""
* but i am not sure if this factors in the time to ""store and compare"" calculations.

**can someone please explain this?**

thanks!",1643904849.0,"['``', 'travel', 'salesman', 'problem', ""''"", 'problem', 'person', 'travel', '``', 'n', ""''"", 'city', '-', 'choose', 'itinerary', ':', '*', 'city', 'visit', '*', 'total', 'distance', 'travel', 'minimize', 'heard', 'modern', 'computer', 'solve', 'problem', 'use', '``', 'brute', 'force', ""''"", '(', 'i.e', '.', 'exact', 'solution', ')', '-', '15', 'city', ',', 'time', 'take', 'computer', 'exceed', 'hundred', 'year', '!', 'interested', 'understand', '``', 'estimate', 'amount', 'time', 'take', 'computer', 'solve', 'travel', 'salesman', 'problem', '(', 'use', '``', 'brute', 'force', ""''"", ')', 'number', 'city', 'increase', ""''"", '.', 'instance', ',', 'follow', 'reference', '(', '[', '-and-planetary-sciences/traveling-salesman-problem', ']', '(', '-and-planetary-sciences/traveling-salesman-problem', ')', ')', ':', '&', '#', 'x200b', ';', '&', '#', 'x200b', ';', '*', '*', 'question', ':', '*', '*', 'formula', 'use', 'estimate', 'number', 'time', 'take', 'computer', 'solve', 'travel', 'salesman', 'use', '``', 'brute', 'force', ""''"", '?', 'example', ':', '*', 'n', 'city', '=', 'n', '!', 'path', '*', 'n', '!', 'path', 'require', '``', 'n', ""''"", 'calculation', '*', 'thus', ',', 'n', '\\', '*', 'n', 'calculation', 'would', 'require', 'computer', 'check', 'path', 'certain', 'shortest', 'path', 'found', ':', 'know', 'time', 'calculation', 'take', ',', 'perhaps', 'could', 'estimate', 'total', 'run', 'time', '``', 'time', 'per', 'calculation', '\\', '*', 'n\\', '*', 'n', '!', '``', '*', 'sure', 'factor', 'time', '``', 'store', 'compare', ""''"", 'calculation', '.', '*', '*', 'someone', 'please', 'explain', '?', '*', '*', 'thanks', '!']","[[('``', '``')], [('travelling', 'VBG')], [('salesman', 'NN')], [('problem', 'NN')], [(""''"", ""''"")], [('problem', 'NN')], [('person', 'NN')], [('travel', 'NN')], [('``', '``')], [('n', 'NN')], [(""''"", ""''"")], [('cities', 'NNS')], [('-', ':')], [('choose', 'NN')], [('itinerary', 'NN')], [(':', ':')], [('*', 'NN')], [('city', 'NN')], [('visited', 'VBN')], [('*', 'NN')], [('total', 'JJ')], [('distance', 'NN')], [('travelled', 'VBN')], [('minimized', 'VBN')], [('heard', 'NN')], [('modern', 'JJ')], [('computer', 'NN')], [('solve', 'NN')], [('problem', 'NN')], [('using', 'VBG')], [('``', '``')], [('brute', 'NN')], [('force', 'NN')], [(""''"", ""''"")], [('(', '(')], [('i.e', 'NN')], [('.', '.')], [('exact', 'NN')], [('solution', 'NN')], [(')', ')')], [('-', ':')], [('15', 'CD')], [('cities', 'NNS')], [(',', ',')], [('time', 'NN')], [('taken', 'VBN')], [('computer', 'NN')], [('exceed', 'NN')], [('hundred', 'VBN')], [('years', 'NNS')], [('!', '.')], [('interested', 'JJ')], [('understanding', 'VBG')], [('``', '``')], [('estimate', 'NN')], [('amount', 'NN')], [('time', 'NN')], [('take', 'VB')], [('computer', 'NN')], [('solve', 'NN')], [('travelling', 'VBG')], [('salesman', 'NN')], [('problem', 'NN')], [('(', '(')], [('using', 'VBG')], [('``', '``')], [('brute', 'NN')], [('force', 'NN')], [(""''"", ""''"")], [(')', ')')], [('number', 'NN')], [('cities', 'NNS')], [('increase', 'NN')], [(""''"", ""''"")], [('.', '.')], [('instance', 'NN')], [(',', ',')], [('following', 'VBG')], [('reference', 'NN')], [('(', '(')], [('[', 'NN')], [('-and-planetary-sciences/traveling-salesman-problem', 'NN')], [(']', 'NN')], [('(', '(')], [('-and-planetary-sciences/traveling-salesman-problem', 'NN')], [(')', ')')], [(')', ')')], [(':', ':')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('*', 'NN')], [('*', 'NN')], [('question', 'NN')], [(':', ':')], [('*', 'NN')], [('*', 'NN')], [('formula', 'NN')], [('use', 'NN')], [('estimate', 'NN')], [('number', 'NN')], [('time', 'NN')], [('take', 'VB')], [('computer', 'NN')], [('solve', 'NN')], [('travelling', 'VBG')], [('salesman', 'NN')], [('using', 'VBG')], [('``', '``')], [('brute', 'NN')], [('force', 'NN')], [(""''"", ""''"")], [('?', '.')], [('example', 'NN')], [(':', ':')], [('*', 'NN')], [('n', 'NN')], [('cities', 'NNS')], [('=', 'NN')], [('n', 'NN')], [('!', '.')], [('paths', 'NNS')], [('*', 'NN')], [('n', 'NN')], [('!', '.')], [('paths', 'NNS')], [('require', 'NN')], [('``', '``')], [('n', 'NN')], [(""''"", ""''"")], [('calculations', 'NNS')], [('*', 'NN')], [('thus', 'RB')], [(',', ',')], [('n', 'NN')], [('\\', 'NN')], [('*', 'NN')], [('n', 'NN')], [('calculations', 'NNS')], [('would', 'MD')], [('required', 'VBN')], [('computer', 'NN')], [('check', 'NN')], [('paths', 'NNS')], [('certain', 'JJ')], [('shortest', 'NN')], [('path', 'NN')], [('found', 'NN')], [(':', ':')], [('know', 'VB')], [('time', 'NN')], [('calculation', 'NN')], [('takes', 'VBZ')], [(',', ',')], [('perhaps', 'RB')], [('could', 'MD')], [('estimate', 'NN')], [('total', 'JJ')], [('run', 'VB')], [('time', 'NN')], [('``', '``')], [('time', 'NN')], [('per', 'IN')], [('calculation', 'NN')], [('\\', 'NN')], [('*', 'NN')], [('n\\', 'NN')], [('*', 'NN')], [('n', 'NN')], [('!', '.')], [('``', '``')], [('*', 'NN')], [('sure', 'NN')], [('factors', 'NNS')], [('time', 'NN')], [('``', '``')], [('store', 'NN')], [('compare', 'NN')], [(""''"", ""''"")], [('calculations', 'NNS')], [('.', '.')], [('*', 'NN')], [('*', 'NN')], [('someone', 'NN')], [('please', 'NN')], [('explain', 'NN')], [('?', '.')], [('*', 'NN')], [('*', 'NN')], [('thanks', 'NNS')], [('!', '.')]]","`` travel salesman problem '' problem person travel `` n '' city - choose itinerary : * city visit * total distance travel minimize heard modern computer solve problem use `` brute force '' ( i.e . exact solution ) - 15 city , time take computer exceed hundred year ! interested understand `` estimate amount time take computer solve travel salesman problem ( use `` brute force '' ) number city increase '' . instance , follow reference ( [ -and-planetary-sciences/traveling-salesman-problem ] ( -and-planetary-sciences/traveling-salesman-problem ) ) : & # x200b ; & # x200b ; * * question : * * formula use estimate number time take computer solve travel salesman use `` brute force '' ? example : * n city = n ! path * n ! path require `` n '' calculation * thus , n \ * n calculation would require computer check path certain shortest path found : know time calculation take , perhaps could estimate total run time `` time per calculation \ * n\ * n ! `` * sure factor time `` store compare '' calculation . * * someone please explain ? * * thanks !",0_algorithm_time_node_bill,2
145,skhmpy,Will software engineers become obsolete by 2030?,,0,0.29,computerscience,https://www.reddit.com/r/computerscience/comments/skhmpy/will_software_engineers_become_obsolete_by_2030/,13,with growing technology like ai i fear i will never be able to experience the field since my purpose with be meaningless. my goal was to innovate and create cutting edge technology but that is hard to do when where literally coding our downfall!,1643992282.0,"['grow', 'technology', 'like', 'ai', 'fear', 'never', 'able', 'experience', 'field', 'since', 'purpose', 'meaningless', '.', 'goal', 'innovate', 'create', 'cut', 'edge', 'technology', 'hard', 'literally', 'cod', 'downfall', '!']","[[('growing', 'VBG')], [('technology', 'NN')], [('like', 'IN')], [('ai', 'NN')], [('fear', 'NN')], [('never', 'RB')], [('able', 'JJ')], [('experience', 'NN')], [('field', 'NN')], [('since', 'IN')], [('purpose', 'NN')], [('meaningless', 'NN')], [('.', '.')], [('goal', 'NN')], [('innovate', 'NN')], [('create', 'NN')], [('cutting', 'VBG')], [('edge', 'NN')], [('technology', 'NN')], [('hard', 'JJ')], [('literally', 'RB')], [('coding', 'VBG')], [('downfall', 'NN')], [('!', '.')]]",grow technology like ai fear never able experience field since purpose meaningless . goal innovate create cut edge technology hard literally cod downfall !,-1_abazbz2abz_2520_problem_use,2
146,sjasw0,Is learning low-level engineering useful in building distributed systems?,Advice,15,0.84,computerscience,https://www.reddit.com/r/computerscience/comments/sjasw0/is_learning_lowlevel_engineering_useful_in/,5,"is learning low-level engineering like compiler engineering and other low-level stuff like cpu architecture, operating systems, and assembly any useful while building large-scale distributed systems and backend microservices. i am interested in learning about low-level stuff but i am doubtful whether it would be useful or not. any examples where low-level knowledge can help in distributed systems would be great.",1643865444.0,"['learn', 'low-level', 'engineering', 'like', 'compiler', 'engineering', 'low-level', 'stuff', 'like', 'cpu', 'architecture', ',', 'operating', 'system', ',', 'assembly', 'useful', 'building', 'large-scale', 'distribute', 'system', 'backend', 'microservices', '.', 'interested', 'learn', 'low-level', 'stuff', 'doubtful', 'whether', 'would', 'useful', '.', 'example', 'low-level', 'knowledge', 'help', 'distribute', 'system', 'would', 'great', '.']","[[('learning', 'VBG')], [('low-level', 'NN')], [('engineering', 'NN')], [('like', 'IN')], [('compiler', 'NN')], [('engineering', 'NN')], [('low-level', 'NN')], [('stuff', 'NN')], [('like', 'IN')], [('cpu', 'NN')], [('architecture', 'NN')], [(',', ',')], [('operating', 'NN')], [('systems', 'NNS')], [(',', ',')], [('assembly', 'RB')], [('useful', 'JJ')], [('building', 'NN')], [('large-scale', 'JJ')], [('distributed', 'VBN')], [('systems', 'NNS')], [('backend', 'NN')], [('microservices', 'NNS')], [('.', '.')], [('interested', 'JJ')], [('learning', 'VBG')], [('low-level', 'NN')], [('stuff', 'NN')], [('doubtful', 'NN')], [('whether', 'IN')], [('would', 'MD')], [('useful', 'JJ')], [('.', '.')], [('examples', 'NNS')], [('low-level', 'NN')], [('knowledge', 'NN')], [('help', 'NN')], [('distributed', 'VBN')], [('systems', 'NNS')], [('would', 'MD')], [('great', 'JJ')], [('.', '.')]]","learn low-level engineering like compiler engineering low-level stuff like cpu architecture , operating system , assembly useful building large-scale distribute system backend microservices . interested learn low-level stuff doubtful whether would useful . example low-level knowledge help distribute system would great .",2_computer_learn_science_study,3
147,sjuhh6,A computer's ability to reason,Help,0,0.4,computerscience,https://www.reddit.com/r/computerscience/comments/sjuhh6/a_computers_ability_to_reason/,1,"hello my fellow nerds.

i am trying to track down an older article/study about a computer's ability to interpret a picture.

the picture was of a child in a cowboy hat with a lasso, a cat, and a broken vase. the computer was trying to determine how the vase was broken and was coming up with some strange conclusions.

anyone remember that?",1643922709.0,"['hello', 'fellow', 'nerd', '.', 'try', 'track', 'old', 'article/study', 'computer', ""'s"", 'ability', 'interpret', 'picture', '.', 'picture', 'child', 'cowboy', 'hat', 'lasso', ',', 'cat', ',', 'broken', 'vase', '.', 'computer', 'try', 'determine', 'vase', 'broken', 'come', 'strange', 'conclusion', '.', 'anyone', 'remember', '?']","[[('hello', 'NN')], [('fellow', 'NN')], [('nerds', 'NNS')], [('.', '.')], [('trying', 'VBG')], [('track', 'NN')], [('older', 'JJR')], [('article/study', 'NN')], [('computer', 'NN')], [(""'s"", 'POS')], [('ability', 'NN')], [('interpret', 'NN')], [('picture', 'NN')], [('.', '.')], [('picture', 'NN')], [('child', 'NN')], [('cowboy', 'NN')], [('hat', 'NN')], [('lasso', 'NN')], [(',', ',')], [('cat', 'NN')], [(',', ',')], [('broken', 'NN')], [('vase', 'NN')], [('.', '.')], [('computer', 'NN')], [('trying', 'VBG')], [('determine', 'NN')], [('vase', 'NN')], [('broken', 'NN')], [('coming', 'VBG')], [('strange', 'NN')], [('conclusions', 'NNS')], [('.', '.')], [('anyone', 'NN')], [('remember', 'VB')], [('?', '.')]]","hello fellow nerd . try track old article/study computer 's ability interpret picture . picture child cowboy hat lasso , cat , broken vase . computer try determine vase broken come strange conclusion . anyone remember ?",3_search_ai_think_google,1
148,siux7r,What's the point of studying Group Theory ?,Discussion,46,0.91,computerscience,https://www.reddit.com/r/computerscience/comments/siux7r/whats_the_point_of_studying_group_theory/,23,"i am doing my btech in machine learning ( first semester ) and teachers often stress on getting good grasp on linear algebra concepts and i can see little bit where we are using vector space concept, matrices etc. but professor did not say anything about group theory. i do not see it anywhere till now. but somehow we are studying it.




the thing is i am loving group theory very much. i want to continue with this book of joseph a. gallian but i am afraid if i am wasting my time doing unnecessary. i have never grasped any concept of mathematics as quick as group theory, maybe it is easy whatever but i really like it. will it be any beneficial for me ?",1643824133.0,"['btech', 'machine', 'learn', '(', 'first', 'semester', ')', 'teacher', 'often', 'stress', 'get', 'good', 'grasp', 'linear', 'algebra', 'concept', 'see', 'little', 'bit', 'use', 'vector', 'space', 'concept', ',', 'matrix', 'etc', '.', 'professor', 'say', 'anything', 'group', 'theory', '.', 'see', 'anywhere', 'till', '.', 'somehow', 'study', '.', 'thing', 'love', 'group', 'theory', 'much', '.', 'want', 'continue', 'book', 'joseph', 'a.', 'gallian', 'afraid', 'waste', 'time', 'unnecessary', '.', 'never', 'grasped', 'concept', 'mathematics', 'quick', 'group', 'theory', ',', 'maybe', 'easy', 'whatever', 'really', 'like', '.', 'beneficial', '?']","[[('btech', 'NN')], [('machine', 'NN')], [('learning', 'VBG')], [('(', '(')], [('first', 'RB')], [('semester', 'NN')], [(')', ')')], [('teachers', 'NNS')], [('often', 'RB')], [('stress', 'NN')], [('getting', 'VBG')], [('good', 'JJ')], [('grasp', 'NN')], [('linear', 'NN')], [('algebra', 'NN')], [('concepts', 'NNS')], [('see', 'VB')], [('little', 'JJ')], [('bit', 'NN')], [('using', 'VBG')], [('vector', 'NN')], [('space', 'NN')], [('concept', 'NN')], [(',', ',')], [('matrices', 'NNS')], [('etc', 'NN')], [('.', '.')], [('professor', 'NN')], [('say', 'VB')], [('anything', 'NN')], [('group', 'NN')], [('theory', 'NN')], [('.', '.')], [('see', 'VB')], [('anywhere', 'RB')], [('till', 'NN')], [('.', '.')], [('somehow', 'NN')], [('studying', 'VBG')], [('.', '.')], [('thing', 'NN')], [('loving', 'VBG')], [('group', 'NN')], [('theory', 'NN')], [('much', 'JJ')], [('.', '.')], [('want', 'NN')], [('continue', 'NN')], [('book', 'NN')], [('joseph', 'NN')], [('a.', 'NN')], [('gallian', 'JJ')], [('afraid', 'NN')], [('wasting', 'VBG')], [('time', 'NN')], [('unnecessary', 'JJ')], [('.', '.')], [('never', 'RB')], [('grasped', 'NNS')], [('concept', 'NN')], [('mathematics', 'NNS')], [('quick', 'NN')], [('group', 'NN')], [('theory', 'NN')], [(',', ',')], [('maybe', 'RB')], [('easy', 'JJ')], [('whatever', 'WDT')], [('really', 'RB')], [('like', 'IN')], [('.', '.')], [('beneficial', 'JJ')], [('?', '.')]]","btech machine learn ( first semester ) teacher often stress get good grasp linear algebra concept see little bit use vector space concept , matrix etc . professor say anything group theory . see anywhere till . somehow study . thing love group theory much . want continue book joseph a. gallian afraid waste time unnecessary . never grasped concept mathematics quick group theory , maybe easy whatever really like . beneficial ?",-1_abazbz2abz_2520_problem_use,3
149,sj5m8j,Any book recommendations on Networking?,,9,0.77,computerscience,https://www.reddit.com/r/computerscience/comments/sj5m8j/any_book_recommendations_on_networking/,9,"i have been working for an isp for almost a year now as tech support (will be moving towards into a software developer position). my new position will mostly be concerned with building serverless applications, not really a “networking” position. however i would still like to learn more about the fundamentals of networking! any book suggestions?",1643850357.0,"['work', 'isp', 'almost', 'year', 'tech', 'support', '(', 'move', 'towards', 'software', 'developer', 'position', ')', '.', 'new', 'position', 'mostly', 'concerned', 'building', 'serverless', 'application', ',', 'really', '“', 'networking', '”', 'position', '.', 'however', 'would', 'still', 'like', 'learn', 'fundamental', 'networking', '!', 'book', 'suggestion', '?']","[[('working', 'VBG')], [('isp', 'NN')], [('almost', 'RB')], [('year', 'NN')], [('tech', 'NN')], [('support', 'NN')], [('(', '(')], [('moving', 'VBG')], [('towards', 'NNS')], [('software', 'NN')], [('developer', 'NN')], [('position', 'NN')], [(')', ')')], [('.', '.')], [('new', 'JJ')], [('position', 'NN')], [('mostly', 'RB')], [('concerned', 'JJ')], [('building', 'NN')], [('serverless', 'NN')], [('applications', 'NNS')], [(',', ',')], [('really', 'RB')], [('“', 'NN')], [('networking', 'NN')], [('”', 'NN')], [('position', 'NN')], [('.', '.')], [('however', 'RB')], [('would', 'MD')], [('still', 'RB')], [('like', 'IN')], [('learn', 'NN')], [('fundamentals', 'NNS')], [('networking', 'NN')], [('!', '.')], [('book', 'NN')], [('suggestions', 'NNS')], [('?', '.')]]","work isp almost year tech support ( move towards software developer position ) . new position mostly concerned building serverless application , really “ networking ” position . however would still like learn fundamental networking ! book suggestion ?",4_book_learn_computer_good,3
150,siry8q,Confused in understanding pumping lemma - Theory of automata.,Help,25,0.96,computerscience,https://www.reddit.com/r/computerscience/comments/siry8q/confused_in_understanding_pumping_lemma_theory_of/,5,"i have just started out theory of automata in my university and we are studying pumping lemma. from what i have understood, the lemma states that y != λ (empty string) and that x y^i z (where i >= 0) so if ""i = 0"", then y^0 = λ and the string is still accepted.

how do these not contradict each other? if i = 0, y becomes the empty string that is previously stated cannot be empty? can someone please clear this for me?",1643817117.0,"['start', 'theory', 'automaton', 'university', 'study', 'pump', 'lemma', '.', 'understood', ',', 'lemma', 'state', '!', '=', 'λ', '(', 'empty', 'string', ')', 'x', 'y^i', 'z', '(', '>', '=', '0', ')', '``', '=', '0', ""''"", ',', 'y^0', '=', 'λ', 'string', 'still', 'accepted', '.', 'contradict', '?', '=', '0', ',', 'becomes', 'empty', 'string', 'previously', 'state', 'empty', '?', 'someone', 'please', 'clear', '?']","[[('started', 'VBN')], [('theory', 'NN')], [('automata', 'NNS')], [('university', 'NN')], [('studying', 'VBG')], [('pumping', 'VBG')], [('lemma', 'NN')], [('.', '.')], [('understood', 'NN')], [(',', ',')], [('lemma', 'NN')], [('states', 'NNS')], [('!', '.')], [('=', 'NN')], [('λ', 'NN')], [('(', '(')], [('empty', 'JJ')], [('string', 'NN')], [(')', ')')], [('x', 'NN')], [('y^i', 'NN')], [('z', 'NN')], [('(', '(')], [('>', 'NN')], [('=', 'NN')], [('0', 'CD')], [(')', ')')], [('``', '``')], [('=', 'NN')], [('0', 'CD')], [(""''"", ""''"")], [(',', ',')], [('y^0', 'NN')], [('=', 'NN')], [('λ', 'NN')], [('string', 'NN')], [('still', 'RB')], [('accepted', 'JJ')], [('.', '.')], [('contradict', 'NN')], [('?', '.')], [('=', 'NN')], [('0', 'CD')], [(',', ',')], [('becomes', 'NNS')], [('empty', 'JJ')], [('string', 'NN')], [('previously', 'RB')], [('stated', 'VBN')], [('empty', 'JJ')], [('?', '.')], [('someone', 'NN')], [('please', 'NN')], [('clear', 'JJ')], [('?', '.')]]","start theory automaton university study pump lemma . understood , lemma state ! = λ ( empty string ) x y^i z ( > = 0 ) `` = 0 '' , y^0 = λ string still accepted . contradict ? = 0 , becomes empty string previously state empty ? someone please clear ?",7_tm_state_turing_universal,3
152,sicshh,I don't understand how to find the Big-O of functions including multiplying multiple 'n'.,Help,50,0.92,computerscience,https://www.reddit.com/r/computerscience/comments/sicshh/i_dont_understand_how_to_find_the_bigo_of/,12,"for specifically, i do not understand how to find the big-o of functions such as: 

log(2\^n) \* log(n\^2) =

n \* sqrt(n) = 

n \^ sqrt(n) = 

any help or resources to look at would be appreciated.",1643768469.0,"['specifically', ',', 'understand', 'find', 'big-o', 'function', ':', 'log', '(', '2\\^n', ')', '\\', '*', 'log', '(', 'n\\^2', ')', '=', 'n', '\\', '*', 'sqrt', '(', 'n', ')', '=', 'n', '\\^', 'sqrt', '(', 'n', ')', '=', 'help', 'resource', 'look', 'would', 'appreciate', '.']","[[('specifically', 'RB')], [(',', ',')], [('understand', 'NN')], [('find', 'VB')], [('big-o', 'NN')], [('functions', 'NNS')], [(':', ':')], [('log', 'NN')], [('(', '(')], [('2\\^n', 'CD')], [(')', ')')], [('\\', 'NN')], [('*', 'NN')], [('log', 'NN')], [('(', '(')], [('n\\^2', 'NN')], [(')', ')')], [('=', 'NN')], [('n', 'NN')], [('\\', 'NN')], [('*', 'NN')], [('sqrt', 'NN')], [('(', '(')], [('n', 'NN')], [(')', ')')], [('=', 'NN')], [('n', 'NN')], [('\\^', 'NN')], [('sqrt', 'NN')], [('(', '(')], [('n', 'NN')], [(')', ')')], [('=', 'NN')], [('help', 'NN')], [('resources', 'NNS')], [('look', 'NN')], [('would', 'MD')], [('appreciated', 'VBN')], [('.', '.')]]","specifically , understand find big-o function : log ( 2\^n ) \ * log ( n\^2 ) = n \ * sqrt ( n ) = n \^ sqrt ( n ) = help resource look would appreciate .",0_algorithm_time_node_bill,3
154,siw69v,"Theoretically, can you remotely re-program the system inside those micro/nano computers, so the devices run by them can just perform any tasks or move to specific environments, also upgrade itself as the programmer desires?",Article,0,0.33,computerscience,https://www.reddit.com/r/computerscience/comments/siw69v/theoretically_can_you_remotely_reprogram_the/,0,"-5875871/worlds-smallest-computer-revealed-incredible-image-shows-tiny-machine-dwarfed-grain-rice.html


-can-computers-really-be-microscopic/

> nanocomputing involves using nanoscale structures to make computing processes. nanoscale structures like protein and dna (deoxyribonucleic acid) can be used to produce nanocomputers.
> dna computing involves using dna, molecular biology hardware, and biochemistry to perform computing processes instead of the traditional electronic computing which makes use of silicon chips. information in dna is represented using a four-character genetic alphabet (a [adenine], g [guanine], c [cytosine], and t [thymine]), instead of the binary numbers (1 and 0) used by traditional electronic computers.
> when applied to separate and non-sequential tasks, the dna nanocomputer is better than the traditional electronic computer as it can store a larger amount of data in memory and conduct multiple operations at once. dna nanocomputers are considerably faster than their electronic counterparts.

so according to these articles, micro/nano computers in that sizes are really able to perform any tasks and store datas just like the traditional computers do or even better? and it is indeed possible with our current technologies that people can remotely re-program the system inside those computers, so the devices run by them can just switch to perform different tasks or move to specific environments, or upgrade itself indefinitely as the programmer desires?

is it possible that they are even able to perform tasks of building/creating a specific object by using the chemicals and substances they collected form the environment like engineering robots do?",1643827073.0,"['-5875871/worlds-smallest-computer-revealed-incredible-image-shows-tiny-machine-dwarfed-grain-rice.html', '-can-computers-really-be-microscopic/', '>', 'nanocomputing', 'involves', 'use', 'nanoscale', 'structure', 'make', 'compute', 'process', '.', 'nanoscale', 'structure', 'like', 'protein', 'dna', '(', 'deoxyribonucleic', 'acid', ')', 'use', 'produce', 'nanocomputers', '.', '>', 'dna', 'compute', 'involves', 'use', 'dna', ',', 'molecular', 'biology', 'hardware', ',', 'biochemistry', 'perform', 'compute', 'process', 'instead', 'traditional', 'electronic', 'compute', 'make', 'use', 'silicon', 'chip', '.', 'information', 'dna', 'represent', 'use', 'four-character', 'genetic', 'alphabet', '(', '[', 'adenine', ']', ',', 'g', '[', 'guanine', ']', ',', 'c', '[', 'cytosine', ']', ',', '[', 'thymine', ']', ')', ',', 'instead', 'binary', 'number', '(', '1', '0', ')', 'use', 'traditional', 'electronic', 'computer', '.', '>', 'apply', 'separate', 'non-sequential', 'task', ',', 'dna', 'nanocomputer', 'well', 'traditional', 'electronic', 'computer', 'store', 'large', 'amount', 'data', 'memory', 'conduct', 'multiple', 'operation', '.', 'dna', 'nanocomputers', 'considerably', 'faster', 'electronic', 'counterpart', '.', 'accord', 'article', ',', 'micro/nano', 'computer', 'size', 'really', 'able', 'perform', 'task', 'store', 'data', 'like', 'traditional', 'computer', 'even', 'well', '?', 'indeed', 'possible', 'current', 'technology', 'people', 'remotely', 're-program', 'system', 'inside', 'computer', ',', 'device', 'run', 'switch', 'perform', 'different', 'task', 'move', 'specific', 'environment', ',', 'upgrade', 'indefinitely', 'programmer', 'desire', '?', 'possible', 'even', 'able', 'perform', 'task', 'building/creating', 'specific', 'object', 'use', 'chemical', 'substance', 'collect', 'form', 'environment', 'like', 'engineering', 'robot', '?']","[[('-5875871/worlds-smallest-computer-revealed-incredible-image-shows-tiny-machine-dwarfed-grain-rice.html', 'NN')], [('-can-computers-really-be-microscopic/', 'NN')], [('>', 'NN')], [('nanocomputing', 'VBG')], [('involves', 'NNS')], [('using', 'VBG')], [('nanoscale', 'NN')], [('structures', 'NNS')], [('make', 'VB')], [('computing', 'VBG')], [('processes', 'NNS')], [('.', '.')], [('nanoscale', 'NN')], [('structures', 'NNS')], [('like', 'IN')], [('protein', 'NN')], [('dna', 'NN')], [('(', '(')], [('deoxyribonucleic', 'NN')], [('acid', 'NN')], [(')', ')')], [('used', 'VBN')], [('produce', 'NN')], [('nanocomputers', 'NNS')], [('.', '.')], [('>', 'NN')], [('dna', 'NN')], [('computing', 'VBG')], [('involves', 'NNS')], [('using', 'VBG')], [('dna', 'NN')], [(',', ',')], [('molecular', 'NN')], [('biology', 'NN')], [('hardware', 'NN')], [(',', ',')], [('biochemistry', 'NN')], [('perform', 'NN')], [('computing', 'VBG')], [('processes', 'NNS')], [('instead', 'RB')], [('traditional', 'JJ')], [('electronic', 'JJ')], [('computing', 'VBG')], [('makes', 'VBZ')], [('use', 'NN')], [('silicon', 'NN')], [('chips', 'NNS')], [('.', '.')], [('information', 'NN')], [('dna', 'NN')], [('represented', 'VBN')], [('using', 'VBG')], [('four-character', 'NN')], [('genetic', 'JJ')], [('alphabet', 'NN')], [('(', '(')], [('[', 'NN')], [('adenine', 'NN')], [(']', 'NN')], [(',', ',')], [('g', 'NN')], [('[', 'NN')], [('guanine', 'NN')], [(']', 'NN')], [(',', ',')], [('c', 'NNS')], [('[', 'NN')], [('cytosine', 'NN')], [(']', 'NN')], [(',', ',')], [('[', 'NN')], [('thymine', 'NN')], [(']', 'NN')], [(')', ')')], [(',', ',')], [('instead', 'RB')], [('binary', 'NN')], [('numbers', 'NNS')], [('(', '(')], [('1', 'CD')], [('0', 'CD')], [(')', ')')], [('used', 'VBN')], [('traditional', 'JJ')], [('electronic', 'JJ')], [('computers', 'NNS')], [('.', '.')], [('>', 'NN')], [('applied', 'VBN')], [('separate', 'JJ')], [('non-sequential', 'JJ')], [('tasks', 'NNS')], [(',', ',')], [('dna', 'NN')], [('nanocomputer', 'NN')], [('better', 'RBR')], [('traditional', 'JJ')], [('electronic', 'JJ')], [('computer', 'NN')], [('store', 'NN')], [('larger', 'JJR')], [('amount', 'NN')], [('data', 'NNS')], [('memory', 'NN')], [('conduct', 'NN')], [('multiple', 'NN')], [('operations', 'NNS')], [('.', '.')], [('dna', 'NN')], [('nanocomputers', 'NNS')], [('considerably', 'RB')], [('faster', 'NN')], [('electronic', 'JJ')], [('counterparts', 'NNS')], [('.', '.')], [('according', 'VBG')], [('articles', 'NNS')], [(',', ',')], [('micro/nano', 'NN')], [('computers', 'NNS')], [('sizes', 'NNS')], [('really', 'RB')], [('able', 'JJ')], [('perform', 'NN')], [('tasks', 'NNS')], [('store', 'NN')], [('datas', 'NNS')], [('like', 'IN')], [('traditional', 'JJ')], [('computers', 'NNS')], [('even', 'RB')], [('better', 'RBR')], [('?', '.')], [('indeed', 'RB')], [('possible', 'JJ')], [('current', 'JJ')], [('technologies', 'NNS')], [('people', 'NNS')], [('remotely', 'RB')], [('re-program', 'NN')], [('system', 'NN')], [('inside', 'IN')], [('computers', 'NNS')], [(',', ',')], [('devices', 'NNS')], [('run', 'VB')], [('switch', 'NN')], [('perform', 'NN')], [('different', 'JJ')], [('tasks', 'NNS')], [('move', 'NN')], [('specific', 'JJ')], [('environments', 'NNS')], [(',', ',')], [('upgrade', 'NN')], [('indefinitely', 'RB')], [('programmer', 'NN')], [('desires', 'NNS')], [('?', '.')], [('possible', 'JJ')], [('even', 'RB')], [('able', 'JJ')], [('perform', 'NN')], [('tasks', 'NNS')], [('building/creating', 'NN')], [('specific', 'JJ')], [('object', 'NN')], [('using', 'VBG')], [('chemicals', 'NNS')], [('substances', 'NNS')], [('collected', 'VBN')], [('form', 'NN')], [('environment', 'NN')], [('like', 'IN')], [('engineering', 'NN')], [('robots', 'NNS')], [('?', '.')]]","-5875871/worlds-smallest-computer-revealed-incredible-image-shows-tiny-machine-dwarfed-grain-rice.html -can-computers-really-be-microscopic/ > nanocomputing involves use nanoscale structure make compute process . nanoscale structure like protein dna ( deoxyribonucleic acid ) use produce nanocomputers . > dna compute involves use dna , molecular biology hardware , biochemistry perform compute process instead traditional electronic compute make use silicon chip . information dna represent use four-character genetic alphabet ( [ adenine ] , g [ guanine ] , c [ cytosine ] , [ thymine ] ) , instead binary number ( 1 0 ) use traditional electronic computer . > apply separate non-sequential task , dna nanocomputer well traditional electronic computer store large amount data memory conduct multiple operation . dna nanocomputers considerably faster electronic counterpart . accord article , micro/nano computer size really able perform task store data like traditional computer even well ? indeed possible current technology people remotely re-program system inside computer , device run switch perform different task move specific environment , upgrade indefinitely programmer desire ? possible even able perform task building/creating specific object use chemical substance collect form environment like engineering robot ?",-1_abazbz2abz_2520_problem_use,5
155,sj47go,How machines understand us?,,0,0.33,computerscience,https://www.reddit.com/r/computerscience/comments/sj47go/how_machines_understand_us/,2,"can you recommend  a source material on how computers understand what we want from them on most fundamental level of operations? i do not even know how to phrase this question. i have  a vague understanding of machine code, instructions, compilers, interpreters, etc. but i still do not understand what is the ultimate interface between the software and the hardware. or maybe my question relates more to how circuit boards  and transistors work.",1643846612.0,"['recommend', 'source', 'material', 'computer', 'understand', 'want', 'fundamental', 'level', 'operation', '?', 'even', 'know', 'phrase', 'question', '.', 'vague', 'understand', 'machine', 'code', ',', 'instruction', ',', 'compiler', ',', 'interpreter', ',', 'etc', '.', 'still', 'understand', 'ultimate', 'interface', 'software', 'hardware', '.', 'maybe', 'question', 'relates', 'circuit', 'board', 'transistor', 'work', '.']","[[('recommend', 'NN')], [('source', 'NN')], [('material', 'NN')], [('computers', 'NNS')], [('understand', 'NN')], [('want', 'NN')], [('fundamental', 'JJ')], [('level', 'NN')], [('operations', 'NNS')], [('?', '.')], [('even', 'RB')], [('know', 'VB')], [('phrase', 'NN')], [('question', 'NN')], [('.', '.')], [('vague', 'NN')], [('understanding', 'VBG')], [('machine', 'NN')], [('code', 'NN')], [(',', ',')], [('instructions', 'NNS')], [(',', ',')], [('compilers', 'NNS')], [(',', ',')], [('interpreters', 'NNS')], [(',', ',')], [('etc', 'NN')], [('.', '.')], [('still', 'RB')], [('understand', 'NN')], [('ultimate', 'JJ')], [('interface', 'NN')], [('software', 'NN')], [('hardware', 'NN')], [('.', '.')], [('maybe', 'RB')], [('question', 'NN')], [('relates', 'NNS')], [('circuit', 'NN')], [('boards', 'NNS')], [('transistors', 'NNS')], [('work', 'NN')], [('.', '.')]]","recommend source material computer understand want fundamental level operation ? even know phrase question . vague understand machine code , instruction , compiler , interpreter , etc . still understand ultimate interface software hardware . maybe question relates circuit board transistor work .",-1_abazbz2abz_2520_problem_use,3
157,shzu1j,Algorithms where complexities similar to O(n/k * log(n/k)) appear,,18,0.95,computerscience,https://www.reddit.com/r/computerscience/comments/shzu1j/algorithms_where_complexities_similar_to_onk/,7,"i am looking for any algorithms or data structure where a complexity of a form like o(n/k * log(n/k)) appears. in particular, i want cases where the complexity is normally considered worse than o(n). it looks like nlogn, so surely such a case exists?


one case i know of is the io-model where we often have algorithms that perform o(n/b * log(n/b)) io-operations, with b being the block-size of the io-device. however, in this context, that complexity is usually considered _better_ than o(n) io-operations.

(strictly speaking the io-model complexities are often more complicated, e.g. with an m/b in the base of the logarithm, but that kind of difference is ok for the kind of examples i am looking for.)",1643735022.0,"['look', 'algorithm', 'data', 'structure', 'complexity', 'form', 'like', '(', 'n/k', '*', 'log', '(', 'n/k', ')', ')', 'appear', '.', 'particular', ',', 'want', 'case', 'complexity', 'normally', 'consider', 'bad', '(', 'n', ')', '.', 'look', 'like', 'nlogn', ',', 'surely', 'case', 'exists', '?', 'one', 'case', 'know', 'io-model', 'often', 'algorithm', 'perform', '(', 'n/b', '*', 'log', '(', 'n/b', ')', ')', 'io-operations', ',', 'b', 'block-size', 'io-device', '.', 'however', ',', 'context', ',', 'complexity', 'usually', 'consider', '_better_', '(', 'n', ')', 'io-operations', '.', '(', 'strictly', 'speak', 'io-model', 'complexity', 'often', 'complicate', ',', 'e.g', '.', 'm/b', 'base', 'logarithm', ',', 'kind', 'difference', 'ok', 'kind', 'example', 'look', '.', ')']","[[('looking', 'VBG')], [('algorithms', 'NN')], [('data', 'NNS')], [('structure', 'NN')], [('complexity', 'NN')], [('form', 'NN')], [('like', 'IN')], [('(', '(')], [('n/k', 'NN')], [('*', 'NN')], [('log', 'NN')], [('(', '(')], [('n/k', 'NN')], [(')', ')')], [(')', ')')], [('appears', 'VBZ')], [('.', '.')], [('particular', 'JJ')], [(',', ',')], [('want', 'NN')], [('cases', 'NNS')], [('complexity', 'NN')], [('normally', 'RB')], [('considered', 'VBN')], [('worse', 'JJR')], [('(', '(')], [('n', 'NN')], [(')', ')')], [('.', '.')], [('looks', 'NNS')], [('like', 'IN')], [('nlogn', 'NN')], [(',', ',')], [('surely', 'RB')], [('case', 'NN')], [('exists', 'NNS')], [('?', '.')], [('one', 'CD')], [('case', 'NN')], [('know', 'VB')], [('io-model', 'NN')], [('often', 'RB')], [('algorithms', 'NN')], [('perform', 'NN')], [('(', '(')], [('n/b', 'NN')], [('*', 'NN')], [('log', 'NN')], [('(', '(')], [('n/b', 'NN')], [(')', ')')], [(')', ')')], [('io-operations', 'NNS')], [(',', ',')], [('b', 'NN')], [('block-size', 'NN')], [('io-device', 'NN')], [('.', '.')], [('however', 'RB')], [(',', ',')], [('context', 'NN')], [(',', ',')], [('complexity', 'NN')], [('usually', 'RB')], [('considered', 'VBN')], [('_better_', 'NN')], [('(', '(')], [('n', 'NN')], [(')', ')')], [('io-operations', 'NNS')], [('.', '.')], [('(', '(')], [('strictly', 'RB')], [('speaking', 'VBG')], [('io-model', 'NN')], [('complexities', 'NNS')], [('often', 'RB')], [('complicated', 'VBN')], [(',', ',')], [('e.g', 'NN')], [('.', '.')], [('m/b', 'NN')], [('base', 'NN')], [('logarithm', 'NN')], [(',', ',')], [('kind', 'NN')], [('difference', 'NN')], [('ok', 'NN')], [('kind', 'NN')], [('examples', 'NNS')], [('looking', 'VBG')], [('.', '.')], [(')', ')')]]","look algorithm data structure complexity form like ( n/k * log ( n/k ) ) appear . particular , want case complexity normally consider bad ( n ) . look like nlogn , surely case exists ? one case know io-model often algorithm perform ( n/b * log ( n/b ) ) io-operations , b block-size io-device . however , context , complexity usually consider _better_ ( n ) io-operations . ( strictly speak io-model complexity often complicate , e.g . m/b base logarithm , kind difference ok kind example look . )",0_algorithm_time_node_bill,3
158,siaup5,What's something that has not (yet) been done with computers or programming?,Discussion,1,0.56,computerscience,https://www.reddit.com/r/computerscience/comments/siaup5/whats_something_that_has_not_yet_been_done_with/,8,"something that you wish to see done that has not been done?

something that you **do not** wish to see done that has not been done?",1643763172.0,"['something', 'wish', 'see', 'do', 'do', '?', 'something', '*', '*', '*', '*', 'wish', 'see', 'do', 'do', '?']","[[('something', 'NN')], [('wish', 'NN')], [('see', 'VB')], [('done', 'VBN')], [('done', 'VBN')], [('?', '.')], [('something', 'NN')], [('*', 'NN')], [('*', 'NN')], [('*', 'NN')], [('*', 'NN')], [('wish', 'NN')], [('see', 'VB')], [('done', 'VBN')], [('done', 'VBN')], [('?', '.')]]",something wish see do do ? something * * * * wish see do do ?,3_search_ai_think_google,1
159,si9m1h,Computer Architecture: A quantitative approach,Help,1,0.6,computerscience,https://www.reddit.com/r/computerscience/comments/si9m1h/computer_architecture_a_quantitative_approach/,2,i am going to start reading this book for a class and i was wondering if there are any resources or videos i can take a look at to be able to understand it. i think i lack the background to be able to understand the book. i already read computer organization by the same authors but had trouble with understanding it because i usually like to learn with videos.,1643759837.0,"['go', 'start', 'reading', 'book', 'class', 'wonder', 'resource', 'video', 'take', 'look', 'able', 'understand', '.', 'think', 'lack', 'background', 'able', 'understand', 'book', '.', 'already', 'read', 'computer', 'organization', 'author', 'trouble', 'understand', 'usually', 'like', 'learn', 'video', '.']","[[('going', 'VBG')], [('start', 'NN')], [('reading', 'NN')], [('book', 'NN')], [('class', 'NN')], [('wondering', 'VBG')], [('resources', 'NNS')], [('videos', 'NNS')], [('take', 'VB')], [('look', 'NN')], [('able', 'JJ')], [('understand', 'NN')], [('.', '.')], [('think', 'NN')], [('lack', 'NN')], [('background', 'NN')], [('able', 'JJ')], [('understand', 'NN')], [('book', 'NN')], [('.', '.')], [('already', 'RB')], [('read', 'NN')], [('computer', 'NN')], [('organization', 'NN')], [('authors', 'NNS')], [('trouble', 'NN')], [('understanding', 'VBG')], [('usually', 'RB')], [('like', 'IN')], [('learn', 'NN')], [('videos', 'NNS')], [('.', '.')]]",go start reading book class wonder resource video take look able understand . think lack background able understand book . already read computer organization author trouble understand usually like learn video .,-1_abazbz2abz_2520_problem_use,2
162,sh0rr0,Looking for online resources,Help,24,0.9,computerscience,https://www.reddit.com/r/computerscience/comments/sh0rr0/looking_for_online_resources/,7,is there any free educational resources that are somewhat equivalent to the computer science bachelor program (like all the course pdfs of a certain program)? i am really interested in learning as much as i can and enrolling in a computer science bachelor program is not an option for me. i am not interested in degrees or certificarites i just want to learn.,1643634195.0,"['free', 'educational', 'resource', 'somewhat', 'equivalent', 'computer', 'science', 'bachelor', 'program', '(', 'like', 'course', 'pdfs', 'certain', 'program', ')', '?', 'really', 'interested', 'learn', 'much', 'enrol', 'computer', 'science', 'bachelor', 'program', 'option', '.', 'interested', 'degree', 'certificarites', 'want', 'learn', '.']","[[('free', 'JJ')], [('educational', 'JJ')], [('resources', 'NNS')], [('somewhat', 'RB')], [('equivalent', 'NN')], [('computer', 'NN')], [('science', 'NN')], [('bachelor', 'NN')], [('program', 'NN')], [('(', '(')], [('like', 'IN')], [('course', 'NN')], [('pdfs', 'NN')], [('certain', 'JJ')], [('program', 'NN')], [(')', ')')], [('?', '.')], [('really', 'RB')], [('interested', 'JJ')], [('learning', 'VBG')], [('much', 'JJ')], [('enrolling', 'VBG')], [('computer', 'NN')], [('science', 'NN')], [('bachelor', 'NN')], [('program', 'NN')], [('option', 'NN')], [('.', '.')], [('interested', 'JJ')], [('degrees', 'NNS')], [('certificarites', 'NNS')], [('want', 'NN')], [('learn', 'NN')], [('.', '.')]]",free educational resource somewhat equivalent computer science bachelor program ( like course pdfs certain program ) ? really interested learn much enrol computer science bachelor program option . interested degree certificarites want learn .,-1_abazbz2abz_2520_problem_use,2
163,shath4,Implementation of Count Sort using a Sparse Matrix,Discussion,8,1.0,computerscience,https://www.reddit.com/r/computerscience/comments/shath4/implementation_of_count_sort_using_a_sparse_matrix/,1,"hi, the count sort is only feasible for some inputs of 'k' that are not abnormally large since the space complexity increases arbitrarily. can it be implemented using a sparse matrix to counter that drawback.

i have tried but cannot seem to get it work, can someone provide some insight on this. thanks",1643659852.0,"['hi', ',', 'count', 'sort', 'feasible', 'input', ""'"", 'k', ""'"", 'abnormally', 'large', 'since', 'space', 'complexity', 'increase', 'arbitrarily', '.', 'implement', 'use', 'sparse', 'matrix', 'counter', 'drawback', '.', 'try', 'seem', 'get', 'work', ',', 'someone', 'provide', 'insight', '.', 'thanks']","[[('hi', 'NN')], [(',', ',')], [('count', 'NN')], [('sort', 'NN')], [('feasible', 'JJ')], [('inputs', 'NNS')], [(""'"", ""''"")], [('k', 'NN')], [(""'"", ""''"")], [('abnormally', 'RB')], [('large', 'JJ')], [('since', 'IN')], [('space', 'NN')], [('complexity', 'NN')], [('increases', 'NNS')], [('arbitrarily', 'RB')], [('.', '.')], [('implemented', 'VBN')], [('using', 'VBG')], [('sparse', 'NN')], [('matrix', 'NN')], [('counter', 'NN')], [('drawback', 'NN')], [('.', '.')], [('tried', 'VBN')], [('seem', 'NN')], [('get', 'VB')], [('work', 'NN')], [(',', ',')], [('someone', 'NN')], [('provide', 'NN')], [('insight', 'NN')], [('.', '.')], [('thanks', 'NNS')]]","hi , count sort feasible input ' k ' abnormally large since space complexity increase arbitrarily . implement use sparse matrix counter drawback . try seem get work , someone provide insight . thanks",0_algorithm_time_node_bill,3
164,sgvyvn,Overlaps in research between Computational Geometry and Graph Theory,Discussion,4,1.0,computerscience,https://www.reddit.com/r/computerscience/comments/sgvyvn/overlaps_in_research_between_computational/,2,"hi, 

i am currently a cs undergrad who is very interested in graph algorithms and np-complete problems. i am going to start my grad school this year to study computational geometry (i only have basic knowledge about this such as polygon triangulation and partitioning.

while looking through some other applications of computational geometry, i noticed that there are problems that i am familiar with in a graph theoretic manner (such as the steiner tree problem and tsp as mentioned in [this 1976 paper]() (some np-complete geometric problems). 

the school that i am going to mainly focuses on shape matching, casting, and dynamic convex hulls so i cannot see much intersections on graph theory here (i believe). 

my question is, are there current overlaps in research between geometry and graph theory (in the cs sense) that is active these days beyond tsp, geometric networks, and steiner tree? thanks!",1643616183.0,"['hi', ',', 'currently', 'c', 'undergrad', 'interested', 'graph', 'algorithm', 'np-complete', 'problem', '.', 'go', 'start', 'grad', 'school', 'year', 'study', 'computational', 'geometry', '(', 'basic', 'knowledge', 'polygon', 'triangulation', 'partition', '.', 'look', 'application', 'computational', 'geometry', ',', 'notice', 'problem', 'familiar', 'graph', 'theoretic', 'manner', '(', 'steiner', 'tree', 'problem', 'tsp', 'mention', '[', '1976', 'paper', ']', '(', ')', '(', 'np-complete', 'geometric', 'problem', ')', '.', 'school', 'go', 'mainly', 'focus', 'shape', 'match', ',', 'cast', ',', 'dynamic', 'convex', 'hull', 'see', 'much', 'intersection', 'graph', 'theory', '(', 'believe', ')', '.', 'question', ',', 'current', 'overlap', 'research', 'geometry', 'graph', 'theory', '(', 'c', 'sense', ')', 'active', 'day', 'beyond', 'tsp', ',', 'geometric', 'network', ',', 'steiner', 'tree', '?', 'thanks', '!']","[[('hi', 'NN')], [(',', ',')], [('currently', 'RB')], [('cs', 'NN')], [('undergrad', 'NN')], [('interested', 'JJ')], [('graph', 'NN')], [('algorithms', 'NN')], [('np-complete', 'JJ')], [('problems', 'NNS')], [('.', '.')], [('going', 'VBG')], [('start', 'NN')], [('grad', 'NN')], [('school', 'NN')], [('year', 'NN')], [('study', 'NN')], [('computational', 'NN')], [('geometry', 'NN')], [('(', '(')], [('basic', 'JJ')], [('knowledge', 'NN')], [('polygon', 'NN')], [('triangulation', 'NN')], [('partitioning', 'VBG')], [('.', '.')], [('looking', 'VBG')], [('applications', 'NNS')], [('computational', 'NN')], [('geometry', 'NN')], [(',', ',')], [('noticed', 'VBN')], [('problems', 'NNS')], [('familiar', 'JJ')], [('graph', 'NN')], [('theoretic', 'JJ')], [('manner', 'NN')], [('(', '(')], [('steiner', 'NN')], [('tree', 'NN')], [('problem', 'NN')], [('tsp', 'NN')], [('mentioned', 'VBN')], [('[', 'NN')], [('1976', 'CD')], [('paper', 'NN')], [(']', 'NN')], [('(', '(')], [(')', ')')], [('(', '(')], [('np-complete', 'JJ')], [('geometric', 'NN')], [('problems', 'NNS')], [(')', ')')], [('.', '.')], [('school', 'NN')], [('going', 'VBG')], [('mainly', 'RB')], [('focuses', 'NNS')], [('shape', 'NN')], [('matching', 'VBG')], [(',', ',')], [('casting', 'VBG')], [(',', ',')], [('dynamic', 'JJ')], [('convex', 'NN')], [('hulls', 'NNS')], [('see', 'VB')], [('much', 'JJ')], [('intersections', 'NNS')], [('graph', 'NN')], [('theory', 'NN')], [('(', '(')], [('believe', 'VB')], [(')', ')')], [('.', '.')], [('question', 'NN')], [(',', ',')], [('current', 'JJ')], [('overlaps', 'NNS')], [('research', 'NN')], [('geometry', 'NN')], [('graph', 'NN')], [('theory', 'NN')], [('(', '(')], [('cs', 'NN')], [('sense', 'NN')], [(')', ')')], [('active', 'JJ')], [('days', 'NNS')], [('beyond', 'IN')], [('tsp', 'NN')], [(',', ',')], [('geometric', 'NN')], [('networks', 'NNS')], [(',', ',')], [('steiner', 'NN')], [('tree', 'NN')], [('?', '.')], [('thanks', 'NNS')], [('!', '.')]]","hi , currently c undergrad interested graph algorithm np-complete problem . go start grad school year study computational geometry ( basic knowledge polygon triangulation partition . look application computational geometry , notice problem familiar graph theoretic manner ( steiner tree problem tsp mention [ 1976 paper ] ( ) ( np-complete geometric problem ) . school go mainly focus shape match , cast , dynamic convex hull see much intersection graph theory ( believe ) . question , current overlap research geometry graph theory ( c sense ) active day beyond tsp , geometric network , steiner tree ? thanks !",-1_abazbz2abz_2520_problem_use,3
165,shfux4,Do a computer engineer have same software knowledge as a computer science software engineer?,Discussion,0,0.42,computerscience,https://www.reddit.com/r/computerscience/comments/shfux4/do_a_computer_engineer_have_same_software/,24,"someone who studies computer engineering learns how a computer works in low level. if they know the hardware do not they also know what software can be built on it and how?

for me it feels like computer science is an easier part of hole it, cs, ce, ee field. they only know high level things for the most part. so the computer engineers have the same knowledge as a software engineer and the computer engineer do also have hardware knowledge. when does cs/it education benefit from ce when the time to study ce and cs (both bsc and msc) is mostly the same.",1643672113.0,"['someone', 'study', 'computer', 'engineering', 'learns', 'computer', 'work', 'low', 'level', '.', 'know', 'hardware', 'also', 'know', 'software', 'built', '?', 'feel', 'like', 'computer', 'science', 'easy', 'part', 'hole', ',', 'c', ',', 'ce', ',', 'ee', 'field', '.', 'know', 'high', 'level', 'thing', 'part', '.', 'computer', 'engineer', 'knowledge', 'software', 'engineer', 'computer', 'engineer', 'also', 'hardware', 'knowledge', '.', 'cs/it', 'education', 'benefit', 'ce', 'time', 'study', 'ce', 'c', '(', 'bsc', 'msc', ')', 'mostly', '.']","[[('someone', 'NN')], [('studies', 'NNS')], [('computer', 'NN')], [('engineering', 'NN')], [('learns', 'NNS')], [('computer', 'NN')], [('works', 'NNS')], [('low', 'JJ')], [('level', 'NN')], [('.', '.')], [('know', 'VB')], [('hardware', 'NN')], [('also', 'RB')], [('know', 'VB')], [('software', 'NN')], [('built', 'NN')], [('?', '.')], [('feels', 'NNS')], [('like', 'IN')], [('computer', 'NN')], [('science', 'NN')], [('easier', 'JJR')], [('part', 'NN')], [('hole', 'NN')], [(',', ',')], [('cs', 'NN')], [(',', ',')], [('ce', 'NN')], [(',', ',')], [('ee', 'NN')], [('field', 'NN')], [('.', '.')], [('know', 'VB')], [('high', 'JJ')], [('level', 'NN')], [('things', 'NNS')], [('part', 'NN')], [('.', '.')], [('computer', 'NN')], [('engineers', 'NNS')], [('knowledge', 'NN')], [('software', 'NN')], [('engineer', 'NN')], [('computer', 'NN')], [('engineer', 'NN')], [('also', 'RB')], [('hardware', 'NN')], [('knowledge', 'NN')], [('.', '.')], [('cs/it', 'NN')], [('education', 'NN')], [('benefit', 'NN')], [('ce', 'NN')], [('time', 'NN')], [('study', 'NN')], [('ce', 'NN')], [('cs', 'NN')], [('(', '(')], [('bsc', 'NN')], [('msc', 'NN')], [(')', ')')], [('mostly', 'RB')], [('.', '.')]]","someone study computer engineering learns computer work low level . know hardware also know software built ? feel like computer science easy part hole , c , ce , ee field . know high level thing part . computer engineer knowledge software engineer computer engineer also hardware knowledge . cs/it education benefit ce time study ce c ( bsc msc ) mostly .",2_computer_learn_science_study,3
166,sg4epv,"In technical detail, how does the internet router work?",,41,0.87,computerscience,https://www.reddit.com/r/computerscience/comments/sg4epv/in_technical_detail_how_does_the_internet_router/,10,"i saw a comment on a programming subreddit that casually mentioned that they wrote code for an internet router, and i was mind blown. i decided to look up how they work because i was inspired to work on a project like that, but i did not get any info. how do internet routers work?",1643530219.0,"['saw', 'comment', 'program', 'subreddit', 'casually', 'mention', 'write', 'code', 'internet', 'router', ',', 'mind', 'blown', '.', 'decide', 'look', 'work', 'inspire', 'work', 'project', 'like', ',', 'get', 'info', '.', 'internet', 'router', 'work', '?']","[[('saw', 'NN')], [('comment', 'NN')], [('programming', 'VBG')], [('subreddit', 'NN')], [('casually', 'RB')], [('mentioned', 'VBN')], [('wrote', 'VBD')], [('code', 'NN')], [('internet', 'NN')], [('router', 'NN')], [(',', ',')], [('mind', 'NN')], [('blown', 'NN')], [('.', '.')], [('decided', 'VBD')], [('look', 'NN')], [('work', 'NN')], [('inspired', 'VBN')], [('work', 'NN')], [('project', 'NN')], [('like', 'IN')], [(',', ',')], [('get', 'VB')], [('info', 'NN')], [('.', '.')], [('internet', 'NN')], [('routers', 'NNS')], [('work', 'NN')], [('?', '.')]]","saw comment program subreddit casually mention write code internet router , mind blown . decide look work inspire work project like , get info . internet router work ?",3_search_ai_think_google,2
169,sf7cyl,I'm confused? I can't tell the difference between a Software Engineer and a Programmer...,,11,0.7,computerscience,https://www.reddit.com/r/computerscience/comments/sf7cyl/im_confused_i_cant_tell_the_difference_between_a/,19,"i want to teach a computer to do things based on what i code it to do. what is this called? is this a software engineer or a programmer? i am confused and do not know where to go with this. i know you can code apps to pick out what the user wants. i am doing research and the more i research the more confusing it gets. i do not want to be responsible for what things look like, i just want to do all the back end stuff. i just want to make things work. make it make sense, please. i want to get a job, but do not want to learn the wrong stuff.",1643422532.0,"['want', 'teach', 'computer', 'thing', 'base', 'code', '.', 'call', '?', 'software', 'engineer', 'programmer', '?', 'confuse', 'know', 'go', '.', 'know', 'code', 'apps', 'pick', 'user', 'want', '.', 'research', 'research', 'confuse', 'get', '.', 'want', 'responsible', 'thing', 'look', 'like', ',', 'want', 'back', 'end', 'stuff', '.', 'want', 'make', 'thing', 'work', '.', 'make', 'make', 'sense', ',', 'please', '.', 'want', 'get', 'job', ',', 'want', 'learn', 'wrong', 'stuff', '.']","[[('want', 'NN')], [('teach', 'NN')], [('computer', 'NN')], [('things', 'NNS')], [('based', 'VBN')], [('code', 'NN')], [('.', '.')], [('called', 'VBN')], [('?', '.')], [('software', 'NN')], [('engineer', 'NN')], [('programmer', 'NN')], [('?', '.')], [('confused', 'VBN')], [('know', 'VB')], [('go', 'VB')], [('.', '.')], [('know', 'VB')], [('code', 'NN')], [('apps', 'NN')], [('pick', 'NN')], [('user', 'NN')], [('wants', 'VBZ')], [('.', '.')], [('research', 'NN')], [('research', 'NN')], [('confusing', 'VBG')], [('gets', 'VBZ')], [('.', '.')], [('want', 'NN')], [('responsible', 'JJ')], [('things', 'NNS')], [('look', 'NN')], [('like', 'IN')], [(',', ',')], [('want', 'NN')], [('back', 'RB')], [('end', 'NN')], [('stuff', 'NN')], [('.', '.')], [('want', 'NN')], [('make', 'VB')], [('things', 'NNS')], [('work', 'NN')], [('.', '.')], [('make', 'VB')], [('make', 'VB')], [('sense', 'NN')], [(',', ',')], [('please', 'NN')], [('.', '.')], [('want', 'NN')], [('get', 'VB')], [('job', 'NN')], [(',', ',')], [('want', 'NN')], [('learn', 'NN')], [('wrong', 'JJ')], [('stuff', 'NN')], [('.', '.')]]","want teach computer thing base code . call ? software engineer programmer ? confuse know go . know code apps pick user want . research research confuse get . want responsible thing look like , want back end stuff . want make thing work . make make sense , please . want get job , want learn wrong stuff .",2_computer_learn_science_study,2
171,sf5rtw,How does functional programming deal with memory management?,,9,0.92,computerscience,https://www.reddit.com/r/computerscience/comments/sf5rtw/how_does_functional_programming_deal_with_memory/,8,"in functional programming, we do not create mutable data correct? i understand the usefulness of eliminating side effects for debugging, but does not allocating a whole new data structure for every change gobble up memory? or does this just depend on the compiler?",1643417759.0,"['functional', 'program', ',', 'create', 'mutable', 'data', 'correct', '?', 'understand', 'usefulness', 'eliminate', 'side', 'effect', 'debug', ',', 'allocate', 'whole', 'new', 'data', 'structure', 'every', 'change', 'gobble', 'memory', '?', 'depend', 'compiler', '?']","[[('functional', 'JJ')], [('programming', 'VBG')], [(',', ',')], [('create', 'NN')], [('mutable', 'JJ')], [('data', 'NNS')], [('correct', 'NN')], [('?', '.')], [('understand', 'NN')], [('usefulness', 'NN')], [('eliminating', 'VBG')], [('side', 'NN')], [('effects', 'NNS')], [('debugging', 'VBG')], [(',', ',')], [('allocating', 'VBG')], [('whole', 'JJ')], [('new', 'JJ')], [('data', 'NNS')], [('structure', 'NN')], [('every', 'DT')], [('change', 'NN')], [('gobble', 'JJ')], [('memory', 'NN')], [('?', '.')], [('depend', 'NN')], [('compiler', 'NN')], [('?', '.')]]","functional program , create mutable data correct ? understand usefulness eliminate side effect debug , allocate whole new data structure every change gobble memory ? depend compiler ?",1_memory_byte_data_alignment,3
173,secwcr,Do you need a theoretical understanding of all the math stuff for Computer Science?,Advice,106,0.93,computerscience,https://www.reddit.com/r/computerscience/comments/secwcr/do_you_need_a_theoretical_understanding_of_all/,52,"i am going through precalculus ii: trigonometry, and i sort of do understand some of the stuff at a conceptual level but i am kind of worried that i need to literally understand why everything works the way it does for trigonometry, calculus, and whatever other math is needed for computer science.

like, i did not sign up to be a mathematician, i am fine with not knowing all the theoretical details, but i am worried that i am going to actually have to know them if i get into computer science.

so, is it a problem? (note that this is not about knowing the math - i am going to learn calculus and linear algebra ok, that is not the problem, it is more about knowing how it works underneath)",1643328619.0,"['go', 'precalculus', 'ii', ':', 'trigonometry', ',', 'sort', 'understand', 'stuff', 'conceptual', 'level', 'kind', 'worried', 'need', 'literally', 'understand', 'everything', 'work', 'way', 'trigonometry', ',', 'calculus', ',', 'whatever', 'math', 'need', 'computer', 'science', '.', 'like', ',', 'sign', 'mathematician', ',', 'fine', 'know', 'theoretical', 'detail', ',', 'worried', 'go', 'actually', 'know', 'get', 'computer', 'science', '.', ',', 'problem', '?', '(', 'note', 'know', 'math', '-', 'go', 'learn', 'calculus', 'linear', 'algebra', 'ok', ',', 'problem', ',', 'know', 'work', 'underneath', ')']","[[('going', 'VBG')], [('precalculus', 'NN')], [('ii', 'NN')], [(':', ':')], [('trigonometry', 'NN')], [(',', ',')], [('sort', 'NN')], [('understand', 'NN')], [('stuff', 'NN')], [('conceptual', 'JJ')], [('level', 'NN')], [('kind', 'NN')], [('worried', 'JJ')], [('need', 'NN')], [('literally', 'RB')], [('understand', 'NN')], [('everything', 'NN')], [('works', 'NNS')], [('way', 'NN')], [('trigonometry', 'NN')], [(',', ',')], [('calculus', 'NN')], [(',', ',')], [('whatever', 'WDT')], [('math', 'NN')], [('needed', 'VBN')], [('computer', 'NN')], [('science', 'NN')], [('.', '.')], [('like', 'IN')], [(',', ',')], [('sign', 'NN')], [('mathematician', 'NN')], [(',', ',')], [('fine', 'NN')], [('knowing', 'VBG')], [('theoretical', 'JJ')], [('details', 'NNS')], [(',', ',')], [('worried', 'JJ')], [('going', 'VBG')], [('actually', 'RB')], [('know', 'VB')], [('get', 'VB')], [('computer', 'NN')], [('science', 'NN')], [('.', '.')], [(',', ',')], [('problem', 'NN')], [('?', '.')], [('(', '(')], [('note', 'NN')], [('knowing', 'VBG')], [('math', 'NN')], [('-', ':')], [('going', 'VBG')], [('learn', 'NN')], [('calculus', 'NN')], [('linear', 'NN')], [('algebra', 'NN')], [('ok', 'NN')], [(',', ',')], [('problem', 'NN')], [(',', ',')], [('knowing', 'VBG')], [('works', 'NNS')], [('underneath', 'NN')], [(')', ')')]]","go precalculus ii : trigonometry , sort understand stuff conceptual level kind worried need literally understand everything work way trigonometry , calculus , whatever math need computer science . like , sign mathematician , fine know theoretical detail , worried go actually know get computer science . , problem ? ( note know math - go learn calculus linear algebra ok , problem , know work underneath )",2_computer_learn_science_study,3
174,sf5gj9,How do websockets and round robin LBs work together?,Help,0,0.33,computerscience,https://www.reddit.com/r/computerscience/comments/sf5gj9/how_do_websockets_and_round_robin_lbs_work/,1,"round robin lbs typically are tcp layer lbs which merely route incoming requests in rr fashion. websocket protocol specifically needs that the client keep talking to the specific server with which it has opened the socket. how do client requests get routed to the same server by the tcp lb?
i tried looking it up online but could not find many resources",1643416854.0,"['round', 'robin', 'lb', 'typically', 'tcp', 'layer', 'lb', 'merely', 'route', 'incoming', 'request', 'rr', 'fashion', '.', 'websocket', 'protocol', 'specifically', 'need', 'client', 'keep', 'talk', 'specific', 'server', 'open', 'socket', '.', 'client', 'request', 'get', 'rout', 'server', 'tcp', 'lb', '?', 'try', 'look', 'online', 'could', 'find', 'many', 'resource']","[[('round', 'NN')], [('robin', 'NN')], [('lbs', 'NN')], [('typically', 'RB')], [('tcp', 'NN')], [('layer', 'NN')], [('lbs', 'NN')], [('merely', 'RB')], [('route', 'NN')], [('incoming', 'VBG')], [('requests', 'NNS')], [('rr', 'NN')], [('fashion', 'NN')], [('.', '.')], [('websocket', 'NN')], [('protocol', 'NN')], [('specifically', 'RB')], [('needs', 'NNS')], [('client', 'NN')], [('keep', 'VB')], [('talking', 'VBG')], [('specific', 'JJ')], [('server', 'NN')], [('opened', 'VBN')], [('socket', 'NN')], [('.', '.')], [('client', 'NN')], [('requests', 'NNS')], [('get', 'VB')], [('routed', 'VBN')], [('server', 'NN')], [('tcp', 'NN')], [('lb', 'NN')], [('?', '.')], [('tried', 'VBN')], [('looking', 'VBG')], [('online', 'NN')], [('could', 'MD')], [('find', 'VB')], [('many', 'JJ')], [('resources', 'NNS')]]",round robin lb typically tcp layer lb merely route incoming request rr fashion . websocket protocol specifically need client keep talk specific server open socket . client request get rout server tcp lb ? try look online could find many resource,6_server_packet_key_hash,2
175,sf7tjb,programming lang paradigm,,0,0.25,computerscience,https://www.reddit.com/r/computerscience/comments/sf7tjb/programming_lang_paradigm/,1,"hi, what website has latest programming lang paradigm? i am thinking to create a new language and want to get some idea from the others. thanks",1643423943.0,"['hi', ',', 'website', 'late', 'program', 'lang', 'paradigm', '?', 'think', 'create', 'new', 'language', 'want', 'get', 'idea', 'others', '.', 'thanks']","[[('hi', 'NN')], [(',', ',')], [('website', 'NN')], [('latest', 'JJS')], [('programming', 'VBG')], [('lang', 'NN')], [('paradigm', 'NN')], [('?', '.')], [('thinking', 'VBG')], [('create', 'NN')], [('new', 'JJ')], [('language', 'NN')], [('want', 'NN')], [('get', 'VB')], [('idea', 'NN')], [('others', 'NNS')], [('.', '.')], [('thanks', 'NNS')]]","hi , website late program lang paradigm ? think create new language want get idea others . thanks",8_language_one_program_write,3
176,seqqpv,Is Software Engineering a sub title to Computer Engineering?,Discussion,2,0.56,computerscience,https://www.reddit.com/r/computerscience/comments/seqqpv/is_software_engineering_a_sub_title_to_computer/,12," is computer engineering consider top of the line or ""cooler"" than software engineering? what i mean by this is that computer engineers often design embedded system or the computers/micro controllers and write low level software. after that the software engineers code och develop stuff on hardware that computer engineers made. for me it sounds like this: computer engineering says to software engineer: ""your not that good at computer so i will build it for you and then you could program your software on my hardware with high level programing languages that is easier to understand"". do you get what i mean, or am i wrong?   


is there stuff that software engineers is able to make that the computer engineers are not? my understandings is that because a computer engineer have made the computer they know everything about it and how to code and use it. and a software developer only learns how to use the tools that a computer engineer have made and do not need all that technical understanding. is computer engineering higher prestige than software? do a software engineer knows better way of making software than a computer engineer? this is my thoughts do not get offended by my thoughts instead describe to me how the job market works, i am still a student.",1643376272.0,"['computer', 'engineering', 'consider', 'top', 'line', '``', 'cooler', ""''"", 'software', 'engineering', '?', 'mean', 'computer', 'engineer', 'often', 'design', 'embed', 'system', 'computers/micro', 'controller', 'write', 'low', 'level', 'software', '.', 'software', 'engineer', 'code', 'och', 'develop', 'stuff', 'hardware', 'computer', 'engineer', 'make', '.', 'sound', 'like', ':', 'computer', 'engineering', 'say', 'software', 'engineer', ':', '``', 'good', 'computer', 'build', 'could', 'program', 'software', 'hardware', 'high', 'level', 'program', 'language', 'easy', 'understand', ""''"", '.', 'get', 'mean', ',', 'wrong', '?', 'stuff', 'software', 'engineer', 'able', 'make', 'computer', 'engineer', '?', 'understanding', 'computer', 'engineer', 'make', 'computer', 'know', 'everything', 'code', 'use', '.', 'software', 'developer', 'learns', 'use', 'tool', 'computer', 'engineer', 'make', 'need', 'technical', 'understand', '.', 'computer', 'engineering', 'high', 'prestige', 'software', '?', 'software', 'engineer', 'know', 'well', 'way', 'make', 'software', 'computer', 'engineer', '?', 'thought', 'get', 'offend', 'thought', 'instead', 'describe', 'job', 'market', 'work', ',', 'still', 'student', '.']","[[('computer', 'NN')], [('engineering', 'NN')], [('consider', 'VB')], [('top', 'NN')], [('line', 'NN')], [('``', '``')], [('cooler', 'NN')], [(""''"", ""''"")], [('software', 'NN')], [('engineering', 'NN')], [('?', '.')], [('mean', 'NN')], [('computer', 'NN')], [('engineers', 'NNS')], [('often', 'RB')], [('design', 'NN')], [('embedded', 'VBN')], [('system', 'NN')], [('computers/micro', 'NN')], [('controllers', 'NNS')], [('write', 'NN')], [('low', 'JJ')], [('level', 'NN')], [('software', 'NN')], [('.', '.')], [('software', 'NN')], [('engineers', 'NNS')], [('code', 'NN')], [('och', 'NN')], [('develop', 'VB')], [('stuff', 'NN')], [('hardware', 'NN')], [('computer', 'NN')], [('engineers', 'NNS')], [('made', 'VBN')], [('.', '.')], [('sounds', 'NNS')], [('like', 'IN')], [(':', ':')], [('computer', 'NN')], [('engineering', 'NN')], [('says', 'VBZ')], [('software', 'NN')], [('engineer', 'NN')], [(':', ':')], [('``', '``')], [('good', 'JJ')], [('computer', 'NN')], [('build', 'NN')], [('could', 'MD')], [('program', 'NN')], [('software', 'NN')], [('hardware', 'NN')], [('high', 'JJ')], [('level', 'NN')], [('programing', 'VBG')], [('languages', 'NNS')], [('easier', 'JJR')], [('understand', 'NN')], [(""''"", ""''"")], [('.', '.')], [('get', 'VB')], [('mean', 'NN')], [(',', ',')], [('wrong', 'JJ')], [('?', '.')], [('stuff', 'NN')], [('software', 'NN')], [('engineers', 'NNS')], [('able', 'JJ')], [('make', 'VB')], [('computer', 'NN')], [('engineers', 'NNS')], [('?', '.')], [('understandings', 'NNS')], [('computer', 'NN')], [('engineer', 'NN')], [('made', 'VBN')], [('computer', 'NN')], [('know', 'VB')], [('everything', 'NN')], [('code', 'NN')], [('use', 'NN')], [('.', '.')], [('software', 'NN')], [('developer', 'NN')], [('learns', 'NNS')], [('use', 'NN')], [('tools', 'NNS')], [('computer', 'NN')], [('engineer', 'NN')], [('made', 'VBN')], [('need', 'NN')], [('technical', 'JJ')], [('understanding', 'VBG')], [('.', '.')], [('computer', 'NN')], [('engineering', 'NN')], [('higher', 'JJR')], [('prestige', 'NN')], [('software', 'NN')], [('?', '.')], [('software', 'NN')], [('engineer', 'NN')], [('knows', 'NNS')], [('better', 'RBR')], [('way', 'NN')], [('making', 'VBG')], [('software', 'NN')], [('computer', 'NN')], [('engineer', 'NN')], [('?', '.')], [('thoughts', 'NNS')], [('get', 'VB')], [('offended', 'VBN')], [('thoughts', 'NNS')], [('instead', 'RB')], [('describe', 'NN')], [('job', 'NN')], [('market', 'NN')], [('works', 'NNS')], [(',', ',')], [('still', 'RB')], [('student', 'NN')], [('.', '.')]]","computer engineering consider top line `` cooler '' software engineering ? mean computer engineer often design embed system computers/micro controller write low level software . software engineer code och develop stuff hardware computer engineer make . sound like : computer engineering say software engineer : `` good computer build could program software hardware high level program language easy understand '' . get mean , wrong ? stuff software engineer able make computer engineer ? understanding computer engineer make computer know everything code use . software developer learns use tool computer engineer make need technical understand . computer engineering high prestige software ? software engineer know well way make software computer engineer ? thought get offend thought instead describe job market work , still student .",2_computer_learn_science_study,2
178,sdur26,What is a good book for learning algorithms in programming?,Advice,91,0.98,computerscience,https://www.reddit.com/r/computerscience/comments/sdur26/what_is_a_good_book_for_learning_algorithms_in/,29,"hello there, i am a somewhat intermediate full-stack developer who is 100% self taught without any educational background in cs. but i want to up my game by learning some of the scientific fundamentals of computer programming, and i figured what better subject  to start with than algorithms!? so anyways let me know ur suggestions guys :d",1643276745.0,"['hello', ',', 'somewhat', 'intermediate', 'full-stack', 'developer', '100', '%', 'self', 'taught', 'without', 'educational', 'background', 'c', '.', 'want', 'game', 'learn', 'scientific', 'fundamental', 'computer', 'program', ',', 'figure', 'well', 'subject', 'start', 'algorithm', '!', '?', 'anyways', 'let', 'know', 'ur', 'suggestion', 'guy', ':']","[[('hello', 'NN')], [(',', ',')], [('somewhat', 'RB')], [('intermediate', 'NN')], [('full-stack', 'NN')], [('developer', 'NN')], [('100', 'CD')], [('%', 'NN')], [('self', 'NN')], [('taught', 'NN')], [('without', 'IN')], [('educational', 'JJ')], [('background', 'NN')], [('cs', 'NN')], [('.', '.')], [('want', 'NN')], [('game', 'NN')], [('learning', 'VBG')], [('scientific', 'JJ')], [('fundamentals', 'NNS')], [('computer', 'NN')], [('programming', 'VBG')], [(',', ',')], [('figured', 'VBN')], [('better', 'RBR')], [('subject', 'NN')], [('start', 'NN')], [('algorithms', 'NN')], [('!', '.')], [('?', '.')], [('anyways', 'NNS')], [('let', 'VB')], [('know', 'VB')], [('ur', 'NN')], [('suggestions', 'NNS')], [('guys', 'NNS')], [(':', ':')]]","hello , somewhat intermediate full-stack developer 100 % self taught without educational background c . want game learn scientific fundamental computer program , figure well subject start algorithm ! ? anyways let know ur suggestion guy :",-1_abazbz2abz_2520_problem_use,3
179,sdxd4b,Data Structure & Algorithms Book for Beginners,Advice,11,0.87,computerscience,https://www.reddit.com/r/computerscience/comments/sdxd4b/data_structure_algorithms_book_for_beginners/,6,"\[solved\]

hi all,

i know there are many posts here asking for book recommendations, particularly on this topic.

however i am looking for a recommendation of a good book for beginners with easy to comprehend language and structure. i agree that its a tough topic so all of them will be somewhat technical i am just wondering if anyone knows any that are both good but simple enough to follow!

many thanks!",1643286803.0,"['\\', '[', 'solved\\', ']', 'hi', ',', 'know', 'many', 'post', 'ask', 'book', 'recommendation', ',', 'particularly', 'topic', '.', 'however', 'look', 'recommendation', 'good', 'book', 'beginner', 'easy', 'comprehend', 'language', 'structure', '.', 'agree', 'tough', 'topic', 'somewhat', 'technical', 'wonder', 'anyone', 'know', 'good', 'simple', 'enough', 'follow', '!', 'many', 'thanks', '!']","[[('\\', 'NN')], [('[', 'NN')], [('solved\\', 'NN')], [(']', 'NN')], [('hi', 'NN')], [(',', ',')], [('know', 'VB')], [('many', 'JJ')], [('posts', 'NNS')], [('asking', 'VBG')], [('book', 'NN')], [('recommendations', 'NNS')], [(',', ',')], [('particularly', 'RB')], [('topic', 'NN')], [('.', '.')], [('however', 'RB')], [('looking', 'VBG')], [('recommendation', 'NN')], [('good', 'JJ')], [('book', 'NN')], [('beginners', 'NNS')], [('easy', 'JJ')], [('comprehend', 'NN')], [('language', 'NN')], [('structure', 'NN')], [('.', '.')], [('agree', 'NN')], [('tough', 'JJ')], [('topic', 'NN')], [('somewhat', 'RB')], [('technical', 'JJ')], [('wondering', 'VBG')], [('anyone', 'NN')], [('knows', 'NNS')], [('good', 'JJ')], [('simple', 'NN')], [('enough', 'RB')], [('follow', 'VB')], [('!', '.')], [('many', 'JJ')], [('thanks', 'NNS')], [('!', '.')]]","\ [ solved\ ] hi , know many post ask book recommendation , particularly topic . however look recommendation good book beginner easy comprehend language structure . agree tough topic somewhat technical wonder anyone know good simple enough follow ! many thanks !",4_book_learn_computer_good,4
180,sdh6gc,Why doesnt multi-core processor like dual-core or quad-core perform 2x or 4x times faster?,,60,0.91,computerscience,https://www.reddit.com/r/computerscience/comments/sdh6gc/why_doesnt_multicore_processor_like_dualcore_or/,40,"yes, its true, your program must be written in a way so it could be processed by multiple cores or processed effectively by them.

  
so to this question:  
why dual/quad is not 2x/4x faster then single core or why is not quad 2x faster then dual core processor,

beside saying:

*  due imperfect software algorithms and implementation. 

are there any other facts/arguments we can add, like hardware ones, e.g.:

* they all share same resources, memory, bus etc etc

i know that there are some details that might need to be included in this like, brand, microarchitecture, speed etc etc... i am aware of that, its just a general question about multiprocessing.

feel free to post any link where this might have been answered or it contain some explanation.

thank you! :))",1643233106.0,"['yes', ',', 'true', ',', 'program', 'must', 'write', 'way', 'could', 'process', 'multiple', 'core', 'process', 'effectively', '.', 'question', ':', 'dual/quad', '2x/4x', 'faster', 'single', 'core', 'quad', '2x', 'faster', 'dual', 'core', 'processor', ',', 'beside', 'say', ':', '*', 'due', 'imperfect', 'software', 'algorithm', 'implementation', '.', 'facts/arguments', 'add', ',', 'like', 'hardware', 'one', ',', 'e.g', '.', ':', '*', 'share', 'resource', ',', 'memory', ',', 'bus', 'etc', 'etc', 'know', 'detail', 'might', 'need', 'include', 'like', ',', 'brand', ',', 'microarchitecture', ',', 'speed', 'etc', 'etc', '...', 'aware', ',', 'general', 'question', 'multiprocessing', '.', 'feel', 'free', 'post', 'link', 'might', 'answer', 'contain', 'explanation', '.', 'thank', '!', ':', ')', ')']","[[('yes', 'NNS')], [(',', ',')], [('true', 'JJ')], [(',', ',')], [('program', 'NN')], [('must', 'MD')], [('written', 'VBN')], [('way', 'NN')], [('could', 'MD')], [('processed', 'VBN')], [('multiple', 'NN')], [('cores', 'NNS')], [('processed', 'VBN')], [('effectively', 'RB')], [('.', '.')], [('question', 'NN')], [(':', ':')], [('dual/quad', 'NN')], [('2x/4x', 'CD')], [('faster', 'NN')], [('single', 'JJ')], [('core', 'NN')], [('quad', 'NN')], [('2x', 'CD')], [('faster', 'NN')], [('dual', 'JJ')], [('core', 'NN')], [('processor', 'NN')], [(',', ',')], [('beside', 'NN')], [('saying', 'VBG')], [(':', ':')], [('*', 'NN')], [('due', 'JJ')], [('imperfect', 'NN')], [('software', 'NN')], [('algorithms', 'NN')], [('implementation', 'NN')], [('.', '.')], [('facts/arguments', 'NNS')], [('add', 'VB')], [(',', ',')], [('like', 'IN')], [('hardware', 'NN')], [('ones', 'NNS')], [(',', ',')], [('e.g', 'NN')], [('.', '.')], [(':', ':')], [('*', 'NN')], [('share', 'NN')], [('resources', 'NNS')], [(',', ',')], [('memory', 'NN')], [(',', ',')], [('bus', 'NN')], [('etc', 'NN')], [('etc', 'NN')], [('know', 'VB')], [('details', 'NNS')], [('might', 'MD')], [('need', 'NN')], [('included', 'VBD')], [('like', 'IN')], [(',', ',')], [('brand', 'NN')], [(',', ',')], [('microarchitecture', 'NN')], [(',', ',')], [('speed', 'NN')], [('etc', 'NN')], [('etc', 'NN')], [('...', ':')], [('aware', 'JJ')], [(',', ',')], [('general', 'JJ')], [('question', 'NN')], [('multiprocessing', 'VBG')], [('.', '.')], [('feel', 'NN')], [('free', 'JJ')], [('post', 'NN')], [('link', 'NN')], [('might', 'MD')], [('answered', 'VBN')], [('contain', 'NN')], [('explanation', 'NN')], [('.', '.')], [('thank', 'NN')], [('!', '.')], [(':', ':')], [(')', ')')], [(')', ')')]]","yes , true , program must write way could process multiple core process effectively . question : dual/quad 2x/4x faster single core quad 2x faster dual core processor , beside say : * due imperfect software algorithm implementation . facts/arguments add , like hardware one , e.g . : * share resource , memory , bus etc etc know detail might need include like , brand , microarchitecture , speed etc etc ... aware , general question multiprocessing . feel free post link might answer contain explanation . thank ! : ) )",5_cpu_computer_run_process,2
181,se2nq0,"Is there a ""trait theory""?",Discussion,1,1.0,computerscience,https://www.reddit.com/r/computerscience/comments/se2nq0/is_there_a_trait_theory/,2,"i am interested in getting into type theory, lambda calculus, etc. but i am wondering if there is an equivalent model for *traits* rather than types.

for example, in c any non-zero value is true, so a pointer has the ""trait"" of being either true or false depending on whether or not it is null.

a `mod` type in ada has the ""trait"" of being bounded between two values, and also the ""trait"" of overflowing to stay within those bounds.

this can allow you to express some very complicated things. the trait system in rust allows you to say ""if i can do x, then i can do y."" using that, you can basically have behaviours ""implement themselves"" as long as there is a valid path through the trait implementations.

i am wondering if there is a theoretical system similar to type theory that uses ""what you can do with something"" as the core idea rather than ""what something is.""",1643301893.0,"['interested', 'get', 'type', 'theory', ',', 'lambda', 'calculus', ',', 'etc', '.', 'wonder', 'equivalent', 'model', '*', 'trait', '*', 'rather', 'type', '.', 'example', ',', 'c', 'non-zero', 'value', 'true', ',', 'pointer', '``', 'trait', ""''"", 'either', 'true', 'false', 'depend', 'whether', 'null', '.', '`', 'mod', '`', 'type', 'ada', '``', 'trait', ""''"", 'bound', 'two', 'value', ',', 'also', '``', 'trait', ""''"", 'overflow', 'stay', 'within', 'bound', '.', 'allow', 'express', 'complicate', 'thing', '.', 'trait', 'system', 'rust', 'allows', 'say', '``', 'x', ',', '.', ""''"", 'use', ',', 'basically', 'behaviour', '``', 'implement', ""''"", 'long', 'valid', 'path', 'trait', 'implementation', '.', 'wonder', 'theoretical', 'system', 'similar', 'type', 'theory', 'us', '``', 'something', ""''"", 'core', 'idea', 'rather', '``', 'something', '.', ""''""]","[[('interested', 'JJ')], [('getting', 'VBG')], [('type', 'NN')], [('theory', 'NN')], [(',', ',')], [('lambda', 'NN')], [('calculus', 'NN')], [(',', ',')], [('etc', 'NN')], [('.', '.')], [('wondering', 'VBG')], [('equivalent', 'NN')], [('model', 'NN')], [('*', 'NN')], [('traits', 'NNS')], [('*', 'NN')], [('rather', 'RB')], [('types', 'NNS')], [('.', '.')], [('example', 'NN')], [(',', ',')], [('c', 'NNS')], [('non-zero', 'NN')], [('value', 'NN')], [('true', 'JJ')], [(',', ',')], [('pointer', 'NN')], [('``', '``')], [('trait', 'NN')], [(""''"", ""''"")], [('either', 'DT')], [('true', 'JJ')], [('false', 'JJ')], [('depending', 'VBG')], [('whether', 'IN')], [('null', 'NN')], [('.', '.')], [('`', '``')], [('mod', 'NN')], [('`', '``')], [('type', 'NN')], [('ada', 'NN')], [('``', '``')], [('trait', 'NN')], [(""''"", ""''"")], [('bounded', 'VBN')], [('two', 'CD')], [('values', 'NNS')], [(',', ',')], [('also', 'RB')], [('``', '``')], [('trait', 'NN')], [(""''"", ""''"")], [('overflowing', 'VBG')], [('stay', 'NN')], [('within', 'IN')], [('bounds', 'NNS')], [('.', '.')], [('allow', 'VB')], [('express', 'NN')], [('complicated', 'VBN')], [('things', 'NNS')], [('.', '.')], [('trait', 'NN')], [('system', 'NN')], [('rust', 'NN')], [('allows', 'NNS')], [('say', 'VB')], [('``', '``')], [('x', 'NN')], [(',', ',')], [('.', '.')], [(""''"", ""''"")], [('using', 'VBG')], [(',', ',')], [('basically', 'RB')], [('behaviours', 'NNS')], [('``', '``')], [('implement', 'NN')], [(""''"", ""''"")], [('long', 'RB')], [('valid', 'JJ')], [('path', 'NN')], [('trait', 'NN')], [('implementations', 'NNS')], [('.', '.')], [('wondering', 'VBG')], [('theoretical', 'JJ')], [('system', 'NN')], [('similar', 'JJ')], [('type', 'NN')], [('theory', 'NN')], [('uses', 'NNS')], [('``', '``')], [('something', 'NN')], [(""''"", ""''"")], [('core', 'NN')], [('idea', 'NN')], [('rather', 'RB')], [('``', '``')], [('something', 'NN')], [('.', '.')], [(""''"", ""''"")]]","interested get type theory , lambda calculus , etc . wonder equivalent model * trait * rather type . example , c non-zero value true , pointer `` trait '' either true false depend whether null . ` mod ` type ada `` trait '' bound two value , also `` trait '' overflow stay within bound . allow express complicate thing . trait system rust allows say `` x , . '' use , basically behaviour `` implement '' long valid path trait implementation . wonder theoretical system similar type theory us `` something '' core idea rather `` something . ''",-1_abazbz2abz_2520_problem_use,3
182,sd0e5c,All the ways to model and deal with side effects in a program,Help,20,0.96,computerscience,https://www.reddit.com/r/computerscience/comments/sd0e5c/all_the_ways_to_model_and_deal_with_side_effects/,4,"i know about [monads]((functional_programming)) for dealing with side effects, by adding the ""world"" as an internal variable which gets passed around. and i know the basics of linear type systems (or more generally [substructural type systems]()), some of the ideas of which are used by rust. monads are used in haskell or perhaps other languages, but these are purely for functional languages as far as i can tell (it is to make the functions pure again). i am not too sure about linear logic/types though.

but what other ways are there of dealing with side effects in terms of type theory, especially regarding to imperative or object oriented programming languages, dealing with pointers perhaps, or memory management, object creation and destruction, accessing and manipulating local/global state/context, etc.. it would be wonderful to paint a full picture of the possibilities the research has uncovered so far, so it is easier to make sense of how to model side effects (especially in imperative programs using type theory).",1643182419.0,"['know', '[', 'monad', ']', '(', '(', 'functional_programming', ')', ')', 'deal', 'side', 'effect', ',', 'add', '``', 'world', ""''"", 'internal', 'variable', 'get', 'pass', 'around', '.', 'know', 'basic', 'linear', 'type', 'system', '(', 'generally', '[', 'substructural', 'type', 'system', ']', '(', ')', ')', ',', 'idea', 'use', 'rust', '.', 'monad', 'use', 'haskell', 'perhaps', 'language', ',', 'purely', 'functional', 'language', 'far', 'tell', '(', 'make', 'function', 'pure', ')', '.', 'sure', 'linear', 'logic/types', 'though', '.', 'way', 'deal', 'side', 'effect', 'term', 'type', 'theory', ',', 'especially', 'regard', 'imperative', 'object', 'orient', 'program', 'language', ',', 'deal', 'pointer', 'perhaps', ',', 'memory', 'management', ',', 'object', 'creation', 'destruction', ',', 'access', 'manipulate', 'local/global', 'state/context', ',', 'etc', '..', 'would', 'wonderful', 'paint', 'full', 'picture', 'possibility', 'research', 'uncovered', 'far', ',', 'easy', 'make', 'sense', 'model', 'side', 'effect', '(', 'especially', 'imperative', 'program', 'use', 'type', 'theory', ')', '.']","[[('know', 'VB')], [('[', 'NN')], [('monads', 'NNS')], [(']', 'NN')], [('(', '(')], [('(', '(')], [('functional_programming', 'VBG')], [(')', ')')], [(')', ')')], [('dealing', 'VBG')], [('side', 'NN')], [('effects', 'NNS')], [(',', ',')], [('adding', 'VBG')], [('``', '``')], [('world', 'NN')], [(""''"", ""''"")], [('internal', 'JJ')], [('variable', 'JJ')], [('gets', 'VBZ')], [('passed', 'VBN')], [('around', 'IN')], [('.', '.')], [('know', 'VB')], [('basics', 'NNS')], [('linear', 'NN')], [('type', 'NN')], [('systems', 'NNS')], [('(', '(')], [('generally', 'RB')], [('[', 'NN')], [('substructural', 'JJ')], [('type', 'NN')], [('systems', 'NNS')], [(']', 'NN')], [('(', '(')], [(')', ')')], [(')', ')')], [(',', ',')], [('ideas', 'NNS')], [('used', 'VBN')], [('rust', 'NN')], [('.', '.')], [('monads', 'NNS')], [('used', 'VBN')], [('haskell', 'NN')], [('perhaps', 'RB')], [('languages', 'NNS')], [(',', ',')], [('purely', 'RB')], [('functional', 'JJ')], [('languages', 'NNS')], [('far', 'RB')], [('tell', 'NN')], [('(', '(')], [('make', 'VB')], [('functions', 'NNS')], [('pure', 'NN')], [(')', ')')], [('.', '.')], [('sure', 'NN')], [('linear', 'NN')], [('logic/types', 'NNS')], [('though', 'IN')], [('.', '.')], [('ways', 'NNS')], [('dealing', 'VBG')], [('side', 'NN')], [('effects', 'NNS')], [('terms', 'NNS')], [('type', 'NN')], [('theory', 'NN')], [(',', ',')], [('especially', 'RB')], [('regarding', 'VBG')], [('imperative', 'NN')], [('object', 'NN')], [('oriented', 'VBN')], [('programming', 'VBG')], [('languages', 'NNS')], [(',', ',')], [('dealing', 'VBG')], [('pointers', 'NNS')], [('perhaps', 'RB')], [(',', ',')], [('memory', 'NN')], [('management', 'NN')], [(',', ',')], [('object', 'NN')], [('creation', 'NN')], [('destruction', 'NN')], [(',', ',')], [('accessing', 'VBG')], [('manipulating', 'VBG')], [('local/global', 'NN')], [('state/context', 'NN')], [(',', ',')], [('etc', 'NN')], [('..', 'NN')], [('would', 'MD')], [('wonderful', 'NN')], [('paint', 'NN')], [('full', 'JJ')], [('picture', 'NN')], [('possibilities', 'NNS')], [('research', 'NN')], [('uncovered', 'JJ')], [('far', 'RB')], [(',', ',')], [('easier', 'JJR')], [('make', 'VB')], [('sense', 'NN')], [('model', 'NN')], [('side', 'NN')], [('effects', 'NNS')], [('(', '(')], [('especially', 'RB')], [('imperative', 'NN')], [('programs', 'NNS')], [('using', 'VBG')], [('type', 'NN')], [('theory', 'NN')], [(')', ')')], [('.', '.')]]","know [ monad ] ( ( functional_programming ) ) deal side effect , add `` world '' internal variable get pass around . know basic linear type system ( generally [ substructural type system ] ( ) ) , idea use rust . monad use haskell perhaps language , purely functional language far tell ( make function pure ) . sure linear logic/types though . way deal side effect term type theory , especially regard imperative object orient program language , deal pointer perhaps , memory management , object creation destruction , access manipulate local/global state/context , etc .. would wonderful paint full picture possibility research uncovered far , easy make sense model side effect ( especially imperative program use type theory ) .",-1_abazbz2abz_2520_problem_use,4
185,scv94z,"Summary of the KindLang ""proof language"" theory?",Discussion,3,1.0,computerscience,https://www.reddit.com/r/computerscience/comments/scv94z/summary_of_the_kindlang_proof_language_theory/,0,"just stumbled across [kindlang](-lang/kind), ""a modern proof language"", which looks amazing. i found some of the [old writing](-lang/kind/tree/f70ed05356f4d6e88f4d28df3d1ddb0a3cad8c94), such as the so-called [fmc specification](#file-fmc_specification-md), which describes some of the theory. some important snippets from it are (bold added):

>within the field of type theory, mathematical proofs and theorems are represented by functional programs and their associated types. this is called the curry-howard correspondence, and is the basis of modern proof assistants such as agda, idris, coq and hol/isabelle. sadly, those are complex software with monolithic implementations that are hard to audit and reason about. we are interested in a simpler alternative: a fully-featured proof assistant that can be turned into a small standard that is easy to analyze and implement independently.  
>  
>under that perspective, one may be interested on the **calculus of constructions** (coc), a small type theory that **easily fits 1000 lines of code** in a modern programming language. sadly, that and similar languages **are not capable of deriving mathematical induction**, an important proof technique without which any non-trivial theorem is not provable. moreover, it is not capable of expressing efficient (constant space and time) pattern-matching, without which functional programming is not viable. the usual solution to both problems is to supplement coc with a native datatype system, but this results in the complexity explosion that is seen on the mentioned languages.

the same author made this [calculus of constructions repo in javascript](-of-constructions/blob/5b4ede47dfcc408ce27903f78d29c81bf393a9d3/src/core.js), but it seems to have been replaced by kindlang.

so then it is stated:

>**a simple, clever alternative was proposed by** [aaron stump](/~astump/). with just one additional primitive, the ""**self type**"", **coupled with mutually recursive definitions, one can easily derive induction** for lambda encodings, i.e., a way to represent datatypes with native lambdas, subsuming the need for a separate implementation. this also solves the efficiency problem, as we are able to pattern-match in constant time with certain lambda encodings. the problem with that solution is that providing a semantics and, thus, proving the consistency of the resulting system becomes extremely hard.  
>  
>aaron stump **moved on from self types towards a very similar solution based on dependent intersections**. the idea is that, instead of relying on mutual recursion, inductive datatypes can refer to themselves in simplified, erased forms. this results in a comparably small language that is much easier to provide a semantics for, which aaron stump called cedille-core. in exchange, programming on it is hard. the simple task of defining a datatypes with efficient pattern-matching and recursion becomes a complex task involving non-trivial type-level manipulations and many intermediate proofs. while doable, programming in cedille-core without a supplementary language to do all that work for you is not practical.

then it talks about ""consistency"" being a problem when modeling, which is a bit over my head. then:

>computationally, formality-core is just the lambda calculus.

meanwhile, the latest kindlang [theorems](-lang/kind/blob/master/theorems.md) doc describes how to prove things. have not read through all of that yet, though.

what i am wondering is, what is the summary of the theory kindlang is built upon? what i shared above is pieced together.

i found this by landing on the [calculus of constructions]() (coc) after looking at the [lambda cube](). i found that from looking at [hott]() and [unimath](), both of which are touted as ""foundations of math"". (unimath is based on calculus of constructions as far as i understand). but as the above snippets show, coc cannot model induction or recursion i guess, so i wonder how these can serve as foundations. so it looks like kindlang builds upon coc like unimath, but adds that ""self type"" that aaron stump talks about. *does it add anything else?*

i was reading about [cubical type theory](-pages.s3.us-east-2.amazonaws.com/nlab/show/cubical+type+theory) (does not even have a wikipedia page yet), but it was said it also had some key problems, and then landed on [this paper]() which states right up front:

>we prove normalization for (univalent, cartesian) cubical type theory, **closing the last major open problem** in the syntactic meta-theory of cubical type theory.

*maybe i misread that though.*

so i am wondering, what theory does kindlang use, and how does it relate to cubical type theory, which seems to be the latest edition of type theory that is the most expressive.

trying to figure out what the latest theory is for implementing a proof language like kindlang.",1643165204.0,"['stumble', 'across', '[', 'kindlang', ']', '(', '-lang/kind', ')', ',', '``', 'modern', 'proof', 'language', ""''"", ',', 'look', 'amaze', '.', 'found', '[', 'old', 'write', ']', '(', '-lang/kind/tree/f70ed05356f4d6e88f4d28df3d1ddb0a3cad8c94', ')', ',', 'so-called', '[', 'fmc', 'specification', ']', '(', '#', 'file-fmc_specification-md', ')', ',', 'describes', 'theory', '.', 'important', 'snippet', '(', 'bold', 'add', ')', ':', '>', 'within', 'field', 'type', 'theory', ',', 'mathematical', 'proof', 'theorem', 'represent', 'functional', 'program', 'associate', 'type', '.', 'call', 'curry-howard', 'correspondence', ',', 'basis', 'modern', 'proof', 'assistant', 'agda', ',', 'idris', ',', 'coq', 'hol/isabelle', '.', 'sadly', ',', 'complex', 'software', 'monolithic', 'implementation', 'hard', 'audit', 'reason', '.', 'interested', 'simpler', 'alternative', ':', 'fully-featured', 'proof', 'assistant', 'turn', 'small', 'standard', 'easy', 'analyze', 'implement', 'independently', '.', '>', '>', 'perspective', ',', 'one', 'may', 'interested', '*', '*', 'calculus', 'construction', '*', '*', '(', 'coc', ')', ',', 'small', 'type', 'theory', '*', '*', 'easily', 'fit', '1000', 'line', 'code', '*', '*', 'modern', 'program', 'language', '.', 'sadly', ',', 'similar', 'language', '*', '*', 'capable', 'derive', 'mathematical', 'induction', '*', '*', ',', 'important', 'proof', 'technique', 'without', 'non-trivial', 'theorem', 'provable', '.', 'moreover', ',', 'capable', 'express', 'efficient', '(', 'constant', 'space', 'time', ')', 'pattern-matching', ',', 'without', 'functional', 'program', 'viable', '.', 'usual', 'solution', 'problem', 'supplement', 'coc', 'native', 'datatype', 'system', ',', 'result', 'complexity', 'explosion', 'see', 'mention', 'language', '.', 'author', 'make', '[', 'calculus', 'construction', 'repo', 'javascript', ']', '(', '-of-constructions/blob/5b4ede47dfcc408ce27903f78d29c81bf393a9d3/src/core.js', ')', ',', 'seem', 'replace', 'kindlang', '.', 'state', ':', '>', '*', '*', 'simple', ',', 'clever', 'alternative', 'propose', '*', '*', '[', 'aaron', 'stump', ']', '(', '/~astump/', ')', '.', 'one', 'additional', 'primitive', ',', '``', '*', '*', 'self', 'type', '*', '*', ""''"", ',', '*', '*', 'couple', 'mutually', 'recursive', 'definition', ',', 'one', 'easily', 'derive', 'induction', '*', '*', 'lambda', 'encoding', ',', 'i.e.', ',', 'way', 'represent', 'datatypes', 'native', 'lambda', ',', 'subsume', 'need', 'separate', 'implementation', '.', 'also', 'solves', 'efficiency', 'problem', ',', 'able', 'pattern-match', 'constant', 'time', 'certain', 'lambda', 'encoding', '.', 'problem', 'solution', 'provide', 'semantics', ',', 'thus', ',', 'prove', 'consistency', 'result', 'system', 'becomes', 'extremely', 'hard', '.', '>', '>', 'aaron', 'stump', '*', '*', 'move', 'self', 'type', 'towards', 'similar', 'solution', 'base', 'dependent', 'intersection', '*', '*', '.', 'idea', ',', 'instead', 'rely', 'mutual', 'recursion', ',', 'inductive', 'datatypes', 'refer', 'simplify', ',', 'erase', 'form', '.', 'result', 'comparably', 'small', 'language', 'much', 'easy', 'provide', 'semantics', ',', 'aaron', 'stump', 'call', 'cedille-core', '.', 'exchange', ',', 'program', 'hard', '.', 'simple', 'task', 'define', 'datatypes', 'efficient', 'pattern-matching', 'recursion', 'becomes', 'complex', 'task', 'involve', 'non-trivial', 'type-level', 'manipulation', 'many', 'intermediate', 'proof', '.', 'doable', ',', 'program', 'cedille-core', 'without', 'supplementary', 'language', 'work', 'practical', '.', 'talk', '``', 'consistency', ""''"", 'problem', 'model', ',', 'bit', 'head', '.', ':', '>', 'computationally', ',', 'formality-core', 'lambda', 'calculus', '.', 'meanwhile', ',', 'late', 'kindlang', '[', 'theorem', ']', '(', '-lang/kind/blob/master/theorems.md', ')', 'doc', 'describes', 'prove', 'thing', '.', 'read', 'yet', ',', 'though', '.', 'wonder', ',', 'summary', 'theory', 'kindlang', 'built', 'upon', '?', 'share', 'piece', 'together', '.', 'found', 'land', '[', 'calculus', 'construction', ']', '(', ')', '(', 'coc', ')', 'look', '[', 'lambda', 'cube', ']', '(', ')', '.', 'found', 'look', '[', 'hott', ']', '(', ')', '[', 'unimath', ']', '(', ')', ',', 'tout', '``', 'foundation', 'math', ""''"", '.', '(', 'unimath', 'base', 'calculus', 'construction', 'far', 'understand', ')', '.', 'snippet', 'show', ',', 'coc', 'model', 'induction', 'recursion', 'guess', ',', 'wonder', 'serve', 'foundation', '.', 'look', 'like', 'kindlang', 'build', 'upon', 'coc', 'like', 'unimath', ',', 'add', '``', 'self', 'type', ""''"", 'aaron', 'stump', 'talk', '.', '*', 'add', 'anything', 'else', '?', '*', 'reading', '[', 'cubical', 'type', 'theory', ']', '(', '-pages.s3.us-east-2.amazonaws.com/nlab/show/cubical+type+theory', ')', '(', 'even', 'wikipedia', 'page', 'yet', ')', ',', 'say', 'also', 'key', 'problem', ',', 'land', '[', 'paper', ']', '(', ')', 'state', 'right', 'front', ':', '>', 'prove', 'normalization', '(', 'univalent', ',', 'cartesian', ')', 'cubical', 'type', 'theory', ',', '*', '*', 'closing', 'last', 'major', 'open', 'problem', '*', '*', 'syntactic', 'meta-theory', 'cubical', 'type', 'theory', '.', '*', 'maybe', 'misread', 'though', '.', '*', 'wonder', ',', 'theory', 'kindlang', 'use', ',', 'relate', 'cubical', 'type', 'theory', ',', 'seem', 'late', 'edition', 'type', 'theory', 'expressive', '.', 'try', 'figure', 'late', 'theory', 'implement', 'proof', 'language', 'like', 'kindlang', '.']","[[('stumbled', 'VBN')], [('across', 'IN')], [('[', 'NN')], [('kindlang', 'NN')], [(']', 'NN')], [('(', '(')], [('-lang/kind', 'NN')], [(')', ')')], [(',', ',')], [('``', '``')], [('modern', 'JJ')], [('proof', 'NN')], [('language', 'NN')], [(""''"", ""''"")], [(',', ',')], [('looks', 'NNS')], [('amazing', 'VBG')], [('.', '.')], [('found', 'NN')], [('[', 'NN')], [('old', 'JJ')], [('writing', 'VBG')], [(']', 'NN')], [('(', '(')], [('-lang/kind/tree/f70ed05356f4d6e88f4d28df3d1ddb0a3cad8c94', 'NN')], [(')', ')')], [(',', ',')], [('so-called', 'JJ')], [('[', 'NN')], [('fmc', 'NN')], [('specification', 'NN')], [(']', 'NN')], [('(', '(')], [('#', '#')], [('file-fmc_specification-md', 'NN')], [(')', ')')], [(',', ',')], [('describes', 'NNS')], [('theory', 'NN')], [('.', '.')], [('important', 'JJ')], [('snippets', 'NNS')], [('(', '(')], [('bold', 'NN')], [('added', 'VBD')], [(')', ')')], [(':', ':')], [('>', 'NN')], [('within', 'IN')], [('field', 'NN')], [('type', 'NN')], [('theory', 'NN')], [(',', ',')], [('mathematical', 'JJ')], [('proofs', 'NN')], [('theorems', 'NNS')], [('represented', 'VBN')], [('functional', 'JJ')], [('programs', 'NNS')], [('associated', 'VBN')], [('types', 'NNS')], [('.', '.')], [('called', 'VBN')], [('curry-howard', 'NN')], [('correspondence', 'NN')], [(',', ',')], [('basis', 'NN')], [('modern', 'JJ')], [('proof', 'NN')], [('assistants', 'NNS')], [('agda', 'NN')], [(',', ',')], [('idris', 'NN')], [(',', ',')], [('coq', 'NN')], [('hol/isabelle', 'NN')], [('.', '.')], [('sadly', 'RB')], [(',', ',')], [('complex', 'JJ')], [('software', 'NN')], [('monolithic', 'JJ')], [('implementations', 'NNS')], [('hard', 'JJ')], [('audit', 'NN')], [('reason', 'NN')], [('.', '.')], [('interested', 'JJ')], [('simpler', 'NN')], [('alternative', 'NN')], [(':', ':')], [('fully-featured', 'JJ')], [('proof', 'NN')], [('assistant', 'NN')], [('turned', 'VBD')], [('small', 'JJ')], [('standard', 'NN')], [('easy', 'JJ')], [('analyze', 'NN')], [('implement', 'NN')], [('independently', 'RB')], [('.', '.')], [('>', 'NN')], [('>', 'NN')], [('perspective', 'NN')], [(',', ',')], [('one', 'CD')], [('may', 'MD')], [('interested', 'JJ')], [('*', 'NN')], [('*', 'NN')], [('calculus', 'NN')], [('constructions', 'NNS')], [('*', 'NN')], [('*', 'NN')], [('(', '(')], [('coc', 'NN')], [(')', ')')], [(',', ',')], [('small', 'JJ')], [('type', 'NN')], [('theory', 'NN')], [('*', 'NN')], [('*', 'NN')], [('easily', 'RB')], [('fits', 'NNS')], [('1000', 'CD')], [('lines', 'NNS')], [('code', 'NN')], [('*', 'NN')], [('*', 'NN')], [('modern', 'JJ')], [('programming', 'VBG')], [('language', 'NN')], [('.', '.')], [('sadly', 'RB')], [(',', ',')], [('similar', 'JJ')], [('languages', 'NNS')], [('*', 'NN')], [('*', 'NN')], [('capable', 'JJ')], [('deriving', 'VBG')], [('mathematical', 'JJ')], [('induction', 'NN')], [('*', 'NN')], [('*', 'NN')], [(',', ',')], [('important', 'JJ')], [('proof', 'NN')], [('technique', 'NN')], [('without', 'IN')], [('non-trivial', 'JJ')], [('theorem', 'NN')], [('provable', 'JJ')], [('.', '.')], [('moreover', 'NN')], [(',', ',')], [('capable', 'JJ')], [('expressing', 'VBG')], [('efficient', 'NN')], [('(', '(')], [('constant', 'JJ')], [('space', 'NN')], [('time', 'NN')], [(')', ')')], [('pattern-matching', 'NN')], [(',', ',')], [('without', 'IN')], [('functional', 'JJ')], [('programming', 'VBG')], [('viable', 'JJ')], [('.', '.')], [('usual', 'JJ')], [('solution', 'NN')], [('problems', 'NNS')], [('supplement', 'NN')], [('coc', 'NN')], [('native', 'JJ')], [('datatype', 'NN')], [('system', 'NN')], [(',', ',')], [('results', 'NNS')], [('complexity', 'NN')], [('explosion', 'NN')], [('seen', 'VBN')], [('mentioned', 'VBN')], [('languages', 'NNS')], [('.', '.')], [('author', 'NN')], [('made', 'VBN')], [('[', 'NN')], [('calculus', 'NN')], [('constructions', 'NNS')], [('repo', 'NN')], [('javascript', 'NN')], [(']', 'NN')], [('(', '(')], [('-of-constructions/blob/5b4ede47dfcc408ce27903f78d29c81bf393a9d3/src/core.js', 'NN')], [(')', ')')], [(',', ',')], [('seems', 'VBZ')], [('replaced', 'VBN')], [('kindlang', 'NN')], [('.', '.')], [('stated', 'VBN')], [(':', ':')], [('>', 'NN')], [('*', 'NN')], [('*', 'NN')], [('simple', 'NN')], [(',', ',')], [('clever', 'NN')], [('alternative', 'NN')], [('proposed', 'VBN')], [('*', 'NN')], [('*', 'NN')], [('[', 'NN')], [('aaron', 'NN')], [('stump', 'NN')], [(']', 'NN')], [('(', '(')], [('/~astump/', 'NN')], [(')', ')')], [('.', '.')], [('one', 'CD')], [('additional', 'JJ')], [('primitive', 'NN')], [(',', ',')], [('``', '``')], [('*', 'NN')], [('*', 'NN')], [('self', 'NN')], [('type', 'NN')], [('*', 'NN')], [('*', 'NN')], [(""''"", ""''"")], [(',', ',')], [('*', 'NN')], [('*', 'NN')], [('coupled', 'VBN')], [('mutually', 'RB')], [('recursive', 'NN')], [('definitions', 'NNS')], [(',', ',')], [('one', 'CD')], [('easily', 'RB')], [('derive', 'NN')], [('induction', 'NN')], [('*', 'NN')], [('*', 'NN')], [('lambda', 'NN')], [('encodings', 'NNS')], [(',', ',')], [('i.e.', 'NN')], [(',', ',')], [('way', 'NN')], [('represent', 'NN')], [('datatypes', 'NNS')], [('native', 'JJ')], [('lambdas', 'NNS')], [(',', ',')], [('subsuming', 'VBG')], [('need', 'NN')], [('separate', 'JJ')], [('implementation', 'NN')], [('.', '.')], [('also', 'RB')], [('solves', 'NNS')], [('efficiency', 'NN')], [('problem', 'NN')], [(',', ',')], [('able', 'JJ')], [('pattern-match', 'NN')], [('constant', 'JJ')], [('time', 'NN')], [('certain', 'JJ')], [('lambda', 'NN')], [('encodings', 'NNS')], [('.', '.')], [('problem', 'NN')], [('solution', 'NN')], [('providing', 'VBG')], [('semantics', 'NNS')], [(',', ',')], [('thus', 'RB')], [(',', ',')], [('proving', 'VBG')], [('consistency', 'NN')], [('resulting', 'VBG')], [('system', 'NN')], [('becomes', 'NNS')], [('extremely', 'RB')], [('hard', 'JJ')], [('.', '.')], [('>', 'NN')], [('>', 'NN')], [('aaron', 'NN')], [('stump', 'NN')], [('*', 'NN')], [('*', 'NN')], [('moved', 'VBN')], [('self', 'NN')], [('types', 'NNS')], [('towards', 'NNS')], [('similar', 'JJ')], [('solution', 'NN')], [('based', 'VBN')], [('dependent', 'NN')], [('intersections', 'NNS')], [('*', 'NN')], [('*', 'NN')], [('.', '.')], [('idea', 'NN')], [(',', ',')], [('instead', 'RB')], [('relying', 'VBG')], [('mutual', 'JJ')], [('recursion', 'NN')], [(',', ',')], [('inductive', 'JJ')], [('datatypes', 'NNS')], [('refer', 'NN')], [('simplified', 'VBN')], [(',', ',')], [('erased', 'VBN')], [('forms', 'NNS')], [('.', '.')], [('results', 'NNS')], [('comparably', 'RB')], [('small', 'JJ')], [('language', 'NN')], [('much', 'JJ')], [('easier', 'JJR')], [('provide', 'NN')], [('semantics', 'NNS')], [(',', ',')], [('aaron', 'NN')], [('stump', 'NN')], [('called', 'VBN')], [('cedille-core', 'NN')], [('.', '.')], [('exchange', 'NN')], [(',', ',')], [('programming', 'VBG')], [('hard', 'JJ')], [('.', '.')], [('simple', 'NN')], [('task', 'NN')], [('defining', 'VBG')], [('datatypes', 'NNS')], [('efficient', 'NN')], [('pattern-matching', 'NN')], [('recursion', 'NN')], [('becomes', 'NNS')], [('complex', 'JJ')], [('task', 'NN')], [('involving', 'VBG')], [('non-trivial', 'JJ')], [('type-level', 'NN')], [('manipulations', 'NNS')], [('many', 'JJ')], [('intermediate', 'NN')], [('proofs', 'NN')], [('.', '.')], [('doable', 'JJ')], [(',', ',')], [('programming', 'VBG')], [('cedille-core', 'NN')], [('without', 'IN')], [('supplementary', 'JJ')], [('language', 'NN')], [('work', 'NN')], [('practical', 'JJ')], [('.', '.')], [('talks', 'NNS')], [('``', '``')], [('consistency', 'NN')], [(""''"", ""''"")], [('problem', 'NN')], [('modeling', 'VBG')], [(',', ',')], [('bit', 'NN')], [('head', 'NN')], [('.', '.')], [(':', ':')], [('>', 'NN')], [('computationally', 'RB')], [(',', ',')], [('formality-core', 'NN')], [('lambda', 'NN')], [('calculus', 'NN')], [('.', '.')], [('meanwhile', 'RB')], [(',', ',')], [('latest', 'JJS')], [('kindlang', 'NN')], [('[', 'NN')], [('theorems', 'NNS')], [(']', 'NN')], [('(', '(')], [('-lang/kind/blob/master/theorems.md', 'NN')], [(')', ')')], [('doc', 'NN')], [('describes', 'NNS')], [('prove', 'NN')], [('things', 'NNS')], [('.', '.')], [('read', 'NN')], [('yet', 'RB')], [(',', ',')], [('though', 'IN')], [('.', '.')], [('wondering', 'VBG')], [(',', ',')], [('summary', 'NN')], [('theory', 'NN')], [('kindlang', 'NN')], [('built', 'NN')], [('upon', 'IN')], [('?', '.')], [('shared', 'VBN')], [('pieced', 'VBN')], [('together', 'RB')], [('.', '.')], [('found', 'NN')], [('landing', 'VBG')], [('[', 'NN')], [('calculus', 'NN')], [('constructions', 'NNS')], [(']', 'NN')], [('(', '(')], [(')', ')')], [('(', '(')], [('coc', 'NN')], [(')', ')')], [('looking', 'VBG')], [('[', 'NN')], [('lambda', 'NN')], [('cube', 'NN')], [(']', 'NN')], [('(', '(')], [(')', ')')], [('.', '.')], [('found', 'NN')], [('looking', 'VBG')], [('[', 'NN')], [('hott', 'NN')], [(']', 'NN')], [('(', '(')], [(')', ')')], [('[', 'NN')], [('unimath', 'NN')], [(']', 'NN')], [('(', '(')], [(')', ')')], [(',', ',')], [('touted', 'VBN')], [('``', '``')], [('foundations', 'NNS')], [('math', 'NN')], [(""''"", ""''"")], [('.', '.')], [('(', '(')], [('unimath', 'NN')], [('based', 'VBN')], [('calculus', 'NN')], [('constructions', 'NNS')], [('far', 'RB')], [('understand', 'NN')], [(')', ')')], [('.', '.')], [('snippets', 'NNS')], [('show', 'NN')], [(',', ',')], [('coc', 'NN')], [('model', 'NN')], [('induction', 'NN')], [('recursion', 'NN')], [('guess', 'NN')], [(',', ',')], [('wonder', 'NN')], [('serve', 'NN')], [('foundations', 'NNS')], [('.', '.')], [('looks', 'NNS')], [('like', 'IN')], [('kindlang', 'NN')], [('builds', 'NNS')], [('upon', 'IN')], [('coc', 'NN')], [('like', 'IN')], [('unimath', 'NN')], [(',', ',')], [('adds', 'VBZ')], [('``', '``')], [('self', 'NN')], [('type', 'NN')], [(""''"", ""''"")], [('aaron', 'NN')], [('stump', 'NN')], [('talks', 'NNS')], [('.', '.')], [('*', 'NN')], [('add', 'VB')], [('anything', 'NN')], [('else', 'RB')], [('?', '.')], [('*', 'NN')], [('reading', 'NN')], [('[', 'NN')], [('cubical', 'JJ')], [('type', 'NN')], [('theory', 'NN')], [(']', 'NN')], [('(', '(')], [('-pages.s3.us-east-2.amazonaws.com/nlab/show/cubical+type+theory', 'NN')], [(')', ')')], [('(', '(')], [('even', 'RB')], [('wikipedia', 'NN')], [('page', 'NN')], [('yet', 'RB')], [(')', ')')], [(',', ',')], [('said', 'VBD')], [('also', 'RB')], [('key', 'NN')], [('problems', 'NNS')], [(',', ',')], [('landed', 'VBD')], [('[', 'NN')], [('paper', 'NN')], [(']', 'NN')], [('(', '(')], [(')', ')')], [('states', 'NNS')], [('right', 'NN')], [('front', 'NN')], [(':', ':')], [('>', 'NN')], [('prove', 'NN')], [('normalization', 'NN')], [('(', '(')], [('univalent', 'NN')], [(',', ',')], [('cartesian', 'NN')], [(')', ')')], [('cubical', 'JJ')], [('type', 'NN')], [('theory', 'NN')], [(',', ',')], [('*', 'NN')], [('*', 'NN')], [('closing', 'NN')], [('last', 'JJ')], [('major', 'JJ')], [('open', 'JJ')], [('problem', 'NN')], [('*', 'NN')], [('*', 'NN')], [('syntactic', 'JJ')], [('meta-theory', 'NN')], [('cubical', 'JJ')], [('type', 'NN')], [('theory', 'NN')], [('.', '.')], [('*', 'NN')], [('maybe', 'RB')], [('misread', 'NN')], [('though', 'IN')], [('.', '.')], [('*', 'NN')], [('wondering', 'VBG')], [(',', ',')], [('theory', 'NN')], [('kindlang', 'NN')], [('use', 'NN')], [(',', ',')], [('relate', 'NN')], [('cubical', 'JJ')], [('type', 'NN')], [('theory', 'NN')], [(',', ',')], [('seems', 'VBZ')], [('latest', 'JJS')], [('edition', 'NN')], [('type', 'NN')], [('theory', 'NN')], [('expressive', 'JJ')], [('.', '.')], [('trying', 'VBG')], [('figure', 'NN')], [('latest', 'JJS')], [('theory', 'NN')], [('implementing', 'VBG')], [('proof', 'NN')], [('language', 'NN')], [('like', 'IN')], [('kindlang', 'NN')], [('.', '.')]]","stumble across [ kindlang ] ( -lang/kind ) , `` modern proof language '' , look amaze . found [ old write ] ( -lang/kind/tree/f70ed05356f4d6e88f4d28df3d1ddb0a3cad8c94 ) , so-called [ fmc specification ] ( # file-fmc_specification-md ) , describes theory . important snippet ( bold add ) : > within field type theory , mathematical proof theorem represent functional program associate type . call curry-howard correspondence , basis modern proof assistant agda , idris , coq hol/isabelle . sadly , complex software monolithic implementation hard audit reason . interested simpler alternative : fully-featured proof assistant turn small standard easy analyze implement independently . > > perspective , one may interested * * calculus construction * * ( coc ) , small type theory * * easily fit 1000 line code * * modern program language . sadly , similar language * * capable derive mathematical induction * * , important proof technique without non-trivial theorem provable . moreover , capable express efficient ( constant space time ) pattern-matching , without functional program viable . usual solution problem supplement coc native datatype system , result complexity explosion see mention language . author make [ calculus construction repo javascript ] ( -of-constructions/blob/5b4ede47dfcc408ce27903f78d29c81bf393a9d3/src/core.js ) , seem replace kindlang . state : > * * simple , clever alternative propose * * [ aaron stump ] ( /~astump/ ) . one additional primitive , `` * * self type * * '' , * * couple mutually recursive definition , one easily derive induction * * lambda encoding , i.e. , way represent datatypes native lambda , subsume need separate implementation . also solves efficiency problem , able pattern-match constant time certain lambda encoding . problem solution provide semantics , thus , prove consistency result system becomes extremely hard . > > aaron stump * * move self type towards similar solution base dependent intersection * * . idea , instead rely mutual recursion , inductive datatypes refer simplify , erase form . result comparably small language much easy provide semantics , aaron stump call cedille-core . exchange , program hard . simple task define datatypes efficient pattern-matching recursion becomes complex task involve non-trivial type-level manipulation many intermediate proof . doable , program cedille-core without supplementary language work practical . talk `` consistency '' problem model , bit head . : > computationally , formality-core lambda calculus . meanwhile , late kindlang [ theorem ] ( -lang/kind/blob/master/theorems.md ) doc describes prove thing . read yet , though . wonder , summary theory kindlang built upon ? share piece together . found land [ calculus construction ] ( ) ( coc ) look [ lambda cube ] ( ) . found look [ hott ] ( ) [ unimath ] ( ) , tout `` foundation math '' . ( unimath base calculus construction far understand ) . snippet show , coc model induction recursion guess , wonder serve foundation . look like kindlang build upon coc like unimath , add `` self type '' aaron stump talk . * add anything else ? * reading [ cubical type theory ] ( -pages.s3.us-east-2.amazonaws.com/nlab/show/cubical+type+theory ) ( even wikipedia page yet ) , say also key problem , land [ paper ] ( ) state right front : > prove normalization ( univalent , cartesian ) cubical type theory , * * closing last major open problem * * syntactic meta-theory cubical type theory . * maybe misread though . * wonder , theory kindlang use , relate cubical type theory , seem late edition type theory expressive . try figure late theory implement proof language like kindlang .",-1_abazbz2abz_2520_problem_use,3
186,scntb2,Resource recommendations for imperative algorithms that implement Type Checking and/or Type Inference,Help,3,1.0,computerscience,https://www.reddit.com/r/computerscience/comments/scntb2/resource_recommendations_for_imperative/,0,"what are some good books, journal articles, or even github repos, which show how to implement algorithms for **type checking** and/or **type inference**? there appear to be several resources with implementations in functional languages like ocaml or haskell, but i have yet to find anything which could be used to write a javascript implementation of type checking and type inference (i.e. algorithms defined in an imperative style). i would like to learn how to implement it in detail.",1643144450.0,"['good', 'book', ',', 'journal', 'article', ',', 'even', 'github', 'repos', ',', 'show', 'implement', 'algorithm', '*', '*', 'type', 'check', '*', '*', 'and/or', '*', '*', 'type', 'inference', '*', '*', '?', 'appear', 'several', 'resource', 'implementation', 'functional', 'language', 'like', 'ocaml', 'haskell', ',', 'yet', 'find', 'anything', 'could', 'use', 'write', 'javascript', 'implementation', 'type', 'check', 'type', 'inference', '(', 'i.e', '.', 'algorithm', 'define', 'imperative', 'style', ')', '.', 'would', 'like', 'learn', 'implement', 'detail', '.']","[[('good', 'JJ')], [('books', 'NNS')], [(',', ',')], [('journal', 'NN')], [('articles', 'NNS')], [(',', ',')], [('even', 'RB')], [('github', 'NN')], [('repos', 'NN')], [(',', ',')], [('show', 'NN')], [('implement', 'NN')], [('algorithms', 'NN')], [('*', 'NN')], [('*', 'NN')], [('type', 'NN')], [('checking', 'VBG')], [('*', 'NN')], [('*', 'NN')], [('and/or', 'NN')], [('*', 'NN')], [('*', 'NN')], [('type', 'NN')], [('inference', 'NN')], [('*', 'NN')], [('*', 'NN')], [('?', '.')], [('appear', 'VB')], [('several', 'JJ')], [('resources', 'NNS')], [('implementations', 'NNS')], [('functional', 'JJ')], [('languages', 'NNS')], [('like', 'IN')], [('ocaml', 'NN')], [('haskell', 'NN')], [(',', ',')], [('yet', 'RB')], [('find', 'VB')], [('anything', 'NN')], [('could', 'MD')], [('used', 'VBN')], [('write', 'NN')], [('javascript', 'NN')], [('implementation', 'NN')], [('type', 'NN')], [('checking', 'VBG')], [('type', 'NN')], [('inference', 'NN')], [('(', '(')], [('i.e', 'NN')], [('.', '.')], [('algorithms', 'NN')], [('defined', 'VBN')], [('imperative', 'NN')], [('style', 'NN')], [(')', ')')], [('.', '.')], [('would', 'MD')], [('like', 'IN')], [('learn', 'NN')], [('implement', 'NN')], [('detail', 'NN')], [('.', '.')]]","good book , journal article , even github repos , show implement algorithm * * type check * * and/or * * type inference * * ? appear several resource implementation functional language like ocaml haskell , yet find anything could use write javascript implementation type check type inference ( i.e . algorithm define imperative style ) . would like learn implement detail .",-1_abazbz2abz_2520_problem_use,3
187,sbw98k,How do general compression algorithms approach data redundancies in novel file formats?,,25,0.91,computerscience,https://www.reddit.com/r/computerscience/comments/sbw98k/how_do_general_compression_algorithms_approach/,7,"for example, if one had a source file containing 100 transformed instances of the same 3d model but that information is just vertices within the source file is a model built to recognize that data redundancy? are algorithms for various types of information like this updated on a regular basis and integrated into the popular compression methods?",1643057763.0,"['example', ',', 'one', 'source', 'file', 'contain', '100', 'transform', 'instance', '3d', 'model', 'information', 'vertex', 'within', 'source', 'file', 'model', 'built', 'recognize', 'data', 'redundancy', '?', 'algorithm', 'various', 'type', 'information', 'like', 'update', 'regular', 'basis', 'integrate', 'popular', 'compression', 'method', '?']","[[('example', 'NN')], [(',', ',')], [('one', 'CD')], [('source', 'NN')], [('file', 'NN')], [('containing', 'VBG')], [('100', 'CD')], [('transformed', 'VBN')], [('instances', 'NNS')], [('3d', 'CD')], [('model', 'NN')], [('information', 'NN')], [('vertices', 'NNS')], [('within', 'IN')], [('source', 'NN')], [('file', 'NN')], [('model', 'NN')], [('built', 'NN')], [('recognize', 'VB')], [('data', 'NNS')], [('redundancy', 'NN')], [('?', '.')], [('algorithms', 'NN')], [('various', 'JJ')], [('types', 'NNS')], [('information', 'NN')], [('like', 'IN')], [('updated', 'VBN')], [('regular', 'JJ')], [('basis', 'NN')], [('integrated', 'VBN')], [('popular', 'JJ')], [('compression', 'NN')], [('methods', 'NNS')], [('?', '.')]]","example , one source file contain 100 transform instance 3d model information vertex within source file model built recognize data redundancy ? algorithm various type information like update regular basis integrate popular compression method ?",1_memory_byte_data_alignment,3
188,sbxbya,Max number of parallel http requests,,0,0.4,computerscience,https://www.reddit.com/r/computerscience/comments/sbxbya/max_number_of_parallel_http_requests/,3,"hi all, is there a way to know/calculate how many parallel http requests a computer can send?",1643060451.0,"['hi', ',', 'way', 'know/calculate', 'many', 'parallel', 'http', 'request', 'computer', 'send', '?']","[[('hi', 'NN')], [(',', ',')], [('way', 'NN')], [('know/calculate', 'NN')], [('many', 'JJ')], [('parallel', 'NN')], [('http', 'NN')], [('requests', 'NNS')], [('computer', 'NN')], [('send', 'NN')], [('?', '.')]]","hi , way know/calculate many parallel http request computer send ?",6_server_packet_key_hash,1
190,sbk9aw,"Do you believe in cryptocurrency like Bitcoin and Ethereum, etc.? Why or why not?",Discussion,0,0.46,computerscience,https://www.reddit.com/r/computerscience/comments/sbk9aw/do_you_believe_in_cryptocurrency_like_bitcoin_and/,34,"i would be asking this question in the crypto sub but that sub honestly just seems like an echo chamber. i myself have limited knowledge about cryptocurrency so i am willing to learn more about it from some of you. basically what i know is:

1. it acts as a digital ledger for a given set of programs.

2. there are limited number of bitcoin and the more there are, the harder it is to mine them.

3. it can decentralise power and all computers acting as mining devices form part as a mini server for mining.

4. with all the talk about how bitcoin is the future, i am still skeptical yet to see mast adoption of this system even in the near future.

5. many of the conversation about crypto (and bitcoin specifically) seems and looks kind of scammy and i have also noticed many bots on such forums.

apologies if there are some misinformed arguments here, as i said i myself have tried to understand it but still have a lot of confusion. so, what is your opinion?",1643024277.0,"['would', 'ask', 'question', 'crypto', 'sub', 'sub', 'honestly', 'seem', 'like', 'echo', 'chamber', '.', 'limited', 'knowledge', 'cryptocurrency', 'willing', 'learn', '.', 'basically', 'know', ':', '1.', 'act', 'digital', 'ledger', 'give', 'set', 'program', '.', '2.', 'limited', 'number', 'bitcoin', ',', 'harder', 'mine', '.', '3.', 'decentralise', 'power', 'computer', 'act', 'mining', 'device', 'form', 'part', 'mini', 'server', 'mining', '.', '4.', 'talk', 'bitcoin', 'future', ',', 'still', 'skeptical', 'yet', 'see', 'mast', 'adoption', 'system', 'even', 'near', 'future', '.', '5.', 'many', 'conversation', 'crypto', '(', 'bitcoin', 'specifically', ')', 'seem', 'look', 'kind', 'scammy', 'also', 'notice', 'many', 'bot', 'forum', '.', 'apology', 'misinform', 'argument', ',', 'say', 'try', 'understand', 'still', 'lot', 'confusion', '.', ',', 'opinion', '?']","[[('would', 'MD')], [('asking', 'VBG')], [('question', 'NN')], [('crypto', 'NN')], [('sub', 'NN')], [('sub', 'NN')], [('honestly', 'RB')], [('seems', 'VBZ')], [('like', 'IN')], [('echo', 'NN')], [('chamber', 'NN')], [('.', '.')], [('limited', 'JJ')], [('knowledge', 'NN')], [('cryptocurrency', 'NN')], [('willing', 'JJ')], [('learn', 'NN')], [('.', '.')], [('basically', 'RB')], [('know', 'VB')], [(':', ':')], [('1.', 'CD')], [('acts', 'NNS')], [('digital', 'NN')], [('ledger', 'NN')], [('given', 'VBN')], [('set', 'NN')], [('programs', 'NNS')], [('.', '.')], [('2.', 'CD')], [('limited', 'JJ')], [('number', 'NN')], [('bitcoin', 'NN')], [(',', ',')], [('harder', 'NN')], [('mine', 'NN')], [('.', '.')], [('3.', 'CD')], [('decentralise', 'NN')], [('power', 'NN')], [('computers', 'NNS')], [('acting', 'VBG')], [('mining', 'NN')], [('devices', 'NNS')], [('form', 'NN')], [('part', 'NN')], [('mini', 'NN')], [('server', 'NN')], [('mining', 'NN')], [('.', '.')], [('4.', 'CD')], [('talk', 'NN')], [('bitcoin', 'NN')], [('future', 'NN')], [(',', ',')], [('still', 'RB')], [('skeptical', 'JJ')], [('yet', 'RB')], [('see', 'VB')], [('mast', 'NN')], [('adoption', 'NN')], [('system', 'NN')], [('even', 'RB')], [('near', 'IN')], [('future', 'NN')], [('.', '.')], [('5.', 'CD')], [('many', 'JJ')], [('conversation', 'NN')], [('crypto', 'NN')], [('(', '(')], [('bitcoin', 'NN')], [('specifically', 'RB')], [(')', ')')], [('seems', 'VBZ')], [('looks', 'NNS')], [('kind', 'NN')], [('scammy', 'NN')], [('also', 'RB')], [('noticed', 'VBN')], [('many', 'JJ')], [('bots', 'NNS')], [('forums', 'NNS')], [('.', '.')], [('apologies', 'NNS')], [('misinformed', 'VBN')], [('arguments', 'NNS')], [(',', ',')], [('said', 'VBD')], [('tried', 'VBN')], [('understand', 'NN')], [('still', 'RB')], [('lot', 'NN')], [('confusion', 'NN')], [('.', '.')], [(',', ',')], [('opinion', 'NN')], [('?', '.')]]","would ask question crypto sub sub honestly seem like echo chamber . limited knowledge cryptocurrency willing learn . basically know : 1. act digital ledger give set program . 2. limited number bitcoin , harder mine . 3. decentralise power computer act mining device form part mini server mining . 4. talk bitcoin future , still skeptical yet see mast adoption system even near future . 5. many conversation crypto ( bitcoin specifically ) seem look kind scammy also notice many bot forum . apology misinform argument , say try understand still lot confusion . , opinion ?",-1_abazbz2abz_2520_problem_use,4
191,sasbd7,"In Dijkstra's Algorithm, if we assume that for a problem all input graphs are complete, the time complexity will be O(V^2) no matter the implementation, right?",Help,6,0.8,computerscience,https://www.reddit.com/r/computerscience/comments/sasbd7/in_dijkstras_algorithm_if_we_assume_that_for_a/,3,"for example, the implementation with fibonacci heap and adjacency list has a time complexity of o(e + v•log(v)). because we assume the graph is always complete, the time complexity is o(v^2 + v•log(v)), which is o(v^2 ), right?",1642939758.0,"['example', ',', 'implementation', 'fibonacci', 'heap', 'adjacency', 'list', 'time', 'complexity', '(', 'e', '+', 'v•log', '(', 'v', ')', ')', '.', 'assume', 'graph', 'always', 'complete', ',', 'time', 'complexity', '(', 'v^2', '+', 'v•log', '(', 'v', ')', ')', ',', '(', 'v^2', ')', ',', 'right', '?']","[[('example', 'NN')], [(',', ',')], [('implementation', 'NN')], [('fibonacci', 'NN')], [('heap', 'NN')], [('adjacency', 'NN')], [('list', 'NN')], [('time', 'NN')], [('complexity', 'NN')], [('(', '(')], [('e', 'NN')], [('+', 'NN')], [('v•log', 'NN')], [('(', '(')], [('v', 'NN')], [(')', ')')], [(')', ')')], [('.', '.')], [('assume', 'VB')], [('graph', 'NN')], [('always', 'RB')], [('complete', 'JJ')], [(',', ',')], [('time', 'NN')], [('complexity', 'NN')], [('(', '(')], [('v^2', 'NN')], [('+', 'NN')], [('v•log', 'NN')], [('(', '(')], [('v', 'NN')], [(')', ')')], [(')', ')')], [(',', ',')], [('(', '(')], [('v^2', 'NN')], [(')', ')')], [(',', ',')], [('right', 'NN')], [('?', '.')]]","example , implementation fibonacci heap adjacency list time complexity ( e + v•log ( v ) ) . assume graph always complete , time complexity ( v^2 + v•log ( v ) ) , ( v^2 ) , right ?",0_algorithm_time_node_bill,3
192,sa6sdw,Need recommendations for CS books and courses.,Help,31,0.97,computerscience,https://www.reddit.com/r/computerscience/comments/sa6sdw/need_recommendations_for_cs_books_and_courses/,16,"i will be starting my bachelors in cs in fall 2022.
before the course begins , what books/courses can i take/read for introduction on the topic.
especially please recommend some basic beginner books for linear algebra , calculus and discrete maths.",1642870813.0,"['start', 'bachelor', 'c', 'fall', '2022.', 'course', 'begin', ',', 'books/courses', 'take/read', 'introduction', 'topic', '.', 'especially', 'please', 'recommend', 'basic', 'beginner', 'book', 'linear', 'algebra', ',', 'calculus', 'discrete', 'math', '.']","[[('starting', 'VBG')], [('bachelors', 'NNS')], [('cs', 'NN')], [('fall', 'NN')], [('2022.', 'CD')], [('course', 'NN')], [('begins', 'NNS')], [(',', ',')], [('books/courses', 'NNS')], [('take/read', 'NN')], [('introduction', 'NN')], [('topic', 'NN')], [('.', '.')], [('especially', 'RB')], [('please', 'NN')], [('recommend', 'NN')], [('basic', 'JJ')], [('beginner', 'NN')], [('books', 'NNS')], [('linear', 'NN')], [('algebra', 'NN')], [(',', ',')], [('calculus', 'NN')], [('discrete', 'NN')], [('maths', 'NNS')], [('.', '.')]]","start bachelor c fall 2022. course begin , books/courses take/read introduction topic . especially please recommend basic beginner book linear algebra , calculus discrete math .",-1_abazbz2abz_2520_problem_use,5
194,s9gnb2,Maths for beginners book/resources recs,Advice,7,0.89,computerscience,https://www.reddit.com/r/computerscience/comments/s9gnb2/maths_for_beginners_bookresources_recs/,11,"hello, 
i am planning on studying cs next year, and from what i have heard it is kind of maths heavy and i have forgotten everything since i graduated high school back in 2014, can you guys recommend any books or courses that would help refresh my memory and prepare me for calculus and linear algebra? 
tia.",1642787809.0,"['hello', ',', 'planning', 'study', 'c', 'next', 'year', ',', 'heard', 'kind', 'math', 'heavy', 'forgotten', 'everything', 'since', 'graduate', 'high', 'school', 'back', '2014', ',', 'guy', 'recommend', 'book', 'course', 'would', 'help', 'refresh', 'memory', 'prepare', 'calculus', 'linear', 'algebra', '?', 'tia', '.']","[[('hello', 'NN')], [(',', ',')], [('planning', 'NN')], [('studying', 'VBG')], [('cs', 'NN')], [('next', 'JJ')], [('year', 'NN')], [(',', ',')], [('heard', 'NN')], [('kind', 'NN')], [('maths', 'NNS')], [('heavy', 'JJ')], [('forgotten', 'NNS')], [('everything', 'NN')], [('since', 'IN')], [('graduated', 'VBN')], [('high', 'JJ')], [('school', 'NN')], [('back', 'RB')], [('2014', 'CD')], [(',', ',')], [('guys', 'NNS')], [('recommend', 'NN')], [('books', 'NNS')], [('courses', 'NNS')], [('would', 'MD')], [('help', 'NN')], [('refresh', 'NN')], [('memory', 'NN')], [('prepare', 'NN')], [('calculus', 'NN')], [('linear', 'NN')], [('algebra', 'NN')], [('?', '.')], [('tia', 'NN')], [('.', '.')]]","hello , planning study c next year , heard kind math heavy forgotten everything since graduate high school back 2014 , guy recommend book course would help refresh memory prepare calculus linear algebra ? tia .",-1_abazbz2abz_2520_problem_use,2
195,s95ek1,How are vectors used in Computer Science?,,32,0.78,computerscience,https://www.reddit.com/r/computerscience/comments/s95ek1/how_are_vectors_used_in_computer_science/,8,"i am working on a project and i want to explore how vectors are used in computer science.

some articles/yt links on the same would be v helpful.",1642750830.0,"['work', 'project', 'want', 'explore', 'vector', 'use', 'computer', 'science', '.', 'articles/yt', 'link', 'would', 'v', 'helpful', '.']","[[('working', 'VBG')], [('project', 'NN')], [('want', 'NN')], [('explore', 'NN')], [('vectors', 'NNS')], [('used', 'VBN')], [('computer', 'NN')], [('science', 'NN')], [('.', '.')], [('articles/yt', 'NN')], [('links', 'NNS')], [('would', 'MD')], [('v', 'NN')], [('helpful', 'NN')], [('.', '.')]]",work project want explore vector use computer science . articles/yt link would v helpful .,-1_abazbz2abz_2520_problem_use,4
196,s9ffoc,What would you suggest ACM or OReilly?,,3,1.0,computerscience,https://www.reddit.com/r/computerscience/comments/s9ffoc/what_would_you_suggest_acm_or_oreilly/,4,"i was looking to get a sub on oreilly online learning, but i noticed a lot of people suggest association for computing machinery. i am wondering how these compare for learning purposes and possibly certification, for computer science and software engineering generally.  


i also noticed that acm offers oreilly material through their own subscription - what oreilly resources exactly does one get through acm, is it books, etc. or live content and training as well?  


if you have any suggestions and tips on other similar platforms, please do share, i would appreciate it a lot.  


thanks!",1642784616.0,"['look', 'get', 'sub', 'oreilly', 'online', 'learn', ',', 'notice', 'lot', 'people', 'suggest', 'association', 'compute', 'machinery', '.', 'wonder', 'compare', 'learn', 'purpose', 'possibly', 'certification', ',', 'computer', 'science', 'software', 'engineering', 'generally', '.', 'also', 'notice', 'acm', 'offer', 'oreilly', 'material', 'subscription', '-', 'oreilly', 'resource', 'exactly', 'one', 'get', 'acm', ',', 'book', ',', 'etc', '.', 'live', 'content', 'training', 'well', '?', 'suggestion', 'tip', 'similar', 'platform', ',', 'please', 'share', ',', 'would', 'appreciate', 'lot', '.', 'thanks', '!']","[[('looking', 'VBG')], [('get', 'VB')], [('sub', 'NN')], [('oreilly', 'RB')], [('online', 'NN')], [('learning', 'VBG')], [(',', ',')], [('noticed', 'VBN')], [('lot', 'NN')], [('people', 'NNS')], [('suggest', 'NN')], [('association', 'NN')], [('computing', 'VBG')], [('machinery', 'NN')], [('.', '.')], [('wondering', 'VBG')], [('compare', 'NN')], [('learning', 'VBG')], [('purposes', 'NNS')], [('possibly', 'RB')], [('certification', 'NN')], [(',', ',')], [('computer', 'NN')], [('science', 'NN')], [('software', 'NN')], [('engineering', 'NN')], [('generally', 'RB')], [('.', '.')], [('also', 'RB')], [('noticed', 'VBN')], [('acm', 'NN')], [('offers', 'NNS')], [('oreilly', 'RB')], [('material', 'NN')], [('subscription', 'NN')], [('-', ':')], [('oreilly', 'RB')], [('resources', 'NNS')], [('exactly', 'RB')], [('one', 'CD')], [('get', 'VB')], [('acm', 'NN')], [(',', ',')], [('books', 'NNS')], [(',', ',')], [('etc', 'NN')], [('.', '.')], [('live', 'JJ')], [('content', 'NN')], [('training', 'NN')], [('well', 'RB')], [('?', '.')], [('suggestions', 'NNS')], [('tips', 'NNS')], [('similar', 'JJ')], [('platforms', 'NNS')], [(',', ',')], [('please', 'NN')], [('share', 'NN')], [(',', ',')], [('would', 'MD')], [('appreciate', 'NN')], [('lot', 'NN')], [('.', '.')], [('thanks', 'NNS')], [('!', '.')]]","look get sub oreilly online learn , notice lot people suggest association compute machinery . wonder compare learn purpose possibly certification , computer science software engineering generally . also notice acm offer oreilly material subscription - oreilly resource exactly one get acm , book , etc . live content training well ? suggestion tip similar platform , please share , would appreciate lot . thanks !",4_book_learn_computer_good,3
197,s9c6ve,Are data types self-aligned or aligned according to the memory access granularity of the processor?,,1,0.67,computerscience,https://www.reddit.com/r/computerscience/comments/s9c6ve/are_data_types_selfaligned_or_aligned_according/,1,"i was reading [the lost art of structure packing](-packing/) by esr(eric steven raymond) and he was written this:
> the jargon for this is that basic c types on x86 and arm are self-aligned. pointers, whether 32-bit (4-byte) or 64-bit (8-byte) are self-aligned too.

now, he says that the data types are self aligned on x86 and arm processors and pointers are self-aligned on 64-bit architectures too. self-alignment means that data is stored at a memory address which is a multiple of the size of the data type of the data.

my question is that is data aligned according to its size(self-alignment) or according to the memory access granularity of the processor. there are hardly any cpu architectures which allow data types larger than their memory access granularity, so even it will not make a great difference if some data is self-aligned or aligned according to memory access granularity of the processor.

it would be great if you could specify some cpu architecture that allows data types larger than its memory access granularity. if self-alignment and alignment according to memory access granularity do not practically make a difference at the memory level, will not it still be better to say that data is aligned according to the memory access granularity rather than self-alignment.",1642775959.0,"['reading', '[', 'lose', 'art', 'structure', 'pack', ']', '(', '-packing/', ')', 'esr', '(', 'eric', 'steven', 'raymond', ')', 'write', ':', '>', 'jargon', 'basic', 'c', 'type', 'x86', 'arm', 'self-aligned', '.', 'pointer', ',', 'whether', '32-bit', '(', '4-byte', ')', '64-bit', '(', '8-byte', ')', 'self-aligned', '.', ',', 'say', 'data', 'type', 'self', 'align', 'x86', 'arm', 'processor', 'pointer', 'self-aligned', '64-bit', 'architecture', '.', 'self-alignment', 'mean', 'data', 'store', 'memory', 'address', 'multiple', 'size', 'data', 'type', 'data', '.', 'question', 'data', 'align', 'accord', 'size', '(', 'self-alignment', ')', 'accord', 'memory', 'access', 'granularity', 'processor', '.', 'hardly', 'cpu', 'architecture', 'allow', 'data', 'type', 'large', 'memory', 'access', 'granularity', ',', 'even', 'make', 'great', 'difference', 'data', 'self-aligned', 'align', 'accord', 'memory', 'access', 'granularity', 'processor', '.', 'would', 'great', 'could', 'specify', 'cpu', 'architecture', 'allows', 'data', 'type', 'large', 'memory', 'access', 'granularity', '.', 'self-alignment', 'alignment', 'accord', 'memory', 'access', 'granularity', 'practically', 'make', 'difference', 'memory', 'level', ',', 'still', 'well', 'say', 'data', 'align', 'accord', 'memory', 'access', 'granularity', 'rather', 'self-alignment', '.']","[[('reading', 'NN')], [('[', 'NN')], [('lost', 'VBN')], [('art', 'NN')], [('structure', 'NN')], [('packing', 'VBG')], [(']', 'NN')], [('(', '(')], [('-packing/', 'NN')], [(')', ')')], [('esr', 'NN')], [('(', '(')], [('eric', 'NN')], [('steven', 'NN')], [('raymond', 'NN')], [(')', ')')], [('written', 'VBN')], [(':', ':')], [('>', 'NN')], [('jargon', 'NN')], [('basic', 'JJ')], [('c', 'NNS')], [('types', 'NNS')], [('x86', 'NN')], [('arm', 'NN')], [('self-aligned', 'JJ')], [('.', '.')], [('pointers', 'NNS')], [(',', ',')], [('whether', 'IN')], [('32-bit', 'JJ')], [('(', '(')], [('4-byte', 'JJ')], [(')', ')')], [('64-bit', 'NN')], [('(', '(')], [('8-byte', 'JJ')], [(')', ')')], [('self-aligned', 'JJ')], [('.', '.')], [(',', ',')], [('says', 'VBZ')], [('data', 'NNS')], [('types', 'NNS')], [('self', 'NN')], [('aligned', 'VBN')], [('x86', 'NN')], [('arm', 'NN')], [('processors', 'NNS')], [('pointers', 'NNS')], [('self-aligned', 'JJ')], [('64-bit', 'NN')], [('architectures', 'NNS')], [('.', '.')], [('self-alignment', 'NN')], [('means', 'NNS')], [('data', 'NNS')], [('stored', 'VBN')], [('memory', 'NN')], [('address', 'NN')], [('multiple', 'NN')], [('size', 'NN')], [('data', 'NNS')], [('type', 'NN')], [('data', 'NNS')], [('.', '.')], [('question', 'NN')], [('data', 'NNS')], [('aligned', 'VBN')], [('according', 'VBG')], [('size', 'NN')], [('(', '(')], [('self-alignment', 'NN')], [(')', ')')], [('according', 'VBG')], [('memory', 'NN')], [('access', 'NN')], [('granularity', 'NN')], [('processor', 'NN')], [('.', '.')], [('hardly', 'RB')], [('cpu', 'NN')], [('architectures', 'NNS')], [('allow', 'VB')], [('data', 'NNS')], [('types', 'NNS')], [('larger', 'JJR')], [('memory', 'NN')], [('access', 'NN')], [('granularity', 'NN')], [(',', ',')], [('even', 'RB')], [('make', 'VB')], [('great', 'JJ')], [('difference', 'NN')], [('data', 'NNS')], [('self-aligned', 'JJ')], [('aligned', 'VBN')], [('according', 'VBG')], [('memory', 'NN')], [('access', 'NN')], [('granularity', 'NN')], [('processor', 'NN')], [('.', '.')], [('would', 'MD')], [('great', 'JJ')], [('could', 'MD')], [('specify', 'NN')], [('cpu', 'NN')], [('architecture', 'NN')], [('allows', 'NNS')], [('data', 'NNS')], [('types', 'NNS')], [('larger', 'JJR')], [('memory', 'NN')], [('access', 'NN')], [('granularity', 'NN')], [('.', '.')], [('self-alignment', 'NN')], [('alignment', 'NN')], [('according', 'VBG')], [('memory', 'NN')], [('access', 'NN')], [('granularity', 'NN')], [('practically', 'RB')], [('make', 'VB')], [('difference', 'NN')], [('memory', 'NN')], [('level', 'NN')], [(',', ',')], [('still', 'RB')], [('better', 'RBR')], [('say', 'VB')], [('data', 'NNS')], [('aligned', 'VBN')], [('according', 'VBG')], [('memory', 'NN')], [('access', 'NN')], [('granularity', 'NN')], [('rather', 'RB')], [('self-alignment', 'NN')], [('.', '.')]]","reading [ lose art structure pack ] ( -packing/ ) esr ( eric steven raymond ) write : > jargon basic c type x86 arm self-aligned . pointer , whether 32-bit ( 4-byte ) 64-bit ( 8-byte ) self-aligned . , say data type self align x86 arm processor pointer self-aligned 64-bit architecture . self-alignment mean data store memory address multiple size data type data . question data align accord size ( self-alignment ) accord memory access granularity processor . hardly cpu architecture allow data type large memory access granularity , even make great difference data self-aligned align accord memory access granularity processor . would great could specify cpu architecture allows data type large memory access granularity . self-alignment alignment accord memory access granularity practically make difference memory level , still well say data align accord memory access granularity rather self-alignment .",1_memory_byte_data_alignment,2
199,s8kxq7,Name of Algorithm,,6,0.76,computerscience,https://www.reddit.com/r/computerscience/comments/s8kxq7/name_of_algorithm/,3,"is there a name for an algorithm that assigns n outdoor people to n distinct houses such that the total distance they have to walk to their respective houses is minimized? (this is just another wording for assigning boxes to drop-off locations in sokoban if you heard of that). or is this an intractable problem where every permutation has to be tested?

not sure if the gale shapley algorithm will work in this case??",1642690952.0,"['name', 'algorithm', 'assigns', 'n', 'outdoor', 'people', 'n', 'distinct', 'house', 'total', 'distance', 'walk', 'respective', 'house', 'minimize', '?', '(', 'another', 'word', 'assign', 'box', 'drop-off', 'location', 'sokoban', 'heard', ')', '.', 'intractable', 'problem', 'every', 'permutation', 'test', '?', 'sure', 'gale', 'shapley', 'algorithm', 'work', 'case', '?', '?']","[[('name', 'NN')], [('algorithm', 'NN')], [('assigns', 'NNS')], [('n', 'NN')], [('outdoor', 'NN')], [('people', 'NNS')], [('n', 'NN')], [('distinct', 'NN')], [('houses', 'NNS')], [('total', 'JJ')], [('distance', 'NN')], [('walk', 'NN')], [('respective', 'NN')], [('houses', 'NNS')], [('minimized', 'VBN')], [('?', '.')], [('(', '(')], [('another', 'DT')], [('wording', 'VBG')], [('assigning', 'VBG')], [('boxes', 'NNS')], [('drop-off', 'NN')], [('locations', 'NNS')], [('sokoban', 'NN')], [('heard', 'NN')], [(')', ')')], [('.', '.')], [('intractable', 'JJ')], [('problem', 'NN')], [('every', 'DT')], [('permutation', 'NN')], [('tested', 'VBN')], [('?', '.')], [('sure', 'NN')], [('gale', 'NN')], [('shapley', 'NN')], [('algorithm', 'NN')], [('work', 'NN')], [('case', 'NN')], [('?', '.')], [('?', '.')]]",name algorithm assigns n outdoor people n distinct house total distance walk respective house minimize ? ( another word assign box drop-off location sokoban heard ) . intractable problem every permutation test ? sure gale shapley algorithm work case ? ?,0_algorithm_time_node_bill,1
200,s7yrsa,Why is there nothing between 8bit and 16bit?,,37,0.88,computerscience,https://www.reddit.com/r/computerscience/comments/s7yrsa/why_is_there_nothing_between_8bit_and_16bit/,31,"for example, if i want to change the image specifications in photoshop, i can choose between 8 and 16 bit. but why is there nothing inbetween 8 and 16 bit? since the difference between those to options is that high, 8 bits are sometimes too less and 16 bits are sometimes too high.",1642621874.0,"['example', ',', 'want', 'change', 'image', 'specification', 'photoshop', ',', 'choose', '8', '16', 'bit', '.', 'nothing', 'inbetween', '8', '16', 'bit', '?', 'since', 'difference', 'option', 'high', ',', '8', 'bit', 'sometimes', 'less', '16', 'bit', 'sometimes', 'high', '.']","[[('example', 'NN')], [(',', ',')], [('want', 'NN')], [('change', 'NN')], [('image', 'NN')], [('specifications', 'NNS')], [('photoshop', 'NN')], [(',', ',')], [('choose', 'NN')], [('8', 'CD')], [('16', 'CD')], [('bit', 'NN')], [('.', '.')], [('nothing', 'NN')], [('inbetween', 'NN')], [('8', 'CD')], [('16', 'CD')], [('bit', 'NN')], [('?', '.')], [('since', 'IN')], [('difference', 'NN')], [('options', 'NNS')], [('high', 'JJ')], [(',', ',')], [('8', 'CD')], [('bits', 'NNS')], [('sometimes', 'RB')], [('less', 'RBR')], [('16', 'CD')], [('bits', 'NNS')], [('sometimes', 'RB')], [('high', 'JJ')], [('.', '.')]]","example , want change image specification photoshop , choose 8 16 bit . nothing inbetween 8 16 bit ? since difference option high , 8 bit sometimes less 16 bit sometimes high .",1_memory_byte_data_alignment,3
201,s7li8v,Why is Internet/transmission speed in Bit and storage capacity/file size in Byte?,,61,0.96,computerscience,https://www.reddit.com/r/computerscience/comments/s7li8v/why_is_internettransmission_speed_in_bit_and/,42,"i am always wondering about this. why internet/transmission speed is always in bits (kbits, mbits...) and storage capacity/file size is always in bytes (kbytes, mbytes...)? cannot we just have the same unit for both of them (to reduce the confusion of some people)? is there a reason for the convention like this?",1642581032.0,"['always', 'wonder', '.', 'internet/transmission', 'speed', 'always', 'bit', '(', 'kbit', ',', 'mbit', '...', ')', 'storage', 'capacity/file', 'size', 'always', 'byte', '(', 'kbytes', ',', 'mbytes', '...', ')', '?', 'unit', '(', 'reduce', 'confusion', 'people', ')', '?', 'reason', 'convention', 'like', '?']","[[('always', 'RB')], [('wondering', 'VBG')], [('.', '.')], [('internet/transmission', 'NN')], [('speed', 'NN')], [('always', 'RB')], [('bits', 'NNS')], [('(', '(')], [('kbits', 'NNS')], [(',', ',')], [('mbits', 'NNS')], [('...', ':')], [(')', ')')], [('storage', 'NN')], [('capacity/file', 'NN')], [('size', 'NN')], [('always', 'RB')], [('bytes', 'NNS')], [('(', '(')], [('kbytes', 'NNS')], [(',', ',')], [('mbytes', 'NNS')], [('...', ':')], [(')', ')')], [('?', '.')], [('unit', 'NN')], [('(', '(')], [('reduce', 'VB')], [('confusion', 'NN')], [('people', 'NNS')], [(')', ')')], [('?', '.')], [('reason', 'NN')], [('convention', 'NN')], [('like', 'IN')], [('?', '.')]]","always wonder . internet/transmission speed always bit ( kbit , mbit ... ) storage capacity/file size always byte ( kbytes , mbytes ... ) ? unit ( reduce confusion people ) ? reason convention like ?",1_memory_byte_data_alignment,2
202,s82mjq,How did you learn about different protocols,,5,0.69,computerscience,https://www.reddit.com/r/computerscience/comments/s82mjq/how_did_you_learn_about_different_protocols/,4,"i always wonderd, how people can write programs, that interact with the web like its their harddrive, i always get confused what, how an why the different protocols do. my biggest problem is finding a good resource to learn about the stuff, often i find myself on websites, that are glossing over details and leaving out things. so my question is where did you start and where did you learn it ? 

good book recommendations related to the subject are appreciated",1642631640.0,"['always', 'wonderd', ',', 'people', 'write', 'program', ',', 'interact', 'web', 'like', 'harddrive', ',', 'always', 'get', 'confuse', ',', 'different', 'protocol', '.', 'big', 'problem', 'find', 'good', 'resource', 'learn', 'stuff', ',', 'often', 'find', 'website', ',', 'gloss', 'detail', 'leave', 'thing', '.', 'question', 'start', 'learn', '?', 'good', 'book', 'recommendation', 'related', 'subject', 'appreciate']","[[('always', 'RB')], [('wonderd', 'NN')], [(',', ',')], [('people', 'NNS')], [('write', 'NN')], [('programs', 'NNS')], [(',', ',')], [('interact', 'NN')], [('web', 'NN')], [('like', 'IN')], [('harddrive', 'NN')], [(',', ',')], [('always', 'RB')], [('get', 'VB')], [('confused', 'VBN')], [(',', ',')], [('different', 'JJ')], [('protocols', 'NNS')], [('.', '.')], [('biggest', 'JJS')], [('problem', 'NN')], [('finding', 'VBG')], [('good', 'JJ')], [('resource', 'NN')], [('learn', 'NN')], [('stuff', 'NN')], [(',', ',')], [('often', 'RB')], [('find', 'VB')], [('websites', 'NNS')], [(',', ',')], [('glossing', 'VBG')], [('details', 'NNS')], [('leaving', 'VBG')], [('things', 'NNS')], [('.', '.')], [('question', 'NN')], [('start', 'NN')], [('learn', 'NN')], [('?', '.')], [('good', 'JJ')], [('book', 'NN')], [('recommendations', 'NNS')], [('related', 'JJ')], [('subject', 'NN')], [('appreciated', 'VBN')]]","always wonderd , people write program , interact web like harddrive , always get confuse , different protocol . big problem find good resource learn stuff , often find website , gloss detail leave thing . question start learn ? good book recommendation related subject appreciate",4_book_learn_computer_good,3
203,s7wqyg,Will a RISC like instruction set ever be developed for QC?,Discussion,5,1.0,computerscience,https://www.reddit.com/r/computerscience/comments/s7wqyg/will_a_risc_like_instruction_set_ever_be/,0,"horray for quantum computing picking up more traction for the past few years. i have done a fair bit of reading and tinkered with things like qiskit  


but algorithm implementation on a per qubit level seems a little 😬

&#x200b;

what does a risc-like instruction set look like for qc, is it even viable? are circuit construction implementations here to stay?",1642616748.0,"['horray', 'quantum', 'compute', 'pick', 'traction', 'past', 'year', '.', 'do', 'fair', 'bit', 'reading', 'tinker', 'thing', 'like', 'qiskit', 'algorithm', 'implementation', 'per', 'qubit', 'level', 'seem', 'little', '😬', '&', '#', 'x200b', ';', 'risc-like', 'instruction', 'set', 'look', 'like', 'qc', ',', 'even', 'viable', '?', 'circuit', 'construction', 'implementation', 'stay', '?']","[[('horray', 'NN')], [('quantum', 'NN')], [('computing', 'VBG')], [('picking', 'VBG')], [('traction', 'NN')], [('past', 'NN')], [('years', 'NNS')], [('.', '.')], [('done', 'VBN')], [('fair', 'NN')], [('bit', 'NN')], [('reading', 'NN')], [('tinkered', 'VBN')], [('things', 'NNS')], [('like', 'IN')], [('qiskit', 'NN')], [('algorithm', 'NN')], [('implementation', 'NN')], [('per', 'IN')], [('qubit', 'NN')], [('level', 'NN')], [('seems', 'VBZ')], [('little', 'JJ')], [('😬', 'NN')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('risc-like', 'NN')], [('instruction', 'NN')], [('set', 'NN')], [('look', 'NN')], [('like', 'IN')], [('qc', 'NN')], [(',', ',')], [('even', 'RB')], [('viable', 'JJ')], [('?', '.')], [('circuit', 'NN')], [('construction', 'NN')], [('implementations', 'NNS')], [('stay', 'NN')], [('?', '.')]]","horray quantum compute pick traction past year . do fair bit reading tinker thing like qiskit algorithm implementation per qubit level seem little 😬 & # x200b ; risc-like instruction set look like qc , even viable ? circuit construction implementation stay ?",-1_abazbz2abz_2520_problem_use,2
204,s7h2vc,Can someone explain to me Big O notation like I'm dumb?,Help,51,0.95,computerscience,https://www.reddit.com/r/computerscience/comments/s7h2vc/can_someone_explain_to_me_big_o_notation_like_im/,17,i have learnt it today in java but cannot seem to wrap my head around it. how can i learn to use it?,1642565300.0,"['learnt', 'today', 'java', 'seem', 'wrap', 'head', 'around', '.', 'learn', 'use', '?']","[[('learnt', 'NN')], [('today', 'NN')], [('java', 'NN')], [('seem', 'NN')], [('wrap', 'NN')], [('head', 'NN')], [('around', 'IN')], [('.', '.')], [('learn', 'NN')], [('use', 'NN')], [('?', '.')]]",learnt today java seem wrap head around . learn use ?,-1_abazbz2abz_2520_problem_use,3
205,s8a2k9,Is cellular life itself an example of the P=NP problem?,Discussion,0,0.33,computerscience,https://www.reddit.com/r/computerscience/comments/s8a2k9/is_cellular_life_itself_an_example_of_the_pnp/,11,"this is a little bit out there, but i think this is an interesting way to think about / apply the question of p=np. 

think about cellular life. biologically, for many organisms (think simple multi cellular; plants, things that do not have super complex brains) we understand the structure and function of literally every single atom and cell that they are made of. but we are unable to synthesize these organisms we know so much about ourselves in a lab despite knowing how to perfectly verify nearly every piece of their structure by looking at them. 

translating to the p=np problem, the “verification” of a problem can be thought of as examining every single piece of an organism and confirming that it is what we think it is. the “solving” of the problem would consist of creating such an organism from scratch, from non-living material. despite knowing how every single piece of a multi cellular organism works and being able to verify them, humans cannot solve them by creating them in a lab. 

what is the only current known way to “create” life? by waiting for nature’s random iteration to try and fail over billions of years and trillions of “guess and check” iterations. if evolution can be thought of as the only way to achieve the “solution”, until we can figure out a way to synthesize complex multi cellular organisms from scratch, nature’s answer to the p=np problem is that verifying a solution does not imply that it can be solved. only guessed and checked over trillions of years.

this may not make sense but i think it is an interesting way to think of how nature sort of answers one of humanity’s biggest questions.",1642652810.0,"['little', 'bit', ',', 'think', 'interest', 'way', 'think', '/', 'apply', 'question', 'p=np', '.', 'think', 'cellular', 'life', '.', 'biologically', ',', 'many', 'organism', '(', 'think', 'simple', 'multi', 'cellular', ';', 'plant', ',', 'thing', 'super', 'complex', 'brain', ')', 'understand', 'structure', 'function', 'literally', 'every', 'single', 'atom', 'cell', 'make', '.', 'unable', 'synthesize', 'organism', 'know', 'much', 'lab', 'despite', 'know', 'perfectly', 'verify', 'nearly', 'every', 'piece', 'structure', 'look', '.', 'translate', 'p=np', 'problem', ',', '“', 'verification', '”', 'problem', 'thought', 'examine', 'every', 'single', 'piece', 'organism', 'confirm', 'think', '.', '“', 'solve', '”', 'problem', 'would', 'consist', 'create', 'organism', 'scratch', ',', 'non-living', 'material', '.', 'despite', 'know', 'every', 'single', 'piece', 'multi', 'cellular', 'organism', 'work', 'able', 'verify', ',', 'human', 'solve', 'create', 'lab', '.', 'current', 'know', 'way', '“', 'create', '”', 'life', '?', 'wait', 'nature', '’', 'random', 'iteration', 'try', 'fail', 'billion', 'year', 'trillion', '“', 'guess', 'check', '”', 'iteration', '.', 'evolution', 'thought', 'way', 'achieve', '“', 'solution', '”', ',', 'figure', 'way', 'synthesize', 'complex', 'multi', 'cellular', 'organism', 'scratch', ',', 'nature', '’', 'answer', 'p=np', 'problem', 'verify', 'solution', 'imply', 'solve', '.', 'guess', 'checked', 'trillion', 'year', '.', 'may', 'make', 'sense', 'think', 'interest', 'way', 'think', 'nature', 'sort', 'answer', 'one', 'humanity', '’', 'big', 'question', '.']","[[('little', 'JJ')], [('bit', 'NN')], [(',', ',')], [('think', 'NN')], [('interesting', 'VBG')], [('way', 'NN')], [('think', 'NN')], [('/', 'NN')], [('apply', 'VB')], [('question', 'NN')], [('p=np', 'NN')], [('.', '.')], [('think', 'NN')], [('cellular', 'JJ')], [('life', 'NN')], [('.', '.')], [('biologically', 'RB')], [(',', ',')], [('many', 'JJ')], [('organisms', 'NNS')], [('(', '(')], [('think', 'NN')], [('simple', 'NN')], [('multi', 'NN')], [('cellular', 'JJ')], [(';', ':')], [('plants', 'NNS')], [(',', ',')], [('things', 'NNS')], [('super', 'NN')], [('complex', 'JJ')], [('brains', 'NNS')], [(')', ')')], [('understand', 'NN')], [('structure', 'NN')], [('function', 'NN')], [('literally', 'RB')], [('every', 'DT')], [('single', 'JJ')], [('atom', 'NN')], [('cell', 'NN')], [('made', 'VBN')], [('.', '.')], [('unable', 'JJ')], [('synthesize', 'VB')], [('organisms', 'NNS')], [('know', 'VB')], [('much', 'JJ')], [('lab', 'NN')], [('despite', 'IN')], [('knowing', 'VBG')], [('perfectly', 'RB')], [('verify', 'NN')], [('nearly', 'RB')], [('every', 'DT')], [('piece', 'NN')], [('structure', 'NN')], [('looking', 'VBG')], [('.', '.')], [('translating', 'VBG')], [('p=np', 'NN')], [('problem', 'NN')], [(',', ',')], [('“', 'NN')], [('verification', 'NN')], [('”', 'NN')], [('problem', 'NN')], [('thought', 'NN')], [('examining', 'VBG')], [('every', 'DT')], [('single', 'JJ')], [('piece', 'NN')], [('organism', 'NN')], [('confirming', 'VBG')], [('think', 'NN')], [('.', '.')], [('“', 'NN')], [('solving', 'VBG')], [('”', 'NN')], [('problem', 'NN')], [('would', 'MD')], [('consist', 'NN')], [('creating', 'VBG')], [('organism', 'NN')], [('scratch', 'NN')], [(',', ',')], [('non-living', 'NN')], [('material', 'NN')], [('.', '.')], [('despite', 'IN')], [('knowing', 'VBG')], [('every', 'DT')], [('single', 'JJ')], [('piece', 'NN')], [('multi', 'NN')], [('cellular', 'JJ')], [('organism', 'NN')], [('works', 'NNS')], [('able', 'JJ')], [('verify', 'NN')], [(',', ',')], [('humans', 'NNS')], [('solve', 'NN')], [('creating', 'VBG')], [('lab', 'NN')], [('.', '.')], [('current', 'JJ')], [('known', 'VBN')], [('way', 'NN')], [('“', 'NN')], [('create', 'NN')], [('”', 'NN')], [('life', 'NN')], [('?', '.')], [('waiting', 'VBG')], [('nature', 'NN')], [('’', 'NN')], [('random', 'NN')], [('iteration', 'NN')], [('try', 'NN')], [('fail', 'NN')], [('billions', 'NNS')], [('years', 'NNS')], [('trillions', 'NNS')], [('“', 'NN')], [('guess', 'NN')], [('check', 'NN')], [('”', 'NN')], [('iterations', 'NNS')], [('.', '.')], [('evolution', 'NN')], [('thought', 'NN')], [('way', 'NN')], [('achieve', 'NN')], [('“', 'NN')], [('solution', 'NN')], [('”', 'NN')], [(',', ',')], [('figure', 'NN')], [('way', 'NN')], [('synthesize', 'VB')], [('complex', 'JJ')], [('multi', 'NN')], [('cellular', 'JJ')], [('organisms', 'NNS')], [('scratch', 'NN')], [(',', ',')], [('nature', 'NN')], [('’', 'NN')], [('answer', 'NN')], [('p=np', 'NN')], [('problem', 'NN')], [('verifying', 'VBG')], [('solution', 'NN')], [('imply', 'NN')], [('solved', 'VBN')], [('.', '.')], [('guessed', 'VBN')], [('checked', 'NNS')], [('trillions', 'NNS')], [('years', 'NNS')], [('.', '.')], [('may', 'MD')], [('make', 'VB')], [('sense', 'NN')], [('think', 'NN')], [('interesting', 'VBG')], [('way', 'NN')], [('think', 'NN')], [('nature', 'NN')], [('sort', 'NN')], [('answers', 'NNS')], [('one', 'CD')], [('humanity', 'NN')], [('’', 'NN')], [('biggest', 'JJS')], [('questions', 'NNS')], [('.', '.')]]","little bit , think interest way think / apply question p=np . think cellular life . biologically , many organism ( think simple multi cellular ; plant , thing super complex brain ) understand structure function literally every single atom cell make . unable synthesize organism know much lab despite know perfectly verify nearly every piece structure look . translate p=np problem , “ verification ” problem thought examine every single piece organism confirm think . “ solve ” problem would consist create organism scratch , non-living material . despite know every single piece multi cellular organism work able verify , human solve create lab . current know way “ create ” life ? wait nature ’ random iteration try fail billion year trillion “ guess check ” iteration . evolution thought way achieve “ solution ” , figure way synthesize complex multi cellular organism scratch , nature ’ answer p=np problem verify solution imply solve . guess checked trillion year . may make sense think interest way think nature sort answer one humanity ’ big question .",3_search_ai_think_google,4
206,s7mb3k,Why is Knapsack NP-complete?,Help,5,0.86,computerscience,https://www.reddit.com/r/computerscience/comments/s7mb3k/why_is_knapsack_npcomplete/,5,"here is what [wikipedia]() says:

> even if p≠np, the o(nw) complexity does not contradict the fact that the knapsack problem is np-complete, since w, unlike n, is not polynomial in the length of the input to the problem.

`w` is the max weight capacity.
`n` is the number of items.

why is `n` polynomial in the length of the input? 
if the input is binary, `n` is definitely exponential in the bit length.

also, for problems in np, we can verify them in polynomial time. however, here for a polynomial time algorithm in the numeric values `n` and `w` for knapsack, we still call knapsack np-complete because of the length of the input. by the same logic, would not the algorithm to verify a solution to knapsack **not** be polynomial (pseudo-polynomial) - and so, it is not even in np?  
could you please clarify this?",1642584461.0,"['[', 'wikipedia', ']', '(', ')', 'say', ':', '>', 'even', 'p≠np', ',', '(', 'nw', ')', 'complexity', 'contradict', 'fact', 'knapsack', 'problem', 'np-complete', ',', 'since', 'w', ',', 'unlike', 'n', ',', 'polynomial', 'length', 'input', 'problem', '.', '`', 'w', '`', 'max', 'weight', 'capacity', '.', '`', 'n', '`', 'number', 'item', '.', '`', 'n', '`', 'polynomial', 'length', 'input', '?', 'input', 'binary', ',', '`', 'n', '`', 'definitely', 'exponential', 'bit', 'length', '.', 'also', ',', 'problem', 'np', ',', 'verify', 'polynomial', 'time', '.', 'however', ',', 'polynomial', 'time', 'algorithm', 'numeric', 'value', '`', 'n', '`', '`', 'w', '`', 'knapsack', ',', 'still', 'call', 'knapsack', 'np-complete', 'length', 'input', '.', 'logic', ',', 'would', 'algorithm', 'verify', 'solution', 'knapsack', '*', '*', '*', '*', 'polynomial', '(', 'pseudo-polynomial', ')', '-', ',', 'even', 'np', '?', 'could', 'please', 'clarify', '?']","[[('[', 'NN')], [('wikipedia', 'NN')], [(']', 'NN')], [('(', '(')], [(')', ')')], [('says', 'VBZ')], [(':', ':')], [('>', 'NN')], [('even', 'RB')], [('p≠np', 'NN')], [(',', ',')], [('(', '(')], [('nw', 'NN')], [(')', ')')], [('complexity', 'NN')], [('contradict', 'NN')], [('fact', 'NN')], [('knapsack', 'NN')], [('problem', 'NN')], [('np-complete', 'JJ')], [(',', ',')], [('since', 'IN')], [('w', 'NN')], [(',', ',')], [('unlike', 'IN')], [('n', 'NN')], [(',', ',')], [('polynomial', 'NN')], [('length', 'NN')], [('input', 'NN')], [('problem', 'NN')], [('.', '.')], [('`', '``')], [('w', 'NN')], [('`', '``')], [('max', 'NN')], [('weight', 'NN')], [('capacity', 'NN')], [('.', '.')], [('`', '``')], [('n', 'NN')], [('`', '``')], [('number', 'NN')], [('items', 'NNS')], [('.', '.')], [('`', '``')], [('n', 'NN')], [('`', '``')], [('polynomial', 'NN')], [('length', 'NN')], [('input', 'NN')], [('?', '.')], [('input', 'NN')], [('binary', 'NN')], [(',', ',')], [('`', '``')], [('n', 'NN')], [('`', '``')], [('definitely', 'RB')], [('exponential', 'JJ')], [('bit', 'NN')], [('length', 'NN')], [('.', '.')], [('also', 'RB')], [(',', ',')], [('problems', 'NNS')], [('np', 'NN')], [(',', ',')], [('verify', 'NN')], [('polynomial', 'NN')], [('time', 'NN')], [('.', '.')], [('however', 'RB')], [(',', ',')], [('polynomial', 'NN')], [('time', 'NN')], [('algorithm', 'NN')], [('numeric', 'JJ')], [('values', 'NNS')], [('`', '``')], [('n', 'NN')], [('`', '``')], [('`', '``')], [('w', 'NN')], [('`', '``')], [('knapsack', 'NN')], [(',', ',')], [('still', 'RB')], [('call', 'NN')], [('knapsack', 'NN')], [('np-complete', 'JJ')], [('length', 'NN')], [('input', 'NN')], [('.', '.')], [('logic', 'NN')], [(',', ',')], [('would', 'MD')], [('algorithm', 'NN')], [('verify', 'NN')], [('solution', 'NN')], [('knapsack', 'NN')], [('*', 'NN')], [('*', 'NN')], [('*', 'NN')], [('*', 'NN')], [('polynomial', 'NN')], [('(', '(')], [('pseudo-polynomial', 'JJ')], [(')', ')')], [('-', ':')], [(',', ',')], [('even', 'RB')], [('np', 'NN')], [('?', '.')], [('could', 'MD')], [('please', 'NN')], [('clarify', 'NN')], [('?', '.')]]","[ wikipedia ] ( ) say : > even p≠np , ( nw ) complexity contradict fact knapsack problem np-complete , since w , unlike n , polynomial length input problem . ` w ` max weight capacity . ` n ` number item . ` n ` polynomial length input ? input binary , ` n ` definitely exponential bit length . also , problem np , verify polynomial time . however , polynomial time algorithm numeric value ` n ` ` w ` knapsack , still call knapsack np-complete length input . logic , would algorithm verify solution knapsack * * * * polynomial ( pseudo-polynomial ) - , even np ? could please clarify ?",0_algorithm_time_node_bill,3
207,s71762,Composite Images of Sphere into 3d object and more?,,4,0.75,computerscience,https://www.reddit.com/r/computerscience/comments/s71762/composite_images_of_sphere_into_3d_object_and_more/,3,"i have a question, which i believe is fairly well defined, but i do not have the knowledge to approach it.  if anyone has an idea of a better place that i can ask this question that would be excellent.

the problem :  i am playing a game called scam \*cough\* i mean star citizen and there are many large 3d worlds to explore but no coordinate system yet.  it does, however, give you the distance in kilometers you are from given hubs on said world as well as the center of the planet itself.

the hair brained scheme:  
step 1 - take screenshots of the planet from x km away at each pole and then again from a few angles around the equator.  
step 2 - stitch those together onto a 3d sphere to create a mapped globe  
step 3 - take screenshots of interesting locations by flying to a certain altitude and looking straight down.  then try to find software that can look at the screenshot and match it with a given location on the globe

some problems i will face:  
\- the screenshot will be a 2d image of a sphere and so will need to be reshaped as it cannot just be put on as a skin ( there is a better mathy way of saying this right? something something projection? but i am making sense yeah? )  
\- the planet will have lighting and cloud cover which change and could be confusing to any ml algo.  
\- mapping locations to the planet might be difficult as the planet may be too 'samey'.  a second option is to record the distance one is from several wp on the planet and use that information to, i believe the word would be, ""triangulate"" the position? yeah? does that sound right?

this sounds very possible to me but might require some specialized ml magic that i am not educated on? if anyone has any advice for how to better approach or frame the problem, or potential solutions for software or math that can be used to solve this, i would be stoked :)

in case it is relevant i am fairly competent with js and node

example images



&#x200b;

",1642522761.0,"['question', ',', 'believe', 'fairly', 'well', 'define', ',', 'knowledge', 'approach', '.', 'anyone', 'idea', 'well', 'place', 'ask', 'question', 'would', 'excellent', '.', 'problem', ':', 'play', 'game', 'call', 'scam', '\\', '*', 'cough\\', '*', 'mean', 'star', 'citizen', 'many', 'large', '3d', 'world', 'explore', 'coordinate', 'system', 'yet', '.', ',', 'however', ',', 'give', 'distance', 'kilometer', 'give', 'hub', 'say', 'world', 'well', 'center', 'planet', '.', 'hair', 'brain', 'scheme', ':', 'step', '1', '-', 'take', 'screenshots', 'planet', 'x', 'km', 'away', 'pole', 'angle', 'around', 'equator', '.', 'step', '2', '-', 'stitch', 'together', 'onto', '3d', 'sphere', 'create', 'mapped', 'globe', 'step', '3', '-', 'take', 'screenshots', 'interest', 'location', 'fly', 'certain', 'altitude', 'look', 'straight', '.', 'try', 'find', 'software', 'look', 'screenshot', 'match', 'give', 'location', 'globe', 'problem', 'face', ':', '\\-', 'screenshot', '2d', 'image', 'sphere', 'need', 'reshaped', 'put', 'skin', '(', 'well', 'mathy', 'way', 'say', 'right', '?', 'something', 'something', 'projection', '?', 'make', 'sense', 'yeah', '?', ')', '\\-', 'planet', 'light', 'cloud', 'cover', 'change', 'could', 'confuse', 'ml', 'algo', '.', '\\-', 'mapping', 'location', 'planet', 'might', 'difficult', 'planet', 'may', ""'samey"", ""'"", '.', 'second', 'option', 'record', 'distance', 'one', 'several', 'wp', 'planet', 'use', 'information', ',', 'believe', 'word', 'would', ',', '``', 'triangulate', ""''"", 'position', '?', 'yeah', '?', 'sound', 'right', '?', 'sound', 'possible', 'might', 'require', 'specialized', 'ml', 'magic', 'educate', '?', 'anyone', 'advice', 'well', 'approach', 'frame', 'problem', ',', 'potential', 'solution', 'software', 'math', 'use', 'solve', ',', 'would', 'stoke', ':', ')', 'case', 'relevant', 'fairly', 'competent', 'j', 'node', 'example', 'image', '&', '#', 'x200b', ';']","[[('question', 'NN')], [(',', ',')], [('believe', 'VB')], [('fairly', 'RB')], [('well', 'RB')], [('defined', 'VBN')], [(',', ',')], [('knowledge', 'NN')], [('approach', 'NN')], [('.', '.')], [('anyone', 'NN')], [('idea', 'NN')], [('better', 'RBR')], [('place', 'NN')], [('ask', 'NN')], [('question', 'NN')], [('would', 'MD')], [('excellent', 'NN')], [('.', '.')], [('problem', 'NN')], [(':', ':')], [('playing', 'VBG')], [('game', 'NN')], [('called', 'VBN')], [('scam', 'NN')], [('\\', 'NN')], [('*', 'NN')], [('cough\\', 'NN')], [('*', 'NN')], [('mean', 'NN')], [('star', 'NN')], [('citizen', 'NN')], [('many', 'JJ')], [('large', 'JJ')], [('3d', 'CD')], [('worlds', 'NNS')], [('explore', 'NN')], [('coordinate', 'NN')], [('system', 'NN')], [('yet', 'RB')], [('.', '.')], [(',', ',')], [('however', 'RB')], [(',', ',')], [('give', 'VB')], [('distance', 'NN')], [('kilometers', 'NNS')], [('given', 'VBN')], [('hubs', 'NNS')], [('said', 'VBD')], [('world', 'NN')], [('well', 'RB')], [('center', 'NN')], [('planet', 'NN')], [('.', '.')], [('hair', 'NN')], [('brained', 'VBN')], [('scheme', 'NN')], [(':', ':')], [('step', 'NN')], [('1', 'CD')], [('-', ':')], [('take', 'VB')], [('screenshots', 'NNS')], [('planet', 'NN')], [('x', 'NN')], [('km', 'NN')], [('away', 'RB')], [('pole', 'NN')], [('angles', 'NNS')], [('around', 'IN')], [('equator', 'NN')], [('.', '.')], [('step', 'NN')], [('2', 'CD')], [('-', ':')], [('stitch', 'NN')], [('together', 'RB')], [('onto', 'IN')], [('3d', 'CD')], [('sphere', 'RB')], [('create', 'NN')], [('mapped', 'NNS')], [('globe', 'NN')], [('step', 'NN')], [('3', 'CD')], [('-', ':')], [('take', 'VB')], [('screenshots', 'NNS')], [('interesting', 'VBG')], [('locations', 'NNS')], [('flying', 'VBG')], [('certain', 'JJ')], [('altitude', 'NN')], [('looking', 'VBG')], [('straight', 'NN')], [('.', '.')], [('try', 'NN')], [('find', 'VB')], [('software', 'NN')], [('look', 'NN')], [('screenshot', 'NN')], [('match', 'NN')], [('given', 'VBN')], [('location', 'NN')], [('globe', 'NN')], [('problems', 'NNS')], [('face', 'NN')], [(':', ':')], [('\\-', 'JJ')], [('screenshot', 'NN')], [('2d', 'CD')], [('image', 'NN')], [('sphere', 'RB')], [('need', 'NN')], [('reshaped', 'NN')], [('put', 'NN')], [('skin', 'NN')], [('(', '(')], [('better', 'RBR')], [('mathy', 'NN')], [('way', 'NN')], [('saying', 'VBG')], [('right', 'NN')], [('?', '.')], [('something', 'NN')], [('something', 'NN')], [('projection', 'NN')], [('?', '.')], [('making', 'VBG')], [('sense', 'NN')], [('yeah', 'NN')], [('?', '.')], [(')', ')')], [('\\-', 'JJ')], [('planet', 'NN')], [('lighting', 'VBG')], [('cloud', 'NN')], [('cover', 'NN')], [('change', 'NN')], [('could', 'MD')], [('confusing', 'VBG')], [('ml', 'NN')], [('algo', 'NN')], [('.', '.')], [('\\-', 'JJ')], [('mapping', 'NN')], [('locations', 'NNS')], [('planet', 'NN')], [('might', 'MD')], [('difficult', 'JJ')], [('planet', 'NN')], [('may', 'MD')], [(""'samey"", 'NNS')], [(""'"", ""''"")], [('.', '.')], [('second', 'JJ')], [('option', 'NN')], [('record', 'NN')], [('distance', 'NN')], [('one', 'CD')], [('several', 'JJ')], [('wp', 'NN')], [('planet', 'NN')], [('use', 'NN')], [('information', 'NN')], [(',', ',')], [('believe', 'VB')], [('word', 'NN')], [('would', 'MD')], [(',', ',')], [('``', '``')], [('triangulate', 'NN')], [(""''"", ""''"")], [('position', 'NN')], [('?', '.')], [('yeah', 'NN')], [('?', '.')], [('sound', 'NN')], [('right', 'NN')], [('?', '.')], [('sounds', 'NNS')], [('possible', 'JJ')], [('might', 'MD')], [('require', 'NN')], [('specialized', 'JJ')], [('ml', 'NN')], [('magic', 'NN')], [('educated', 'VBN')], [('?', '.')], [('anyone', 'NN')], [('advice', 'NN')], [('better', 'RBR')], [('approach', 'NN')], [('frame', 'NN')], [('problem', 'NN')], [(',', ',')], [('potential', 'JJ')], [('solutions', 'NNS')], [('software', 'NN')], [('math', 'NN')], [('used', 'VBN')], [('solve', 'NN')], [(',', ',')], [('would', 'MD')], [('stoked', 'VBN')], [(':', ':')], [(')', ')')], [('case', 'NN')], [('relevant', 'NN')], [('fairly', 'RB')], [('competent', 'NN')], [('js', 'NN')], [('node', 'NN')], [('example', 'NN')], [('images', 'NNS')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')]]","question , believe fairly well define , knowledge approach . anyone idea well place ask question would excellent . problem : play game call scam \ * cough\ * mean star citizen many large 3d world explore coordinate system yet . , however , give distance kilometer give hub say world well center planet . hair brain scheme : step 1 - take screenshots planet x km away pole angle around equator . step 2 - stitch together onto 3d sphere create mapped globe step 3 - take screenshots interest location fly certain altitude look straight . try find software look screenshot match give location globe problem face : \- screenshot 2d image sphere need reshaped put skin ( well mathy way say right ? something something projection ? make sense yeah ? ) \- planet light cloud cover change could confuse ml algo . \- mapping location planet might difficult planet may 'samey ' . second option record distance one several wp planet use information , believe word would , `` triangulate '' position ? yeah ? sound right ? sound possible might require specialized ml magic educate ? anyone advice well approach frame problem , potential solution software math use solve , would stoke : ) case relevant fairly competent j node example image & # x200b ;",0_algorithm_time_node_bill,3
209,s6msij,Where can I get access to industry journals or scholarly articles free/cheaply?,Help,9,0.85,computerscience,https://www.reddit.com/r/computerscience/comments/s6msij/where_can_i_get_access_to_industry_journals_or/,4,"having finished a masters a couple years ago,  i miss having access to journals and articles that my university library provided. is there a free/inexpensive source of similar materials that i may be overlooking?

thank you!",1642474798.0,"['finish', 'master', 'couple', 'year', 'ago', ',', 'miss', 'access', 'journal', 'article', 'university', 'library', 'provide', '.', 'free/inexpensive', 'source', 'similar', 'material', 'may', 'overlook', '?', 'thank', '!']","[[('finished', 'VBN')], [('masters', 'NNS')], [('couple', 'NN')], [('years', 'NNS')], [('ago', 'RB')], [(',', ',')], [('miss', 'NN')], [('access', 'NN')], [('journals', 'NNS')], [('articles', 'NNS')], [('university', 'NN')], [('library', 'NN')], [('provided', 'VBN')], [('.', '.')], [('free/inexpensive', 'JJ')], [('source', 'NN')], [('similar', 'JJ')], [('materials', 'NNS')], [('may', 'MD')], [('overlooking', 'VBG')], [('?', '.')], [('thank', 'NN')], [('!', '.')]]","finish master couple year ago , miss access journal article university library provide . free/inexpensive source similar material may overlook ? thank !",4_book_learn_computer_good,4
210,s6zxpb,"Creating a scalable intent classifier with Elixir, Python and Tensorflow | Arjan Scherpenisse - ElixirConf EU 2021",,1,1.0,computerscience,https://www.reddit.com/r/computerscience/comments/s6zxpb/creating_a_scalable_intent_classifier_with_elixir/,0,"arjan scherpenisse gave an amazing talk with title ""creating a scalable intent classifier with elixir, python and tensorflow"" for the #elixirconfeu conference in warsow.   

watch the video & learn more about the qna ninja, a classifier service that recognizes text  \_hswc2je",1642519300.0,"['arjan', 'scherpenisse', 'give', 'amaze', 'talk', 'title', '``', 'create', 'scalable', 'intent', 'classifier', 'elixir', ',', 'python', 'tensorflow', ""''"", '#', 'elixirconfeu', 'conference', 'warsow', '.', 'watch', 'video', '&', 'learn', 'qna', 'ninja', ',', 'classifier', 'service', 'recognizes', 'text', '\\_hswc2je']","[[('arjan', 'NN')], [('scherpenisse', 'NN')], [('gave', 'VBD')], [('amazing', 'VBG')], [('talk', 'NN')], [('title', 'NN')], [('``', '``')], [('creating', 'VBG')], [('scalable', 'JJ')], [('intent', 'NN')], [('classifier', 'NN')], [('elixir', 'NN')], [(',', ',')], [('python', 'NN')], [('tensorflow', 'NN')], [(""''"", ""''"")], [('#', '#')], [('elixirconfeu', 'NN')], [('conference', 'NN')], [('warsow', 'NN')], [('.', '.')], [('watch', 'NN')], [('video', 'NN')], [('&', 'CC')], [('learn', 'NN')], [('qna', 'NN')], [('ninja', 'NN')], [(',', ',')], [('classifier', 'NN')], [('service', 'NN')], [('recognizes', 'NNS')], [('text', 'NN')], [('\\_hswc2je', 'NN')]]","arjan scherpenisse give amaze talk title `` create scalable intent classifier elixir , python tensorflow '' # elixirconfeu conference warsow . watch video & learn qna ninja , classifier service recognizes text \_hswc2je",-1_abazbz2abz_2520_problem_use,5
212,s67l1c,What is Singular Value Decomposition (SVD)? A 2-minute visual guide. [OC],Discussion,57,0.98,computerscience,https://www.reddit.com/r/computerscience/comments/s67l1c/what_is_singular_value_decomposition_svd_a/,8,"&#x200b;















🔵 singular value decomposition 🔵

🪄 remember from the [post on eigenvectors](/): eigenvectors of a matrix are special vectors that only get scaled when the matrix is applied to them. while evd (eigenvalue decomposition) can only be applied to special matrices (diagonalizable matrices) svd is a generalization of evd and can be applied to any rectangular matrix.

🧩 like prime factorization where a number is broken down to its prime factors (simpler pieces = prime numbers in this case); svd factorizes the matrix into simpler pieces i.e. simpler matrices. this factorization or decomposition comes in handy for many applications some of which i briefly touch upon later.

🏥🦴 time for (somewhat of) an analogy: you can think of svd as an x-ray of a matrix. it provides us with simpler pieces that constitute the matrix and by looking at these simpler pieces i.e. simpler matrices we can say a lot about the matrix in question. things like its (pseudo-) inverse, rank, null-space, range among other things can be easily determined the same way a doctor can say a lot with an x-ray scan of your body.

🔨 the singular value decomposition breaks the original matrix into 3 pieces: 2 unitary matrices and a rectangular diagonal matrix. you can draw a parallel with the eigenvalue decomposition equation and see exactly how svd has a more general form.

🔄 with the help of the singular value decomposition we can explain what happens to an arbitrary vector when a matrix m is applied to it. since m can be broken down into simpler pieces, we can represent the matrix m by a rotation, followed by scaling (by the singular values) and another rotation. so if you had a circle it would first be rotated then stretched by the singular values (becoming an ellipse) and finally be rotated to end up as a rotated ellipse.

🗜️ there are numerous applications of svd. perhaps you could comment on the ones that i missed but you know about. one of the nicest things you can get is the pseudo-inverse of a matrix without doing crazy matrix inversion. this is because the simple pieces that svd provides are extremely easy to invert making inversion of the original matrix child's play. svd is heavily applied in solving numerical problems such as solving linear equations that so frequently pop up in engineering.

🎥 data compression and computing low-rank approximations make it handy for compressing images and videos so you can watch cat videos without buffering. and of course, svd has also been used for ranking web pages like google's pagerank algorithm does so you can find your favorite recipe with a quick search.

\---------------------------------------------------------------------------------

i have been studying and practicing machine learning and computer vision for 7+ years. as time has passed i have realized more and more the power of data-driven decision-making. seeing firsthand what ml is capable of i have personally felt that it can be a great inter-disciplinary tool to automate workflows. i will bring up different topics of ml in the form of short notes which can be of interest to existing practitioners and fresh enthusiasts alike.

the posts will cover topics like statistics, linear algebra, probability, data representation, modeling, computer vision among other things. i want this to be an incremental journey, starting from the basics and building up to more complex ideas.

if you like such content and would like to steer the topics i cover, feel free to suggest topics you would like to know more about in the comments.",1642435873.0,"['&', '#', 'x200b', ';', '🔵', 'singular', 'value', 'decomposition', '🔵', '\U0001fa84', 'remember', '[', 'post', 'eigenvectors', ']', '(', '/', ')', ':', 'eigenvectors', 'matrix', 'special', 'vector', 'get', 'scale', 'matrix', 'apply', '.', 'evd', '(', 'eigenvalue', 'decomposition', ')', 'apply', 'special', 'matrix', '(', 'diagonalizable', 'matrix', ')', 'svd', 'generalization', 'evd', 'apply', 'rectangular', 'matrix', '.', '🧩', 'like', 'prime', 'factorization', 'number', 'broken', 'prime', 'factor', '(', 'simpler', 'piece', '=', 'prime', 'number', 'case', ')', ';', 'svd', 'factorizes', 'matrix', 'simpler', 'piece', 'i.e', '.', 'simpler', 'matrix', '.', 'factorization', 'decomposition', 'come', 'handy', 'many', 'application', 'briefly', 'touch', 'upon', 'later', '.', '🏥🦴', 'time', '(', 'somewhat', ')', 'analogy', ':', 'think', 'svd', 'x-ray', 'matrix', '.', 'provide', 'u', 'simpler', 'piece', 'constitute', 'matrix', 'look', 'simpler', 'piece', 'i.e', '.', 'simpler', 'matrix', 'say', 'lot', 'matrix', 'question', '.', 'thing', 'like', '(', 'pseudo-', ')', 'inverse', ',', 'rank', ',', 'null-space', ',', 'range', 'among', 'thing', 'easily', 'determine', 'way', 'doctor', 'say', 'lot', 'x-ray', 'scan', 'body', '.', '🔨', 'singular', 'value', 'decomposition', 'break', 'original', 'matrix', '3', 'piece', ':', '2', 'unitary', 'matrix', 'rectangular', 'diagonal', 'matrix', '.', 'draw', 'parallel', 'eigenvalue', 'decomposition', 'equation', 'see', 'exactly', 'svd', 'general', 'form', '.', '🔄', 'help', 'singular', 'value', 'decomposition', 'explain', 'happens', 'arbitrary', 'vector', 'matrix', 'apply', '.', 'since', 'broken', 'simpler', 'piece', ',', 'represent', 'matrix', 'rotation', ',', 'follow', 'scale', '(', 'singular', 'value', ')', 'another', 'rotation', '.', 'circle', 'would', 'first', 'rotate', 'stretch', 'singular', 'value', '(', 'become', 'ellipse', ')', 'finally', 'rotate', 'end', 'rotate', 'ellipse', '.', '🗜️', 'numerous', 'application', 'svd', '.', 'perhaps', 'could', 'comment', 'one', 'miss', 'know', '.', 'one', 'nice', 'thing', 'get', 'pseudo-inverse', 'matrix', 'without', 'crazy', 'matrix', 'inversion', '.', 'simple', 'piece', 'svd', 'provide', 'extremely', 'easy', 'invert', 'make', 'inversion', 'original', 'matrix', 'child', ""'s"", 'play', '.', 'svd', 'heavily', 'apply', 'solve', 'numerical', 'problem', 'solve', 'linear', 'equation', 'frequently', 'pop', 'engineering', '.', '🎥', 'data', 'compression', 'compute', 'low-rank', 'approximation', 'make', 'handy', 'compress', 'image', 'video', 'watch', 'cat', 'video', 'without', 'buffering', '.', 'course', ',', 'svd', 'also', 'use', 'rank', 'web', 'page', 'like', 'google', ""'s"", 'pagerank', 'algorithm', 'find', 'favorite', 'recipe', 'quick', 'search', '.', '\\', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '-', 'study', 'practice', 'machine', 'learn', 'computer', 'vision', '7+', 'year', '.', 'time', 'pass', 'realize', 'power', 'data-driven', 'decision-making', '.', 'see', 'firsthand', 'ml', 'capable', 'personally', 'felt', 'great', 'inter-disciplinary', 'tool', 'automate', 'workflow', '.', 'bring', 'different', 'topic', 'ml', 'form', 'short', 'note', 'interest', 'exist', 'practitioner', 'fresh', 'enthusiast', 'alike', '.', 'post', 'cover', 'topic', 'like', 'statistic', ',', 'linear', 'algebra', ',', 'probability', ',', 'data', 'representation', ',', 'model', ',', 'computer', 'vision', 'among', 'thing', '.', 'want', 'incremental', 'journey', ',', 'start', 'basic', 'building', 'complex', 'idea', '.', 'like', 'content', 'would', 'like', 'steer', 'topic', 'cover', ',', 'feel', 'free', 'suggest', 'topic', 'would', 'like', 'know', 'comment', '.']","[[('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('🔵', 'NN')], [('singular', 'NN')], [('value', 'NN')], [('decomposition', 'NN')], [('🔵', 'NN')], [('\U0001fa84', 'NN')], [('remember', 'VB')], [('[', 'NN')], [('post', 'NN')], [('eigenvectors', 'NNS')], [(']', 'NN')], [('(', '(')], [('/', 'NN')], [(')', ')')], [(':', ':')], [('eigenvectors', 'NNS')], [('matrix', 'NN')], [('special', 'JJ')], [('vectors', 'NNS')], [('get', 'VB')], [('scaled', 'VBN')], [('matrix', 'NN')], [('applied', 'VBN')], [('.', '.')], [('evd', 'NN')], [('(', '(')], [('eigenvalue', 'NN')], [('decomposition', 'NN')], [(')', ')')], [('applied', 'VBN')], [('special', 'JJ')], [('matrices', 'NNS')], [('(', '(')], [('diagonalizable', 'JJ')], [('matrices', 'NNS')], [(')', ')')], [('svd', 'NN')], [('generalization', 'NN')], [('evd', 'NN')], [('applied', 'VBN')], [('rectangular', 'NN')], [('matrix', 'NN')], [('.', '.')], [('🧩', 'NN')], [('like', 'IN')], [('prime', 'NN')], [('factorization', 'NN')], [('number', 'NN')], [('broken', 'NN')], [('prime', 'NN')], [('factors', 'NNS')], [('(', '(')], [('simpler', 'NN')], [('pieces', 'NNS')], [('=', 'NN')], [('prime', 'NN')], [('numbers', 'NNS')], [('case', 'NN')], [(')', ')')], [(';', ':')], [('svd', 'NN')], [('factorizes', 'NNS')], [('matrix', 'NN')], [('simpler', 'NN')], [('pieces', 'NNS')], [('i.e', 'NN')], [('.', '.')], [('simpler', 'NN')], [('matrices', 'NNS')], [('.', '.')], [('factorization', 'NN')], [('decomposition', 'NN')], [('comes', 'VBZ')], [('handy', 'NN')], [('many', 'JJ')], [('applications', 'NNS')], [('briefly', 'NN')], [('touch', 'NN')], [('upon', 'IN')], [('later', 'RB')], [('.', '.')], [('🏥🦴', 'NN')], [('time', 'NN')], [('(', '(')], [('somewhat', 'RB')], [(')', ')')], [('analogy', 'NN')], [(':', ':')], [('think', 'NN')], [('svd', 'NN')], [('x-ray', 'NN')], [('matrix', 'NN')], [('.', '.')], [('provides', 'VBZ')], [('us', 'PRP')], [('simpler', 'NN')], [('pieces', 'NNS')], [('constitute', 'NN')], [('matrix', 'NN')], [('looking', 'VBG')], [('simpler', 'NN')], [('pieces', 'NNS')], [('i.e', 'NN')], [('.', '.')], [('simpler', 'NN')], [('matrices', 'NNS')], [('say', 'VB')], [('lot', 'NN')], [('matrix', 'NN')], [('question', 'NN')], [('.', '.')], [('things', 'NNS')], [('like', 'IN')], [('(', '(')], [('pseudo-', 'NN')], [(')', ')')], [('inverse', 'NN')], [(',', ',')], [('rank', 'NN')], [(',', ',')], [('null-space', 'NN')], [(',', ',')], [('range', 'NN')], [('among', 'IN')], [('things', 'NNS')], [('easily', 'RB')], [('determined', 'VBN')], [('way', 'NN')], [('doctor', 'NN')], [('say', 'VB')], [('lot', 'NN')], [('x-ray', 'NN')], [('scan', 'JJ')], [('body', 'NN')], [('.', '.')], [('🔨', 'NN')], [('singular', 'NN')], [('value', 'NN')], [('decomposition', 'NN')], [('breaks', 'NNS')], [('original', 'JJ')], [('matrix', 'NN')], [('3', 'CD')], [('pieces', 'NNS')], [(':', ':')], [('2', 'CD')], [('unitary', 'JJ')], [('matrices', 'NNS')], [('rectangular', 'NN')], [('diagonal', 'NN')], [('matrix', 'NN')], [('.', '.')], [('draw', 'NN')], [('parallel', 'NN')], [('eigenvalue', 'NN')], [('decomposition', 'NN')], [('equation', 'NN')], [('see', 'VB')], [('exactly', 'RB')], [('svd', 'NN')], [('general', 'JJ')], [('form', 'NN')], [('.', '.')], [('🔄', 'NN')], [('help', 'NN')], [('singular', 'NN')], [('value', 'NN')], [('decomposition', 'NN')], [('explain', 'NN')], [('happens', 'NNS')], [('arbitrary', 'JJ')], [('vector', 'NN')], [('matrix', 'NN')], [('applied', 'VBN')], [('.', '.')], [('since', 'IN')], [('broken', 'NN')], [('simpler', 'NN')], [('pieces', 'NNS')], [(',', ',')], [('represent', 'NN')], [('matrix', 'NN')], [('rotation', 'NN')], [(',', ',')], [('followed', 'VBD')], [('scaling', 'VBG')], [('(', '(')], [('singular', 'NN')], [('values', 'NNS')], [(')', ')')], [('another', 'DT')], [('rotation', 'NN')], [('.', '.')], [('circle', 'NN')], [('would', 'MD')], [('first', 'RB')], [('rotated', 'VBN')], [('stretched', 'VBN')], [('singular', 'NN')], [('values', 'NNS')], [('(', '(')], [('becoming', 'VBG')], [('ellipse', 'NN')], [(')', ')')], [('finally', 'RB')], [('rotated', 'VBN')], [('end', 'NN')], [('rotated', 'VBN')], [('ellipse', 'NN')], [('.', '.')], [('🗜️', 'NN')], [('numerous', 'JJ')], [('applications', 'NNS')], [('svd', 'NN')], [('.', '.')], [('perhaps', 'RB')], [('could', 'MD')], [('comment', 'NN')], [('ones', 'NNS')], [('missed', 'VBN')], [('know', 'VB')], [('.', '.')], [('one', 'CD')], [('nicest', 'JJS')], [('things', 'NNS')], [('get', 'VB')], [('pseudo-inverse', 'NN')], [('matrix', 'NN')], [('without', 'IN')], [('crazy', 'NN')], [('matrix', 'NN')], [('inversion', 'NN')], [('.', '.')], [('simple', 'NN')], [('pieces', 'NNS')], [('svd', 'NN')], [('provides', 'VBZ')], [('extremely', 'RB')], [('easy', 'JJ')], [('invert', 'NN')], [('making', 'VBG')], [('inversion', 'NN')], [('original', 'JJ')], [('matrix', 'NN')], [('child', 'NN')], [(""'s"", 'POS')], [('play', 'NN')], [('.', '.')], [('svd', 'NN')], [('heavily', 'RB')], [('applied', 'VBN')], [('solving', 'VBG')], [('numerical', 'JJ')], [('problems', 'NNS')], [('solving', 'VBG')], [('linear', 'NN')], [('equations', 'NNS')], [('frequently', 'RB')], [('pop', 'NN')], [('engineering', 'NN')], [('.', '.')], [('🎥', 'NN')], [('data', 'NNS')], [('compression', 'NN')], [('computing', 'VBG')], [('low-rank', 'NN')], [('approximations', 'NNS')], [('make', 'VB')], [('handy', 'NN')], [('compressing', 'VBG')], [('images', 'NNS')], [('videos', 'NNS')], [('watch', 'NN')], [('cat', 'NN')], [('videos', 'NNS')], [('without', 'IN')], [('buffering', 'NN')], [('.', '.')], [('course', 'NN')], [(',', ',')], [('svd', 'NN')], [('also', 'RB')], [('used', 'VBN')], [('ranking', 'VBG')], [('web', 'NN')], [('pages', 'NNS')], [('like', 'IN')], [('google', 'NN')], [(""'s"", 'POS')], [('pagerank', 'NN')], [('algorithm', 'NN')], [('find', 'VB')], [('favorite', 'NN')], [('recipe', 'NN')], [('quick', 'NN')], [('searchstudying', 'VBG')], [('practicing', 'VBG')], [('machine', 'NN')], [('learning', 'VBG')], [('computer', 'NN')], [('vision', 'NN')], [('7+', 'CD')], [('years', 'NNS')], [('.', '.')], [('time', 'NN')], [('passed', 'VBN')], [('realized', 'VBN')], [('power', 'NN')], [('data-driven', 'JJ')], [('decision-making', 'NN')], [('.', '.')], [('seeing', 'VBG')], [('firsthand', 'NN')], [('ml', 'NN')], [('capable', 'JJ')], [('personally', 'RB')], [('felt', 'NN')], [('great', 'JJ')], [('inter-disciplinary', 'JJ')], [('tool', 'NN')], [('automate', 'NN')], [('workflows', 'NNS')], [('.', '.')], [('bring', 'NN')], [('different', 'JJ')], [('topics', 'NNS')], [('ml', 'NN')], [('form', 'NN')], [('short', 'JJ')], [('notes', 'NNS')], [('interest', 'NN')], [('existing', 'VBG')], [('practitioners', 'NNS')], [('fresh', 'JJ')], [('enthusiasts', 'NNS')], [('alike', 'RB')], [('.', '.')], [('posts', 'NNS')], [('cover', 'NN')], [('topics', 'NNS')], [('like', 'IN')], [('statistics', 'NNS')], [(',', ',')], [('linear', 'NN')], [('algebra', 'NN')], [(',', ',')], [('probability', 'NN')], [(',', ',')], [('data', 'NNS')], [('representation', 'NN')], [(',', ',')], [('modeling', 'VBG')], [(',', ',')], [('computer', 'NN')], [('vision', 'NN')], [('among', 'IN')], [('things', 'NNS')], [('.', '.')], [('want', 'NN')], [('incremental', 'NN')], [('journey', 'NN')], [(',', ',')], [('starting', 'VBG')], [('basics', 'NNS')], [('building', 'NN')], [('complex', 'JJ')], [('ideas', 'NNS')], [('.', '.')], [('like', 'IN')], [('content', 'NN')], [('would', 'MD')], [('like', 'IN')], [('steer', 'NN')], [('topics', 'NNS')], [('cover', 'NN')], [(',', ',')], [('feel', 'NN')], [('free', 'JJ')], [('suggest', 'NN')], [('topics', 'NNS')], [('would', 'MD')], [('like', 'IN')], [('know', 'VB')], [('comments', 'NNS')], [('.', '.')]]","& # x200b ; 🔵 singular value decomposition 🔵 🪄 remember [ post eigenvectors ] ( / ) : eigenvectors matrix special vector get scale matrix apply . evd ( eigenvalue decomposition ) apply special matrix ( diagonalizable matrix ) svd generalization evd apply rectangular matrix . 🧩 like prime factorization number broken prime factor ( simpler piece = prime number case ) ; svd factorizes matrix simpler piece i.e . simpler matrix . factorization decomposition come handy many application briefly touch upon later . 🏥🦴 time ( somewhat ) analogy : think svd x-ray matrix . provide u simpler piece constitute matrix look simpler piece i.e . simpler matrix say lot matrix question . thing like ( pseudo- ) inverse , rank , null-space , range among thing easily determine way doctor say lot x-ray scan body . 🔨 singular value decomposition break original matrix 3 piece : 2 unitary matrix rectangular diagonal matrix . draw parallel eigenvalue decomposition equation see exactly svd general form . 🔄 help singular value decomposition explain happens arbitrary vector matrix apply . since broken simpler piece , represent matrix rotation , follow scale ( singular value ) another rotation . circle would first rotate stretch singular value ( become ellipse ) finally rotate end rotate ellipse . 🗜️ numerous application svd . perhaps could comment one miss know . one nice thing get pseudo-inverse matrix without crazy matrix inversion . simple piece svd provide extremely easy invert make inversion original matrix child 's play . svd heavily apply solve numerical problem solve linear equation frequently pop engineering . 🎥 data compression compute low-rank approximation make handy compress image video watch cat video without buffering . course , svd also use rank web page like google 's pagerank algorithm find favorite recipe quick search . \ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- - study practice machine learn computer vision 7+ year . time pass realize power data-driven decision-making . see firsthand ml capable personally felt great inter-disciplinary tool automate workflow . bring different topic ml form short note interest exist practitioner fresh enthusiast alike . post cover topic like statistic , linear algebra , probability , data representation , model , computer vision among thing . want incremental journey , start basic building complex idea . like content would like steer topic cover , feel free suggest topic would like know comment .",-1_abazbz2abz_2520_problem_use,4
214,s5vvf5,Initiating a study-group for MIT's Algorithms Course,,57,0.94,computerscience,https://www.reddit.com/r/computerscience/comments/s5vvf5/initiating_a_studygroup_for_mits_algorithms_course/,12,"hello,

i am looking for other students to join me in learning [erik demaine's algorithms course](/).

the course is mathematically matured and requires a background in discrete math, logic and proof techniques.

if you are already familiar with algorithms, then you might focus more on advanced lectures. if you lack background in math, then you might focus more on early lectures. students coming from non-cs background are highly welcomed, including engineering, physics, and pure-math. especially if they were interested in computational methods. we hope they contribute to cs students a new perspective about computation.

we hope to initiate a community, where you can mutually contribute and benefit from others' experiences, skills, and backgrounds. you are welcome to ask questions, share your solutions to be reviewed by others, and even suggest further problems/topics.

we plan to complete two weeks of the course on one month, and have 1 hour meeting per week. there is no obligation to attend all meetings, solve the whole course's problem-set, or to respond to every question posed. learn and engage with other members at your own suitable pace.

my availability is limited to 2 weeks per month, but other students are welcomed to collaborate at any time.

~~join by submitting this google form.~~

we started but it is not late to catch up. through the [group's website](-alg-website) you can see our previous meetings, and join our community.",1642396803.0,"['hello', ',', 'look', 'student', 'join', 'learn', '[', 'erik', 'demaine', ""'s"", 'algorithm', 'course', ']', '(', '/', ')', '.', 'course', 'mathematically', 'mature', 'require', 'background', 'discrete', 'math', ',', 'logic', 'proof', 'technique', '.', 'already', 'familiar', 'algorithm', ',', 'might', 'focus', 'advanced', 'lecture', '.', 'lack', 'background', 'math', ',', 'might', 'focus', 'early', 'lecture', '.', 'student', 'come', 'non-cs', 'background', 'highly', 'welcome', ',', 'include', 'engineering', ',', 'physic', ',', 'pure-math', '.', 'especially', 'interested', 'computational', 'method', '.', 'hope', 'contribute', 'c', 'student', 'new', 'perspective', 'computation', '.', 'hope', 'initiate', 'community', ',', 'mutually', 'contribute', 'benefit', 'others', ""'"", 'experience', ',', 'skill', ',', 'background', '.', 'welcome', 'ask', 'question', ',', 'share', 'solution', 'review', 'others', ',', 'even', 'suggest', 'problems/topics', '.', 'plan', 'complete', 'two', 'week', 'course', 'one', 'month', ',', '1', 'hour', 'meeting', 'per', 'week', '.', 'obligation', 'attend', 'meeting', ',', 'solve', 'whole', 'course', ""'s"", 'problem-set', ',', 'respond', 'every', 'question', 'pose', '.', 'learn', 'engage', 'member', 'suitable', 'pace', '.', 'availability', 'limited', '2', 'week', 'per', 'month', ',', 'student', 'welcome', 'collaborate', 'time', '.', '~~join', 'submit', 'google', 'form.~~', 'start', 'late', 'catch', '.', '[', 'group', ""'s"", 'website', ']', '(', '-alg-website', ')', 'see', 'previous', 'meeting', ',', 'join', 'community', '.']","[[('hello', 'NN')], [(',', ',')], [('looking', 'VBG')], [('students', 'NNS')], [('join', 'NN')], [('learning', 'VBG')], [('[', 'NN')], [('erik', 'NN')], [('demaine', 'NN')], [(""'s"", 'POS')], [('algorithms', 'NN')], [('course', 'NN')], [(']', 'NN')], [('(', '(')], [('/', 'NN')], [(')', ')')], [('.', '.')], [('course', 'NN')], [('mathematically', 'RB')], [('matured', 'VBN')], [('requires', 'VBZ')], [('background', 'NN')], [('discrete', 'NN')], [('math', 'NN')], [(',', ',')], [('logic', 'NN')], [('proof', 'NN')], [('techniques', 'NNS')], [('.', '.')], [('already', 'RB')], [('familiar', 'JJ')], [('algorithms', 'NN')], [(',', ',')], [('might', 'MD')], [('focus', 'NN')], [('advanced', 'JJ')], [('lectures', 'NNS')], [('.', '.')], [('lack', 'NN')], [('background', 'NN')], [('math', 'NN')], [(',', ',')], [('might', 'MD')], [('focus', 'NN')], [('early', 'RB')], [('lectures', 'NNS')], [('.', '.')], [('students', 'NNS')], [('coming', 'VBG')], [('non-cs', 'JJ')], [('background', 'NN')], [('highly', 'RB')], [('welcomed', 'VBD')], [(',', ',')], [('including', 'VBG')], [('engineering', 'NN')], [(',', ',')], [('physics', 'NNS')], [(',', ',')], [('pure-math', 'NN')], [('.', '.')], [('especially', 'RB')], [('interested', 'JJ')], [('computational', 'NN')], [('methods', 'NNS')], [('.', '.')], [('hope', 'NN')], [('contribute', 'NN')], [('cs', 'NN')], [('students', 'NNS')], [('new', 'JJ')], [('perspective', 'NN')], [('computation', 'NN')], [('.', '.')], [('hope', 'NN')], [('initiate', 'NN')], [('community', 'NN')], [(',', ',')], [('mutually', 'RB')], [('contribute', 'NN')], [('benefit', 'NN')], [('others', 'NNS')], [(""'"", ""''"")], [('experiences', 'NNS')], [(',', ',')], [('skills', 'NNS')], [(',', ',')], [('backgrounds', 'NNS')], [('.', '.')], [('welcome', 'NN')], [('ask', 'NN')], [('questions', 'NNS')], [(',', ',')], [('share', 'NN')], [('solutions', 'NNS')], [('reviewed', 'VBN')], [('others', 'NNS')], [(',', ',')], [('even', 'RB')], [('suggest', 'NN')], [('problems/topics', 'NNS')], [('.', '.')], [('plan', 'NN')], [('complete', 'JJ')], [('two', 'CD')], [('weeks', 'NNS')], [('course', 'NN')], [('one', 'CD')], [('month', 'NN')], [(',', ',')], [('1', 'CD')], [('hour', 'NN')], [('meeting', 'NN')], [('per', 'IN')], [('week', 'NN')], [('.', '.')], [('obligation', 'NN')], [('attend', 'NN')], [('meetings', 'NNS')], [(',', ',')], [('solve', 'NN')], [('whole', 'JJ')], [('course', 'NN')], [(""'s"", 'POS')], [('problem-set', 'NN')], [(',', ',')], [('respond', 'NN')], [('every', 'DT')], [('question', 'NN')], [('posed', 'VBN')], [('.', '.')], [('learn', 'NN')], [('engage', 'NN')], [('members', 'NNS')], [('suitable', 'JJ')], [('pace', 'NN')], [('.', '.')], [('availability', 'NN')], [('limited', 'JJ')], [('2', 'CD')], [('weeks', 'NNS')], [('per', 'IN')], [('month', 'NN')], [(',', ',')], [('students', 'NNS')], [('welcomed', 'VBD')], [('collaborate', 'NN')], [('time', 'NN')], [('.', '.')], [('~~join', 'NN')], [('submitting', 'VBG')], [('google', 'NN')], [('form.~~', 'NN')], [('started', 'VBN')], [('late', 'RB')], [('catch', 'NN')], [('.', '.')], [('[', 'NN')], [('group', 'NN')], [(""'s"", 'POS')], [('website', 'NN')], [(']', 'NN')], [('(', '(')], [('-alg-website', 'NN')], [(')', ')')], [('see', 'VB')], [('previous', 'JJ')], [('meetings', 'NNS')], [(',', ',')], [('join', 'NN')], [('community', 'NN')], [('.', '.')]]","hello , look student join learn [ erik demaine 's algorithm course ] ( / ) . course mathematically mature require background discrete math , logic proof technique . already familiar algorithm , might focus advanced lecture . lack background math , might focus early lecture . student come non-cs background highly welcome , include engineering , physic , pure-math . especially interested computational method . hope contribute c student new perspective computation . hope initiate community , mutually contribute benefit others ' experience , skill , background . welcome ask question , share solution review others , even suggest problems/topics . plan complete two week course one month , 1 hour meeting per week . obligation attend meeting , solve whole course 's problem-set , respond every question pose . learn engage member suitable pace . availability limited 2 week per month , student welcome collaborate time . ~~join submit google form.~~ start late catch . [ group 's website ] ( -alg-website ) see previous meeting , join community .",2_computer_learn_science_study,4
215,s694uk,"First time posting here, hope this is the right kind of thing to put here. Can someone explain the basics of Bayesian Neural Networks to me? Specifically if they address the problem of overconfidence in AI systems when they encounter information outside of their data sets. Thanks!",,6,1.0,computerscience,https://www.reddit.com/r/computerscience/comments/s694uk/first_time_posting_here_hope_this_is_the_right/,4,"bit of background, i come form the social sciences and very little computer science knowledge but i am researching how the integration of ai will impact my field of study. 

one potentially large problem i have found is that ai can be overconfident when faced with information outside of what it has been taught to recognize. i have read that bayesian neural networks can mitigate this problem but my lack of computer science knowledge making me run into a wall when it comes to understanding exactly why it fixes this problem. 

i am doing other readings on this topics but i thought i farm this out to reddit and use this site for more than just watching people argue about literally anything. thanks for any assistance or sources you can provide!",1642439716.0,"['bit', 'background', ',', 'come', 'form', 'social', 'science', 'little', 'computer', 'science', 'knowledge', 'research', 'integration', 'ai', 'impact', 'field', 'study', '.', 'one', 'potentially', 'large', 'problem', 'found', 'ai', 'overconfident', 'face', 'information', 'outside', 'taught', 'recognize', '.', 'read', 'bayesian', 'neural', 'network', 'mitigate', 'problem', 'lack', 'computer', 'science', 'knowledge', 'make', 'run', 'wall', 'come', 'understand', 'exactly', 'fix', 'problem', '.', 'reading', 'topic', 'thought', 'farm', 'reddit', 'use', 'site', 'watch', 'people', 'argue', 'literally', 'anything', '.', 'thanks', 'assistance', 'source', 'provide', '!']","[[('bit', 'NN')], [('background', 'NN')], [(',', ',')], [('come', 'VB')], [('form', 'NN')], [('social', 'JJ')], [('sciences', 'NNS')], [('little', 'JJ')], [('computer', 'NN')], [('science', 'NN')], [('knowledge', 'NN')], [('researching', 'VBG')], [('integration', 'NN')], [('ai', 'NN')], [('impact', 'NN')], [('field', 'NN')], [('study', 'NN')], [('.', '.')], [('one', 'CD')], [('potentially', 'RB')], [('large', 'JJ')], [('problem', 'NN')], [('found', 'NN')], [('ai', 'NN')], [('overconfident', 'NN')], [('faced', 'VBN')], [('information', 'NN')], [('outside', 'IN')], [('taught', 'NN')], [('recognize', 'VB')], [('.', '.')], [('read', 'NN')], [('bayesian', 'NN')], [('neural', 'JJ')], [('networks', 'NNS')], [('mitigate', 'NN')], [('problem', 'NN')], [('lack', 'NN')], [('computer', 'NN')], [('science', 'NN')], [('knowledge', 'NN')], [('making', 'VBG')], [('run', 'VB')], [('wall', 'NN')], [('comes', 'VBZ')], [('understanding', 'VBG')], [('exactly', 'RB')], [('fixes', 'NNS')], [('problem', 'NN')], [('.', '.')], [('readings', 'NNS')], [('topics', 'NNS')], [('thought', 'NN')], [('farm', 'NN')], [('reddit', 'NN')], [('use', 'NN')], [('site', 'NN')], [('watching', 'VBG')], [('people', 'NNS')], [('argue', 'NN')], [('literally', 'RB')], [('anything', 'NN')], [('.', '.')], [('thanks', 'NNS')], [('assistance', 'NN')], [('sources', 'NNS')], [('provide', 'NN')], [('!', '.')]]","bit background , come form social science little computer science knowledge research integration ai impact field study . one potentially large problem found ai overconfident face information outside taught recognize . read bayesian neural network mitigate problem lack computer science knowledge make run wall come understand exactly fix problem . reading topic thought farm reddit use site watch people argue literally anything . thanks assistance source provide !",3_search_ai_think_google,3
216,s67zoq,Question about the correctnes of an algorithm,,2,0.75,computerscience,https://www.reddit.com/r/computerscience/comments/s67zoq/question_about_the_correctnes_of_an_algorithm/,4,"**problem statement:**

>write a function, which creates a random graph of a certain size as follows. the function takes two parameters. the first parameter is the number of vertices n. the second parameter p (1 >= p >= 0) is the probability that an edge exists between a pair of nodes. in particular, after instantiating a graph with n vertices and 0 edges, go over all possible vertex pairs one by one, and for each such pair, put an edge between the vertices with probability p. the graph representation is an adjacency matrix.

**proposed algorithm:**

    1- create a bool matrix (2d nested array) of size n*n initialized with false.
    2- run a loop over the rows:
      - run an inner loop over the columns:
        - if row_index != col_index do:
            - curr_p = random() // random() returns a number between 0 and 1 inclusive
            - if curr_p <= p: set matrix[row_index][col_index] = true
              - for an undirected graph, also set matrix[col_index][row_index] = true
    
    **note:**
    since we are setting both cells (both directions) in the matrix
    in case of a probability hit, we could potentially set an edge 2 times.
    this does not corrupt the correctnes of the probability
    and is not much additional work. it helps to keep the code clean.
    
    if you want to optimize this solution, you could run the loop
    such that you only visit the lower-left triangle (excluding the diagonal)
    and just mirror the results you get for those cells to the upper-right triangle.

now, someone told me that without the optimization the algorithm is wrong since it calculates the propability of edge existence twice.  in their words:

>with the current code in the undirected case, the probability that matrix\[0\]\[1\] will be set is the probability that the random number in the iteration with col=0/row=1 or in the iteration with col=1/row=0 is smaller than p. that probability is 1-(1-p)\^2.

&#x200b;

at first i thought they were right, but thinking more about it it occured to me that since the random number generations are independent of each other and since we do not need 2 false (or 2 trues) to set or unset an edge, the probability calculation of the algorithm is correct. if their argument was correct, it would be like saying when you throw a 6 on a 6 sided dice, your chances of getting a 6 next time are less than 1/6. in other words, it looks like the [gambler's fallacy]('s_fallacy) on their part.

&#x200b;

i hope i have managed to convey the problem and arguments in full. if not, please ask.

what i am looking for is feedback on which argument is correct. thank you very much in advance.",1642436886.0,"['*', '*', 'problem', 'statement', ':', '*', '*', '>', 'write', 'function', ',', 'creates', 'random', 'graph', 'certain', 'size', 'follow', '.', 'function', 'take', 'two', 'parameter', '.', 'first', 'parameter', 'number', 'vertex', 'n.', 'second', 'parameter', 'p', '(', '1', '>', '=', 'p', '>', '=', '0', ')', 'probability', 'edge', 'exists', 'pair', 'node', '.', 'particular', ',', 'instantiate', 'graph', 'n', 'vertex', '0', 'edge', ',', 'go', 'possible', 'vertex', 'pair', 'one', 'one', ',', 'pair', ',', 'put', 'edge', 'vertex', 'probability', 'p.', 'graph', 'representation', 'adjacency', 'matrix', '.', '*', '*', 'propose', 'algorithm', ':', '*', '*', '1-', 'create', 'bool', 'matrix', '(', '2d', 'nest', 'array', ')', 'size', 'n', '*', 'n', 'initialize', 'false', '.', '2-', 'run', 'loop', 'row', ':', '-', 'run', 'inner', 'loop', 'column', ':', '-', 'row_index', '!', '=', 'col_index', ':', '-', 'curr_p', '=', 'random', '(', ')', '//', 'random', '(', ')', 'return', 'number', '0', '1', 'inclusive', '-', 'curr_p', '<', '=', 'p', ':', 'set', 'matrix', '[', 'row_index', ']', '[', 'col_index', ']', '=', 'true', '-', 'undirected', 'graph', ',', 'also', 'set', 'matrix', '[', 'col_index', ']', '[', 'row_index', ']', '=', 'true', '*', '*', 'note', ':', '*', '*', 'since', 'set', 'cell', '(', 'direction', ')', 'matrix', 'case', 'probability', 'hit', ',', 'could', 'potentially', 'set', 'edge', '2', 'time', '.', 'corrupt', 'correctnes', 'probability', 'much', 'additional', 'work', '.', 'help', 'keep', 'code', 'clean', '.', 'want', 'optimize', 'solution', ',', 'could', 'run', 'loop', 'visit', 'lower-left', 'triangle', '(', 'exclude', 'diagonal', ')', 'mirror', 'result', 'get', 'cell', 'upper-right', 'triangle', '.', ',', 'someone', 'told', 'without', 'optimization', 'algorithm', 'wrong', 'since', 'calculates', 'propability', 'edge', 'existence', 'twice', '.', 'word', ':', '>', 'current', 'code', 'undirected', 'case', ',', 'probability', 'matrix\\', '[', '0\\', ']', '\\', '[', '1\\', ']', 'set', 'probability', 'random', 'number', 'iteration', 'col=0/row=1', 'iteration', 'col=1/row=0', 'small', 'p.', 'probability', '1-', '(', '1-p', ')', '\\^2', '.', '&', '#', 'x200b', ';', 'first', 'thought', 'right', ',', 'think', 'occur', 'since', 'random', 'number', 'generation', 'independent', 'since', 'need', '2', 'false', '(', '2', 'true', ')', 'set', 'unset', 'edge', ',', 'probability', 'calculation', 'algorithm', 'correct', '.', 'argument', 'correct', ',', 'would', 'like', 'say', 'throw', '6', '6', 'side', 'dice', ',', 'chance', 'get', '6', 'next', 'time', 'less', '1/6', '.', 'word', ',', 'look', 'like', '[', 'gambler', ""'s"", 'fallacy', ']', '(', ""'s_fallacy"", ')', 'part', '.', '&', '#', 'x200b', ';', 'hope', 'manage', 'convey', 'problem', 'argument', 'full', '.', ',', 'please', 'ask', '.', 'look', 'feedback', 'argument', 'correct', '.', 'thank', 'much', 'advance', '.']","[[('*', 'NN')], [('*', 'NN')], [('problem', 'NN')], [('statement', 'NN')], [(':', ':')], [('*', 'NN')], [('*', 'NN')], [('>', 'NN')], [('write', 'NN')], [('function', 'NN')], [(',', ',')], [('creates', 'NNS')], [('random', 'NN')], [('graph', 'NN')], [('certain', 'JJ')], [('size', 'NN')], [('follows', 'VBZ')], [('.', '.')], [('function', 'NN')], [('takes', 'VBZ')], [('two', 'CD')], [('parameters', 'NNS')], [('.', '.')], [('first', 'RB')], [('parameter', 'NN')], [('number', 'NN')], [('vertices', 'NNS')], [('n.', 'NN')], [('second', 'JJ')], [('parameter', 'NN')], [('p', 'NN')], [('(', '(')], [('1', 'CD')], [('>', 'NN')], [('=', 'NN')], [('p', 'NN')], [('>', 'NN')], [('=', 'NN')], [('0', 'CD')], [(')', ')')], [('probability', 'NN')], [('edge', 'NN')], [('exists', 'NNS')], [('pair', 'NN')], [('nodes', 'NNS')], [('.', '.')], [('particular', 'JJ')], [(',', ',')], [('instantiating', 'VBG')], [('graph', 'NN')], [('n', 'NN')], [('vertices', 'NNS')], [('0', 'CD')], [('edges', 'NNS')], [(',', ',')], [('go', 'VB')], [('possible', 'JJ')], [('vertex', 'NN')], [('pairs', 'NNS')], [('one', 'CD')], [('one', 'CD')], [(',', ',')], [('pair', 'NN')], [(',', ',')], [('put', 'NN')], [('edge', 'NN')], [('vertices', 'NNS')], [('probability', 'NN')], [('p.', 'NN')], [('graph', 'NN')], [('representation', 'NN')], [('adjacency', 'NN')], [('matrix', 'NN')], [('.', '.')], [('*', 'NN')], [('*', 'NN')], [('proposed', 'VBN')], [('algorithm', 'NN')], [(':', ':')], [('*', 'NN')], [('*', 'NN')], [('1-', 'JJ')], [('create', 'NN')], [('bool', 'NN')], [('matrix', 'NN')], [('(', '(')], [('2d', 'CD')], [('nested', 'VBN')], [('array', 'NN')], [(')', ')')], [('size', 'NN')], [('n', 'NN')], [('*', 'NN')], [('n', 'NN')], [('initialized', 'VBN')], [('false', 'JJ')], [('.', '.')], [('2-', 'JJ')], [('run', 'VB')], [('loop', 'NN')], [('rows', 'NNS')], [(':', ':')], [('-', ':')], [('run', 'VB')], [('inner', 'NN')], [('loop', 'NN')], [('columns', 'NN')], [(':', ':')], [('-', ':')], [('row_index', 'NN')], [('!', '.')], [('=', 'NN')], [('col_index', 'NN')], [(':', ':')], [('-', ':')], [('curr_p', 'NN')], [('=', 'NN')], [('random', 'NN')], [('(', '(')], [(')', ')')], [('//', 'NN')], [('random', 'NN')], [('(', '(')], [(')', ')')], [('returns', 'NNS')], [('number', 'NN')], [('0', 'CD')], [('1', 'CD')], [('inclusive', 'JJ')], [('-', ':')], [('curr_p', 'NN')], [('<', 'NN')], [('=', 'NN')], [('p', 'NN')], [(':', ':')], [('set', 'NN')], [('matrix', 'NN')], [('[', 'NN')], [('row_index', 'NN')], [(']', 'NN')], [('[', 'NN')], [('col_index', 'NN')], [(']', 'NN')], [('=', 'NN')], [('true', 'JJ')], [('-', ':')], [('undirected', 'JJ')], [('graph', 'NN')], [(',', ',')], [('also', 'RB')], [('set', 'NN')], [('matrix', 'NN')], [('[', 'NN')], [('col_index', 'NN')], [(']', 'NN')], [('[', 'NN')], [('row_index', 'NN')], [(']', 'NN')], [('=', 'NN')], [('true', 'JJ')], [('*', 'NN')], [('*', 'NN')], [('note', 'NN')], [(':', ':')], [('*', 'NN')], [('*', 'NN')], [('since', 'IN')], [('setting', 'VBG')], [('cells', 'NNS')], [('(', '(')], [('directions', 'NNS')], [(')', ')')], [('matrix', 'NN')], [('case', 'NN')], [('probability', 'NN')], [('hit', 'NN')], [(',', ',')], [('could', 'MD')], [('potentially', 'RB')], [('set', 'NN')], [('edge', 'NN')], [('2', 'CD')], [('times', 'NNS')], [('.', '.')], [('corrupt', 'NN')], [('correctnes', 'NNS')], [('probability', 'NN')], [('much', 'JJ')], [('additional', 'JJ')], [('work', 'NN')], [('.', '.')], [('helps', 'NNS')], [('keep', 'VB')], [('code', 'NN')], [('clean', 'NN')], [('.', '.')], [('want', 'NN')], [('optimize', 'VB')], [('solution', 'NN')], [(',', ',')], [('could', 'MD')], [('run', 'VB')], [('loop', 'NN')], [('visit', 'NN')], [('lower-left', 'NN')], [('triangle', 'NN')], [('(', '(')], [('excluding', 'VBG')], [('diagonal', 'NN')], [(')', ')')], [('mirror', 'NN')], [('results', 'NNS')], [('get', 'VB')], [('cells', 'NNS')], [('upper-right', 'JJ')], [('triangle', 'NN')], [('.', '.')], [(',', ',')], [('someone', 'NN')], [('told', 'NN')], [('without', 'IN')], [('optimization', 'NN')], [('algorithm', 'NN')], [('wrong', 'JJ')], [('since', 'IN')], [('calculates', 'NNS')], [('propability', 'NN')], [('edge', 'NN')], [('existence', 'NN')], [('twice', 'RB')], [('.', '.')], [('words', 'NNS')], [(':', ':')], [('>', 'NN')], [('current', 'JJ')], [('code', 'NN')], [('undirected', 'JJ')], [('case', 'NN')], [(',', ',')], [('probability', 'NN')], [('matrix\\', 'NN')], [('[', 'NN')], [('0\\', 'CD')], [(']', 'NN')], [('\\', 'NN')], [('[', 'NN')], [('1\\', 'CD')], [(']', 'NN')], [('set', 'NN')], [('probability', 'NN')], [('random', 'NN')], [('number', 'NN')], [('iteration', 'NN')], [('col=0/row=1', 'NN')], [('iteration', 'NN')], [('col=1/row=0', 'NN')], [('smaller', 'JJR')], [('p.', 'NN')], [('probability', 'NN')], [('1-', 'JJ')], [('(', '(')], [('1-p', 'JJ')], [(')', ')')], [('\\^2', 'NN')], [('.', '.')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('first', 'RB')], [('thought', 'NN')], [('right', 'NN')], [(',', ',')], [('thinking', 'VBG')], [('occured', 'VBN')], [('since', 'IN')], [('random', 'NN')], [('number', 'NN')], [('generations', 'NNS')], [('independent', 'JJ')], [('since', 'IN')], [('need', 'NN')], [('2', 'CD')], [('false', 'JJ')], [('(', '(')], [('2', 'CD')], [('trues', 'NNS')], [(')', ')')], [('set', 'NN')], [('unset', 'NN')], [('edge', 'NN')], [(',', ',')], [('probability', 'NN')], [('calculation', 'NN')], [('algorithm', 'NN')], [('correct', 'NN')], [('.', '.')], [('argument', 'NN')], [('correct', 'NN')], [(',', ',')], [('would', 'MD')], [('like', 'IN')], [('saying', 'VBG')], [('throw', 'NN')], [('6', 'CD')], [('6', 'CD')], [('sided', 'VBD')], [('dice', 'NN')], [(',', ',')], [('chances', 'NNS')], [('getting', 'VBG')], [('6', 'CD')], [('next', 'JJ')], [('time', 'NN')], [('less', 'RBR')], [('1/6', 'CD')], [('.', '.')], [('words', 'NNS')], [(',', ',')], [('looks', 'NNS')], [('like', 'IN')], [('[', 'NN')], [('gambler', 'NN')], [(""'s"", 'POS')], [('fallacy', 'NN')], [(']', 'NN')], [('(', '(')], [(""'s_fallacy"", 'NN')], [(')', ')')], [('part', 'NN')], [('.', '.')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('hope', 'NN')], [('managed', 'VBN')], [('convey', 'NN')], [('problem', 'NN')], [('arguments', 'NNS')], [('full', 'JJ')], [('.', '.')], [(',', ',')], [('please', 'NN')], [('ask', 'NN')], [('.', '.')], [('looking', 'VBG')], [('feedback', 'NN')], [('argument', 'NN')], [('correct', 'NN')], [('.', '.')], [('thank', 'NN')], [('much', 'JJ')], [('advance', 'NN')], [('.', '.')]]","* * problem statement : * * > write function , creates random graph certain size follow . function take two parameter . first parameter number vertex n. second parameter p ( 1 > = p > = 0 ) probability edge exists pair node . particular , instantiate graph n vertex 0 edge , go possible vertex pair one one , pair , put edge vertex probability p. graph representation adjacency matrix . * * propose algorithm : * * 1- create bool matrix ( 2d nest array ) size n * n initialize false . 2- run loop row : - run inner loop column : - row_index ! = col_index : - curr_p = random ( ) // random ( ) return number 0 1 inclusive - curr_p < = p : set matrix [ row_index ] [ col_index ] = true - undirected graph , also set matrix [ col_index ] [ row_index ] = true * * note : * * since set cell ( direction ) matrix case probability hit , could potentially set edge 2 time . corrupt correctnes probability much additional work . help keep code clean . want optimize solution , could run loop visit lower-left triangle ( exclude diagonal ) mirror result get cell upper-right triangle . , someone told without optimization algorithm wrong since calculates propability edge existence twice . word : > current code undirected case , probability matrix\ [ 0\ ] \ [ 1\ ] set probability random number iteration col=0/row=1 iteration col=1/row=0 small p. probability 1- ( 1-p ) \^2 . & # x200b ; first thought right , think occur since random number generation independent since need 2 false ( 2 true ) set unset edge , probability calculation algorithm correct . argument correct , would like say throw 6 6 side dice , chance get 6 next time less 1/6 . word , look like [ gambler 's fallacy ] ( 's_fallacy ) part . & # x200b ; hope manage convey problem argument full . , please ask . look feedback argument correct . thank much advance .",0_algorithm_time_node_bill,1
217,s5r8t0,Where do you get your latest news and tutorials when you just want to browse what's new on computer science?,,18,0.93,computerscience,https://www.reddit.com/r/computerscience/comments/s5r8t0/where_do_you_get_your_latest_news_and_tutorials/,5,"i am interested in browsing new and exciting areas on computer science like programming, diy instructions on software, and reading informative articles on software or blogs. 

what are some sites every new techie should be on to read such material?",1642382740.0,"['interested', 'browsing', 'new', 'excite', 'area', 'computer', 'science', 'like', 'program', ',', 'diy', 'instruction', 'software', ',', 'reading', 'informative', 'article', 'software', 'blog', '.', 'site', 'every', 'new', 'techie', 'read', 'material', '?']","[[('interested', 'JJ')], [('browsing', 'NN')], [('new', 'JJ')], [('exciting', 'VBG')], [('areas', 'NNS')], [('computer', 'NN')], [('science', 'NN')], [('like', 'IN')], [('programming', 'VBG')], [(',', ',')], [('diy', 'NN')], [('instructions', 'NNS')], [('software', 'NN')], [(',', ',')], [('reading', 'NN')], [('informative', 'JJ')], [('articles', 'NNS')], [('software', 'NN')], [('blogs', 'NNS')], [('.', '.')], [('sites', 'NNS')], [('every', 'DT')], [('new', 'JJ')], [('techie', 'NN')], [('read', 'NN')], [('material', 'NN')], [('?', '.')]]","interested browsing new excite area computer science like program , diy instruction software , reading informative article software blog . site every new techie read material ?",4_book_learn_computer_good,4
218,s5i47n,stupid question,Discussion,46,0.94,computerscience,https://www.reddit.com/r/computerscience/comments/s5i47n/stupid_question/,11,i watched a video on how computers work and how it uses binary instead of base 10. but if computers had a way to use base 10 or like distinguish 10 different types of charges in a transistor or something would not that computer be like ultra super fast???,1642357905.0,"['watch', 'video', 'computer', 'work', 'us', 'binary', 'instead', 'base', '10.', 'computer', 'way', 'use', 'base', '10', 'like', 'distinguish', '10', 'different', 'type', 'charge', 'transistor', 'something', 'would', 'computer', 'like', 'ultra', 'super', 'fast', '?', '?', '?']","[[('watched', 'VBN')], [('video', 'NN')], [('computers', 'NNS')], [('work', 'NN')], [('uses', 'NNS')], [('binary', 'NN')], [('instead', 'RB')], [('base', 'NN')], [('10.', 'CD')], [('computers', 'NNS')], [('way', 'NN')], [('use', 'NN')], [('base', 'NN')], [('10', 'CD')], [('like', 'IN')], [('distinguish', 'NN')], [('10', 'CD')], [('different', 'JJ')], [('types', 'NNS')], [('charges', 'NNS')], [('transistor', 'NN')], [('something', 'NN')], [('would', 'MD')], [('computer', 'NN')], [('like', 'IN')], [('ultra', 'JJ')], [('super', 'NN')], [('fast', 'NN')], [('?', '.')], [('?', '.')], [('?', '.')]]",watch video computer work us binary instead base 10. computer way use base 10 like distinguish 10 different type charge transistor something would computer like ultra super fast ? ? ?,5_cpu_computer_run_process,2
219,s5tfpw,Question about Neural Networks and Video Games,,3,0.81,computerscience,https://www.reddit.com/r/computerscience/comments/s5tfpw/question_about_neural_networks_and_video_games/,7,"i understand that neural networks have been trained to play games like chess pretty effectively. i have also seen some neural networks able to generate photographs based on a text description.

but has anyone tried training an ai to be a video game? in my mind it seems feasible because you could theoretically automate the training by making a bot play an existing game like doom eternal and then treat the bot's commands as input and use the resultant game state as the output that the neural network needs to fit to. and then if your network learned the game correctly, a human could give it input with their controller and it would return a close approximation of whatever game state the original game would have given. and then you would only need a computer powerful enough to run the nn instead of the full game.

i am curious because i am 100% certain someone smarter and more experienced than me has thought of this before but google is not giving me any good articles on the subject",1642389192.0,"['understand', 'neural', 'network', 'train', 'play', 'game', 'like', 'chess', 'pretty', 'effectively', '.', 'also', 'see', 'neural', 'network', 'able', 'generate', 'photograph', 'base', 'text', 'description', '.', 'anyone', 'try', 'training', 'ai', 'video', 'game', '?', 'mind', 'seem', 'feasible', 'could', 'theoretically', 'automate', 'training', 'make', 'bot', 'play', 'exist', 'game', 'like', 'doom', 'eternal', 'treat', 'bot', ""'s"", 'command', 'input', 'use', 'resultant', 'game', 'state', 'output', 'neural', 'network', 'need', 'fit', '.', 'network', 'learn', 'game', 'correctly', ',', 'human', 'could', 'give', 'input', 'controller', 'would', 'return', 'close', 'approximation', 'whatever', 'game', 'state', 'original', 'game', 'would', 'give', '.', 'would', 'need', 'computer', 'powerful', 'enough', 'run', 'nn', 'instead', 'full', 'game', '.', 'curious', '100', '%', 'certain', 'someone', 'smarter', 'experienced', 'thought', 'google', 'give', 'good', 'article', 'subject']","[[('understand', 'NN')], [('neural', 'JJ')], [('networks', 'NNS')], [('trained', 'VBN')], [('play', 'NN')], [('games', 'NNS')], [('like', 'IN')], [('chess', 'NN')], [('pretty', 'RB')], [('effectively', 'RB')], [('.', '.')], [('also', 'RB')], [('seen', 'VBN')], [('neural', 'JJ')], [('networks', 'NNS')], [('able', 'JJ')], [('generate', 'NN')], [('photographs', 'NN')], [('based', 'VBN')], [('text', 'NN')], [('description', 'NN')], [('.', '.')], [('anyone', 'NN')], [('tried', 'VBN')], [('training', 'NN')], [('ai', 'NN')], [('video', 'NN')], [('game', 'NN')], [('?', '.')], [('mind', 'NN')], [('seems', 'VBZ')], [('feasible', 'JJ')], [('could', 'MD')], [('theoretically', 'RB')], [('automate', 'NN')], [('training', 'NN')], [('making', 'VBG')], [('bot', 'NN')], [('play', 'NN')], [('existing', 'VBG')], [('game', 'NN')], [('like', 'IN')], [('doom', 'NN')], [('eternal', 'JJ')], [('treat', 'NN')], [('bot', 'NN')], [(""'s"", 'POS')], [('commands', 'NNS')], [('input', 'NN')], [('use', 'NN')], [('resultant', 'NN')], [('game', 'NN')], [('state', 'NN')], [('output', 'NN')], [('neural', 'JJ')], [('network', 'NN')], [('needs', 'NNS')], [('fit', 'NN')], [('.', '.')], [('network', 'NN')], [('learned', 'VBN')], [('game', 'NN')], [('correctly', 'RB')], [(',', ',')], [('human', 'NN')], [('could', 'MD')], [('give', 'VB')], [('input', 'NN')], [('controller', 'NN')], [('would', 'MD')], [('return', 'NN')], [('close', 'RB')], [('approximation', 'NN')], [('whatever', 'WDT')], [('game', 'NN')], [('state', 'NN')], [('original', 'JJ')], [('game', 'NN')], [('would', 'MD')], [('given', 'VBN')], [('.', '.')], [('would', 'MD')], [('need', 'NN')], [('computer', 'NN')], [('powerful', 'JJ')], [('enough', 'RB')], [('run', 'VB')], [('nn', 'NN')], [('instead', 'RB')], [('full', 'JJ')], [('game', 'NN')], [('.', '.')], [('curious', 'JJ')], [('100', 'CD')], [('%', 'NN')], [('certain', 'JJ')], [('someone', 'NN')], [('smarter', 'NN')], [('experienced', 'JJ')], [('thought', 'NN')], [('google', 'NN')], [('giving', 'VBG')], [('good', 'JJ')], [('articles', 'NNS')], [('subject', 'NN')]]","understand neural network train play game like chess pretty effectively . also see neural network able generate photograph base text description . anyone try training ai video game ? mind seem feasible could theoretically automate training make bot play exist game like doom eternal treat bot 's command input use resultant game state output neural network need fit . network learn game correctly , human could give input controller would return close approximation whatever game state original game would give . would need computer powerful enough run nn instead full game . curious 100 % certain someone smarter experienced thought google give good article subject",3_search_ai_think_google,3
221,s4k68d,Any essential comp sci books that you wish you read earlier?,,89,0.97,computerscience,https://www.reddit.com/r/computerscience/comments/s4k68d/any_essential_comp_sci_books_that_you_wish_you/,31,"i am a high school senior who has a lot of free time and loves studying comp sci. i have read an introductory java book, sicp(chaps 1 and 2), and the c programming language or k&r. i am interested in continuing with chap 3 of sicp but i am also looking for another challenge: think comp sci essentials. all suggestions are appreciated.",1642252786.0,"['high', 'school', 'senior', 'lot', 'free', 'time', 'love', 'study', 'comp', 'sci', '.', 'read', 'introductory', 'java', 'book', ',', 'sicp', '(', 'chap', '1', '2', ')', ',', 'c', 'program', 'language', 'k', '&', 'r', '.', 'interested', 'continue', 'chap', '3', 'sicp', 'also', 'look', 'another', 'challenge', ':', 'think', 'comp', 'sci', 'essential', '.', 'suggestion', 'appreciate', '.']","[[('high', 'JJ')], [('school', 'NN')], [('senior', 'JJ')], [('lot', 'NN')], [('free', 'JJ')], [('time', 'NN')], [('loves', 'NNS')], [('studying', 'VBG')], [('comp', 'NN')], [('sci', 'NN')], [('.', '.')], [('read', 'NN')], [('introductory', 'NN')], [('java', 'NN')], [('book', 'NN')], [(',', ',')], [('sicp', 'NN')], [('(', '(')], [('chaps', 'NNS')], [('1', 'CD')], [('2', 'CD')], [(')', ')')], [(',', ',')], [('c', 'NNS')], [('programming', 'VBG')], [('language', 'NN')], [('k', 'NN')], [('&', 'CC')], [('r', 'NN')], [('.', '.')], [('interested', 'JJ')], [('continuing', 'VBG')], [('chap', 'NN')], [('3', 'CD')], [('sicp', 'NN')], [('also', 'RB')], [('looking', 'VBG')], [('another', 'DT')], [('challenge', 'NN')], [(':', ':')], [('think', 'NN')], [('comp', 'NN')], [('sci', 'NN')], [('essentials', 'NNS')], [('.', '.')], [('suggestions', 'NNS')], [('appreciated', 'VBN')], [('.', '.')]]","high school senior lot free time love study comp sci . read introductory java book , sicp ( chap 1 2 ) , c program language k & r . interested continue chap 3 sicp also look another challenge : think comp sci essential . suggestion appreciate .",2_computer_learn_science_study,4
222,s4h4a4,Difference Between an Implementer of C and a C Programmer?,Help,43,0.88,computerscience,https://www.reddit.com/r/computerscience/comments/s4h4a4/difference_between_an_implementer_of_c_and_a_c/,16,"(brand new to cs so bear with me) i cannot find anywhere online so far about what an implementer is and how that is different from a programmer. 

(my question comes from a c language book that talks about how part of the book is meant for programmers, not implementers.)

thanks!",1642240851.0,"['(', 'brand', 'new', 'c', 'bear', ')', 'find', 'anywhere', 'online', 'far', 'implementer', 'different', 'programmer', '.', '(', 'question', 'come', 'c', 'language', 'book', 'talk', 'part', 'book', 'meant', 'programmer', ',', 'implementers', '.', ')', 'thanks', '!']","[[('(', '(')], [('brand', 'NN')], [('new', 'JJ')], [('cs', 'NN')], [('bear', 'NN')], [(')', ')')], [('find', 'VB')], [('anywhere', 'RB')], [('online', 'NN')], [('far', 'RB')], [('implementer', 'NN')], [('different', 'JJ')], [('programmer', 'NN')], [('.', '.')], [('(', '(')], [('question', 'NN')], [('comes', 'VBZ')], [('c', 'NNS')], [('language', 'NN')], [('book', 'NN')], [('talks', 'NNS')], [('part', 'NN')], [('book', 'NN')], [('meant', 'NN')], [('programmers', 'NNS')], [(',', ',')], [('implementers', 'NNS')], [('.', '.')], [(')', ')')], [('thanks', 'NNS')], [('!', '.')]]","( brand new c bear ) find anywhere online far implementer different programmer . ( question come c language book talk part book meant programmer , implementers . ) thanks !",-1_abazbz2abz_2520_problem_use,5
223,s4frba,Are there any effective machine learning methods that aren't copied from nature?,,13,0.81,computerscience,https://www.reddit.com/r/computerscience/comments/s4frba/are_there_any_effective_machine_learning_methods/,6,"recently have been struck by the fact that the two most powerful machine learning methods, neural networks and genetic algorithms, are partly just copied from nature (in concept at least, obviously was a ton of work by a lot of brilliant people). i guess there is a lot of machine learning that is basically just memorization or math but are there any other deep learning algorithm paradigms out there? do you think there could be someday?",1642235250.0,"['recently', 'struck', 'fact', 'two', 'powerful', 'machine', 'learn', 'method', ',', 'neural', 'network', 'genetic', 'algorithm', ',', 'partly', 'copy', 'nature', '(', 'concept', 'least', ',', 'obviously', 'ton', 'work', 'lot', 'brilliant', 'people', ')', '.', 'guess', 'lot', 'machine', 'learn', 'basically', 'memorization', 'math', 'deep', 'learn', 'algorithm', 'paradigm', '?', 'think', 'could', 'someday', '?']","[[('recently', 'RB')], [('struck', 'NN')], [('fact', 'NN')], [('two', 'CD')], [('powerful', 'JJ')], [('machine', 'NN')], [('learning', 'VBG')], [('methods', 'NNS')], [(',', ',')], [('neural', 'JJ')], [('networks', 'NNS')], [('genetic', 'JJ')], [('algorithms', 'NN')], [(',', ',')], [('partly', 'RB')], [('copied', 'VBN')], [('nature', 'NN')], [('(', '(')], [('concept', 'NN')], [('least', 'JJS')], [(',', ',')], [('obviously', 'RB')], [('ton', 'NN')], [('work', 'NN')], [('lot', 'NN')], [('brilliant', 'NN')], [('people', 'NNS')], [(')', ')')], [('.', '.')], [('guess', 'NN')], [('lot', 'NN')], [('machine', 'NN')], [('learning', 'VBG')], [('basically', 'RB')], [('memorization', 'NN')], [('math', 'NN')], [('deep', 'NN')], [('learning', 'VBG')], [('algorithm', 'NN')], [('paradigms', 'NN')], [('?', '.')], [('think', 'NN')], [('could', 'MD')], [('someday', 'NN')], [('?', '.')]]","recently struck fact two powerful machine learn method , neural network genetic algorithm , partly copy nature ( concept least , obviously ton work lot brilliant people ) . guess lot machine learn basically memorization math deep learn algorithm paradigm ? think could someday ?",3_search_ai_think_google,2
224,s3mbvt,Interesting Computer Science youtubers?,Discussion,118,0.98,computerscience,https://www.reddit.com/r/computerscience/comments/s3mbvt/interesting_computer_science_youtubers/,48,"i have been wanting to find some good videos that i can watch in my free time that are about cool computer science projects so i can learn more about new algorithms, and programs in a more leisure way instead of solely doing projects and reading documentation. 

&#x200b;

i am interested in most anything related to python, data science, or back end development, but i would really love to learn more about machine learning algorithms if there are any good series about people working on machine learning algorithms.",1642144705.0,"['want', 'find', 'good', 'video', 'watch', 'free', 'time', 'cool', 'computer', 'science', 'project', 'learn', 'new', 'algorithm', ',', 'program', 'leisure', 'way', 'instead', 'solely', 'project', 'reading', 'documentation', '.', '&', '#', 'x200b', ';', 'interested', 'anything', 'related', 'python', ',', 'data', 'science', ',', 'back', 'end', 'development', ',', 'would', 'really', 'love', 'learn', 'machine', 'learn', 'algorithm', 'good', 'series', 'people', 'work', 'machine', 'learn', 'algorithm', '.']","[[('wanting', 'VBG')], [('find', 'VB')], [('good', 'JJ')], [('videos', 'NNS')], [('watch', 'NN')], [('free', 'JJ')], [('time', 'NN')], [('cool', 'NN')], [('computer', 'NN')], [('science', 'NN')], [('projects', 'NNS')], [('learn', 'NN')], [('new', 'JJ')], [('algorithms', 'NN')], [(',', ',')], [('programs', 'NNS')], [('leisure', 'NN')], [('way', 'NN')], [('instead', 'RB')], [('solely', 'RB')], [('projects', 'NNS')], [('reading', 'NN')], [('documentation', 'NN')], [('.', '.')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('interested', 'JJ')], [('anything', 'NN')], [('related', 'JJ')], [('python', 'NN')], [(',', ',')], [('data', 'NNS')], [('science', 'NN')], [(',', ',')], [('back', 'RB')], [('end', 'NN')], [('development', 'NN')], [(',', ',')], [('would', 'MD')], [('really', 'RB')], [('love', 'NN')], [('learn', 'NN')], [('machine', 'NN')], [('learning', 'VBG')], [('algorithms', 'NN')], [('good', 'JJ')], [('series', 'NN')], [('people', 'NNS')], [('working', 'VBG')], [('machine', 'NN')], [('learning', 'VBG')], [('algorithms', 'NN')], [('.', '.')]]","want find good video watch free time cool computer science project learn new algorithm , program leisure way instead solely project reading documentation . & # x200b ; interested anything related python , data science , back end development , would really love learn machine learn algorithm good series people work machine learn algorithm .",4_book_learn_computer_good,4
225,s3wf1q,Nerves - An industrialization journey | Jean Parapaillon | ElixirConf EU 2021,,6,0.72,computerscience,https://www.reddit.com/r/computerscience/comments/s3wf1q/nerves_an_industrialization_journey_jean/,0,"by integrating buildroot, beam and erlang/elixir ecosystem into a comprehensive toolkit, nerves has become a major framework in the iot field. watch the video and see jean parapaillon  talking about ""nerves - an industrialization journey""  

",1642177798.0,"['integrate', 'buildroot', ',', 'beam', 'erlang/elixir', 'ecosystem', 'comprehensive', 'toolkit', ',', 'nerve', 'become', 'major', 'framework', 'iot', 'field', '.', 'watch', 'video', 'see', 'jean', 'parapaillon', 'talk', '``', 'nerve', '-', 'industrialization', 'journey', ""''""]","[[('integrating', 'VBG')], [('buildroot', 'NN')], [(',', ',')], [('beam', 'NN')], [('erlang/elixir', 'NN')], [('ecosystem', 'NN')], [('comprehensive', 'NN')], [('toolkit', 'NN')], [(',', ',')], [('nerves', 'NNS')], [('become', 'NN')], [('major', 'JJ')], [('framework', 'NN')], [('iot', 'NN')], [('field', 'NN')], [('.', '.')], [('watch', 'NN')], [('video', 'NN')], [('see', 'VB')], [('jean', 'NN')], [('parapaillon', 'NN')], [('talking', 'VBG')], [('``', '``')], [('nerves', 'NNS')], [('-', ':')], [('industrialization', 'NN')], [('journey', 'NN')], [(""''"", ""''"")]]","integrate buildroot , beam erlang/elixir ecosystem comprehensive toolkit , nerve become major framework iot field . watch video see jean parapaillon talk `` nerve - industrialization journey ''",-1_abazbz2abz_2520_problem_use,5
228,s3yrrt,How does Concorde solver work ?,,0,0.25,computerscience,https://www.reddit.com/r/computerscience/comments/s3yrrt/how_does_concorde_solver_work/,5,"i am looking for some resource clearly explaining how this solver for the tsp works.

i read that it uses the lin-kerighan heuristic and the branch and bound algorithm, but i did not find a full explanation of how it works. the closest thing i read was [in the answers of this post]() , but it is not a full answer.

if you have the knowledge or any link/paper available online or on scihub that explains how it works in detail / in summary, that would be awesome",1642183919.0,"['look', 'resource', 'clearly', 'explain', 'solver', 'tsp', 'work', '.', 'read', 'us', 'lin-kerighan', 'heuristic', 'branch', 'bound', 'algorithm', ',', 'find', 'full', 'explanation', 'work', '.', 'closest', 'thing', 'read', '[', 'answer', 'post', ']', '(', ')', ',', 'full', 'answer', '.', 'knowledge', 'link/paper', 'available', 'online', 'scihub', 'explains', 'work', 'detail', '/', 'summary', ',', 'would', 'awesome']","[[('looking', 'VBG')], [('resource', 'NN')], [('clearly', 'RB')], [('explaining', 'VBG')], [('solver', 'NN')], [('tsp', 'NN')], [('works', 'NNS')], [('.', '.')], [('read', 'NN')], [('uses', 'NNS')], [('lin-kerighan', 'NN')], [('heuristic', 'JJ')], [('branch', 'NN')], [('bound', 'NN')], [('algorithm', 'NN')], [(',', ',')], [('find', 'VB')], [('full', 'JJ')], [('explanation', 'NN')], [('works', 'NNS')], [('.', '.')], [('closest', 'NN')], [('thing', 'NN')], [('read', 'NN')], [('[', 'NN')], [('answers', 'NNS')], [('post', 'NN')], [(']', 'NN')], [('(', '(')], [(')', ')')], [(',', ',')], [('full', 'JJ')], [('answer', 'NN')], [('.', '.')], [('knowledge', 'NN')], [('link/paper', 'NN')], [('available', 'JJ')], [('online', 'NN')], [('scihub', 'NN')], [('explains', 'NNS')], [('works', 'NNS')], [('detail', 'NN')], [('/', 'NN')], [('summary', 'NN')], [(',', ',')], [('would', 'MD')], [('awesome', 'NN')]]","look resource clearly explain solver tsp work . read us lin-kerighan heuristic branch bound algorithm , find full explanation work . closest thing read [ answer post ] ( ) , full answer . knowledge link/paper available online scihub explains work detail / summary , would awesome",0_algorithm_time_node_bill,3
229,s3gau6,What makes cyclic tag systems Turing-complete?,Discussion,3,1.0,computerscience,https://www.reddit.com/r/computerscience/comments/s3gau6/what_makes_cyclic_tag_systems_turingcomplete/,1,"i have been doing research on computational models, but i cannot find anything on cyclic tag systems and their proof of universality. i want to know because it is supposedly what rule 110 can emulate (more specifically that is the proof that rule 110 is universal), however the fact that rule 110 can emulate a cyclic tag system means nothing to me if i cannot find proof that cyclic tag systems are universal, let alone an implementation of rule 110 running a cyclic tag system. does anyone know where i can find a cyclic tag system's proof of universality?",1642125936.0,"['research', 'computational', 'model', ',', 'find', 'anything', 'cyclic', 'tag', 'system', 'proof', 'universality', '.', 'want', 'know', 'supposedly', 'rule', '110', 'emulate', '(', 'specifically', 'proof', 'rule', '110', 'universal', ')', ',', 'however', 'fact', 'rule', '110', 'emulate', 'cyclic', 'tag', 'system', 'mean', 'nothing', 'find', 'proof', 'cyclic', 'tag', 'system', 'universal', ',', 'let', 'alone', 'implementation', 'rule', '110', 'run', 'cyclic', 'tag', 'system', '.', 'anyone', 'know', 'find', 'cyclic', 'tag', 'system', ""'s"", 'proof', 'universality', '?']","[[('research', 'NN')], [('computational', 'NN')], [('models', 'NNS')], [(',', ',')], [('find', 'VB')], [('anything', 'NN')], [('cyclic', 'NN')], [('tag', 'NN')], [('systems', 'NNS')], [('proof', 'NN')], [('universality', 'NN')], [('.', '.')], [('want', 'NN')], [('know', 'VB')], [('supposedly', 'RB')], [('rule', 'NN')], [('110', 'CD')], [('emulate', 'NN')], [('(', '(')], [('specifically', 'RB')], [('proof', 'NN')], [('rule', 'NN')], [('110', 'CD')], [('universal', 'NN')], [(')', ')')], [(',', ',')], [('however', 'RB')], [('fact', 'NN')], [('rule', 'NN')], [('110', 'CD')], [('emulate', 'NN')], [('cyclic', 'NN')], [('tag', 'NN')], [('system', 'NN')], [('means', 'NNS')], [('nothing', 'NN')], [('find', 'VB')], [('proof', 'NN')], [('cyclic', 'NN')], [('tag', 'NN')], [('systems', 'NNS')], [('universal', 'NN')], [(',', ',')], [('let', 'VB')], [('alone', 'RB')], [('implementation', 'NN')], [('rule', 'NN')], [('110', 'CD')], [('running', 'VBG')], [('cyclic', 'NN')], [('tag', 'NN')], [('system', 'NN')], [('.', '.')], [('anyone', 'NN')], [('know', 'VB')], [('find', 'VB')], [('cyclic', 'NN')], [('tag', 'NN')], [('system', 'NN')], [(""'s"", 'POS')], [('proof', 'NN')], [('universality', 'NN')], [('?', '.')]]","research computational model , find anything cyclic tag system proof universality . want know supposedly rule 110 emulate ( specifically proof rule 110 universal ) , however fact rule 110 emulate cyclic tag system mean nothing find proof cyclic tag system universal , let alone implementation rule 110 run cyclic tag system . anyone know find cyclic tag system 's proof universality ?",7_tm_state_turing_universal,2
230,s3241k,Confirmation on if I am understanding hardware/software interaction correctly,Help,5,0.86,computerscience,https://www.reddit.com/r/computerscience/comments/s3241k/confirmation_on_if_i_am_understanding/,4,"recently i have begun learning about how computers actually know to execute your programs, and i was hoping somebody could verify if i generally have the idea correct. 

- computers come preset with instructions on how to boot the os located in the rom. once this takes place the os controls the remainder of operations. 
- when you plug your computer into the wall, electrical signals are sent in clock cycles that run at some frequency all the time, either idle or active. these signals are always looking for data to transfer via the bus to read, but they are essentially always running (this is the part i am shaky on i think) 
- when you write and compile a program say hello world, you have organized some high level code into what can be translated into machine code and binary. when you executed this is sent to the ram, where the clock frequency (always looking) activates logic gates based on what was sent, and tells you what the output it.
- if you wanted to use an embedded controller to run a motor the same applies where the programmer writes readable code which can be converted to binary, and is sent to the pinouts in such a way that causes some actuation to happen (such as alternate pulses to a stepper motor) 

am i on the right track here ? 

thanks 

also, who sits around and actually designs computer architecture, i feel like that has to be one of the most complicated jobs on the planet. you have got millions of transistors to manage controls? or is it more abstract than that.",1642087995.0,"['recently', 'begin', 'learn', 'computer', 'actually', 'know', 'execute', 'program', ',', 'hop', 'somebody', 'could', 'verify', 'generally', 'idea', 'correct', '.', '-', 'computer', 'come', 'preset', 'instruction', 'boot', 'o', 'locate', 'rom', '.', 'take', 'place', 'o', 'control', 'remainder', 'operation', '.', '-', 'plug', 'computer', 'wall', ',', 'electrical', 'signal', 'sent', 'clock', 'cycle', 'run', 'frequency', 'time', ',', 'either', 'idle', 'active', '.', 'signal', 'always', 'look', 'data', 'transfer', 'via', 'bus', 'read', ',', 'essentially', 'always', 'run', '(', 'part', 'shaky', 'think', ')', '-', 'write', 'compile', 'program', 'say', 'hello', 'world', ',', 'organize', 'high', 'level', 'code', 'translate', 'machine', 'code', 'binary', '.', 'execute', 'sent', 'ram', ',', 'clock', 'frequency', '(', 'always', 'look', ')', 'activates', 'logic', 'gate', 'base', 'sent', ',', 'tell', 'output', '.', '-', 'want', 'use', 'embed', 'controller', 'run', 'motor', 'applies', 'programmer', 'writes', 'readable', 'code', 'convert', 'binary', ',', 'sent', 'pinouts', 'way', 'cause', 'actuation', 'happen', '(', 'alternate', 'pulse', 'stepper', 'motor', ')', 'right', 'track', '?', 'thanks', 'also', ',', 'sits', 'around', 'actually', 'design', 'computer', 'architecture', ',', 'feel', 'like', 'one', 'complicate', 'job', 'planet', '.', 'get', 'million', 'transistor', 'manage', 'control', '?', 'abstract', '.']","[[('recently', 'RB')], [('begun', 'VBN')], [('learning', 'VBG')], [('computers', 'NNS')], [('actually', 'RB')], [('know', 'VB')], [('execute', 'NN')], [('programs', 'NNS')], [(',', ',')], [('hoping', 'VBG')], [('somebody', 'NN')], [('could', 'MD')], [('verify', 'NN')], [('generally', 'RB')], [('idea', 'NN')], [('correct', 'NN')], [('.', '.')], [('-', ':')], [('computers', 'NNS')], [('come', 'VB')], [('preset', 'NN')], [('instructions', 'NNS')], [('boot', 'NN')], [('os', 'NN')], [('located', 'VBN')], [('rom', 'NN')], [('.', '.')], [('takes', 'VBZ')], [('place', 'NN')], [('os', 'NN')], [('controls', 'NNS')], [('remainder', 'NN')], [('operations', 'NNS')], [('.', '.')], [('-', ':')], [('plug', 'NN')], [('computer', 'NN')], [('wall', 'NN')], [(',', ',')], [('electrical', 'JJ')], [('signals', 'NNS')], [('sent', 'NN')], [('clock', 'NN')], [('cycles', 'NNS')], [('run', 'VB')], [('frequency', 'NN')], [('time', 'NN')], [(',', ',')], [('either', 'DT')], [('idle', 'JJ')], [('active', 'JJ')], [('.', '.')], [('signals', 'NNS')], [('always', 'RB')], [('looking', 'VBG')], [('data', 'NNS')], [('transfer', 'NN')], [('via', 'IN')], [('bus', 'NN')], [('read', 'NN')], [(',', ',')], [('essentially', 'RB')], [('always', 'RB')], [('running', 'VBG')], [('(', '(')], [('part', 'NN')], [('shaky', 'NN')], [('think', 'NN')], [(')', ')')], [('-', ':')], [('write', 'NN')], [('compile', 'NN')], [('program', 'NN')], [('say', 'VB')], [('hello', 'NN')], [('world', 'NN')], [(',', ',')], [('organized', 'VBN')], [('high', 'JJ')], [('level', 'NN')], [('code', 'NN')], [('translated', 'VBN')], [('machine', 'NN')], [('code', 'NN')], [('binary', 'NN')], [('.', '.')], [('executed', 'VBN')], [('sent', 'NN')], [('ram', 'NN')], [(',', ',')], [('clock', 'NN')], [('frequency', 'NN')], [('(', '(')], [('always', 'RB')], [('looking', 'VBG')], [(')', ')')], [('activates', 'NNS')], [('logic', 'NN')], [('gates', 'NNS')], [('based', 'VBN')], [('sent', 'NN')], [(',', ',')], [('tells', 'NNS')], [('output', 'NN')], [('.', '.')], [('-', ':')], [('wanted', 'VBD')], [('use', 'NN')], [('embedded', 'VBN')], [('controller', 'NN')], [('run', 'VB')], [('motor', 'NN')], [('applies', 'NNS')], [('programmer', 'NN')], [('writes', 'NNS')], [('readable', 'JJ')], [('code', 'NN')], [('converted', 'VBN')], [('binary', 'NN')], [(',', ',')], [('sent', 'NN')], [('pinouts', 'NNS')], [('way', 'NN')], [('causes', 'NNS')], [('actuation', 'NN')], [('happen', 'VB')], [('(', '(')], [('alternate', 'NN')], [('pulses', 'NNS')], [('stepper', 'NN')], [('motor', 'NN')], [(')', ')')], [('right', 'NN')], [('track', 'NN')], [('?', '.')], [('thanks', 'NNS')], [('also', 'RB')], [(',', ',')], [('sits', 'NNS')], [('around', 'IN')], [('actually', 'RB')], [('designs', 'NNS')], [('computer', 'NN')], [('architecture', 'NN')], [(',', ',')], [('feel', 'NN')], [('like', 'IN')], [('one', 'CD')], [('complicated', 'VBN')], [('jobs', 'NNS')], [('planet', 'NN')], [('.', '.')], [('got', 'VBD')], [('millions', 'NNS')], [('transistors', 'NNS')], [('manage', 'NN')], [('controls', 'NNS')], [('?', '.')], [('abstract', 'NN')], [('.', '.')]]","recently begin learn computer actually know execute program , hop somebody could verify generally idea correct . - computer come preset instruction boot o locate rom . take place o control remainder operation . - plug computer wall , electrical signal sent clock cycle run frequency time , either idle active . signal always look data transfer via bus read , essentially always run ( part shaky think ) - write compile program say hello world , organize high level code translate machine code binary . execute sent ram , clock frequency ( always look ) activates logic gate base sent , tell output . - want use embed controller run motor applies programmer writes readable code convert binary , sent pinouts way cause actuation happen ( alternate pulse stepper motor ) right track ? thanks also , sits around actually design computer architecture , feel like one complicate job planet . get million transistor manage control ? abstract .",5_cpu_computer_run_process,4
231,s33v2n,"If Interpreters are used to run code and are written in another language, won't interpreters need interpreters?",Help,1,0.67,computerscience,https://www.reddit.com/r/computerscience/comments/s33v2n/if_interpreters_are_used_to_run_code_and_are/,5,"sorry if my question sounds dumb but i am a beginner to coding and have started with python. python is an interpreter-based language and not a compiler based language ( i know the difference between the two) 

as i was going through my online lectures, it is stated that python is interpreted with cpython, a software written in c. similarly, they have jython (written in java) and pypy (written in python). my question is is these interpreters break down the language into low level code like assembly and machine code, then who helps interpret the software of these interpreters so that they run in the computer? 

again sorry for the dumb question",1642092742.0,"['sorry', 'question', 'sound', 'dumb', 'beginner', 'cod', 'start', 'python', '.', 'python', 'interpreter-based', 'language', 'compiler', 'base', 'language', '(', 'know', 'difference', 'two', ')', 'go', 'online', 'lecture', ',', 'state', 'python', 'interpret', 'cpython', ',', 'software', 'write', 'c.', 'similarly', ',', 'jython', '(', 'write', 'java', ')', 'pypy', '(', 'write', 'python', ')', '.', 'question', 'interpreter', 'break', 'language', 'low', 'level', 'code', 'like', 'assembly', 'machine', 'code', ',', 'help', 'interpret', 'software', 'interpreter', 'run', 'computer', '?', 'sorry', 'dumb', 'question']","[[('sorry', 'NN')], [('question', 'NN')], [('sounds', 'NNS')], [('dumb', 'NN')], [('beginner', 'NN')], [('coding', 'VBG')], [('started', 'VBN')], [('python', 'NN')], [('.', '.')], [('python', 'NN')], [('interpreter-based', 'JJ')], [('language', 'NN')], [('compiler', 'NN')], [('based', 'VBN')], [('language', 'NN')], [('(', '(')], [('know', 'VB')], [('difference', 'NN')], [('two', 'CD')], [(')', ')')], [('going', 'VBG')], [('online', 'NN')], [('lectures', 'NNS')], [(',', ',')], [('stated', 'VBN')], [('python', 'NN')], [('interpreted', 'VBN')], [('cpython', 'NN')], [(',', ',')], [('software', 'NN')], [('written', 'VBN')], [('c.', 'NN')], [('similarly', 'RB')], [(',', ',')], [('jython', 'NN')], [('(', '(')], [('written', 'VBN')], [('java', 'NN')], [(')', ')')], [('pypy', 'NN')], [('(', '(')], [('written', 'VBN')], [('python', 'NN')], [(')', ')')], [('.', '.')], [('question', 'NN')], [('interpreters', 'NNS')], [('break', 'NN')], [('language', 'NN')], [('low', 'JJ')], [('level', 'NN')], [('code', 'NN')], [('like', 'IN')], [('assembly', 'RB')], [('machine', 'NN')], [('code', 'NN')], [(',', ',')], [('helps', 'NNS')], [('interpret', 'NN')], [('software', 'NN')], [('interpreters', 'NNS')], [('run', 'VB')], [('computer', 'NN')], [('?', '.')], [('sorry', 'NN')], [('dumb', 'NN')], [('question', 'NN')]]","sorry question sound dumb beginner cod start python . python interpreter-based language compiler base language ( know difference two ) go online lecture , state python interpret cpython , software write c. similarly , jython ( write java ) pypy ( write python ) . question interpreter break language low level code like assembly machine code , help interpret software interpreter run computer ? sorry dumb question",8_language_one_program_write,2
232,s2ar5c,Just how powerful is an 8Bit CPU?,Discussion,50,0.97,computerscience,https://www.reddit.com/r/computerscience/comments/s2ar5c/just_how_powerful_is_an_8bit_cpu/,16,"by ""8bit"" i mean a cpu that uses registers that are 8 bits wide and with an alu that takes two 8 bit binary numbers and performs operations on them, for the sake of this post, let us say the alu is capable of bit shifting, nanding and adding.
so just how capable this cpu will be, will it be able to run a very simple version of tetris? or pong?",1642006016.0,"['``', '8bit', ""''"", 'mean', 'cpu', 'us', 'register', '8', 'bit', 'wide', 'alu', 'take', 'two', '8', 'bit', 'binary', 'number', 'performs', 'operation', ',', 'sake', 'post', ',', 'let', 'u', 'say', 'alu', 'capable', 'bit', 'shift', ',', 'nanding', 'add', '.', 'capable', 'cpu', ',', 'able', 'run', 'simple', 'version', 'tetri', '?', 'pong', '?']","[[('``', '``')], [('8bit', 'CD')], [(""''"", ""''"")], [('mean', 'NN')], [('cpu', 'NN')], [('uses', 'NNS')], [('registers', 'NNS')], [('8', 'CD')], [('bits', 'NNS')], [('wide', 'JJ')], [('alu', 'NN')], [('takes', 'VBZ')], [('two', 'CD')], [('8', 'CD')], [('bit', 'NN')], [('binary', 'NN')], [('numbers', 'NNS')], [('performs', 'NNS')], [('operations', 'NNS')], [(',', ',')], [('sake', 'NN')], [('post', 'NN')], [(',', ',')], [('let', 'VB')], [('us', 'PRP')], [('say', 'VB')], [('alu', 'NN')], [('capable', 'JJ')], [('bit', 'NN')], [('shifting', 'VBG')], [(',', ',')], [('nanding', 'VBG')], [('adding', 'VBG')], [('.', '.')], [('capable', 'JJ')], [('cpu', 'NN')], [(',', ',')], [('able', 'JJ')], [('run', 'VB')], [('simple', 'NN')], [('version', 'NN')], [('tetris', 'NN')], [('?', '.')], [('pong', 'NN')], [('?', '.')]]","`` 8bit '' mean cpu us register 8 bit wide alu take two 8 bit binary number performs operation , sake post , let u say alu capable bit shift , nanding add . capable cpu , able run simple version tetri ? pong ?",1_memory_byte_data_alignment,4
233,s1yfl6,Any ideas how hardware is physically-created? There are no comprehensible guides in the internet about the process.,,67,0.91,computerscience,https://www.reddit.com/r/computerscience/comments/s1yfl6/any_ideas_how_hardware_is_physicallycreated_there/,30,"by how is created i do not refer to a general theory like what is cpu/gpu or motherboard, but as if how they are physically designed and produced, when i was getting my degree they explained to us the basics (been years since then) but never the exact process.

i also saw some youtube videos but they seem more of hype inducers and they seem to be divided into scientists wearing anti-dust suits and working on the nano-world and people doing mechanical tasks. i am looking for a more pragmatic and practical procedure about how hardware is truly created, anyone has any leads?",1641965454.0,"['create', 'refer', 'general', 'theory', 'like', 'cpu/gpu', 'motherboard', ',', 'physically', 'design', 'produce', ',', 'get', 'degree', 'explain', 'u', 'basic', '(', 'year', 'since', ')', 'never', 'exact', 'process', '.', 'also', 'saw', 'youtube', 'video', 'seem', 'hype', 'inducer', 'seem', 'divide', 'scientist', 'wear', 'anti-dust', 'suit', 'work', 'nano-world', 'people', 'mechanical', 'task', '.', 'look', 'pragmatic', 'practical', 'procedure', 'hardware', 'truly', 'create', ',', 'anyone', 'lead', '?']","[[('created', 'VBN')], [('refer', 'NN')], [('general', 'JJ')], [('theory', 'NN')], [('like', 'IN')], [('cpu/gpu', 'NN')], [('motherboard', 'NN')], [(',', ',')], [('physically', 'RB')], [('designed', 'VBN')], [('produced', 'VBN')], [(',', ',')], [('getting', 'VBG')], [('degree', 'NN')], [('explained', 'VBD')], [('us', 'PRP')], [('basics', 'NNS')], [('(', '(')], [('years', 'NNS')], [('since', 'IN')], [(')', ')')], [('never', 'RB')], [('exact', 'NN')], [('process', 'NN')], [('.', '.')], [('also', 'RB')], [('saw', 'NN')], [('youtube', 'NN')], [('videos', 'NNS')], [('seem', 'NN')], [('hype', 'NN')], [('inducers', 'NNS')], [('seem', 'NN')], [('divided', 'VBN')], [('scientists', 'NNS')], [('wearing', 'VBG')], [('anti-dust', 'NN')], [('suits', 'NNS')], [('working', 'VBG')], [('nano-world', 'NN')], [('people', 'NNS')], [('mechanical', 'JJ')], [('tasks', 'NNS')], [('.', '.')], [('looking', 'VBG')], [('pragmatic', 'JJ')], [('practical', 'JJ')], [('procedure', 'NN')], [('hardware', 'NN')], [('truly', 'RB')], [('created', 'VBN')], [(',', ',')], [('anyone', 'NN')], [('leads', 'NNS')], [('?', '.')]]","create refer general theory like cpu/gpu motherboard , physically design produce , get degree explain u basic ( year since ) never exact process . also saw youtube video seem hype inducer seem divide scientist wear anti-dust suit work nano-world people mechanical task . look pragmatic practical procedure hardware truly create , anyone lead ?",-1_abazbz2abz_2520_problem_use,3
234,s2gdc0,Question: What does 'digital' mean?,,3,1.0,computerscience,https://www.reddit.com/r/computerscience/comments/s2gdc0/question_what_does_digital_mean/,5,"i have gone about my life for a while thinking that even 'digital' things have some physical correspondence. i.e. binary numbers are just surges of voltage and things of the such. my real concern for this idea turned up when i was learning about actuators and learned that to get it to receive some electrical charge it needed to pass through a dac. implying that the charge is not a digital element and my correlation may have been wrong.

are digital things not physical things? i am pretty sure that is not true but i have absolutely no idea what to make of the idea now...",1642020128.0,"['go', 'life', 'think', 'even', ""'digital"", ""'"", 'thing', 'physical', 'correspondence', '.', 'i.e', '.', 'binary', 'number', 'surge', 'voltage', 'thing', '.', 'real', 'concern', 'idea', 'turn', 'learn', 'actuator', 'learn', 'get', 'receive', 'electrical', 'charge', 'need', 'pas', 'dac', '.', 'imply', 'charge', 'digital', 'element', 'correlation', 'may', 'wrong', '.', 'digital', 'thing', 'physical', 'thing', '?', 'pretty', 'sure', 'true', 'absolutely', 'idea', 'make', 'idea', '...']","[[('gone', 'VBN')], [('life', 'NN')], [('thinking', 'VBG')], [('even', 'RB')], [(""'digital"", 'JJ')], [(""'"", ""''"")], [('things', 'NNS')], [('physical', 'JJ')], [('correspondence', 'NN')], [('.', '.')], [('i.e', 'NN')], [('.', '.')], [('binary', 'NN')], [('numbers', 'NNS')], [('surges', 'NNS')], [('voltage', 'NN')], [('things', 'NNS')], [('.', '.')], [('real', 'JJ')], [('concern', 'NN')], [('idea', 'NN')], [('turned', 'VBD')], [('learning', 'VBG')], [('actuators', 'NNS')], [('learned', 'VBN')], [('get', 'VB')], [('receive', 'NN')], [('electrical', 'JJ')], [('charge', 'NN')], [('needed', 'VBN')], [('pass', 'NN')], [('dac', 'NN')], [('.', '.')], [('implying', 'VBG')], [('charge', 'NN')], [('digital', 'NN')], [('element', 'NN')], [('correlation', 'NN')], [('may', 'MD')], [('wrong', 'JJ')], [('.', '.')], [('digital', 'NN')], [('things', 'NNS')], [('physical', 'JJ')], [('things', 'NNS')], [('?', '.')], [('pretty', 'RB')], [('sure', 'NN')], [('true', 'JJ')], [('absolutely', 'RB')], [('idea', 'NN')], [('make', 'VB')], [('idea', 'NN')], [('...', ':')]]",go life think even 'digital ' thing physical correspondence . i.e . binary number surge voltage thing . real concern idea turn learn actuator learn get receive electrical charge need pas dac . imply charge digital element correlation may wrong . digital thing physical thing ? pretty sure true absolutely idea make idea ...,-1_abazbz2abz_2520_problem_use,3
235,s2nqom,Is there any overlap between computer science and foreign languages ?,,0,0.4,computerscience,https://www.reddit.com/r/computerscience/comments/s2nqom/is_there_any_overlap_between_computer_science_and/,6,"hey guys, basically the question. and forgive it is a noob question. i am relatively new to computer science but have really started taking a passion to programming. i also have a deep love for studying for foreign languages. 

is there any obvious / not so obvious overlap between the two?",1642040102.0,"['hey', 'guy', ',', 'basically', 'question', '.', 'forgive', 'noob', 'question', '.', 'relatively', 'new', 'computer', 'science', 'really', 'start', 'take', 'passion', 'program', '.', 'also', 'deep', 'love', 'study', 'foreign', 'language', '.', 'obvious', '/', 'obvious', 'overlap', 'two', '?']","[[('hey', 'NN')], [('guys', 'NNS')], [(',', ',')], [('basically', 'RB')], [('question', 'NN')], [('.', '.')], [('forgive', 'JJ')], [('noob', 'NN')], [('question', 'NN')], [('.', '.')], [('relatively', 'RB')], [('new', 'JJ')], [('computer', 'NN')], [('science', 'NN')], [('really', 'RB')], [('started', 'VBN')], [('taking', 'VBG')], [('passion', 'NN')], [('programming', 'VBG')], [('.', '.')], [('also', 'RB')], [('deep', 'NN')], [('love', 'NN')], [('studying', 'VBG')], [('foreign', 'JJ')], [('languages', 'NNS')], [('.', '.')], [('obvious', 'JJ')], [('/', 'NN')], [('obvious', 'JJ')], [('overlap', 'NN')], [('two', 'CD')], [('?', '.')]]","hey guy , basically question . forgive noob question . relatively new computer science really start take passion program . also deep love study foreign language . obvious / obvious overlap two ?",2_computer_learn_science_study,1
237,s28p5d,Love Your Crash Dumps | Michał Ślaski | ElixirConf EU 2021,,0,0.33,computerscience,https://www.reddit.com/r/computerscience/comments/s28p5d/love_your_crash_dumps_michał_ślaski_elixirconf_eu/,0,"livebook enabled a new level of interactivity with a running beam vm. michal slaski presented his talk ""love your crash dumps"" at #elixirconfeu, describing the techniques for live analysis of vm performance.

watch the video and learn more: []()",1642000729.0,"['livebook', 'enable', 'new', 'level', 'interactivity', 'run', 'beam', 'vm', '.', 'michal', 'slaski', 'present', 'talk', '``', 'love', 'crash', 'dump', ""''"", '#', 'elixirconfeu', ',', 'describe', 'technique', 'live', 'analysis', 'vm', 'performance', '.', 'watch', 'video', 'learn', ':', '[', ']', '(', ')']","[[('livebook', 'NN')], [('enabled', 'VBN')], [('new', 'JJ')], [('level', 'NN')], [('interactivity', 'NN')], [('running', 'VBG')], [('beam', 'NN')], [('vm', 'NN')], [('.', '.')], [('michal', 'NN')], [('slaski', 'NN')], [('presented', 'VBN')], [('talk', 'NN')], [('``', '``')], [('love', 'NN')], [('crash', 'NN')], [('dumps', 'NNS')], [(""''"", ""''"")], [('#', '#')], [('elixirconfeu', 'NN')], [(',', ',')], [('describing', 'VBG')], [('techniques', 'NNS')], [('live', 'JJ')], [('analysis', 'NN')], [('vm', 'NN')], [('performance', 'NN')], [('.', '.')], [('watch', 'NN')], [('video', 'NN')], [('learn', 'NN')], [(':', ':')], [('[', 'NN')], [(']', 'NN')], [('(', '(')], [(')', ')')]]","livebook enable new level interactivity run beam vm . michal slaski present talk `` love crash dump '' # elixirconfeu , describe technique live analysis vm performance . watch video learn : [ ] ( )",5_cpu_computer_run_process,5
238,s1gfy8,What is Gradient Descent? A 2-minute visual guide. [OC],Discussion,41,0.92,computerscience,https://www.reddit.com/r/computerscience/comments/s1gfy8/what_is_gradient_descent_a_2minute_visual_guide_oc/,9,"&#x200b;











[edit: thank you to you\/antiogu for pointing out the error. the y-intercept should be 2 in my sketch.]()

🔵 gradient descent 🔵

💾 a more detailed post this time but i wanted to make sure i touch upon some basics first before diving into gradient descent itself. this is mainly so that it is more inclusive and no one feels left behind if they have missed what gradient is and if you already know what it is you get to brush up on the concept.

🏃 although a relatively simple optimization algorithm, gradient descent (and its variants) has found an irreplaceable place in the heart of machine learning. this is majorly due to the fact that it has shown itself to be quite handy when optimizing deep neural networks and other models. the models behind the latest advances in ml and computer vision are majorly optimized using gradient descent and its variants like adam and gradient descent with momentum.

⛰️ the gradient of a function is a vector that points to the direction of the steepest ascent. the length or the magnitude of this vector gives you the rate of this increase.

🔦 time for an analogy: it is nightfall and you are on top of a hill and want to get to the village down low in the valley. fortunately, you have a trusty flashlight that helps you see the steepest direction locally around you despite the darkness. you take each step in the direction of the steepest descent using the flashlight and reach the village at the bottom fairly quickly.

📐 gradient descent is an optimization algorithm that iteratively updates the parameters of a function. it uses 3 critical pieces of information: your current position (x\_i), the direction in which you want to step (gradient of f at x\_i), and the size of your step.

🧗the gradient gives the direction of the steepest ascent but because we need to minimize we reverse the direction by multiplication with -1.

🎮 this toy example illustrates how gradient descent works in practice. we compute the gradient of the function that needs to be optimized i.e. the differentiation of the function with respect to the parameters. this gradient gives us the information we need about the landscape of the function i.e. the steepest direction where we should move in order to minimize the function. a point to keep in mind: gamma the step size (also called the learning rate) is a hyperparameter.

\---------------------------------------------------------------------------------

i have been studying and practicing machine learning and computer vision for 7+ years. as time has passed i have realized more and more the power of data-driven decision-making. seeing firsthand what ml is capable of i have personally felt that it can be a great inter-disciplinary tool to automate workflows. i will bring up different topics of ml in the form of short notes which can be of interest to existing practitioners and fresh enthusiasts alike.

the posts will cover topics like statistics, linear algebra, probability, data representation, modeling, computer vision among other things. i want this to be an incremental journey, starting from the basics and building up to more complex ideas.

if you like such content and would like to steer the topics i cover, feel free to suggest topics you would like to know more about in the comments.",1641917310.0,"['&', '#', 'x200b', ';', '[', 'edit', ':', 'thank', 'you\\/antiogu', 'point', 'error', '.', 'y-intercept', '2', 'sketch', '.', ']', '(', ')', '🔵', 'gradient', 'descent', '🔵', '💾', 'detailed', 'post', 'time', 'want', 'make', 'sure', 'touch', 'upon', 'basic', 'first', 'dive', 'gradient', 'descent', '.', 'mainly', 'inclusive', 'one', 'feel', 'left', 'behind', 'miss', 'gradient', 'already', 'know', 'get', 'brush', 'concept', '.', '🏃', 'although', 'relatively', 'simple', 'optimization', 'algorithm', ',', 'gradient', 'descent', '(', 'variant', ')', 'found', 'irreplaceable', 'place', 'heart', 'machine', 'learn', '.', 'majorly', 'due', 'fact', 'show', 'quite', 'handy', 'optimize', 'deep', 'neural', 'network', 'model', '.', 'model', 'behind', 'late', 'advance', 'ml', 'computer', 'vision', 'majorly', 'optimize', 'use', 'gradient', 'descent', 'variant', 'like', 'adam', 'gradient', 'descent', 'momentum', '.', '⛰️', 'gradient', 'function', 'vector', 'point', 'direction', 'steepest', 'ascent', '.', 'length', 'magnitude', 'vector', 'give', 'rate', 'increase', '.', '🔦', 'time', 'analogy', ':', 'nightfall', 'top', 'hill', 'want', 'get', 'village', 'low', 'valley', '.', 'fortunately', ',', 'trusty', 'flashlight', 'help', 'see', 'steepest', 'direction', 'locally', 'around', 'despite', 'darkness', '.', 'take', 'step', 'direction', 'steepest', 'descent', 'use', 'flashlight', 'reach', 'village', 'bottom', 'fairly', 'quickly', '.', '📐', 'gradient', 'descent', 'optimization', 'algorithm', 'iteratively', 'update', 'parameter', 'function', '.', 'us', '3', 'critical', 'piece', 'information', ':', 'current', 'position', '(', 'x\\_i', ')', ',', 'direction', 'want', 'step', '(', 'gradient', 'f', 'x\\_i', ')', ',', 'size', 'step', '.', '🧗the', 'gradient', 'give', 'direction', 'steepest', 'ascent', 'need', 'minimize', 'reverse', 'direction', 'multiplication', '-1', '.', '🎮', 'toy', 'example', 'illustrates', 'gradient', 'descent', 'work', 'practice', '.', 'compute', 'gradient', 'function', 'need', 'optimize', 'i.e', '.', 'differentiation', 'function', 'respect', 'parameter', '.', 'gradient', 'give', 'u', 'information', 'need', 'landscape', 'function', 'i.e', '.', 'steepest', 'direction', 'move', 'order', 'minimize', 'function', '.', 'point', 'keep', 'mind', ':', 'gamma', 'step', 'size', '(', 'also', 'call', 'learn', 'rate', ')', 'hyperparameter', '.', '\\', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '-', 'study', 'practice', 'machine', 'learn', 'computer', 'vision', '7+', 'year', '.', 'time', 'pass', 'realize', 'power', 'data-driven', 'decision-making', '.', 'see', 'firsthand', 'ml', 'capable', 'personally', 'felt', 'great', 'inter-disciplinary', 'tool', 'automate', 'workflow', '.', 'bring', 'different', 'topic', 'ml', 'form', 'short', 'note', 'interest', 'exist', 'practitioner', 'fresh', 'enthusiast', 'alike', '.', 'post', 'cover', 'topic', 'like', 'statistic', ',', 'linear', 'algebra', ',', 'probability', ',', 'data', 'representation', ',', 'model', ',', 'computer', 'vision', 'among', 'thing', '.', 'want', 'incremental', 'journey', ',', 'start', 'basic', 'building', 'complex', 'idea', '.', 'like', 'content', 'would', 'like', 'steer', 'topic', 'cover', ',', 'feel', 'free', 'suggest', 'topic', 'would', 'like', 'know', 'comment', '.']","[[('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('[', 'NN')], [('edit', 'NN')], [(':', ':')], [('thank', 'NN')], [('you\\/antiogu', 'NN')], [('pointing', 'VBG')], [('error', 'NN')], [('.', '.')], [('y-intercept', 'NN')], [('2', 'CD')], [('sketch', 'NN')], [('.', '.')], [(']', 'NN')], [('(', '(')], [(')', ')')], [('🔵', 'NN')], [('gradient', 'NN')], [('descent', 'NN')], [('🔵', 'NN')], [('💾', 'NN')], [('detailed', 'JJ')], [('post', 'NN')], [('time', 'NN')], [('wanted', 'VBD')], [('make', 'VB')], [('sure', 'NN')], [('touch', 'NN')], [('upon', 'IN')], [('basics', 'NNS')], [('first', 'RB')], [('diving', 'VBG')], [('gradient', 'NN')], [('descent', 'NN')], [('.', '.')], [('mainly', 'RB')], [('inclusive', 'JJ')], [('one', 'CD')], [('feels', 'NNS')], [('left', 'NN')], [('behind', 'IN')], [('missed', 'VBN')], [('gradient', 'NN')], [('already', 'RB')], [('know', 'VB')], [('get', 'VB')], [('brush', 'NN')], [('concept', 'NN')], [('.', '.')], [('🏃', 'NN')], [('although', 'IN')], [('relatively', 'RB')], [('simple', 'NN')], [('optimization', 'NN')], [('algorithm', 'NN')], [(',', ',')], [('gradient', 'NN')], [('descent', 'NN')], [('(', '(')], [('variants', 'NNS')], [(')', ')')], [('found', 'NN')], [('irreplaceable', 'JJ')], [('place', 'NN')], [('heart', 'NN')], [('machine', 'NN')], [('learning', 'VBG')], [('.', '.')], [('majorly', 'RB')], [('due', 'JJ')], [('fact', 'NN')], [('shown', 'VBN')], [('quite', 'RB')], [('handy', 'NN')], [('optimizing', 'VBG')], [('deep', 'NN')], [('neural', 'JJ')], [('networks', 'NNS')], [('models', 'NNS')], [('.', '.')], [('models', 'NNS')], [('behind', 'IN')], [('latest', 'JJS')], [('advances', 'NNS')], [('ml', 'NN')], [('computer', 'NN')], [('vision', 'NN')], [('majorly', 'RB')], [('optimized', 'VBN')], [('using', 'VBG')], [('gradient', 'NN')], [('descent', 'NN')], [('variants', 'NNS')], [('like', 'IN')], [('adam', 'NN')], [('gradient', 'NN')], [('descent', 'NN')], [('momentum', 'NN')], [('.', '.')], [('⛰️', 'NN')], [('gradient', 'NN')], [('function', 'NN')], [('vector', 'NN')], [('points', 'NNS')], [('direction', 'NN')], [('steepest', 'NN')], [('ascent', 'NN')], [('.', '.')], [('length', 'NN')], [('magnitude', 'NN')], [('vector', 'NN')], [('gives', 'VBZ')], [('rate', 'NN')], [('increase', 'NN')], [('.', '.')], [('🔦', 'NN')], [('time', 'NN')], [('analogy', 'NN')], [(':', ':')], [('nightfall', 'NN')], [('top', 'NN')], [('hill', 'NN')], [('want', 'NN')], [('get', 'VB')], [('village', 'NN')], [('low', 'JJ')], [('valley', 'NN')], [('.', '.')], [('fortunately', 'RB')], [(',', ',')], [('trusty', 'NN')], [('flashlight', 'NN')], [('helps', 'NNS')], [('see', 'VB')], [('steepest', 'NN')], [('direction', 'NN')], [('locally', 'RB')], [('around', 'IN')], [('despite', 'IN')], [('darkness', 'NN')], [('.', '.')], [('take', 'VB')], [('step', 'NN')], [('direction', 'NN')], [('steepest', 'NN')], [('descent', 'NN')], [('using', 'VBG')], [('flashlight', 'NN')], [('reach', 'NN')], [('village', 'NN')], [('bottom', 'NN')], [('fairly', 'RB')], [('quickly', 'RB')], [('.', '.')], [('📐', 'NN')], [('gradient', 'NN')], [('descent', 'NN')], [('optimization', 'NN')], [('algorithm', 'NN')], [('iteratively', 'RB')], [('updates', 'NNS')], [('parameters', 'NNS')], [('function', 'NN')], [('.', '.')], [('uses', 'NNS')], [('3', 'CD')], [('critical', 'JJ')], [('pieces', 'NNS')], [('information', 'NN')], [(':', ':')], [('current', 'JJ')], [('position', 'NN')], [('(', '(')], [('x\\_i', 'NN')], [(')', ')')], [(',', ',')], [('direction', 'NN')], [('want', 'NN')], [('step', 'NN')], [('(', '(')], [('gradient', 'NN')], [('f', 'NN')], [('x\\_i', 'NN')], [(')', ')')], [(',', ',')], [('size', 'NN')], [('step', 'NN')], [('.', '.')], [('🧗the', 'NN')], [('gradient', 'NN')], [('gives', 'VBZ')], [('direction', 'NN')], [('steepest', 'NN')], [('ascent', 'NN')], [('need', 'NN')], [('minimize', 'VB')], [('reverse', 'NN')], [('direction', 'NN')], [('multiplication', 'NN')], [('-1', 'NN')], [('.', '.')], [('🎮', 'NN')], [('toy', 'NN')], [('example', 'NN')], [('illustrates', 'NNS')], [('gradient', 'NN')], [('descent', 'NN')], [('works', 'NNS')], [('practice', 'NN')], [('.', '.')], [('compute', 'NN')], [('gradient', 'NN')], [('function', 'NN')], [('needs', 'NNS')], [('optimized', 'VBN')], [('i.e', 'NN')], [('.', '.')], [('differentiation', 'NN')], [('function', 'NN')], [('respect', 'NN')], [('parameters', 'NNS')], [('.', '.')], [('gradient', 'NN')], [('gives', 'VBZ')], [('us', 'PRP')], [('information', 'NN')], [('need', 'NN')], [('landscape', 'NN')], [('function', 'NN')], [('i.e', 'NN')], [('.', '.')], [('steepest', 'NN')], [('direction', 'NN')], [('move', 'NN')], [('order', 'NN')], [('minimize', 'VB')], [('function', 'NN')], [('.', '.')], [('point', 'NN')], [('keep', 'VB')], [('mind', 'NN')], [(':', ':')], [('gamma', 'NN')], [('step', 'NN')], [('size', 'NN')], [('(', '(')], [('also', 'RB')], [('called', 'VBN')], [('learning', 'VBG')], [('rate', 'NN')], [(')', ')')], [('hyperparameterstudying', 'VBG')], [('practicing', 'VBG')], [('machine', 'NN')], [('learning', 'VBG')], [('computer', 'NN')], [('vision', 'NN')], [('7+', 'CD')], [('years', 'NNS')], [('.', '.')], [('time', 'NN')], [('passed', 'VBN')], [('realized', 'VBN')], [('power', 'NN')], [('data-driven', 'JJ')], [('decision-making', 'NN')], [('.', '.')], [('seeing', 'VBG')], [('firsthand', 'NN')], [('ml', 'NN')], [('capable', 'JJ')], [('personally', 'RB')], [('felt', 'NN')], [('great', 'JJ')], [('inter-disciplinary', 'JJ')], [('tool', 'NN')], [('automate', 'NN')], [('workflows', 'NNS')], [('.', '.')], [('bring', 'NN')], [('different', 'JJ')], [('topics', 'NNS')], [('ml', 'NN')], [('form', 'NN')], [('short', 'JJ')], [('notes', 'NNS')], [('interest', 'NN')], [('existing', 'VBG')], [('practitioners', 'NNS')], [('fresh', 'JJ')], [('enthusiasts', 'NNS')], [('alike', 'RB')], [('.', '.')], [('posts', 'NNS')], [('cover', 'NN')], [('topics', 'NNS')], [('like', 'IN')], [('statistics', 'NNS')], [(',', ',')], [('linear', 'NN')], [('algebra', 'NN')], [(',', ',')], [('probability', 'NN')], [(',', ',')], [('data', 'NNS')], [('representation', 'NN')], [(',', ',')], [('modeling', 'VBG')], [(',', ',')], [('computer', 'NN')], [('vision', 'NN')], [('among', 'IN')], [('things', 'NNS')], [('.', '.')], [('want', 'NN')], [('incremental', 'NN')], [('journey', 'NN')], [(',', ',')], [('starting', 'VBG')], [('basics', 'NNS')], [('building', 'NN')], [('complex', 'JJ')], [('ideas', 'NNS')], [('.', '.')], [('like', 'IN')], [('content', 'NN')], [('would', 'MD')], [('like', 'IN')], [('steer', 'NN')], [('topics', 'NNS')], [('cover', 'NN')], [(',', ',')], [('feel', 'NN')], [('free', 'JJ')], [('suggest', 'NN')], [('topics', 'NNS')], [('would', 'MD')], [('like', 'IN')], [('know', 'VB')], [('comments', 'NNS')], [('.', '.')]]","& # x200b ; [ edit : thank you\/antiogu point error . y-intercept 2 sketch . ] ( ) 🔵 gradient descent 🔵 💾 detailed post time want make sure touch upon basic first dive gradient descent . mainly inclusive one feel left behind miss gradient already know get brush concept . 🏃 although relatively simple optimization algorithm , gradient descent ( variant ) found irreplaceable place heart machine learn . majorly due fact show quite handy optimize deep neural network model . model behind late advance ml computer vision majorly optimize use gradient descent variant like adam gradient descent momentum . ⛰️ gradient function vector point direction steepest ascent . length magnitude vector give rate increase . 🔦 time analogy : nightfall top hill want get village low valley . fortunately , trusty flashlight help see steepest direction locally around despite darkness . take step direction steepest descent use flashlight reach village bottom fairly quickly . 📐 gradient descent optimization algorithm iteratively update parameter function . us 3 critical piece information : current position ( x\_i ) , direction want step ( gradient f x\_i ) , size step . 🧗the gradient give direction steepest ascent need minimize reverse direction multiplication -1 . 🎮 toy example illustrates gradient descent work practice . compute gradient function need optimize i.e . differentiation function respect parameter . gradient give u information need landscape function i.e . steepest direction move order minimize function . point keep mind : gamma step size ( also call learn rate ) hyperparameter . \ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- - study practice machine learn computer vision 7+ year . time pass realize power data-driven decision-making . see firsthand ml capable personally felt great inter-disciplinary tool automate workflow . bring different topic ml form short note interest exist practitioner fresh enthusiast alike . post cover topic like statistic , linear algebra , probability , data representation , model , computer vision among thing . want incremental journey , start basic building complex idea . like content would like steer topic cover , feel free suggest topic would like know comment .",0_algorithm_time_node_bill,3
240,s1h1gt,Subredditd and youtube channels for staying up to date,Advice,14,0.82,computerscience,https://www.reddit.com/r/computerscience/comments/s1h1gt/subredditd_and_youtube_channels_for_staying_up_to/,2,"not sure if this is the right subreddit for this, but i am looking for a few subredditd and youtube channels for staying up to date and just general knowledge of the software development industry. can anyone help?",1641918826.0,"['sure', 'right', 'subreddit', ',', 'look', 'subredditd', 'youtube', 'channel', 'stay', 'date', 'general', 'knowledge', 'software', 'development', 'industry', '.', 'anyone', 'help', '?']","[[('sure', 'NN')], [('right', 'NN')], [('subreddit', 'NN')], [(',', ',')], [('looking', 'VBG')], [('subredditd', 'NN')], [('youtube', 'NN')], [('channels', 'NNS')], [('staying', 'VBG')], [('date', 'NN')], [('general', 'JJ')], [('knowledge', 'NN')], [('software', 'NN')], [('development', 'NN')], [('industry', 'NN')], [('.', '.')], [('anyone', 'NN')], [('help', 'NN')], [('?', '.')]]","sure right subreddit , look subredditd youtube channel stay date general knowledge software development industry . anyone help ?",4_book_learn_computer_good,3
241,s14xir,Favorite CS books?,,94,0.99,computerscience,https://www.reddit.com/r/computerscience/comments/s14xir/favorite_cs_books/,49,"basically title. i have been searching for some good cs books, but cannot find much other than 1) the mainstream novels about ""ai"" that are of no use to someone who is studied cs and 2) the tutorial type books titled ""how to \[do something\] with \[insert popular technologies\]"". looking for recs.",1641877819.0,"['basically', 'title', '.', 'search', 'good', 'c', 'book', ',', 'find', 'much', '1', ')', 'mainstream', 'novel', '``', 'ai', ""''"", 'use', 'someone', 'study', 'c', '2', ')', 'tutorial', 'type', 'book', 'title', '``', '\\', '[', 'something\\', ']', '\\', '[', 'insert', 'popular', 'technologies\\', ']', ""''"", '.', 'look', 'recs', '.']","[[('basically', 'RB')], [('title', 'NN')], [('.', '.')], [('searching', 'VBG')], [('good', 'JJ')], [('cs', 'NN')], [('books', 'NNS')], [(',', ',')], [('find', 'VB')], [('much', 'JJ')], [('1', 'CD')], [(')', ')')], [('mainstream', 'NN')], [('novels', 'NNS')], [('``', '``')], [('ai', 'NN')], [(""''"", ""''"")], [('use', 'NN')], [('someone', 'NN')], [('studied', 'VBN')], [('cs', 'NN')], [('2', 'CD')], [(')', ')')], [('tutorial', 'NN')], [('type', 'NN')], [('books', 'NNS')], [('titled', 'VBN')], [('``', '``')], [('\\', 'NN')], [('[', 'NN')], [('something\\', 'NN')], [(']', 'NN')], [('\\', 'NN')], [('[', 'NN')], [('insert', 'NN')], [('popular', 'JJ')], [('technologies\\', 'NN')], [(']', 'NN')], [(""''"", ""''"")], [('.', '.')], [('looking', 'VBG')], [('recs', 'NN')], [('.', '.')]]","basically title . search good c book , find much 1 ) mainstream novel `` ai '' use someone study c 2 ) tutorial type book title `` \ [ something\ ] \ [ insert popular technologies\ ] '' . look recs .",4_book_learn_computer_good,3
243,s0vdjp,Hitting a wall between math and data structures,Help,5,1.0,computerscience,https://www.reddit.com/r/computerscience/comments/s0vdjp/hitting_a_wall_between_math_and_data_structures/,5,"hello everyone,

i have been stuck in the classic problem of applying mathematics in the context of data science. however, i am much stronger in my math-side than in computer science. if you gave me a homework sheet of problems in stats, multivariable calc or linear, i am happy. if you ask me to apply mathematics for machine learning, i am drawing blanks.

has anyone else struggled with this disconnect? if so, were there classes or concepts that helped build that bridge? is this data structures with extra steps?

thank you in advance",1641850841.0,"['hello', 'everyone', ',', 'stuck', 'classic', 'problem', 'apply', 'mathematics', 'context', 'data', 'science', '.', 'however', ',', 'much', 'strong', 'math-side', 'computer', 'science', '.', 'give', 'homework', 'sheet', 'problem', 'stats', ',', 'multivariable', 'calc', 'linear', ',', 'happy', '.', 'ask', 'apply', 'mathematics', 'machine', 'learn', ',', 'draw', 'blank', '.', 'anyone', 'else', 'struggle', 'disconnect', '?', ',', 'class', 'concept', 'help', 'build', 'bridge', '?', 'data', 'structure', 'extra', 'step', '?', 'thank', 'advance']","[[('hello', 'NN')], [('everyone', 'NN')], [(',', ',')], [('stuck', 'NN')], [('classic', 'JJ')], [('problem', 'NN')], [('applying', 'VBG')], [('mathematics', 'NNS')], [('context', 'NN')], [('data', 'NNS')], [('science', 'NN')], [('.', '.')], [('however', 'RB')], [(',', ',')], [('much', 'JJ')], [('stronger', 'JJR')], [('math-side', 'NN')], [('computer', 'NN')], [('science', 'NN')], [('.', '.')], [('gave', 'VBD')], [('homework', 'NN')], [('sheet', 'NN')], [('problems', 'NNS')], [('stats', 'NNS')], [(',', ',')], [('multivariable', 'JJ')], [('calc', 'NN')], [('linear', 'NN')], [(',', ',')], [('happy', 'JJ')], [('.', '.')], [('ask', 'NN')], [('apply', 'VB')], [('mathematics', 'NNS')], [('machine', 'NN')], [('learning', 'VBG')], [(',', ',')], [('drawing', 'VBG')], [('blanks', 'NNS')], [('.', '.')], [('anyone', 'NN')], [('else', 'RB')], [('struggled', 'VBN')], [('disconnect', 'NN')], [('?', '.')], [(',', ',')], [('classes', 'NNS')], [('concepts', 'NNS')], [('helped', 'VBD')], [('build', 'NN')], [('bridge', 'NN')], [('?', '.')], [('data', 'NNS')], [('structures', 'NNS')], [('extra', 'JJ')], [('steps', 'NNS')], [('?', '.')], [('thank', 'NN')], [('advance', 'NN')]]","hello everyone , stuck classic problem apply mathematics context data science . however , much strong math-side computer science . give homework sheet problem stats , multivariable calc linear , happy . ask apply mathematics machine learn , draw blank . anyone else struggle disconnect ? , class concept help build bridge ? data structure extra step ? thank advance",-1_abazbz2abz_2520_problem_use,4
244,s0ihgg,PIEEG: Turn a Raspberry Pi into a Brain-Computer-Interface to measure biosignals. arXiv:2201.02228,,13,0.93,computerscience,https://www.reddit.com/r/computerscience/comments/s0ihgg/pieeg_turn_a_raspberry_pi_into_a/,0," this paper presents an inexpensive, high-precision, but at the same time, easy-to-maintain pieeg board to convert a raspberrypi to a brain-computer interface. this shield allows measuring and processing eight real-time eeg(electroencephalography) signals. we used the most popular programming languages-c, c++ and python to read the signals, recorded by the device. the process of reading eeg signals was demonstrated as completely and clearly as possible. this device can be easily used for machine learning enthusiasts to create projects for controlling robots and mechanical limbs using the power of thought. we will post use cases on github () for controlling a robotic machine, unmanned aerial vehicle, and more just using the power of thought.",1641816059.0,"['paper', 'present', 'inexpensive', ',', 'high-precision', ',', 'time', ',', 'easy-to-maintain', 'pieeg', 'board', 'convert', 'raspberrypi', 'brain-computer', 'interface', '.', 'shield', 'allows', 'measure', 'processing', 'eight', 'real-time', 'eeg', '(', 'electroencephalography', ')', 'signal', '.', 'use', 'popular', 'program', 'languages-c', ',', 'c++', 'python', 'read', 'signal', ',', 'record', 'device', '.', 'process', 'reading', 'eeg', 'signal', 'demonstrate', 'completely', 'clearly', 'possible', '.', 'device', 'easily', 'use', 'machine', 'learn', 'enthusiast', 'create', 'project', 'control', 'robot', 'mechanical', 'limb', 'use', 'power', 'thought', '.', 'post', 'use', 'case', 'github', '(', ')', 'control', 'robotic', 'machine', ',', 'unmanned', 'aerial', 'vehicle', ',', 'use', 'power', 'thought', '.']","[[('paper', 'NN')], [('presents', 'NNS')], [('inexpensive', 'JJ')], [(',', ',')], [('high-precision', 'NN')], [(',', ',')], [('time', 'NN')], [(',', ',')], [('easy-to-maintain', 'NN')], [('pieeg', 'NN')], [('board', 'NN')], [('convert', 'NN')], [('raspberrypi', 'NN')], [('brain-computer', 'NN')], [('interface', 'NN')], [('.', '.')], [('shield', 'NN')], [('allows', 'NNS')], [('measuring', 'VBG')], [('processing', 'NN')], [('eight', 'CD')], [('real-time', 'NN')], [('eeg', 'NN')], [('(', '(')], [('electroencephalography', 'NN')], [(')', ')')], [('signals', 'NNS')], [('.', '.')], [('used', 'VBN')], [('popular', 'JJ')], [('programming', 'VBG')], [('languages-c', 'NN')], [(',', ',')], [('c++', 'NN')], [('python', 'NN')], [('read', 'NN')], [('signals', 'NNS')], [(',', ',')], [('recorded', 'VBN')], [('device', 'NN')], [('.', '.')], [('process', 'NN')], [('reading', 'NN')], [('eeg', 'NN')], [('signals', 'NNS')], [('demonstrated', 'VBN')], [('completely', 'RB')], [('clearly', 'RB')], [('possible', 'JJ')], [('.', '.')], [('device', 'NN')], [('easily', 'RB')], [('used', 'VBN')], [('machine', 'NN')], [('learning', 'VBG')], [('enthusiasts', 'NNS')], [('create', 'NN')], [('projects', 'NNS')], [('controlling', 'VBG')], [('robots', 'NNS')], [('mechanical', 'JJ')], [('limbs', 'NNS')], [('using', 'VBG')], [('power', 'NN')], [('thought', 'NN')], [('.', '.')], [('post', 'NN')], [('use', 'NN')], [('cases', 'NNS')], [('github', 'NN')], [('(', '(')], [(')', ')')], [('controlling', 'VBG')], [('robotic', 'JJ')], [('machine', 'NN')], [(',', ',')], [('unmanned', 'JJ')], [('aerial', 'JJ')], [('vehicle', 'NN')], [(',', ',')], [('using', 'VBG')], [('power', 'NN')], [('thought', 'NN')], [('.', '.')]]","paper present inexpensive , high-precision , time , easy-to-maintain pieeg board convert raspberrypi brain-computer interface . shield allows measure processing eight real-time eeg ( electroencephalography ) signal . use popular program languages-c , c++ python read signal , record device . process reading eeg signal demonstrate completely clearly possible . device easily use machine learn enthusiast create project control robot mechanical limb use power thought . post use case github ( ) control robotic machine , unmanned aerial vehicle , use power thought .",-1_abazbz2abz_2520_problem_use,5
245,s0jzi8,What are 1s and 0s in computers?,Help,7,0.82,computerscience,https://www.reddit.com/r/computerscience/comments/s0jzi8/what_are_1s_and_0s_in_computers/,21,"i have not learnt much electronics but i do kind of know how the cpu works and how logic gates and all the higher level more abstract things work in a cpu.

i‘m really confused by this, some say 1 and 0 is the state of the transistor but that does not make sense to me. i‘ve also read that it is a high vs low voltage, but than is not voltage the electric tension between two points, which points would that be? i have always imagined the 1s and 0s or asserted and deasserted signals as high and low amperage, is that wrong?",1641821166.0,"['learnt', 'much', 'electronics', 'kind', 'know', 'cpu', 'work', 'logic', 'gate', 'high', 'level', 'abstract', 'thing', 'work', 'cpu', '.', '‘', 'really', 'confuse', ',', 'say', '1', '0', 'state', 'transistor', 'make', 'sense', '.', '‘', 'also', 'read', 'high', 'v', 'low', 'voltage', ',', 'voltage', 'electric', 'tension', 'two', 'point', ',', 'point', 'would', '?', 'always', 'imagine', '1', '0', 'assert', 'deasserted', 'signal', 'high', 'low', 'amperage', ',', 'wrong', '?']","[[('learnt', 'NN')], [('much', 'JJ')], [('electronics', 'NNS')], [('kind', 'NN')], [('know', 'VB')], [('cpu', 'NN')], [('works', 'NNS')], [('logic', 'NN')], [('gates', 'NNS')], [('higher', 'JJR')], [('level', 'NN')], [('abstract', 'NN')], [('things', 'NNS')], [('work', 'NN')], [('cpu', 'NN')], [('.', '.')], [('‘', 'NN')], [('really', 'RB')], [('confused', 'VBN')], [(',', ',')], [('say', 'VB')], [('1', 'CD')], [('0', 'CD')], [('state', 'NN')], [('transistor', 'NN')], [('make', 'VB')], [('sense', 'NN')], [('.', '.')], [('‘', 'NN')], [('also', 'RB')], [('read', 'NN')], [('high', 'JJ')], [('vs', 'NN')], [('low', 'JJ')], [('voltage', 'NN')], [(',', ',')], [('voltage', 'NN')], [('electric', 'JJ')], [('tension', 'NN')], [('two', 'CD')], [('points', 'NNS')], [(',', ',')], [('points', 'NNS')], [('would', 'MD')], [('?', '.')], [('always', 'RB')], [('imagined', 'VBN')], [('1s', 'CD')], [('0s', 'CD')], [('asserted', 'VBN')], [('deasserted', 'VBN')], [('signals', 'NNS')], [('high', 'JJ')], [('low', 'JJ')], [('amperage', 'NN')], [(',', ',')], [('wrong', 'JJ')], [('?', '.')]]","learnt much electronics kind know cpu work logic gate high level abstract thing work cpu . ‘ really confuse , say 1 0 state transistor make sense . ‘ also read high v low voltage , voltage electric tension two point , point would ? always imagine 1 0 assert deasserted signal high low amperage , wrong ?",5_cpu_computer_run_process,3
246,s01ijj,A.I. Debate topics,Help,37,0.91,computerscience,https://www.reddit.com/r/computerscience/comments/s01ijj/ai_debate_topics/,29,"hello! i am a high school computer science teacher, and teach a course on computer ethics. one of my units is on a.i. and i want to conclude the unit with student debates on topics in ai. i am struggling to come up with topic statements however. i know for sure i want one of the topics to be centered on whether a.i. at an advanced level should be afforded the same rights as humans.  


any other topic statement ideas? thanks!",1641762273.0,"['hello', '!', 'high', 'school', 'computer', 'science', 'teacher', ',', 'teach', 'course', 'computer', 'ethic', '.', 'one', 'unit', 'a.i', '.', 'want', 'conclude', 'unit', 'student', 'debate', 'topic', 'ai', '.', 'struggle', 'come', 'topic', 'statement', 'however', '.', 'know', 'sure', 'want', 'one', 'topic', 'center', 'whether', 'a.i', '.', 'advanced', 'level', 'afford', 'right', 'human', '.', 'topic', 'statement', 'idea', '?', 'thanks', '!']","[[('hello', 'NN')], [('!', '.')], [('high', 'JJ')], [('school', 'NN')], [('computer', 'NN')], [('science', 'NN')], [('teacher', 'NN')], [(',', ',')], [('teach', 'NN')], [('course', 'NN')], [('computer', 'NN')], [('ethics', 'NNS')], [('.', '.')], [('one', 'CD')], [('units', 'NNS')], [('a.i', 'NN')], [('.', '.')], [('want', 'NN')], [('conclude', 'NN')], [('unit', 'NN')], [('student', 'NN')], [('debates', 'NNS')], [('topics', 'NNS')], [('ai', 'NN')], [('.', '.')], [('struggling', 'VBG')], [('come', 'VB')], [('topic', 'NN')], [('statements', 'NNS')], [('however', 'RB')], [('.', '.')], [('know', 'VB')], [('sure', 'NN')], [('want', 'NN')], [('one', 'CD')], [('topics', 'NNS')], [('centered', 'VBN')], [('whether', 'IN')], [('a.i', 'NN')], [('.', '.')], [('advanced', 'JJ')], [('level', 'NN')], [('afforded', 'VBD')], [('rights', 'NNS')], [('humans', 'NNS')], [('.', '.')], [('topic', 'NN')], [('statement', 'NN')], [('ideas', 'NNS')], [('?', '.')], [('thanks', 'NNS')], [('!', '.')]]","hello ! high school computer science teacher , teach course computer ethic . one unit a.i . want conclude unit student debate topic ai . struggle come topic statement however . know sure want one topic center whether a.i . advanced level afford right human . topic statement idea ? thanks !",-1_abazbz2abz_2520_problem_use,4
247,rzqau2,Meaning/purpose of computer science,,58,0.86,computerscience,https://www.reddit.com/r/computerscience/comments/rzqau2/meaningpurpose_of_computer_science/,52,"i am an undergrad studying computer science. while i enjoy coding (it is ludic) i cannot quite grasp its purpose/use in the bigger meaning of life.

why do you study computer science and how do you find purpose in it?",1641729944.0,"['undergrad', 'study', 'computer', 'science', '.', 'enjoy', 'cod', '(', 'ludic', ')', 'quite', 'grasp', 'purpose/use', 'big', 'meaning', 'life', '.', 'study', 'computer', 'science', 'find', 'purpose', '?']","[[('undergrad', 'NN')], [('studying', 'VBG')], [('computer', 'NN')], [('science', 'NN')], [('.', '.')], [('enjoy', 'NN')], [('coding', 'VBG')], [('(', '(')], [('ludic', 'NN')], [(')', ')')], [('quite', 'RB')], [('grasp', 'NN')], [('purpose/use', 'NN')], [('bigger', 'JJR')], [('meaning', 'NN')], [('life', 'NN')], [('.', '.')], [('study', 'NN')], [('computer', 'NN')], [('science', 'NN')], [('find', 'VB')], [('purpose', 'NN')], [('?', '.')]]",undergrad study computer science . enjoy cod ( ludic ) quite grasp purpose/use big meaning life . study computer science find purpose ?,2_computer_learn_science_study,3
248,rzcexe,Can anyone explain NFTs from computer science perspective without the hype?,,203,0.94,computerscience,https://www.reddit.com/r/computerscience/comments/rzcexe/can_anyone_explain_nfts_from_computer_science/,119,"i searched and searched and still have not been able to really figure out how nfts are working behind the scenes. there is sooo much hype. 

could a developer please explain. i would like to know - 

1. how are they created? using which popular frameworks (any code snippets appreciated)
2. where is the media hosted? my understanding is that nfts are really a record that your wallet owns this unique hash. but then how is that has linked to an image? and where is this image hosted? follow up - cannot anyone take this image host down and then that link between the hash and the image is lost.

appreciate any elightenment without the hype. i am tired of 100th video about an influencer explaining nfts as if they are the next gold with no context.",1641682303.0,"['search', 'search', 'still', 'able', 'really', 'figure', 'nfts', 'work', 'behind', 'scene', '.', 'sooo', 'much', 'hype', '.', 'could', 'developer', 'please', 'explain', '.', 'would', 'like', 'know', '-', '1.', 'create', '?', 'use', 'popular', 'framework', '(', 'code', 'snippet', 'appreciate', ')', '2.', 'medium', 'host', '?', 'understand', 'nfts', 'really', 'record', 'wallet', 'own', 'unique', 'hash', '.', 'link', 'image', '?', 'image', 'host', '?', 'follow', '-', 'anyone', 'take', 'image', 'host', 'link', 'hash', 'image', 'lose', '.', 'appreciate', 'elightenment', 'without', 'hype', '.', 'tire', '100th', 'video', 'influencer', 'explain', 'nfts', 'next', 'gold', 'context', '.']","[[('searched', 'VBN')], [('searched', 'VBN')], [('still', 'RB')], [('able', 'JJ')], [('really', 'RB')], [('figure', 'NN')], [('nfts', 'NNS')], [('working', 'VBG')], [('behind', 'IN')], [('scenes', 'NNS')], [('.', '.')], [('sooo', 'NN')], [('much', 'JJ')], [('hype', 'NN')], [('.', '.')], [('could', 'MD')], [('developer', 'NN')], [('please', 'NN')], [('explain', 'NN')], [('.', '.')], [('would', 'MD')], [('like', 'IN')], [('know', 'VB')], [('-', ':')], [('1.', 'CD')], [('created', 'VBN')], [('?', '.')], [('using', 'VBG')], [('popular', 'JJ')], [('frameworks', 'NNS')], [('(', '(')], [('code', 'NN')], [('snippets', 'NNS')], [('appreciated', 'VBN')], [(')', ')')], [('2.', 'CD')], [('media', 'NNS')], [('hosted', 'VBN')], [('?', '.')], [('understanding', 'VBG')], [('nfts', 'NNS')], [('really', 'RB')], [('record', 'NN')], [('wallet', 'NN')], [('owns', 'VBZ')], [('unique', 'NN')], [('hash', 'NN')], [('.', '.')], [('linked', 'VBN')], [('image', 'NN')], [('?', '.')], [('image', 'NN')], [('hosted', 'VBN')], [('?', '.')], [('follow', 'VB')], [('-', ':')], [('anyone', 'NN')], [('take', 'VB')], [('image', 'NN')], [('host', 'NN')], [('link', 'NN')], [('hash', 'NN')], [('image', 'NN')], [('lost', 'VBN')], [('.', '.')], [('appreciate', 'NN')], [('elightenment', 'NN')], [('without', 'IN')], [('hype', 'NN')], [('.', '.')], [('tired', 'VBN')], [('100th', 'NNS')], [('video', 'NN')], [('influencer', 'NN')], [('explaining', 'VBG')], [('nfts', 'NNS')], [('next', 'JJ')], [('gold', 'NN')], [('context', 'NN')], [('.', '.')]]",search search still able really figure nfts work behind scene . sooo much hype . could developer please explain . would like know - 1. create ? use popular framework ( code snippet appreciate ) 2. medium host ? understand nfts really record wallet own unique hash . link image ? image host ? follow - anyone take image host link hash image lose . appreciate elightenment without hype . tire 100th video influencer explain nfts next gold context .,3_search_ai_think_google,2
249,s011f6,Why did it take so long for consumer OS's to get UNIX-like features?,Discussion,4,0.64,computerscience,https://www.reddit.com/r/computerscience/comments/s011f6/why_did_it_take_so_long_for_consumer_oss_to_get/,9,"forgive any and all ignorance as i ask this question please. as i understand it, linux was the first open source unix-like os, correct? and unix itself has been around since 1969!

my question is, if the robust stability and security features like protected memory, preemptive multitasking, secure user accounts/admin stuff and all that have existed for so long... why did mac os and windows both lack any of that robustness until a full decade after linux was created?

in other words, if we had a way to make an os that would virtually never crash and had orderly memory management and security and the rest, why did apple and microsoft both ship such fragile os's that could be toppled by a single rogue app and were generally terrible at security and for *so* long?

apple even had [it is own unix implementation]() for the early mac computers complete with the system 7 gui laid over top. anyone care to speculate why that was not just the mac os everyone got? microsoft also [licensed a unix version]() from at&t in the early days. so it is not as if no one knew computers did not have to suck. why did it take so long to reach the average pc user?   thoughts?",1641761027.0,"['forgive', 'ignorance', 'ask', 'question', 'please', '.', 'understand', ',', 'linux', 'first', 'open', 'source', 'unix-like', 'o', ',', 'correct', '?', 'unix', 'around', 'since', '1969', '!', 'question', ',', 'robust', 'stability', 'security', 'feature', 'like', 'protect', 'memory', ',', 'preemptive', 'multitasking', ',', 'secure', 'user', 'accounts/admin', 'stuff', 'exist', 'long', '...', 'mac', 'o', 'window', 'lack', 'robustness', 'full', 'decade', 'linux', 'create', '?', 'word', ',', 'way', 'make', 'o', 'would', 'virtually', 'never', 'crash', 'orderly', 'memory', 'management', 'security', 'rest', ',', 'apple', 'microsoft', 'ship', 'fragile', 'o', ""'s"", 'could', 'topple', 'single', 'rogue', 'app', 'generally', 'terrible', 'security', '*', '*', 'long', '?', 'apple', 'even', '[', 'unix', 'implementation', ']', '(', ')', 'early', 'mac', 'computer', 'complete', 'system', '7', 'gui', 'laid', 'top', '.', 'anyone', 'care', 'speculate', 'mac', 'o', 'everyone', 'get', '?', 'microsoft', 'also', '[', 'license', 'unix', 'version', ']', '(', ')', '&', 'early', 'day', '.', 'one', 'knew', 'computer', 'suck', '.', 'take', 'long', 'reach', 'average', 'pc', 'user', '?', 'thought', '?']","[[('forgive', 'JJ')], [('ignorance', 'NN')], [('ask', 'NN')], [('question', 'NN')], [('please', 'NN')], [('.', '.')], [('understand', 'NN')], [(',', ',')], [('linux', 'NN')], [('first', 'RB')], [('open', 'JJ')], [('source', 'NN')], [('unix-like', 'JJ')], [('os', 'NN')], [(',', ',')], [('correct', 'NN')], [('?', '.')], [('unix', 'NN')], [('around', 'IN')], [('since', 'IN')], [('1969', 'CD')], [('!', '.')], [('question', 'NN')], [(',', ',')], [('robust', 'NN')], [('stability', 'NN')], [('security', 'NN')], [('features', 'NNS')], [('like', 'IN')], [('protected', 'VBN')], [('memory', 'NN')], [(',', ',')], [('preemptive', 'NN')], [('multitasking', 'VBG')], [(',', ',')], [('secure', 'NN')], [('user', 'NN')], [('accounts/admin', 'NN')], [('stuff', 'NN')], [('existed', 'VBN')], [('long', 'RB')], [('...', ':')], [('mac', 'NN')], [('os', 'NN')], [('windows', 'NNS')], [('lack', 'NN')], [('robustness', 'NN')], [('full', 'JJ')], [('decade', 'NN')], [('linux', 'NN')], [('created', 'VBN')], [('?', '.')], [('words', 'NNS')], [(',', ',')], [('way', 'NN')], [('make', 'VB')], [('os', 'NN')], [('would', 'MD')], [('virtually', 'RB')], [('never', 'RB')], [('crash', 'NN')], [('orderly', 'RB')], [('memory', 'NN')], [('management', 'NN')], [('security', 'NN')], [('rest', 'NN')], [(',', ',')], [('apple', 'NN')], [('microsoft', 'NN')], [('ship', 'NN')], [('fragile', 'NN')], [('os', 'NN')], [(""'s"", 'POS')], [('could', 'MD')], [('toppled', 'VBN')], [('single', 'JJ')], [('rogue', 'NN')], [('app', 'NN')], [('generally', 'RB')], [('terrible', 'JJ')], [('security', 'NN')], [('*', 'NN')], [('*', 'NN')], [('long', 'RB')], [('?', '.')], [('apple', 'NN')], [('even', 'RB')], [('[', 'NN')], [('unix', 'NN')], [('implementation', 'NN')], [(']', 'NN')], [('(', '(')], [(')', ')')], [('early', 'RB')], [('mac', 'NN')], [('computers', 'NNS')], [('complete', 'JJ')], [('system', 'NN')], [('7', 'CD')], [('gui', 'NN')], [('laid', 'NN')], [('top', 'NN')], [('.', '.')], [('anyone', 'NN')], [('care', 'NN')], [('speculate', 'NN')], [('mac', 'NN')], [('os', 'NN')], [('everyone', 'NN')], [('got', 'VBD')], [('?', '.')], [('microsoft', 'NN')], [('also', 'RB')], [('[', 'NN')], [('licensed', 'VBN')], [('unix', 'NN')], [('version', 'NN')], [(']', 'NN')], [('(', '(')], [(')', ')')], [('&', 'CC')], [('early', 'RB')], [('days', 'NNS')], [('.', '.')], [('one', 'CD')], [('knew', 'NNS')], [('computers', 'NNS')], [('suck', 'NN')], [('.', '.')], [('take', 'VB')], [('long', 'RB')], [('reach', 'NN')], [('average', 'JJ')], [('pc', 'NN')], [('user', 'NN')], [('?', '.')], [('thoughts', 'NNS')], [('?', '.')]]","forgive ignorance ask question please . understand , linux first open source unix-like o , correct ? unix around since 1969 ! question , robust stability security feature like protect memory , preemptive multitasking , secure user accounts/admin stuff exist long ... mac o window lack robustness full decade linux create ? word , way make o would virtually never crash orderly memory management security rest , apple microsoft ship fragile o 's could topple single rogue app generally terrible security * * long ? apple even [ unix implementation ] ( ) early mac computer complete system 7 gui laid top . anyone care speculate mac o everyone get ? microsoft also [ license unix version ] ( ) & early day . one knew computer suck . take long reach average pc user ? thought ?",5_cpu_computer_run_process,1
250,rzc739,Best Way to Learn Programming theory Summarized,Help,42,0.94,computerscience,https://www.reddit.com/r/computerscience/comments/rzc739/best_way_to_learn_programming_theory_summarized/,23,"i am new to coding. i have a math background (up to diff eq and la). i want to learn the basic idea behind all programming languages. the idea of syntax, how things operate, the different types of programs. just a review of how programming works.

i know nothing. i need to understand it for my physics major. i learn best by theory and having a foundation of the most basic principles and abstract terms (nothing specific or applied at first).

do any of you know any good websites or videos that describe the idea of programming? (i would prefer relation to math terms like “function” or “linear” or “transformation” or a set of axioms or system that can be diagramed).

i want to understand the process  and the terms before learning code.",1641681729.0,"['new', 'cod', '.', 'math', 'background', '(', 'diff', 'eq', 'la', ')', '.', 'want', 'learn', 'basic', 'idea', 'behind', 'program', 'language', '.', 'idea', 'syntax', ',', 'thing', 'operate', ',', 'different', 'type', 'program', '.', 'review', 'program', 'work', '.', 'know', 'nothing', '.', 'need', 'understand', 'physic', 'major', '.', 'learn', 'best', 'theory', 'foundation', 'basic', 'principle', 'abstract', 'term', '(', 'nothing', 'specific', 'apply', 'first', ')', '.', 'know', 'good', 'website', 'video', 'describe', 'idea', 'program', '?', '(', 'would', 'prefer', 'relation', 'math', 'term', 'like', '“', 'function', '”', '“', 'linear', '”', '“', 'transformation', '”', 'set', 'axiom', 'system', 'diagram', ')', '.', 'want', 'understand', 'process', 'term', 'learn', 'code', '.']","[[('new', 'JJ')], [('coding', 'VBG')], [('.', '.')], [('math', 'NN')], [('background', 'NN')], [('(', '(')], [('diff', 'NN')], [('eq', 'NN')], [('la', 'NN')], [(')', ')')], [('.', '.')], [('want', 'NN')], [('learn', 'NN')], [('basic', 'JJ')], [('idea', 'NN')], [('behind', 'IN')], [('programming', 'VBG')], [('languages', 'NNS')], [('.', '.')], [('idea', 'NN')], [('syntax', 'NN')], [(',', ',')], [('things', 'NNS')], [('operate', 'NN')], [(',', ',')], [('different', 'JJ')], [('types', 'NNS')], [('programs', 'NNS')], [('.', '.')], [('review', 'NN')], [('programming', 'VBG')], [('works', 'NNS')], [('.', '.')], [('know', 'VB')], [('nothing', 'NN')], [('.', '.')], [('need', 'NN')], [('understand', 'NN')], [('physics', 'NNS')], [('major', 'JJ')], [('.', '.')], [('learn', 'NN')], [('best', 'JJS')], [('theory', 'NN')], [('foundation', 'NN')], [('basic', 'JJ')], [('principles', 'NNS')], [('abstract', 'NN')], [('terms', 'NNS')], [('(', '(')], [('nothing', 'NN')], [('specific', 'JJ')], [('applied', 'VBN')], [('first', 'RB')], [(')', ')')], [('.', '.')], [('know', 'VB')], [('good', 'JJ')], [('websites', 'NNS')], [('videos', 'NNS')], [('describe', 'NN')], [('idea', 'NN')], [('programming', 'VBG')], [('?', '.')], [('(', '(')], [('would', 'MD')], [('prefer', 'NN')], [('relation', 'NN')], [('math', 'NN')], [('terms', 'NNS')], [('like', 'IN')], [('“', 'NN')], [('function', 'NN')], [('”', 'NN')], [('“', 'NN')], [('linear', 'NN')], [('”', 'NN')], [('“', 'NN')], [('transformation', 'NN')], [('”', 'NN')], [('set', 'NN')], [('axioms', 'NNS')], [('system', 'NN')], [('diagramed', 'VBN')], [(')', ')')], [('.', '.')], [('want', 'NN')], [('understand', 'NN')], [('process', 'NN')], [('terms', 'NNS')], [('learning', 'VBG')], [('code', 'NN')], [('.', '.')]]","new cod . math background ( diff eq la ) . want learn basic idea behind program language . idea syntax , thing operate , different type program . review program work . know nothing . need understand physic major . learn best theory foundation basic principle abstract term ( nothing specific apply first ) . know good website video describe idea program ? ( would prefer relation math term like “ function ” “ linear ” “ transformation ” set axiom system diagram ) . want understand process term learn code .",2_computer_learn_science_study,4
251,ryzj9x,Where is database research going these days?,Help,44,0.96,computerscience,https://www.reddit.com/r/computerscience/comments/ryzj9x/where_is_database_research_going_these_days/,10,"hi!
i am a data analyst intern who loves math and databases and i am pretty sure that in the future i want to do something that uses both of these things.
for that reason, i have become very curious about where database research is going these days. i do not have much interest in software development per se but databases are just such mathematical marvels that i cannot help but lean towards them.

so, what is currently being researched? user centered design?( i love this and it is very overlooked by companies)
new database paradigms? graph databases? etc...?

so what else is there?",1641647438.0,"['hi', '!', 'data', 'analyst', 'intern', 'love', 'math', 'database', 'pretty', 'sure', 'future', 'want', 'something', 'us', 'thing', '.', 'reason', ',', 'become', 'curious', 'database', 'research', 'go', 'day', '.', 'much', 'interest', 'software', 'development', 'per', 'se', 'database', 'mathematical', 'marvel', 'help', 'lean', 'towards', '.', ',', 'currently', 'research', '?', 'user', 'center', 'design', '?', '(', 'love', 'overlook', 'company', ')', 'new', 'database', 'paradigm', '?', 'graph', 'database', '?', 'etc', '...', '?', 'else', '?']","[[('hi', 'NN')], [('!', '.')], [('data', 'NNS')], [('analyst', 'NN')], [('intern', 'NN')], [('loves', 'NNS')], [('math', 'NN')], [('databases', 'NNS')], [('pretty', 'RB')], [('sure', 'NN')], [('future', 'NN')], [('want', 'NN')], [('something', 'NN')], [('uses', 'NNS')], [('things', 'NNS')], [('.', '.')], [('reason', 'NN')], [(',', ',')], [('become', 'NN')], [('curious', 'JJ')], [('database', 'NN')], [('research', 'NN')], [('going', 'VBG')], [('days', 'NNS')], [('.', '.')], [('much', 'JJ')], [('interest', 'NN')], [('software', 'NN')], [('development', 'NN')], [('per', 'IN')], [('se', 'NN')], [('databases', 'NNS')], [('mathematical', 'JJ')], [('marvels', 'NNS')], [('help', 'NN')], [('lean', 'NN')], [('towards', 'NNS')], [('.', '.')], [(',', ',')], [('currently', 'RB')], [('researched', 'VBN')], [('?', '.')], [('user', 'NN')], [('centered', 'VBN')], [('design', 'NN')], [('?', '.')], [('(', '(')], [('love', 'NN')], [('overlooked', 'VBN')], [('companies', 'NNS')], [(')', ')')], [('new', 'JJ')], [('database', 'NN')], [('paradigms', 'NN')], [('?', '.')], [('graph', 'NN')], [('databases', 'NNS')], [('?', '.')], [('etc', 'NN')], [('...', ':')], [('?', '.')], [('else', 'RB')], [('?', '.')]]","hi ! data analyst intern love math database pretty sure future want something us thing . reason , become curious database research go day . much interest software development per se database mathematical marvel help lean towards . , currently research ? user center design ? ( love overlook company ) new database paradigm ? graph database ? etc ... ? else ?",-1_abazbz2abz_2520_problem_use,2
252,ryeny8,"Does the rise of no code, low code and AI coding tools, like Codex and Copilot, threaten developer jobs?",Advice,129,0.86,computerscience,https://www.reddit.com/r/computerscience/comments/ryeny8/does_the_rise_of_no_code_low_code_and_ai_coding/,128,"a career counsellor said that i should teach math (my other possible career goal) rather than go into software development, since the rise of no code tools and machine learning code generation will mean that i will not have a job in 10-15 years. there is so much hype about this that i thought i would ask the opinions of those here that know what they are talking about.

&#x200b;

thank you",1641581316.0,"['career', 'counsellor', 'say', 'teach', 'math', '(', 'possible', 'career', 'goal', ')', 'rather', 'go', 'software', 'development', ',', 'since', 'rise', 'code', 'tool', 'machine', 'learn', 'code', 'generation', 'mean', 'job', '10-15', 'year', '.', 'much', 'hype', 'thought', 'would', 'ask', 'opinion', 'know', 'talk', '.', '&', '#', 'x200b', ';', 'thank']","[[('career', 'NN')], [('counsellor', 'NN')], [('said', 'VBD')], [('teach', 'NN')], [('math', 'NN')], [('(', '(')], [('possible', 'JJ')], [('career', 'NN')], [('goal', 'NN')], [(')', ')')], [('rather', 'RB')], [('go', 'VB')], [('software', 'NN')], [('development', 'NN')], [(',', ',')], [('since', 'IN')], [('rise', 'NN')], [('code', 'NN')], [('tools', 'NNS')], [('machine', 'NN')], [('learning', 'VBG')], [('code', 'NN')], [('generation', 'NN')], [('mean', 'NN')], [('job', 'NN')], [('10-15', 'JJ')], [('years', 'NNS')], [('.', '.')], [('much', 'JJ')], [('hype', 'NN')], [('thought', 'NN')], [('would', 'MD')], [('ask', 'NN')], [('opinions', 'NNS')], [('know', 'VB')], [('talking', 'VBG')], [('.', '.')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('thank', 'NN')]]","career counsellor say teach math ( possible career goal ) rather go software development , since rise code tool machine learn code generation mean job 10-15 year . much hype thought would ask opinion know talk . & # x200b ; thank",2_computer_learn_science_study,1
253,rxuuqm,what would be the most efficient way to have a computer guess a number?,,14,0.8,computerscience,https://www.reddit.com/r/computerscience/comments/rxuuqm/what_would_be_the_most_efficient_way_to_have_a/,25,"say you picked a really large number at random and wanted to find it by repeated guessing, what would be the most efficient way to do that? 

i have been trying (really just out of curiosity) this and so far the fastest outcomes are usually from just incrementing the number one by one until it gets it but i do not feel like that is the most efficient solution. what would be a better way?",1641518891.0,"['say', 'picked', 'really', 'large', 'number', 'random', 'want', 'find', 'repeat', 'guess', ',', 'would', 'efficient', 'way', '?', 'try', '(', 'really', 'curiosity', ')', 'far', 'fast', 'outcome', 'usually', 'incrementing', 'number', 'one', 'one', 'get', 'feel', 'like', 'efficient', 'solution', '.', 'would', 'well', 'way', '?']","[[('say', 'VB')], [('picked', 'NNS')], [('really', 'RB')], [('large', 'JJ')], [('number', 'NN')], [('random', 'NN')], [('wanted', 'VBD')], [('find', 'VB')], [('repeated', 'VBN')], [('guessing', 'VBG')], [(',', ',')], [('would', 'MD')], [('efficient', 'NN')], [('way', 'NN')], [('?', '.')], [('trying', 'VBG')], [('(', '(')], [('really', 'RB')], [('curiosity', 'NN')], [(')', ')')], [('far', 'RB')], [('fastest', 'JJS')], [('outcomes', 'NNS')], [('usually', 'RB')], [('incrementing', 'VBG')], [('number', 'NN')], [('one', 'CD')], [('one', 'CD')], [('gets', 'VBZ')], [('feel', 'NN')], [('like', 'IN')], [('efficient', 'NN')], [('solution', 'NN')], [('.', '.')], [('would', 'MD')], [('better', 'RBR')], [('way', 'NN')], [('?', '.')]]","say picked really large number random want find repeat guess , would efficient way ? try ( really curiosity ) far fast outcome usually incrementing number one one get feel like efficient solution . would well way ?",-1_abazbz2abz_2520_problem_use,3
254,rxjst3,Parametric vs. non-parametric statistics. A 2-minute visual guide. [OC],Discussion,64,0.97,computerscience,https://www.reddit.com/r/computerscience/comments/rxjst3/parametric_vs_nonparametric_statistics_a_2minute/,1,"&#x200b;









🔵 parametric and non-parametric statistics 🔵  


🧑‍💻 if you have written code before you have heard of a parameter. it is what a function takes as input to do some computation on and return an output. similarly, probability distributions have parameters. these define the properties of the distribution.  


🔔 in the case of a normal distribution, the mean and standard deviation are its parameters. the mean controls the position of the distribution while the standard deviation controls the spread or ""peakiness"" of the bell curve.  


⛷️ in the parametric approach, the model consists of a finite set of parameters that characterize it. the big assumption that a parametric model makes is that the model will do well on the task if the underlying distribution from which your data is sampled matches the model. if that is not the case the model and data mismatch will hurt the performance on the task you care about.  


🤸 a non-parametric model does not rely on parametric assumptions and is generally more flexible. it is a good choice if you do not have any prior knowledge about what could be a good model that reflects your data distribution. a histogram is a good example that can model points sampled from an arbitrary distribution.  


🧐 however, there is no free lunch: you will need enough data points to get a good approximation otherwise the histogram will look nothing like the underlying distribution.  


\---------------------------------------------------------------------------------  


if you like such content and would like to steer the topics i cover, feel free to suggest topics you would like to know more about in the comments.",1641489774.0,"['&', '#', 'x200b', ';', '🔵', 'parametric', 'non-parametric', 'statistic', '🔵', '🧑\u200d💻', 'write', 'code', 'heard', 'parameter', '.', 'function', 'take', 'input', 'computation', 'return', 'output', '.', 'similarly', ',', 'probability', 'distribution', 'parameter', '.', 'define', 'property', 'distribution', '.', '🔔', 'case', 'normal', 'distribution', ',', 'mean', 'standard', 'deviation', 'parameter', '.', 'mean', 'control', 'position', 'distribution', 'standard', 'deviation', 'control', 'spread', '``', 'peakiness', ""''"", 'bell', 'curve', '.', '⛷️', 'parametric', 'approach', ',', 'model', 'consists', 'finite', 'set', 'parameter', 'characterize', '.', 'big', 'assumption', 'parametric', 'model', 'make', 'model', 'well', 'task', 'underlie', 'distribution', 'data', 'sample', 'match', 'model', '.', 'case', 'model', 'data', 'mismatch', 'hurt', 'performance', 'task', 'care', '.', '🤸', 'non-parametric', 'model', 'rely', 'parametric', 'assumption', 'generally', 'flexible', '.', 'good', 'choice', 'prior', 'knowledge', 'could', 'good', 'model', 'reflect', 'data', 'distribution', '.', 'histogram', 'good', 'example', 'model', 'point', 'sample', 'arbitrary', 'distribution', '.', '🧐', 'however', ',', 'free', 'lunch', ':', 'need', 'enough', 'data', 'point', 'get', 'good', 'approximation', 'otherwise', 'histogram', 'look', 'nothing', 'like', 'underlie', 'distribution', '.', '\\', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '-', 'like', 'content', 'would', 'like', 'steer', 'topic', 'cover', ',', 'feel', 'free', 'suggest', 'topic', 'would', 'like', 'know', 'comment', '.']","[[('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('🔵', 'NN')], [('parametric', 'NN')], [('non-parametric', 'JJ')], [('statistics', 'NNS')], [('🔵', 'NN')], [('🧑\u200d💻', 'NN')], [('written', 'VBN')], [('code', 'NN')], [('heard', 'NN')], [('parameter', 'NN')], [('.', '.')], [('function', 'NN')], [('takes', 'VBZ')], [('input', 'NN')], [('computation', 'NN')], [('return', 'NN')], [('output', 'NN')], [('.', '.')], [('similarly', 'RB')], [(',', ',')], [('probability', 'NN')], [('distributions', 'NNS')], [('parameters', 'NNS')], [('.', '.')], [('define', 'NN')], [('properties', 'NNS')], [('distribution', 'NN')], [('.', '.')], [('🔔', 'NN')], [('case', 'NN')], [('normal', 'JJ')], [('distribution', 'NN')], [(',', ',')], [('mean', 'NN')], [('standard', 'NN')], [('deviation', 'NN')], [('parameters', 'NNS')], [('.', '.')], [('mean', 'NN')], [('controls', 'NNS')], [('position', 'NN')], [('distribution', 'NN')], [('standard', 'NN')], [('deviation', 'NN')], [('controls', 'NNS')], [('spread', 'NN')], [('``', '``')], [('peakiness', 'NN')], [(""''"", ""''"")], [('bell', 'NN')], [('curve', 'NN')], [('.', '.')], [('⛷️', 'NN')], [('parametric', 'NN')], [('approach', 'NN')], [(',', ',')], [('model', 'NN')], [('consists', 'NNS')], [('finite', 'NN')], [('set', 'NN')], [('parameters', 'NNS')], [('characterize', 'NN')], [('.', '.')], [('big', 'JJ')], [('assumption', 'NN')], [('parametric', 'NN')], [('model', 'NN')], [('makes', 'VBZ')], [('model', 'NN')], [('well', 'RB')], [('task', 'NN')], [('underlying', 'VBG')], [('distribution', 'NN')], [('data', 'NNS')], [('sampled', 'VBN')], [('matches', 'NNS')], [('model', 'NN')], [('.', '.')], [('case', 'NN')], [('model', 'NN')], [('data', 'NNS')], [('mismatch', 'NN')], [('hurt', 'NN')], [('performance', 'NN')], [('task', 'NN')], [('care', 'NN')], [('.', '.')], [('🤸', 'NN')], [('non-parametric', 'JJ')], [('model', 'NN')], [('rely', 'RB')], [('parametric', 'NN')], [('assumptions', 'NNS')], [('generally', 'RB')], [('flexible', 'JJ')], [('.', '.')], [('good', 'JJ')], [('choice', 'NN')], [('prior', 'RB')], [('knowledge', 'NN')], [('could', 'MD')], [('good', 'JJ')], [('model', 'NN')], [('reflects', 'VBZ')], [('data', 'NNS')], [('distribution', 'NN')], [('.', '.')], [('histogram', 'NN')], [('good', 'JJ')], [('example', 'NN')], [('model', 'NN')], [('points', 'NNS')], [('sampled', 'VBN')], [('arbitrary', 'JJ')], [('distribution', 'NN')], [('.', '.')], [('🧐', 'NN')], [('however', 'RB')], [(',', ',')], [('free', 'JJ')], [('lunch', 'NN')], [(':', ':')], [('need', 'NN')], [('enough', 'RB')], [('data', 'NNS')], [('points', 'NNS')], [('get', 'VB')], [('good', 'JJ')], [('approximation', 'NN')], [('otherwise', 'RB')], [('histogram', 'NN')], [('look', 'NN')], [('nothing', 'NN')], [('like', 'IN')], [('underlying', 'VBG')], [('distribution', 'NN')], [('.', '.')], [('\\', 'NN')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('-', ':')], [('like', 'IN')], [('content', 'NN')], [('would', 'MD')], [('like', 'IN')], [('steer', 'NN')], [('topics', 'NNS')], [('cover', 'NN')], [(',', ',')], [('feel', 'NN')], [('free', 'JJ')], [('suggest', 'NN')], [('topics', 'NNS')], [('would', 'MD')], [('like', 'IN')], [('know', 'VB')], [('comments', 'NNS')], [('.', '.')]]","& # x200b ; 🔵 parametric non-parametric statistic 🔵 🧑‍💻 write code heard parameter . function take input computation return output . similarly , probability distribution parameter . define property distribution . 🔔 case normal distribution , mean standard deviation parameter . mean control position distribution standard deviation control spread `` peakiness '' bell curve . ⛷️ parametric approach , model consists finite set parameter characterize . big assumption parametric model make model well task underlie distribution data sample match model . case model data mismatch hurt performance task care . 🤸 non-parametric model rely parametric assumption generally flexible . good choice prior knowledge could good model reflect data distribution . histogram good example model point sample arbitrary distribution . 🧐 however , free lunch : need enough data point get good approximation otherwise histogram look nothing like underlie distribution . \ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- - like content would like steer topic cover , feel free suggest topic would like know comment .",0_algorithm_time_node_bill,4
255,rxn4al,Why is the castle clock a computer?,Help,1,0.6,computerscience,https://www.reddit.com/r/computerscience/comments/rxn4al/why_is_the_castle_clock_a_computer/,3,"the castle clock of al-jazari is said to be the first programmable analog computer. now i get why it is analog and also what makes it programmable (accounting for the length of day and night), but what makes it a computer? it gives the time, does that make all clocks computers?",1641498290.0,"['castle', 'clock', 'al-jazari', 'say', 'first', 'programmable', 'analog', 'computer', '.', 'get', 'analog', 'also', 'make', 'programmable', '(', 'accounting', 'length', 'day', 'night', ')', ',', 'make', 'computer', '?', 'give', 'time', ',', 'make', 'clock', 'computer', '?']","[[('castle', 'NN')], [('clock', 'NN')], [('al-jazari', 'NN')], [('said', 'VBD')], [('first', 'RB')], [('programmable', 'JJ')], [('analog', 'NN')], [('computer', 'NN')], [('.', '.')], [('get', 'VB')], [('analog', 'NN')], [('also', 'RB')], [('makes', 'VBZ')], [('programmable', 'JJ')], [('(', '(')], [('accounting', 'NN')], [('length', 'NN')], [('day', 'NN')], [('night', 'NN')], [(')', ')')], [(',', ',')], [('makes', 'VBZ')], [('computer', 'NN')], [('?', '.')], [('gives', 'VBZ')], [('time', 'NN')], [(',', ',')], [('make', 'VB')], [('clocks', 'NNS')], [('computers', 'NNS')], [('?', '.')]]","castle clock al-jazari say first programmable analog computer . get analog also make programmable ( accounting length day night ) , make computer ? give time , make clock computer ?",-1_abazbz2abz_2520_problem_use,4
256,rx1mtm,Public key encription,,34,0.84,computerscience,https://www.reddit.com/r/computerscience/comments/rx1mtm/public_key_encription/,30,"i have been trying to wrap my head around it, but i do not get how the publick and private key are combined.

like, if i only i know the key, and i use it, the receiver will not be able to decript it, or will it?

and if we both have it, it means it was shared before being aplied, and i sent it to the receiver through simetric enciption, thus defeating the purpose of it existing since everyone with the public key (wich i am assuming is public) can decript the message and find what the private key is?...

what am i missing here? i cannot seem to find any explanations that made me understand it, if you know any good explanations plz share!

edit: the problem is that i thought that the public key was  some preexisting key, when in fact it is generated by me at the same time i generate the private one, i share the public one, te receiver uses it to encrypt stuff, and only the private key can decrypt what was encrypted with the public key, and, it is very hard (close to impossible rn) to get the private key by looking at the public one!",1641429660.0,"['try', 'wrap', 'head', 'around', ',', 'get', 'publick', 'private', 'key', 'combine', '.', 'like', ',', 'know', 'key', ',', 'use', ',', 'receiver', 'able', 'decript', ',', '?', ',', 'mean', 'share', 'aplied', ',', 'sent', 'receiver', 'simetric', 'enciption', ',', 'thus', 'defeat', 'purpose', 'exist', 'since', 'everyone', 'public', 'key', '(', 'wich', 'assume', 'public', ')', 'decript', 'message', 'find', 'private', 'key', '?', '...', 'miss', '?', 'seem', 'find', 'explanation', 'make', 'understand', ',', 'know', 'good', 'explanation', 'plz', 'share', '!', 'edit', ':', 'problem', 'thought', 'public', 'key', 'preexist', 'key', ',', 'fact', 'generate', 'time', 'generate', 'private', 'one', ',', 'share', 'public', 'one', ',', 'te', 'receiver', 'us', 'encrypt', 'stuff', ',', 'private', 'key', 'decrypt', 'encrypt', 'public', 'key', ',', ',', 'hard', '(', 'close', 'impossible', 'rn', ')', 'get', 'private', 'key', 'look', 'public', 'one', '!']","[[('trying', 'VBG')], [('wrap', 'NN')], [('head', 'NN')], [('around', 'IN')], [(',', ',')], [('get', 'VB')], [('publick', 'NN')], [('private', 'JJ')], [('key', 'NN')], [('combined', 'VBN')], [('.', '.')], [('like', 'IN')], [(',', ',')], [('know', 'VB')], [('key', 'NN')], [(',', ',')], [('use', 'NN')], [(',', ',')], [('receiver', 'NN')], [('able', 'JJ')], [('decript', 'NN')], [(',', ',')], [('?', '.')], [(',', ',')], [('means', 'NNS')], [('shared', 'VBN')], [('aplied', 'VBN')], [(',', ',')], [('sent', 'NN')], [('receiver', 'NN')], [('simetric', 'NN')], [('enciption', 'NN')], [(',', ',')], [('thus', 'RB')], [('defeating', 'VBG')], [('purpose', 'NN')], [('existing', 'VBG')], [('since', 'IN')], [('everyone', 'NN')], [('public', 'NN')], [('key', 'NN')], [('(', '(')], [('wich', 'NN')], [('assuming', 'VBG')], [('public', 'NN')], [(')', ')')], [('decript', 'NN')], [('message', 'NN')], [('find', 'VB')], [('private', 'JJ')], [('key', 'NN')], [('?', '.')], [('...', ':')], [('missing', 'VBG')], [('?', '.')], [('seem', 'NN')], [('find', 'VB')], [('explanations', 'NNS')], [('made', 'VBN')], [('understand', 'NN')], [(',', ',')], [('know', 'VB')], [('good', 'JJ')], [('explanations', 'NNS')], [('plz', 'NN')], [('share', 'NN')], [('!', '.')], [('edit', 'NN')], [(':', ':')], [('problem', 'NN')], [('thought', 'NN')], [('public', 'NN')], [('key', 'NN')], [('preexisting', 'VBG')], [('key', 'NN')], [(',', ',')], [('fact', 'NN')], [('generated', 'VBN')], [('time', 'NN')], [('generate', 'NN')], [('private', 'JJ')], [('one', 'CD')], [(',', ',')], [('share', 'NN')], [('public', 'NN')], [('one', 'CD')], [(',', ',')], [('te', 'NN')], [('receiver', 'NN')], [('uses', 'NNS')], [('encrypt', 'NN')], [('stuff', 'NN')], [(',', ',')], [('private', 'JJ')], [('key', 'NN')], [('decrypt', 'NN')], [('encrypted', 'VBN')], [('public', 'NN')], [('key', 'NN')], [(',', ',')], [(',', ',')], [('hard', 'JJ')], [('(', '(')], [('close', 'RB')], [('impossible', 'JJ')], [('rn', 'NN')], [(')', ')')], [('get', 'VB')], [('private', 'JJ')], [('key', 'NN')], [('looking', 'VBG')], [('public', 'NN')], [('one', 'CD')], [('!', '.')]]","try wrap head around , get publick private key combine . like , know key , use , receiver able decript , ? , mean share aplied , sent receiver simetric enciption , thus defeat purpose exist since everyone public key ( wich assume public ) decript message find private key ? ... miss ? seem find explanation make understand , know good explanation plz share ! edit : problem thought public key preexist key , fact generate time generate private one , share public one , te receiver us encrypt stuff , private key decrypt encrypt public key , , hard ( close impossible rn ) get private key look public one !",6_server_packet_key_hash,2
257,rx5u9h,What is the maximum # of guesses an reasonable Minesweeper player needs to take?,Discussion,11,0.82,computerscience,https://www.reddit.com/r/computerscience/comments/rx5u9h/what_is_the_maximum_of_guesses_an_reasonable/,4,"not homework, just math.

suppose there is an arrangement of x mines on an m x n grid. a player enters a sequence of clicks, which each ""flood fill"" outwards until adjacent mines are hit. they make logical deductions/inferences whenever possible, and if they need to guess, they will take any guess that is 50-50 or better. they do not have any intuition - i.e. they will not visually analyze the grid to see if one safe click is ""better"" than another.

what is the upper bound for the number of guesses such a player may need to take?",1641444320.0,"['homework', ',', 'math', '.', 'suppose', 'arrangement', 'x', 'mine', 'x', 'n', 'grid', '.', 'player', 'enters', 'sequence', 'click', ',', '``', 'flood', 'fill', ""''"", 'outwards', 'adjacent', 'mine', 'hit', '.', 'make', 'logical', 'deductions/inferences', 'whenever', 'possible', ',', 'need', 'guess', ',', 'take', 'guess', '50-50', 'well', '.', 'intuition', '-', 'i.e', '.', 'visually', 'analyze', 'grid', 'see', 'one', 'safe', 'click', '``', 'well', ""''"", 'another', '.', 'upper', 'bound', 'number', 'guess', 'player', 'may', 'need', 'take', '?']","[[('homework', 'NN')], [(',', ',')], [('math', 'NN')], [('.', '.')], [('suppose', 'NN')], [('arrangement', 'NN')], [('x', 'NN')], [('mines', 'NNS')], [('x', 'NN')], [('n', 'NN')], [('grid', 'NN')], [('.', '.')], [('player', 'NN')], [('enters', 'NNS')], [('sequence', 'NN')], [('clicks', 'NNS')], [(',', ',')], [('``', '``')], [('flood', 'NN')], [('fill', 'NN')], [(""''"", ""''"")], [('outwards', 'NNS')], [('adjacent', 'NN')], [('mines', 'NNS')], [('hit', 'NN')], [('.', '.')], [('make', 'VB')], [('logical', 'JJ')], [('deductions/inferences', 'NNS')], [('whenever', 'NN')], [('possible', 'JJ')], [(',', ',')], [('need', 'NN')], [('guess', 'NN')], [(',', ',')], [('take', 'VB')], [('guess', 'NN')], [('50-50', 'JJ')], [('better', 'RBR')], [('.', '.')], [('intuition', 'NN')], [('-', ':')], [('i.e', 'NN')], [('.', '.')], [('visually', 'RB')], [('analyze', 'NN')], [('grid', 'NN')], [('see', 'VB')], [('one', 'CD')], [('safe', 'JJ')], [('click', 'NN')], [('``', '``')], [('better', 'RBR')], [(""''"", ""''"")], [('another', 'DT')], [('.', '.')], [('upper', 'JJ')], [('bound', 'NN')], [('number', 'NN')], [('guesses', 'NNS')], [('player', 'NN')], [('may', 'MD')], [('need', 'NN')], [('take', 'VB')], [('?', '.')]]","homework , math . suppose arrangement x mine x n grid . player enters sequence click , `` flood fill '' outwards adjacent mine hit . make logical deductions/inferences whenever possible , need guess , take guess 50-50 well . intuition - i.e . visually analyze grid see one safe click `` well '' another . upper bound number guess player may need take ?",0_algorithm_time_node_bill,2
259,rwnjr8,What is k-means clustering? A 2-minute visual guide. [OC],Discussion,52,0.93,computerscience,https://www.reddit.com/r/computerscience/comments/rwnjr8/what_is_kmeans_clustering_a_2minute_visual_guide/,1,"&#x200b;







🔵 k-means clustering 🔵

🔱 the k-means algorithm divides n data points into k disjoint clusters. it is a well-known unsupervised learning model. this means that the k-means algorithm only requires the data points and does not need the corresponding cluster that each point belongs to as this is what the algorithm figures out.

✨ the clusters are found by allocating points in such a way that the total variance of the points within each cluster (intra-cluster variance) is reduced or minimized. although it iterates quite fast, the k-means algorithm can have varying cluster formations based on the initialization. it has been widely implemented in many software packages. the scikit-learn package for python is the one that i have used most often.

🔁 the most common method to perform the clustering is iterative. it alternates between two steps: (1) assigning each point to a cluster based on the point's closeness (or distance) to the cluster center and (2) updating the cluster center (called mean or centroid; hence the name k-means one for each of the k clusters) based on all the points that belong to this particular cluster. the iterations are usually performed until the centroids stabilize (converge) between consecutive iterations.

🤓 k-means is popular in scenarios where the data is known to consist of multiple groups (distributions) but it is unknown which point belongs to which group (cluster). it can be used for data analysis and splitting data that comes from multiple distributions, image segmentation, color quantization among other things.

\---------------------------------------------------------------------------------

i have been studying and practicing machine learning and computer vision for 7+ years. as time has passed i have realized more and more the power of data-driven decision-making. seeing firsthand what ml is capable of i have personally felt that it can be a great inter-disciplinary tool to automate workflows. i will bring up different topics of ml in the form of short notes which can be of interest to existing practitioners and fresh enthusiasts alike.

the posts will cover topics like statistics, linear algebra, probability, data representation, modeling, computer vision among other things. i want this to be an incremental journey, starting from the basics and building up to more complex ideas.

if you like such content and would like to steer the topics i cover, feel free to suggest topics you would like to know more about in the comments.",1641391224.0,"['&', '#', 'x200b', ';', '🔵', 'k-means', 'cluster', '🔵', '🔱', 'k-means', 'algorithm', 'divide', 'n', 'data', 'point', 'k', 'disjoint', 'cluster', '.', 'well-known', 'unsupervised', 'learn', 'model', '.', 'mean', 'k-means', 'algorithm', 'require', 'data', 'point', 'need', 'correspond', 'cluster', 'point', 'belongs', 'algorithm', 'figure', '.', '✨', 'cluster', 'found', 'allocate', 'point', 'way', 'total', 'variance', 'point', 'within', 'cluster', '(', 'intra-cluster', 'variance', ')', 'reduce', 'minimize', '.', 'although', 'iterates', 'quite', 'fast', ',', 'k-means', 'algorithm', 'vary', 'cluster', 'formation', 'base', 'initialization', '.', 'widely', 'implement', 'many', 'software', 'package', '.', 'scikit-learn', 'package', 'python', 'one', 'use', 'often', '.', '🔁', 'common', 'method', 'perform', 'cluster', 'iterative', '.', 'alternate', 'two', 'step', ':', '(', '1', ')', 'assign', 'point', 'cluster', 'base', 'point', ""'s"", 'closeness', '(', 'distance', ')', 'cluster', 'center', '(', '2', ')', 'update', 'cluster', 'center', '(', 'call', 'mean', 'centroid', ';', 'hence', 'name', 'k-means', 'one', 'k', 'cluster', ')', 'base', 'point', 'belong', 'particular', 'cluster', '.', 'iteration', 'usually', 'perform', 'centroid', 'stabilize', '(', 'converge', ')', 'consecutive', 'iteration', '.', '🤓', 'k-means', 'popular', 'scenario', 'data', 'know', 'consist', 'multiple', 'group', '(', 'distribution', ')', 'unknown', 'point', 'belongs', 'group', '(', 'cluster', ')', '.', 'use', 'data', 'analysis', 'splitting', 'data', 'come', 'multiple', 'distribution', ',', 'image', 'segmentation', ',', 'color', 'quantization', 'among', 'thing', '.', '\\', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '-', 'study', 'practice', 'machine', 'learn', 'computer', 'vision', '7+', 'year', '.', 'time', 'pass', 'realize', 'power', 'data-driven', 'decision-making', '.', 'see', 'firsthand', 'ml', 'capable', 'personally', 'felt', 'great', 'inter-disciplinary', 'tool', 'automate', 'workflow', '.', 'bring', 'different', 'topic', 'ml', 'form', 'short', 'note', 'interest', 'exist', 'practitioner', 'fresh', 'enthusiast', 'alike', '.', 'post', 'cover', 'topic', 'like', 'statistic', ',', 'linear', 'algebra', ',', 'probability', ',', 'data', 'representation', ',', 'model', ',', 'computer', 'vision', 'among', 'thing', '.', 'want', 'incremental', 'journey', ',', 'start', 'basic', 'building', 'complex', 'idea', '.', 'like', 'content', 'would', 'like', 'steer', 'topic', 'cover', ',', 'feel', 'free', 'suggest', 'topic', 'would', 'like', 'know', 'comment', '.']","[[('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('🔵', 'NN')], [('k-means', 'NNS')], [('clustering', 'VBG')], [('🔵', 'NN')], [('🔱', 'NN')], [('k-means', 'NNS')], [('algorithm', 'NN')], [('divides', 'NNS')], [('n', 'NN')], [('data', 'NNS')], [('points', 'NNS')], [('k', 'NN')], [('disjoint', 'NN')], [('clusters', 'NNS')], [('.', '.')], [('well-known', 'JJ')], [('unsupervised', 'JJ')], [('learning', 'VBG')], [('model', 'NN')], [('.', '.')], [('means', 'NNS')], [('k-means', 'NNS')], [('algorithm', 'NN')], [('requires', 'VBZ')], [('data', 'NNS')], [('points', 'NNS')], [('need', 'NN')], [('corresponding', 'VBG')], [('cluster', 'NN')], [('point', 'NN')], [('belongs', 'NNS')], [('algorithm', 'NN')], [('figures', 'NNS')], [('.', '.')], [('✨', 'NN')], [('clusters', 'NNS')], [('found', 'NN')], [('allocating', 'VBG')], [('points', 'NNS')], [('way', 'NN')], [('total', 'JJ')], [('variance', 'NN')], [('points', 'NNS')], [('within', 'IN')], [('cluster', 'NN')], [('(', '(')], [('intra-cluster', 'NN')], [('variance', 'NN')], [(')', ')')], [('reduced', 'VBN')], [('minimized', 'VBN')], [('.', '.')], [('although', 'IN')], [('iterates', 'NNS')], [('quite', 'RB')], [('fast', 'NN')], [(',', ',')], [('k-means', 'NNS')], [('algorithm', 'NN')], [('varying', 'VBG')], [('cluster', 'NN')], [('formations', 'NNS')], [('based', 'VBN')], [('initialization', 'NN')], [('.', '.')], [('widely', 'RB')], [('implemented', 'VBN')], [('many', 'JJ')], [('software', 'NN')], [('packages', 'NNS')], [('.', '.')], [('scikit-learn', 'NN')], [('package', 'NN')], [('python', 'NN')], [('one', 'CD')], [('used', 'VBN')], [('often', 'RB')], [('.', '.')], [('🔁', 'NN')], [('common', 'JJ')], [('method', 'NN')], [('perform', 'NN')], [('clustering', 'VBG')], [('iterative', 'JJ')], [('.', '.')], [('alternates', 'NNS')], [('two', 'CD')], [('steps', 'NNS')], [(':', ':')], [('(', '(')], [('1', 'CD')], [(')', ')')], [('assigning', 'VBG')], [('point', 'NN')], [('cluster', 'NN')], [('based', 'VBN')], [('point', 'NN')], [(""'s"", 'POS')], [('closeness', 'NN')], [('(', '(')], [('distance', 'NN')], [(')', ')')], [('cluster', 'NN')], [('center', 'NN')], [('(', '(')], [('2', 'CD')], [(')', ')')], [('updating', 'VBG')], [('cluster', 'NN')], [('center', 'NN')], [('(', '(')], [('called', 'VBN')], [('mean', 'NN')], [('centroid', 'NN')], [(';', ':')], [('hence', 'NN')], [('name', 'NN')], [('k-means', 'NNS')], [('one', 'CD')], [('k', 'NN')], [('clusters', 'NNS')], [(')', ')')], [('based', 'VBN')], [('points', 'NNS')], [('belong', 'NN')], [('particular', 'JJ')], [('cluster', 'NN')], [('.', '.')], [('iterations', 'NNS')], [('usually', 'RB')], [('performed', 'VBN')], [('centroids', 'NNS')], [('stabilize', 'VB')], [('(', '(')], [('converge', 'NN')], [(')', ')')], [('consecutive', 'JJ')], [('iterations', 'NNS')], [('.', '.')], [('🤓', 'NN')], [('k-means', 'NNS')], [('popular', 'JJ')], [('scenarios', 'NNS')], [('data', 'NNS')], [('known', 'VBN')], [('consist', 'NN')], [('multiple', 'NN')], [('groups', 'NNS')], [('(', '(')], [('distributions', 'NNS')], [(')', ')')], [('unknown', 'JJ')], [('point', 'NN')], [('belongs', 'NNS')], [('group', 'NN')], [('(', '(')], [('cluster', 'NN')], [(')', ')')], [('.', '.')], [('used', 'VBN')], [('data', 'NNS')], [('analysis', 'NN')], [('splitting', 'NN')], [('data', 'NNS')], [('comes', 'VBZ')], [('multiple', 'NN')], [('distributions', 'NNS')], [(',', ',')], [('image', 'NN')], [('segmentation', 'NN')], [(',', ',')], [('color', 'NN')], [('quantization', 'NN')], [('among', 'IN')], [('thingsstudying', 'VBG')], [('practicing', 'VBG')], [('machine', 'NN')], [('learning', 'VBG')], [('computer', 'NN')], [('vision', 'NN')], [('7+', 'CD')], [('years', 'NNS')], [('.', '.')], [('time', 'NN')], [('passed', 'VBN')], [('realized', 'VBN')], [('power', 'NN')], [('data-driven', 'JJ')], [('decision-making', 'NN')], [('.', '.')], [('seeing', 'VBG')], [('firsthand', 'NN')], [('ml', 'NN')], [('capable', 'JJ')], [('personally', 'RB')], [('felt', 'NN')], [('great', 'JJ')], [('inter-disciplinary', 'JJ')], [('tool', 'NN')], [('automate', 'NN')], [('workflows', 'NNS')], [('.', '.')], [('bring', 'NN')], [('different', 'JJ')], [('topics', 'NNS')], [('ml', 'NN')], [('form', 'NN')], [('short', 'JJ')], [('notes', 'NNS')], [('interest', 'NN')], [('existing', 'VBG')], [('practitioners', 'NNS')], [('fresh', 'JJ')], [('enthusiasts', 'NNS')], [('alike', 'RB')], [('.', '.')], [('posts', 'NNS')], [('cover', 'NN')], [('topics', 'NNS')], [('like', 'IN')], [('statistics', 'NNS')], [(',', ',')], [('linear', 'NN')], [('algebra', 'NN')], [(',', ',')], [('probability', 'NN')], [(',', ',')], [('data', 'NNS')], [('representation', 'NN')], [(',', ',')], [('modeling', 'VBG')], [(',', ',')], [('computer', 'NN')], [('vision', 'NN')], [('among', 'IN')], [('things', 'NNS')], [('.', '.')], [('want', 'NN')], [('incremental', 'NN')], [('journey', 'NN')], [(',', ',')], [('starting', 'VBG')], [('basics', 'NNS')], [('building', 'NN')], [('complex', 'JJ')], [('ideas', 'NNS')], [('.', '.')], [('like', 'IN')], [('content', 'NN')], [('would', 'MD')], [('like', 'IN')], [('steer', 'NN')], [('topics', 'NNS')], [('cover', 'NN')], [(',', ',')], [('feel', 'NN')], [('free', 'JJ')], [('suggest', 'NN')], [('topics', 'NNS')], [('would', 'MD')], [('like', 'IN')], [('know', 'VB')], [('comments', 'NNS')], [('.', '.')]]","& # x200b ; 🔵 k-means cluster 🔵 🔱 k-means algorithm divide n data point k disjoint cluster . well-known unsupervised learn model . mean k-means algorithm require data point need correspond cluster point belongs algorithm figure . ✨ cluster found allocate point way total variance point within cluster ( intra-cluster variance ) reduce minimize . although iterates quite fast , k-means algorithm vary cluster formation base initialization . widely implement many software package . scikit-learn package python one use often . 🔁 common method perform cluster iterative . alternate two step : ( 1 ) assign point cluster base point 's closeness ( distance ) cluster center ( 2 ) update cluster center ( call mean centroid ; hence name k-means one k cluster ) base point belong particular cluster . iteration usually perform centroid stabilize ( converge ) consecutive iteration . 🤓 k-means popular scenario data know consist multiple group ( distribution ) unknown point belongs group ( cluster ) . use data analysis splitting data come multiple distribution , image segmentation , color quantization among thing . \ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- - study practice machine learn computer vision 7+ year . time pass realize power data-driven decision-making . see firsthand ml capable personally felt great inter-disciplinary tool automate workflow . bring different topic ml form short note interest exist practitioner fresh enthusiast alike . post cover topic like statistic , linear algebra , probability , data representation , model , computer vision among thing . want incremental journey , start basic building complex idea . like content would like steer topic cover , feel free suggest topic would like know comment .",0_algorithm_time_node_bill,4
260,rwv1vj,"How to aim towards publishing theoretical computer science papers regarding computer/IT systems for space travel, exploration, and survival?",Advice,14,0.86,computerscience,https://www.reddit.com/r/computerscience/comments/rwv1vj/how_to_aim_towards_publishing_theoretical/,3,"hello redditors, i humbly ask for your assistance...

here is the elaboration: i am a computer science undergraduate with a relatively decent amount of pre-existing background knowledge in computer systems and some programming, and i have an interest and some supplemental education in astronomy as well as a semi-professional observatory which i use actively. in my future academic career (i intend on pursuing a m.sc. and ph.d.) i would like to focus my research and studies around theoretical systems which could help humans and machines travel, explore, and survive in space. 

the question is... what would actually be the best way to start tackling this in order to one day be worthy and knowledgeable enough to pursue this? there is no subject such as ""astrotechnology"" so i am a bit at a loss. also, how do ""theoretical"" papers consisting more of science/evidence-backed ideas (rather than experimental results) even get accepted and published by journals???

i would be grateful for any pointers. <3  
p.s. - not sure if it matters, but i doing a degree in health science alongside computer science. also - due to where i live and financial constraints - my resources are limited; i have only my mind, my computer, and the internet.",1641411326.0,"['hello', 'redditors', ',', 'humbly', 'ask', 'assistance', '...', 'elaboration', ':', 'computer', 'science', 'undergraduate', 'relatively', 'decent', 'amount', 'pre-existing', 'background', 'knowledge', 'computer', 'system', 'program', ',', 'interest', 'supplemental', 'education', 'astronomy', 'well', 'semi-professional', 'observatory', 'use', 'actively', '.', 'future', 'academic', 'career', '(', 'intend', 'pursue', 'm.sc', '.', 'ph.d.', ')', 'would', 'like', 'focus', 'research', 'study', 'around', 'theoretical', 'system', 'could', 'help', 'human', 'machine', 'travel', ',', 'explore', ',', 'survive', 'space', '.', 'question', '...', 'would', 'actually', 'best', 'way', 'start', 'tackle', 'order', 'one', 'day', 'worthy', 'knowledgeable', 'enough', 'pursue', '?', 'subject', '``', 'astrotechnology', ""''"", 'bit', 'loss', '.', 'also', ',', '``', 'theoretical', ""''"", 'paper', 'consist', 'science/evidence-backed', 'idea', '(', 'rather', 'experimental', 'result', ')', 'even', 'get', 'accepted', 'publish', 'journal', '?', '?', '?', 'would', 'grateful', 'pointer', '.', '<', '3', 'p.s', '.', '-', 'sure', 'matter', ',', 'degree', 'health', 'science', 'alongside', 'computer', 'science', '.', 'also', '-', 'due', 'live', 'financial', 'constraint', '-', 'resource', 'limited', ';', 'mind', ',', 'computer', ',', 'internet', '.']","[[('hello', 'NN')], [('redditors', 'NNS')], [(',', ',')], [('humbly', 'RB')], [('ask', 'NN')], [('assistance', 'NN')], [('...', ':')], [('elaboration', 'NN')], [(':', ':')], [('computer', 'NN')], [('science', 'NN')], [('undergraduate', 'NN')], [('relatively', 'RB')], [('decent', 'NN')], [('amount', 'NN')], [('pre-existing', 'NN')], [('background', 'NN')], [('knowledge', 'NN')], [('computer', 'NN')], [('systems', 'NNS')], [('programming', 'VBG')], [(',', ',')], [('interest', 'NN')], [('supplemental', 'NN')], [('education', 'NN')], [('astronomy', 'NN')], [('well', 'RB')], [('semi-professional', 'JJ')], [('observatory', 'NN')], [('use', 'NN')], [('actively', 'RB')], [('.', '.')], [('future', 'NN')], [('academic', 'JJ')], [('career', 'NN')], [('(', '(')], [('intend', 'NN')], [('pursuing', 'VBG')], [('m.sc', 'NN')], [('.', '.')], [('ph.d.', 'NN')], [(')', ')')], [('would', 'MD')], [('like', 'IN')], [('focus', 'NN')], [('research', 'NN')], [('studies', 'NNS')], [('around', 'IN')], [('theoretical', 'JJ')], [('systems', 'NNS')], [('could', 'MD')], [('help', 'NN')], [('humans', 'NNS')], [('machines', 'NNS')], [('travel', 'NN')], [(',', ',')], [('explore', 'NN')], [(',', ',')], [('survive', 'NN')], [('space', 'NN')], [('.', '.')], [('question', 'NN')], [('...', ':')], [('would', 'MD')], [('actually', 'RB')], [('best', 'JJS')], [('way', 'NN')], [('start', 'NN')], [('tackling', 'VBG')], [('order', 'NN')], [('one', 'CD')], [('day', 'NN')], [('worthy', 'NN')], [('knowledgeable', 'JJ')], [('enough', 'RB')], [('pursue', 'NN')], [('?', '.')], [('subject', 'NN')], [('``', '``')], [('astrotechnology', 'NN')], [(""''"", ""''"")], [('bit', 'NN')], [('loss', 'NN')], [('.', '.')], [('also', 'RB')], [(',', ',')], [('``', '``')], [('theoretical', 'JJ')], [(""''"", ""''"")], [('papers', 'NNS')], [('consisting', 'VBG')], [('science/evidence-backed', 'JJ')], [('ideas', 'NNS')], [('(', '(')], [('rather', 'RB')], [('experimental', 'NN')], [('results', 'NNS')], [(')', ')')], [('even', 'RB')], [('get', 'VB')], [('accepted', 'JJ')], [('published', 'VBN')], [('journals', 'NNS')], [('?', '.')], [('?', '.')], [('?', '.')], [('would', 'MD')], [('grateful', 'NN')], [('pointers', 'NNS')], [('.', '.')], [('<', 'NN')], [('3', 'CD')], [('p.s', 'NN')], [('.', '.')], [('-', ':')], [('sure', 'NN')], [('matters', 'NNS')], [(',', ',')], [('degree', 'NN')], [('health', 'NN')], [('science', 'NN')], [('alongside', 'RB')], [('computer', 'NN')], [('science', 'NN')], [('.', '.')], [('also', 'RB')], [('-', ':')], [('due', 'JJ')], [('live', 'JJ')], [('financial', 'JJ')], [('constraints', 'NNS')], [('-', ':')], [('resources', 'NNS')], [('limited', 'JJ')], [(';', ':')], [('mind', 'NN')], [(',', ',')], [('computer', 'NN')], [(',', ',')], [('internet', 'NN')], [('.', '.')]]","hello redditors , humbly ask assistance ... elaboration : computer science undergraduate relatively decent amount pre-existing background knowledge computer system program , interest supplemental education astronomy well semi-professional observatory use actively . future academic career ( intend pursue m.sc . ph.d. ) would like focus research study around theoretical system could help human machine travel , explore , survive space . question ... would actually best way start tackle order one day worthy knowledgeable enough pursue ? subject `` astrotechnology '' bit loss . also , `` theoretical '' paper consist science/evidence-backed idea ( rather experimental result ) even get accepted publish journal ? ? ? would grateful pointer . < 3 p.s . - sure matter , degree health science alongside computer science . also - due live financial constraint - resource limited ; mind , computer , internet .",2_computer_learn_science_study,4
261,rx5nj6,Turing Machine Exercises,,1,1.0,computerscience,https://www.reddit.com/r/computerscience/comments/rx5nj6/turing_machine_exercises/,2,"**brief: looking for more ideas on exercises for tm - share please if you had some in your cs course or seen somewhere.**

always been fascinated by turing machine concept, decided to collect some puzzles to be solved with it on my site. however after adding first three ([these]()) feel lack of good ideas:

1st and 2nd are about making copy of a line of characters and incrementing binary value. there could be combinations and variations (copying line of different characters and incrementing ternary, octal, decimal value... or count characters in a line making result a binary value) - but after grasping principle these do not make additional fun (unless i am missing some whimsical approach).

3rd is about implementing [rule 30]() one-dimensional cellular automaton with tm, i am somewhat glad with it (since i managed to solve it).

have in mind something like checking bracket balance or wiping out comments in c++ / python source. however these seem to be more about general sense of state automaton rather specifically tm...

so would be really glad for any suggestions! perhaps you have come across something in university or played with tm for personal fun etc... thanks in advance!",1641443710.0,"['*', '*', 'brief', ':', 'look', 'idea', 'exercise', 'tm', '-', 'share', 'please', 'c', 'course', 'see', 'somewhere', '.', '*', '*', 'always', 'fascinate', 'turing', 'machine', 'concept', ',', 'decide', 'collect', 'puzzle', 'solve', 'site', '.', 'however', 'add', 'first', 'three', '(', '[', ']', '(', ')', ')', 'feel', 'lack', 'good', 'idea', ':', '1st', '2nd', 'make', 'copy', 'line', 'character', 'incrementing', 'binary', 'value', '.', 'could', 'combination', 'variation', '(', 'copying', 'line', 'different', 'character', 'incrementing', 'ternary', ',', 'octal', ',', 'decimal', 'value', '...', 'count', 'character', 'line', 'make', 'result', 'binary', 'value', ')', '-', 'grasp', 'principle', 'make', 'additional', 'fun', '(', 'unless', 'miss', 'whimsical', 'approach', ')', '.', '3rd', 'implement', '[', 'rule', '30', ']', '(', ')', 'one-dimensional', 'cellular', 'automaton', 'tm', ',', 'somewhat', 'glad', '(', 'since', 'manage', 'solve', ')', '.', 'mind', 'something', 'like', 'check', 'bracket', 'balance', 'wipe', 'comment', 'c++', '/', 'python', 'source', '.', 'however', 'seem', 'general', 'sense', 'state', 'automaton', 'rather', 'specifically', 'tm', '...', 'would', 'really', 'glad', 'suggestion', '!', 'perhaps', 'come', 'across', 'something', 'university', 'played', 'tm', 'personal', 'fun', 'etc', '...', 'thanks', 'advance', '!']","[[('*', 'NN')], [('*', 'NN')], [('brief', 'NN')], [(':', ':')], [('looking', 'VBG')], [('ideas', 'NNS')], [('exercises', 'NNS')], [('tm', 'NN')], [('-', ':')], [('share', 'NN')], [('please', 'NN')], [('cs', 'NN')], [('course', 'NN')], [('seen', 'VBN')], [('somewhere', 'RB')], [('.', '.')], [('*', 'NN')], [('*', 'NN')], [('always', 'RB')], [('fascinated', 'VBN')], [('turing', 'VBG')], [('machine', 'NN')], [('concept', 'NN')], [(',', ',')], [('decided', 'VBD')], [('collect', 'NN')], [('puzzles', 'NNS')], [('solved', 'VBN')], [('site', 'NN')], [('.', '.')], [('however', 'RB')], [('adding', 'VBG')], [('first', 'RB')], [('three', 'CD')], [('(', '(')], [('[', 'NN')], [(']', 'NN')], [('(', '(')], [(')', ')')], [(')', ')')], [('feel', 'NN')], [('lack', 'NN')], [('good', 'JJ')], [('ideas', 'NNS')], [(':', ':')], [('1st', 'CD')], [('2nd', 'CD')], [('making', 'VBG')], [('copy', 'NN')], [('line', 'NN')], [('characters', 'NNS')], [('incrementing', 'VBG')], [('binary', 'NN')], [('value', 'NN')], [('.', '.')], [('could', 'MD')], [('combinations', 'NNS')], [('variations', 'NNS')], [('(', '(')], [('copying', 'NN')], [('line', 'NN')], [('different', 'JJ')], [('characters', 'NNS')], [('incrementing', 'VBG')], [('ternary', 'JJ')], [(',', ',')], [('octal', 'NN')], [(',', ',')], [('decimal', 'NN')], [('value', 'NN')], [('...', ':')], [('count', 'NN')], [('characters', 'NNS')], [('line', 'NN')], [('making', 'VBG')], [('result', 'NN')], [('binary', 'NN')], [('value', 'NN')], [(')', ')')], [('-', ':')], [('grasping', 'VBG')], [('principle', 'NN')], [('make', 'VB')], [('additional', 'JJ')], [('fun', 'NN')], [('(', '(')], [('unless', 'IN')], [('missing', 'VBG')], [('whimsical', 'JJ')], [('approach', 'NN')], [(')', ')')], [('.', '.')], [('3rd', 'CD')], [('implementing', 'VBG')], [('[', 'NN')], [('rule', 'NN')], [('30', 'CD')], [(']', 'NN')], [('(', '(')], [(')', ')')], [('one-dimensional', 'JJ')], [('cellular', 'JJ')], [('automaton', 'NN')], [('tm', 'NN')], [(',', ',')], [('somewhat', 'RB')], [('glad', 'NN')], [('(', '(')], [('since', 'IN')], [('managed', 'VBN')], [('solve', 'NN')], [(')', ')')], [('.', '.')], [('mind', 'NN')], [('something', 'NN')], [('like', 'IN')], [('checking', 'VBG')], [('bracket', 'NN')], [('balance', 'NN')], [('wiping', 'VBG')], [('comments', 'NNS')], [('c++', 'NN')], [('/', 'NN')], [('python', 'NN')], [('source', 'NN')], [('.', '.')], [('however', 'RB')], [('seem', 'NN')], [('general', 'JJ')], [('sense', 'NN')], [('state', 'NN')], [('automaton', 'NN')], [('rather', 'RB')], [('specifically', 'RB')], [('tm', 'NN')], [('...', ':')], [('would', 'MD')], [('really', 'RB')], [('glad', 'NN')], [('suggestions', 'NNS')], [('!', '.')], [('perhaps', 'RB')], [('come', 'VB')], [('across', 'IN')], [('something', 'NN')], [('university', 'NN')], [('played', 'NNS')], [('tm', 'NN')], [('personal', 'JJ')], [('fun', 'NN')], [('etc', 'NN')], [('...', ':')], [('thanks', 'NNS')], [('advance', 'NN')], [('!', '.')]]","* * brief : look idea exercise tm - share please c course see somewhere . * * always fascinate turing machine concept , decide collect puzzle solve site . however add first three ( [ ] ( ) ) feel lack good idea : 1st 2nd make copy line character incrementing binary value . could combination variation ( copying line different character incrementing ternary , octal , decimal value ... count character line make result binary value ) - grasp principle make additional fun ( unless miss whimsical approach ) . 3rd implement [ rule 30 ] ( ) one-dimensional cellular automaton tm , somewhat glad ( since manage solve ) . mind something like check bracket balance wipe comment c++ / python source . however seem general sense state automaton rather specifically tm ... would really glad suggestion ! perhaps come across something university played tm personal fun etc ... thanks advance !",7_tm_state_turing_universal,2
262,rx4z0z,Is there a name for 256 bytes?,,0,0.5,computerscience,https://www.reddit.com/r/computerscience/comments/rx4z0z/is_there_a_name_for_256_bytes/,7,"i am wondering if there is a name for 256 bytes, like how ~1000 bytes is a kilobyte, or ~1000000 bytes is a gigabyte?",1641441709.0,"['wonder', 'name', '256', 'byte', ',', 'like', '~1000', 'byte', 'kilobyte', ',', '~1000000', 'byte', 'gigabyte', '?']","[[('wondering', 'VBG')], [('name', 'NN')], [('256', 'CD')], [('bytes', 'NNS')], [(',', ',')], [('like', 'IN')], [('~1000', 'NN')], [('bytes', 'NNS')], [('kilobyte', 'NN')], [(',', ',')], [('~1000000', 'NN')], [('bytes', 'NNS')], [('gigabyte', 'NN')], [('?', '.')]]","wonder name 256 byte , like ~1000 byte kilobyte , ~1000000 byte gigabyte ?",1_memory_byte_data_alignment,2
263,rvy218,What is an eigenvector? A 2-minute visual guide. [OC],Discussion,194,0.98,computerscience,https://www.reddit.com/r/computerscience/comments/rvy218/what_is_an_eigenvector_a_2minute_visual_guide_oc/,19,"&#x200b;









🔵 eigenvectors 🔵

🚀 an eigenvector is a special vector associated with a linear transform. it is special in the sense that after applying the said transform it does not change direction but only gets scaled (multiplied by a scalar value) by the eigenvalue.

🔨 each eigenvector comes with a corresponding scalar called the eigenvalue. breaking a matrix m into its eigenvalues and corresponding eigenvectors is called eigendecomposition.

🔭 the word ""eigenvector"" comes from ""eigen"" in german where it means ""its own"". it was originally used to study rigid body motion and in the discovery of principal axes. however, nowadays it has found its way into a wide array of applications from my favorite: principal component analysis, differential equations, and problems in physics and chemistry relating to wave transport and molecular orbitals.

🎭 another one of the classical applications is the eigenfaces project for facial recognition. eigenfaces decompose a face as a composition of face templates (basis) called eigenfaces. imagine n eigenfaces e\_1, ..., e\_n when given a new face f it can be written as a composition of each of these n eigenfaces for example: f = (10% of e\_1 + 55% of e\_2 + 35% of e\_3). each eigenface would represent a meaningful feature in the high-dimensional space of faces.

\---------------------------------------------------------------------------------

i have been studying and practicing machine learning and computer vision for 7+ years. as time has passed i have realized more and more the power of data-driven decision-making. seeing firsthand what ml is capable of i have personally felt that it can be a great inter-disciplinary tool to automate workflows. i will bring up different topics of ml in the form of short notes which can be of interest to existing practitioners and fresh enthusiasts alike.

the posts will cover topics like statistics, linear algebra, probability, data representation, modeling, computer vision among other things. i want this to be an incremental journey, starting from the basics and building up to more complex ideas.

if you like such content and would like to steer the topics i cover, feel free to suggest topics you would like to know more about in the comments.",1641312934.0,"['&', '#', 'x200b', ';', '🔵', 'eigenvectors', '🔵', '🚀', 'eigenvector', 'special', 'vector', 'associate', 'linear', 'transform', '.', 'special', 'sense', 'apply', 'say', 'transform', 'change', 'direction', 'get', 'scale', '(', 'multiply', 'scalar', 'value', ')', 'eigenvalue', '.', '🔨', 'eigenvector', 'come', 'correspond', 'scalar', 'call', 'eigenvalue', '.', 'break', 'matrix', 'eigenvalue', 'correspond', 'eigenvectors', 'call', 'eigendecomposition', '.', '🔭', 'word', '``', 'eigenvector', ""''"", 'come', '``', 'eigen', ""''"", 'german', 'mean', '``', ""''"", '.', 'originally', 'use', 'study', 'rigid', 'body', 'motion', 'discovery', 'principal', 'ax', '.', 'however', ',', 'nowadays', 'found', 'way', 'wide', 'array', 'application', 'favorite', ':', 'principal', 'component', 'analysis', ',', 'differential', 'equation', ',', 'problem', 'physic', 'chemistry', 'relate', 'wave', 'transport', 'molecular', 'orbitals', '.', '🎭', 'another', 'one', 'classical', 'application', 'eigenfaces', 'project', 'facial', 'recognition', '.', 'eigenfaces', 'decompose', 'face', 'composition', 'face', 'template', '(', 'basis', ')', 'call', 'eigenfaces', '.', 'imagine', 'n', 'eigenfaces', 'e\\_1', ',', '...', ',', 'e\\_n', 'give', 'new', 'face', 'f', 'write', 'composition', 'n', 'eigenfaces', 'example', ':', 'f', '=', '(', '10', '%', 'e\\_1', '+', '55', '%', 'e\\_2', '+', '35', '%', 'e\\_3', ')', '.', 'eigenface', 'would', 'represent', 'meaningful', 'feature', 'high-dimensional', 'space', 'face', '.', '\\', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '-', 'study', 'practice', 'machine', 'learn', 'computer', 'vision', '7+', 'year', '.', 'time', 'pass', 'realize', 'power', 'data-driven', 'decision-making', '.', 'see', 'firsthand', 'ml', 'capable', 'personally', 'felt', 'great', 'inter-disciplinary', 'tool', 'automate', 'workflow', '.', 'bring', 'different', 'topic', 'ml', 'form', 'short', 'note', 'interest', 'exist', 'practitioner', 'fresh', 'enthusiast', 'alike', '.', 'post', 'cover', 'topic', 'like', 'statistic', ',', 'linear', 'algebra', ',', 'probability', ',', 'data', 'representation', ',', 'model', ',', 'computer', 'vision', 'among', 'thing', '.', 'want', 'incremental', 'journey', ',', 'start', 'basic', 'building', 'complex', 'idea', '.', 'like', 'content', 'would', 'like', 'steer', 'topic', 'cover', ',', 'feel', 'free', 'suggest', 'topic', 'would', 'like', 'know', 'comment', '.']","[[('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('🔵', 'NN')], [('eigenvectors', 'NNS')], [('🔵', 'NN')], [('🚀', 'NN')], [('eigenvector', 'NN')], [('special', 'JJ')], [('vector', 'NN')], [('associated', 'VBN')], [('linear', 'NN')], [('transform', 'NN')], [('.', '.')], [('special', 'JJ')], [('sense', 'NN')], [('applying', 'VBG')], [('said', 'VBD')], [('transform', 'NN')], [('change', 'NN')], [('direction', 'NN')], [('gets', 'VBZ')], [('scaled', 'VBN')], [('(', '(')], [('multiplied', 'VBN')], [('scalar', 'NN')], [('value', 'NN')], [(')', ')')], [('eigenvalue', 'NN')], [('.', '.')], [('🔨', 'NN')], [('eigenvector', 'NN')], [('comes', 'VBZ')], [('corresponding', 'VBG')], [('scalar', 'NN')], [('called', 'VBN')], [('eigenvalue', 'NN')], [('.', '.')], [('breaking', 'VBG')], [('matrix', 'NN')], [('eigenvalues', 'NNS')], [('corresponding', 'VBG')], [('eigenvectors', 'NNS')], [('called', 'VBN')], [('eigendecomposition', 'NN')], [('.', '.')], [('🔭', 'NN')], [('word', 'NN')], [('``', '``')], [('eigenvector', 'NN')], [(""''"", ""''"")], [('comes', 'VBZ')], [('``', '``')], [('eigen', 'NN')], [(""''"", ""''"")], [('german', 'JJ')], [('means', 'NNS')], [('``', '``')], [(""''"", ""''"")], [('.', '.')], [('originally', 'RB')], [('used', 'VBN')], [('study', 'NN')], [('rigid', 'JJ')], [('body', 'NN')], [('motion', 'NN')], [('discovery', 'NN')], [('principal', 'NN')], [('axes', 'NNS')], [('.', '.')], [('however', 'RB')], [(',', ',')], [('nowadays', 'NNS')], [('found', 'NN')], [('way', 'NN')], [('wide', 'JJ')], [('array', 'NN')], [('applications', 'NNS')], [('favorite', 'NN')], [(':', ':')], [('principal', 'NN')], [('component', 'NN')], [('analysis', 'NN')], [(',', ',')], [('differential', 'NN')], [('equations', 'NNS')], [(',', ',')], [('problems', 'NNS')], [('physics', 'NNS')], [('chemistry', 'NN')], [('relating', 'VBG')], [('wave', 'NN')], [('transport', 'NN')], [('molecular', 'NN')], [('orbitals', 'NNS')], [('.', '.')], [('🎭', 'NN')], [('another', 'DT')], [('one', 'CD')], [('classical', 'JJ')], [('applications', 'NNS')], [('eigenfaces', 'NNS')], [('project', 'NN')], [('facial', 'JJ')], [('recognition', 'NN')], [('.', '.')], [('eigenfaces', 'NNS')], [('decompose', 'NN')], [('face', 'NN')], [('composition', 'NN')], [('face', 'NN')], [('templates', 'NNS')], [('(', '(')], [('basis', 'NN')], [(')', ')')], [('called', 'VBN')], [('eigenfaces', 'NNS')], [('.', '.')], [('imagine', 'NN')], [('n', 'NN')], [('eigenfaces', 'NNS')], [('e\\_1', 'NN')], [(',', ',')], [('...', ':')], [(',', ',')], [('e\\_n', 'NN')], [('given', 'VBN')], [('new', 'JJ')], [('face', 'NN')], [('f', 'NN')], [('written', 'VBN')], [('composition', 'NN')], [('n', 'NN')], [('eigenfaces', 'NNS')], [('example', 'NN')], [(':', ':')], [('f', 'NN')], [('=', 'NN')], [('(', '(')], [('10', 'CD')], [('%', 'NN')], [('e\\_1', 'NN')], [('+', 'NN')], [('55', 'CD')], [('%', 'NN')], [('e\\_2', 'NN')], [('+', 'NN')], [('35', 'CD')], [('%', 'NN')], [('e\\_3', 'NN')], [(')', ')')], [('.', '.')], [('eigenface', 'NN')], [('would', 'MD')], [('represent', 'NN')], [('meaningful', 'NN')], [('feature', 'NN')], [('high-dimensional', 'JJ')], [('space', 'NN')], [('faces', 'VBZ')], [('.', '.')], [('\\', 'NN')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('--', ':')], [('-', ':')], [('studying', 'VBG')], [('practicing', 'VBG')], [('machine', 'NN')], [('learning', 'VBG')], [('computer', 'NN')], [('vision', 'NN')], [('7+', 'CD')], [('years', 'NNS')], [('.', '.')], [('time', 'NN')], [('passed', 'VBN')], [('realized', 'VBN')], [('power', 'NN')], [('data-driven', 'JJ')], [('decision-making', 'NN')], [('.', '.')], [('seeing', 'VBG')], [('firsthand', 'NN')], [('ml', 'NN')], [('capable', 'JJ')], [('personally', 'RB')], [('felt', 'NN')], [('great', 'JJ')], [('inter-disciplinary', 'JJ')], [('tool', 'NN')], [('automate', 'NN')], [('workflows', 'NNS')], [('.', '.')], [('bring', 'NN')], [('different', 'JJ')], [('topics', 'NNS')], [('ml', 'NN')], [('form', 'NN')], [('short', 'JJ')], [('notes', 'NNS')], [('interest', 'NN')], [('existing', 'VBG')], [('practitioners', 'NNS')], [('fresh', 'JJ')], [('enthusiasts', 'NNS')], [('alike', 'RB')], [('.', '.')], [('posts', 'NNS')], [('cover', 'NN')], [('topics', 'NNS')], [('like', 'IN')], [('statistics', 'NNS')], [(',', ',')], [('linear', 'NN')], [('algebra', 'NN')], [(',', ',')], [('probability', 'NN')], [(',', ',')], [('data', 'NNS')], [('representation', 'NN')], [(',', ',')], [('modeling', 'VBG')], [(',', ',')], [('computer', 'NN')], [('vision', 'NN')], [('among', 'IN')], [('things', 'NNS')], [('.', '.')], [('want', 'NN')], [('incremental', 'NN')], [('journey', 'NN')], [(',', ',')], [('starting', 'VBG')], [('basics', 'NNS')], [('building', 'NN')], [('complex', 'JJ')], [('ideas', 'NNS')], [('.', '.')], [('like', 'IN')], [('content', 'NN')], [('would', 'MD')], [('like', 'IN')], [('steer', 'NN')], [('topics', 'NNS')], [('cover', 'NN')], [(',', ',')], [('feel', 'NN')], [('free', 'JJ')], [('suggest', 'NN')], [('topics', 'NNS')], [('would', 'MD')], [('like', 'IN')], [('know', 'VB')], [('comments', 'NNS')], [('.', '.')]]","& # x200b ; 🔵 eigenvectors 🔵 🚀 eigenvector special vector associate linear transform . special sense apply say transform change direction get scale ( multiply scalar value ) eigenvalue . 🔨 eigenvector come correspond scalar call eigenvalue . break matrix eigenvalue correspond eigenvectors call eigendecomposition . 🔭 word `` eigenvector '' come `` eigen '' german mean `` '' . originally use study rigid body motion discovery principal ax . however , nowadays found way wide array application favorite : principal component analysis , differential equation , problem physic chemistry relate wave transport molecular orbitals . 🎭 another one classical application eigenfaces project facial recognition . eigenfaces decompose face composition face template ( basis ) call eigenfaces . imagine n eigenfaces e\_1 , ... , e\_n give new face f write composition n eigenfaces example : f = ( 10 % e\_1 + 55 % e\_2 + 35 % e\_3 ) . eigenface would represent meaningful feature high-dimensional space face . \ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- - study practice machine learn computer vision 7+ year . time pass realize power data-driven decision-making . see firsthand ml capable personally felt great inter-disciplinary tool automate workflow . bring different topic ml form short note interest exist practitioner fresh enthusiast alike . post cover topic like statistic , linear algebra , probability , data representation , model , computer vision among thing . want incremental journey , start basic building complex idea . like content would like steer topic cover , feel free suggest topic would like know comment .",-1_abazbz2abz_2520_problem_use,3
264,rwgzqx,"Is there a ""synthetic"" Universal Turing Machine? Where can I find it's rule set?",,2,0.63,computerscience,https://www.reddit.com/r/computerscience/comments/rwgzqx/is_there_a_synthetic_universal_turing_machine/,0,"i have been on the lookout for a utm description, and i have found a machine with only 2 states and 3 symbols. i thought, how neat, it is so simple! i put the description into a tm simulator, realized i had no idea how to use the rule set, and took to the internet again to figure out why. turns out, it simulates a 1d ca, which i know to be terribly time and space inefficient, and very hard to understand. it makes me wonder if there is a larger, synthetic ruleset, one with more internal states but only 3 symbols (1, 0, and empty symbol), one that can reasonably be experimented with, one that can be programmed more easily?",1641367089.0,"['lookout', 'utm', 'description', ',', 'found', 'machine', '2', 'state', '3', 'symbol', '.', 'thought', ',', 'neat', ',', 'simple', '!', 'put', 'description', 'tm', 'simulator', ',', 'realize', 'idea', 'use', 'rule', 'set', ',', 'take', 'internet', 'figure', '.', 'turn', ',', 'simulates', '1d', 'ca', ',', 'know', 'terribly', 'time', 'space', 'inefficient', ',', 'hard', 'understand', '.', 'make', 'wonder', 'large', ',', 'synthetic', 'ruleset', ',', 'one', 'internal', 'state', '3', 'symbol', '(', '1', ',', '0', ',', 'empty', 'symbol', ')', ',', 'one', 'reasonably', 'experiment', ',', 'one', 'programmed', 'easily', '?']","[[('lookout', 'NN')], [('utm', 'NN')], [('description', 'NN')], [(',', ',')], [('found', 'NN')], [('machine', 'NN')], [('2', 'CD')], [('states', 'NNS')], [('3', 'CD')], [('symbols', 'NNS')], [('.', '.')], [('thought', 'NN')], [(',', ',')], [('neat', 'NN')], [(',', ',')], [('simple', 'NN')], [('!', '.')], [('put', 'NN')], [('description', 'NN')], [('tm', 'NN')], [('simulator', 'NN')], [(',', ',')], [('realized', 'VBN')], [('idea', 'NN')], [('use', 'NN')], [('rule', 'NN')], [('set', 'NN')], [(',', ',')], [('took', 'VBD')], [('internet', 'NN')], [('figure', 'NN')], [('.', '.')], [('turns', 'NNS')], [(',', ',')], [('simulates', 'NNS')], [('1d', 'CD')], [('ca', 'MD')], [(',', ',')], [('know', 'VB')], [('terribly', 'RB')], [('time', 'NN')], [('space', 'NN')], [('inefficient', 'NN')], [(',', ',')], [('hard', 'JJ')], [('understand', 'NN')], [('.', '.')], [('makes', 'VBZ')], [('wonder', 'NN')], [('larger', 'JJR')], [(',', ',')], [('synthetic', 'JJ')], [('ruleset', 'NN')], [(',', ',')], [('one', 'CD')], [('internal', 'JJ')], [('states', 'NNS')], [('3', 'CD')], [('symbols', 'NNS')], [('(', '(')], [('1', 'CD')], [(',', ',')], [('0', 'CD')], [(',', ',')], [('empty', 'JJ')], [('symbol', 'NN')], [(')', ')')], [(',', ',')], [('one', 'CD')], [('reasonably', 'RB')], [('experimented', 'VBN')], [(',', ',')], [('one', 'CD')], [('programmed', 'NN')], [('easily', 'RB')], [('?', '.')]]","lookout utm description , found machine 2 state 3 symbol . thought , neat , simple ! put description tm simulator , realize idea use rule set , take internet figure . turn , simulates 1d ca , know terribly time space inefficient , hard understand . make wonder large , synthetic ruleset , one internal state 3 symbol ( 1 , 0 , empty symbol ) , one reasonably experiment , one programmed easily ?",7_tm_state_turing_universal,2
265,rw99z6,What is the proof that a 2-state Turing Machine with a 3-state alphabet can simulate any arbitrary Turing Machine?,Discussion,4,0.7,computerscience,https://www.reddit.com/r/computerscience/comments/rw99z6/what_is_the_proof_that_a_2state_turing_machine/,1,"this is a follow-up to my question of how many states and symbols a tm would need to simulate a tm with an arbitrarily large number of states and symbols, that was answered for me, the answer is 2 states and 3 symbols. but i cannot find a proof for this, or even better, an example. also, is there a proof that a 2-state 3-letter tm is the simplest universal tm? could a 2-state 2-symbol simulate bigger tm's, or could a 1-state 2-symbol tm work?

edit: i found a [source]() for the description of the (2,3) utm, as well as some larger utm's. however, the description of the turing machine does not prove anything to me, because it is only half the story. i would also need to know what the tape looks like while it operates to gather anything.

e2: i have now learned that the (2,3) tm is universal because it simulates a specific 1d ca that has already been proven to be universal, however this pushed the question out for me, so i looked up a proof that 1d ca are universal, and i found that it can simulate some other thing that is been proven to be universal, and soon enough the question was put back onto the utm and why it is universal. either i am stupid or the internet is.",1641342841.0,"['follow-up', 'question', 'many', 'state', 'symbol', 'tm', 'would', 'need', 'simulate', 'tm', 'arbitrarily', 'large', 'number', 'state', 'symbol', ',', 'answer', ',', 'answer', '2', 'state', '3', 'symbol', '.', 'find', 'proof', ',', 'even', 'well', ',', 'example', '.', 'also', ',', 'proof', '2-state', '3-letter', 'tm', 'simplest', 'universal', 'tm', '?', 'could', '2-state', '2-symbol', 'simulate', 'big', 'tm', ""'s"", ',', 'could', '1-state', '2-symbol', 'tm', 'work', '?', 'edit', ':', 'found', '[', 'source', ']', '(', ')', 'description', '(', '2,3', ')', 'utm', ',', 'well', 'large', 'utm', ""'s"", '.', 'however', ',', 'description', 'turing', 'machine', 'prove', 'anything', ',', 'half', 'story', '.', 'would', 'also', 'need', 'know', 'tape', 'look', 'like', 'operates', 'gather', 'anything', '.', 'e2', ':', 'learn', '(', '2,3', ')', 'tm', 'universal', 'simulates', 'specific', '1d', 'ca', 'already', 'proven', 'universal', ',', 'however', 'push', 'question', ',', 'look', 'proof', '1d', 'ca', 'universal', ',', 'found', 'simulate', 'thing', 'proven', 'universal', ',', 'soon', 'enough', 'question', 'put', 'back', 'onto', 'utm', 'universal', '.', 'either', 'stupid', 'internet', '.']","[[('follow-up', 'NN')], [('question', 'NN')], [('many', 'JJ')], [('states', 'NNS')], [('symbols', 'NNS')], [('tm', 'NN')], [('would', 'MD')], [('need', 'NN')], [('simulate', 'NN')], [('tm', 'NN')], [('arbitrarily', 'RB')], [('large', 'JJ')], [('number', 'NN')], [('states', 'NNS')], [('symbols', 'NNS')], [(',', ',')], [('answered', 'VBN')], [(',', ',')], [('answer', 'NN')], [('2', 'CD')], [('states', 'NNS')], [('3', 'CD')], [('symbols', 'NNS')], [('.', '.')], [('find', 'VB')], [('proof', 'NN')], [(',', ',')], [('even', 'RB')], [('better', 'RBR')], [(',', ',')], [('example', 'NN')], [('.', '.')], [('also', 'RB')], [(',', ',')], [('proof', 'NN')], [('2-state', 'JJ')], [('3-letter', 'JJ')], [('tm', 'NN')], [('simplest', 'NN')], [('universal', 'NN')], [('tm', 'NN')], [('?', '.')], [('could', 'MD')], [('2-state', 'JJ')], [('2-symbol', 'JJ')], [('simulate', 'NN')], [('bigger', 'JJR')], [('tm', 'NN')], [(""'s"", 'POS')], [(',', ',')], [('could', 'MD')], [('1-state', 'JJ')], [('2-symbol', 'JJ')], [('tm', 'NN')], [('work', 'NN')], [('?', '.')], [('edit', 'NN')], [(':', ':')], [('found', 'NN')], [('[', 'NN')], [('source', 'NN')], [(']', 'NN')], [('(', '(')], [(')', ')')], [('description', 'NN')], [('(', '(')], [('2,3', 'CD')], [(')', ')')], [('utm', 'NN')], [(',', ',')], [('well', 'RB')], [('larger', 'JJR')], [('utm', 'NN')], [(""'s"", 'POS')], [('.', '.')], [('however', 'RB')], [(',', ',')], [('description', 'NN')], [('turing', 'VBG')], [('machine', 'NN')], [('prove', 'NN')], [('anything', 'NN')], [(',', ',')], [('half', 'NN')], [('story', 'NN')], [('.', '.')], [('would', 'MD')], [('also', 'RB')], [('need', 'NN')], [('know', 'VB')], [('tape', 'NN')], [('looks', 'NNS')], [('like', 'IN')], [('operates', 'NNS')], [('gather', 'NN')], [('anything', 'NN')], [('.', '.')], [('e2', 'NN')], [(':', ':')], [('learned', 'VBN')], [('(', '(')], [('2,3', 'CD')], [(')', ')')], [('tm', 'NN')], [('universal', 'NN')], [('simulates', 'NNS')], [('specific', 'JJ')], [('1d', 'CD')], [('ca', 'MD')], [('already', 'RB')], [('proven', 'NN')], [('universal', 'NN')], [(',', ',')], [('however', 'RB')], [('pushed', 'VBN')], [('question', 'NN')], [(',', ',')], [('looked', 'VBD')], [('proof', 'NN')], [('1d', 'CD')], [('ca', 'MD')], [('universal', 'NN')], [(',', ',')], [('found', 'NN')], [('simulate', 'NN')], [('thing', 'NN')], [('proven', 'NN')], [('universal', 'NN')], [(',', ',')], [('soon', 'RB')], [('enough', 'RB')], [('question', 'NN')], [('put', 'NN')], [('back', 'RB')], [('onto', 'IN')], [('utm', 'NN')], [('universal', 'NN')], [('.', '.')], [('either', 'DT')], [('stupid', 'JJ')], [('internet', 'NN')], [('.', '.')]]","follow-up question many state symbol tm would need simulate tm arbitrarily large number state symbol , answer , answer 2 state 3 symbol . find proof , even well , example . also , proof 2-state 3-letter tm simplest universal tm ? could 2-state 2-symbol simulate big tm 's , could 1-state 2-symbol tm work ? edit : found [ source ] ( ) description ( 2,3 ) utm , well large utm 's . however , description turing machine prove anything , half story . would also need know tape look like operates gather anything . e2 : learn ( 2,3 ) tm universal simulates specific 1d ca already proven universal , however push question , look proof 1d ca universal , found simulate thing proven universal , soon enough question put back onto utm universal . either stupid internet .",7_tm_state_turing_universal,4
266,rvq0w4,Have you ever used what you learned in chemistry classes in your computer science career?,,26,0.84,computerscience,https://www.reddit.com/r/computerscience/comments/rvq0w4/have_you_ever_used_what_you_learned_in_chemistry/,31,?,1641286813.0,['?'],"[[('?', '.')]]",?,-1_abazbz2abz_2520_problem_use,1
267,rw2dl6,What's the difference between a Python ID and a pointer in C++?,Help,3,0.71,computerscience,https://www.reddit.com/r/computerscience/comments/rw2dl6/whats_the_difference_between_a_python_id_and_a/,3,"my current understanding is that python does not support pointers because it is against the ""zen of python"" but it does have id(my\_obj), which returns ""the object's address in memory.""  how is that not a pointer and what is the difference between the python id() function and a pointer in c++?  are both not just an integer representing the object's location in memory?",1641324167.0,"['current', 'understand', 'python', 'support', 'pointer', '``', 'zen', 'python', ""''"", 'id', '(', 'my\\_obj', ')', ',', 'return', '``', 'object', ""'s"", 'address', 'memory', '.', ""''"", 'pointer', 'difference', 'python', 'id', '(', ')', 'function', 'pointer', 'c++', '?', 'integer', 'represent', 'object', ""'s"", 'location', 'memory', '?']","[[('current', 'JJ')], [('understanding', 'VBG')], [('python', 'NN')], [('support', 'NN')], [('pointers', 'NNS')], [('``', '``')], [('zen', 'NN')], [('python', 'NN')], [(""''"", ""''"")], [('id', 'NN')], [('(', '(')], [('my\\_obj', 'NN')], [(')', ')')], [(',', ',')], [('returns', 'NNS')], [('``', '``')], [('object', 'NN')], [(""'s"", 'POS')], [('address', 'NN')], [('memory', 'NN')], [('.', '.')], [(""''"", ""''"")], [('pointer', 'NN')], [('difference', 'NN')], [('python', 'NN')], [('id', 'NN')], [('(', '(')], [(')', ')')], [('function', 'NN')], [('pointer', 'NN')], [('c++', 'NN')], [('?', '.')], [('integer', 'NN')], [('representing', 'VBG')], [('object', 'NN')], [(""'s"", 'POS')], [('location', 'NN')], [('memory', 'NN')], [('?', '.')]]","current understand python support pointer `` zen python '' id ( my\_obj ) , return `` object 's address memory . '' pointer difference python id ( ) function pointer c++ ? integer represent object 's location memory ?",1_memory_byte_data_alignment,3
268,rvfquw,Why did the Microsoft date bug happen in 2022?,,60,0.93,computerscience,https://www.reddit.com/r/computerscience/comments/rvfquw/why_did_the_microsoft_date_bug_happen_in_2022/,12,"so apparently microsoft was trying to store date in a 32 bit signed integer. 

but the max value of that is 2147483647, so why cannot january 1 2022 be stored?",1641253825.0,"['apparently', 'microsoft', 'try', 'store', 'date', '32', 'bit', 'sign', 'integer', '.', 'max', 'value', '2147483647', ',', 'january', '1', '2022', 'store', '?']","[[('apparently', 'RB')], [('microsoft', 'NN')], [('trying', 'VBG')], [('store', 'NN')], [('date', 'NN')], [('32', 'CD')], [('bit', 'NN')], [('signed', 'VBN')], [('integer', 'NN')], [('.', '.')], [('max', 'NN')], [('value', 'NN')], [('2147483647', 'CD')], [(',', ',')], [('january', 'NN')], [('1', 'CD')], [('2022', 'CD')], [('stored', 'VBN')], [('?', '.')]]","apparently microsoft try store date 32 bit sign integer . max value 2147483647 , january 1 2022 store ?",1_memory_byte_data_alignment,1
269,rvc4y3,Minecraft to teach software architecture?,Discussion,50,0.9,computerscience,https://www.reddit.com/r/computerscience/comments/rvc4y3/minecraft_to_teach_software_architecture/,17,"hey guys i just thought about teaching classes, inheritence, dependency injection etc. (you get my point) with minecraft. nearly everyone knows the game and a block serves as a great example for a class. it has specific attributes like texture etc. and there are lots of subclasses. 

additionally you could discuss how those blocks could be stored, which sort of database would be suitable etc. 

what do you think about this?",1641244232.0,"['hey', 'guy', 'thought', 'teach', 'class', ',', 'inheritence', ',', 'dependency', 'injection', 'etc', '.', '(', 'get', 'point', ')', 'minecraft', '.', 'nearly', 'everyone', 'know', 'game', 'block', 'serf', 'great', 'example', 'class', '.', 'specific', 'attribute', 'like', 'texture', 'etc', '.', 'lot', 'subclass', '.', 'additionally', 'could', 'discus', 'block', 'could', 'store', ',', 'sort', 'database', 'would', 'suitable', 'etc', '.', 'think', '?']","[[('hey', 'NN')], [('guys', 'NNS')], [('thought', 'NN')], [('teaching', 'VBG')], [('classes', 'NNS')], [(',', ',')], [('inheritence', 'NN')], [(',', ',')], [('dependency', 'NN')], [('injection', 'NN')], [('etc', 'NN')], [('.', '.')], [('(', '(')], [('get', 'VB')], [('point', 'NN')], [(')', ')')], [('minecraft', 'NN')], [('.', '.')], [('nearly', 'RB')], [('everyone', 'NN')], [('knows', 'NNS')], [('game', 'NN')], [('block', 'NN')], [('serves', 'NNS')], [('great', 'JJ')], [('example', 'NN')], [('class', 'NN')], [('.', '.')], [('specific', 'JJ')], [('attributes', 'NNS')], [('like', 'IN')], [('texture', 'NN')], [('etc', 'NN')], [('.', '.')], [('lots', 'NNS')], [('subclasses', 'NNS')], [('.', '.')], [('additionally', 'RB')], [('could', 'MD')], [('discuss', 'NN')], [('blocks', 'NNS')], [('could', 'MD')], [('stored', 'VBN')], [(',', ',')], [('sort', 'NN')], [('database', 'NN')], [('would', 'MD')], [('suitable', 'JJ')], [('etc', 'NN')], [('.', '.')], [('think', 'NN')], [('?', '.')]]","hey guy thought teach class , inheritence , dependency injection etc . ( get point ) minecraft . nearly everyone know game block serf great example class . specific attribute like texture etc . lot subclass . additionally could discus block could store , sort database would suitable etc . think ?",-1_abazbz2abz_2520_problem_use,4
270,rw311s,Memory and pointers: where does the actual memory address come from?,Help,0,0.25,computerscience,https://www.reddit.com/r/computerscience/comments/rw311s/memory_and_pointers_where_does_the_actual_memory/,4,"when, say, in c++, we say `void* ptr = &my_var`, we set ptr equal to the memory location of my\_var.  okay.  but where does this memory location number come from, and why/how do we actually access it?  

say we have our memory as 5000 bytes of data, in 1d.  my understanding is that each byte in memory has its own address, but i do not understand the mechanism for how.   i understand that it is like a ""house address"" and we need it in order to find a value stored at a given location.  but at the most basic level, where are these addresses coming from? the hardware? or is this just something we are adding to that byte of memory (sort of like metadata in numpy arrays)? if that is the case, then does this not take up some of the memory? 

e.g. we have a memory location of 13413241 let us say.  where is this value stored? i would assume that all the memory locations, all these integers, are inherent to the computer we are working on, and thus always exist.  is this entirely separate from ""memory"" in terms of how big our program is (if they always exist anyways)?  it just seems like we can pull these memory addresses out of thin air.  if i define say `x = 5`, is it always the case that i have also implicitly defined `some_pointer = &x`, and is this now in my program's ""memory""?   unless the memory location is not ""bundled"" to that 5, i do not see how the pointer ""knows"" the memory location.  maybe all of this is happening at the hardware level and i am too focused on the software level.  i have not found any articles that explain what i am looking for, only what a pointer is.  maybe this is more of a question about what the `*` and `&` operators are actually doing.

it might be evident already, but i almost exclusively use python.  in python, we can define a variable, which will always be equal to some object, and then we can set that variable equal to other things, namely we are just telling that variable to now ""point"" at a new object: but the previous object still exists in memory, it just is not referenced.  however, my understanding is that python does not actually have pointers, so my understanding may be tainted pretty heavily by the python id() function which returns the location in memory, and also by how variables and objects interact in python.",1641325885.0,"[',', 'say', ',', 'c++', ',', 'say', '`', 'void', '*', 'ptr', '=', '&', 'my_var', '`', ',', 'set', 'ptr', 'equal', 'memory', 'location', 'my\\_var', '.', 'okay', '.', 'memory', 'location', 'number', 'come', ',', 'why/how', 'actually', 'access', '?', 'say', 'memory', '5000', 'byte', 'data', ',', '1d', '.', 'understand', 'byte', 'memory', 'address', ',', 'understand', 'mechanism', '.', 'understand', 'like', '``', 'house', 'address', ""''"", 'need', 'order', 'find', 'value', 'store', 'give', 'location', '.', 'basic', 'level', ',', 'address', 'come', '?', 'hardware', '?', 'something', 'add', 'byte', 'memory', '(', 'sort', 'like', 'metadata', 'numpy', 'array', ')', '?', 'case', ',', 'take', 'memory', '?', 'e.g', '.', 'memory', 'location', '13413241', 'let', 'u', 'say', '.', 'value', 'store', '?', 'would', 'assume', 'memory', 'location', ',', 'integer', ',', 'inherent', 'computer', 'work', ',', 'thus', 'always', 'exist', '.', 'entirely', 'separate', '``', 'memory', ""''"", 'term', 'big', 'program', '(', 'always', 'exist', 'anyways', ')', '?', 'seem', 'like', 'pull', 'memory', 'address', 'thin', 'air', '.', 'define', 'say', '`', 'x', '=', '5', '`', ',', 'always', 'case', 'also', 'implicitly', 'define', '`', 'some_pointer', '=', '&', 'x', '`', ',', 'program', ""'s"", '``', 'memory', ""''"", '?', 'unless', 'memory', 'location', '``', 'bundle', ""''"", '5', ',', 'see', 'pointer', '``', 'know', ""''"", 'memory', 'location', '.', 'maybe', 'happen', 'hardware', 'level', 'focus', 'software', 'level', '.', 'found', 'article', 'explain', 'look', ',', 'pointer', '.', 'maybe', 'question', '`', '*', '`', '`', '&', '`', 'operator', 'actually', '.', 'might', 'evident', 'already', ',', 'almost', 'exclusively', 'use', 'python', '.', 'python', ',', 'define', 'variable', ',', 'always', 'equal', 'object', ',', 'set', 'variable', 'equal', 'thing', ',', 'namely', 'tell', 'variable', '``', 'point', ""''"", 'new', 'object', ':', 'previous', 'object', 'still', 'exists', 'memory', ',', 'reference', '.', 'however', ',', 'understand', 'python', 'actually', 'pointer', ',', 'understand', 'may', 'taint', 'pretty', 'heavily', 'python', 'id', '(', ')', 'function', 'return', 'location', 'memory', ',', 'also', 'variable', 'object', 'interact', 'python', '.']","[[(',', ',')], [('say', 'VB')], [(',', ',')], [('c++', 'NN')], [(',', ',')], [('say', 'VB')], [('`', '``')], [('void', 'NN')], [('*', 'NN')], [('ptr', 'NN')], [('=', 'NN')], [('&', 'CC')], [('my_var', 'NN')], [('`', '``')], [(',', ',')], [('set', 'NN')], [('ptr', 'NN')], [('equal', 'JJ')], [('memory', 'NN')], [('location', 'NN')], [('my\\_var', 'NN')], [('.', '.')], [('okay', 'NN')], [('.', '.')], [('memory', 'NN')], [('location', 'NN')], [('number', 'NN')], [('come', 'VB')], [(',', ',')], [('why/how', 'NN')], [('actually', 'RB')], [('access', 'NN')], [('?', '.')], [('say', 'VB')], [('memory', 'NN')], [('5000', 'CD')], [('bytes', 'NNS')], [('data', 'NNS')], [(',', ',')], [('1d', 'CD')], [('.', '.')], [('understanding', 'VBG')], [('byte', 'NN')], [('memory', 'NN')], [('address', 'NN')], [(',', ',')], [('understand', 'NN')], [('mechanism', 'NN')], [('.', '.')], [('understand', 'NN')], [('like', 'IN')], [('``', '``')], [('house', 'NN')], [('address', 'NN')], [(""''"", ""''"")], [('need', 'NN')], [('order', 'NN')], [('find', 'VB')], [('value', 'NN')], [('stored', 'VBN')], [('given', 'VBN')], [('location', 'NN')], [('.', '.')], [('basic', 'JJ')], [('level', 'NN')], [(',', ',')], [('addresses', 'NNS')], [('coming', 'VBG')], [('?', '.')], [('hardware', 'NN')], [('?', '.')], [('something', 'NN')], [('adding', 'VBG')], [('byte', 'NN')], [('memory', 'NN')], [('(', '(')], [('sort', 'NN')], [('like', 'IN')], [('metadata', 'NNS')], [('numpy', 'NN')], [('arrays', 'NNS')], [(')', ')')], [('?', '.')], [('case', 'NN')], [(',', ',')], [('take', 'VB')], [('memory', 'NN')], [('?', '.')], [('e.g', 'NN')], [('.', '.')], [('memory', 'NN')], [('location', 'NN')], [('13413241', 'CD')], [('let', 'VB')], [('us', 'PRP')], [('say', 'VB')], [('.', '.')], [('value', 'NN')], [('stored', 'VBN')], [('?', '.')], [('would', 'MD')], [('assume', 'VB')], [('memory', 'NN')], [('locations', 'NNS')], [(',', ',')], [('integers', 'NNS')], [(',', ',')], [('inherent', 'NN')], [('computer', 'NN')], [('working', 'VBG')], [(',', ',')], [('thus', 'RB')], [('always', 'RB')], [('exist', 'NN')], [('.', '.')], [('entirely', 'RB')], [('separate', 'JJ')], [('``', '``')], [('memory', 'NN')], [(""''"", ""''"")], [('terms', 'NNS')], [('big', 'JJ')], [('program', 'NN')], [('(', '(')], [('always', 'RB')], [('exist', 'NN')], [('anyways', 'NNS')], [(')', ')')], [('?', '.')], [('seems', 'VBZ')], [('like', 'IN')], [('pull', 'NN')], [('memory', 'NN')], [('addresses', 'NNS')], [('thin', 'NN')], [('air', 'NN')], [('.', '.')], [('define', 'NN')], [('say', 'VB')], [('`', '``')], [('x', 'NN')], [('=', 'NN')], [('5', 'CD')], [('`', '``')], [(',', ',')], [('always', 'RB')], [('case', 'NN')], [('also', 'RB')], [('implicitly', 'RB')], [('defined', 'VBN')], [('`', '``')], [('some_pointer', 'NN')], [('=', 'NN')], [('&', 'CC')], [('x', 'NN')], [('`', '``')], [(',', ',')], [('program', 'NN')], [(""'s"", 'POS')], [('``', '``')], [('memory', 'NN')], [(""''"", ""''"")], [('?', '.')], [('unless', 'IN')], [('memory', 'NN')], [('location', 'NN')], [('``', '``')], [('bundled', 'VBN')], [(""''"", ""''"")], [('5', 'CD')], [(',', ',')], [('see', 'VB')], [('pointer', 'NN')], [('``', '``')], [('knows', 'NNS')], [(""''"", ""''"")], [('memory', 'NN')], [('location', 'NN')], [('.', '.')], [('maybe', 'RB')], [('happening', 'VBG')], [('hardware', 'NN')], [('level', 'NN')], [('focused', 'VBN')], [('software', 'NN')], [('level', 'NN')], [('.', '.')], [('found', 'NN')], [('articles', 'NNS')], [('explain', 'NN')], [('looking', 'VBG')], [(',', ',')], [('pointer', 'NN')], [('.', '.')], [('maybe', 'RB')], [('question', 'NN')], [('`', '``')], [('*', 'NN')], [('`', '``')], [('`', '``')], [('&', 'CC')], [('`', '``')], [('operators', 'NNS')], [('actually', 'RB')], [('.', '.')], [('might', 'MD')], [('evident', 'NN')], [('already', 'RB')], [(',', ',')], [('almost', 'RB')], [('exclusively', 'RB')], [('use', 'NN')], [('python', 'NN')], [('.', '.')], [('python', 'NN')], [(',', ',')], [('define', 'NN')], [('variable', 'JJ')], [(',', ',')], [('always', 'RB')], [('equal', 'JJ')], [('object', 'NN')], [(',', ',')], [('set', 'NN')], [('variable', 'JJ')], [('equal', 'JJ')], [('things', 'NNS')], [(',', ',')], [('namely', 'RB')], [('telling', 'VBG')], [('variable', 'JJ')], [('``', '``')], [('point', 'NN')], [(""''"", ""''"")], [('new', 'JJ')], [('object', 'NN')], [(':', ':')], [('previous', 'JJ')], [('object', 'NN')], [('still', 'RB')], [('exists', 'NNS')], [('memory', 'NN')], [(',', ',')], [('referenced', 'VBN')], [('.', '.')], [('however', 'RB')], [(',', ',')], [('understanding', 'VBG')], [('python', 'NN')], [('actually', 'RB')], [('pointers', 'NNS')], [(',', ',')], [('understanding', 'VBG')], [('may', 'MD')], [('tainted', 'VBN')], [('pretty', 'RB')], [('heavily', 'RB')], [('python', 'NN')], [('id', 'NN')], [('(', '(')], [(')', ')')], [('function', 'NN')], [('returns', 'NNS')], [('location', 'NN')], [('memory', 'NN')], [(',', ',')], [('also', 'RB')], [('variables', 'NNS')], [('objects', 'NNS')], [('interact', 'NN')], [('python', 'NN')], [('.', '.')]]",", say , c++ , say ` void * ptr = & my_var ` , set ptr equal memory location my\_var . okay . memory location number come , why/how actually access ? say memory 5000 byte data , 1d . understand byte memory address , understand mechanism . understand like `` house address '' need order find value store give location . basic level , address come ? hardware ? something add byte memory ( sort like metadata numpy array ) ? case , take memory ? e.g . memory location 13413241 let u say . value store ? would assume memory location , integer , inherent computer work , thus always exist . entirely separate `` memory '' term big program ( always exist anyways ) ? seem like pull memory address thin air . define say ` x = 5 ` , always case also implicitly define ` some_pointer = & x ` , program 's `` memory '' ? unless memory location `` bundle '' 5 , see pointer `` know '' memory location . maybe happen hardware level focus software level . found article explain look , pointer . maybe question ` * ` ` & ` operator actually . might evident already , almost exclusively use python . python , define variable , always equal object , set variable equal thing , namely tell variable `` point '' new object : previous object still exists memory , reference . however , understand python actually pointer , understand may taint pretty heavily python id ( ) function return location memory , also variable object interact python .",1_memory_byte_data_alignment,3
272,rutayn,How does a quantum computer reduce time complexity?,,111,0.95,computerscience,https://www.reddit.com/r/computerscience/comments/rutayn/how_does_a_quantum_computer_reduce_time_complexity/,21,"when i studied algorithm, people talked about time complexity and bigo notation. what i want to know is that if given an algorithm whose running time is o(n\^2), if i run the algorithm on a quantum computer, does it necessarily reduce the running time to o(n), that is, the sqare root of n\^2?

and if given an algorithm whose running time is o(n\^3), does a quantum computer reduce it to o(n\^(3/2)), that is, the square root of n\^3 ?",1641185362.0,"['study', 'algorithm', ',', 'people', 'talk', 'time', 'complexity', 'bigo', 'notation', '.', 'want', 'know', 'give', 'algorithm', 'whose', 'run', 'time', '(', 'n\\^2', ')', ',', 'run', 'algorithm', 'quantum', 'computer', ',', 'necessarily', 'reduce', 'run', 'time', '(', 'n', ')', ',', ',', 'sqare', 'root', 'n\\^2', '?', 'give', 'algorithm', 'whose', 'run', 'time', '(', 'n\\^3', ')', ',', 'quantum', 'computer', 'reduce', '(', 'n\\^', '(', '3/2', ')', ')', ',', ',', 'square', 'root', 'n\\^3', '?']","[[('studied', 'VBN')], [('algorithm', 'NN')], [(',', ',')], [('people', 'NNS')], [('talked', 'VBD')], [('time', 'NN')], [('complexity', 'NN')], [('bigo', 'NN')], [('notation', 'NN')], [('.', '.')], [('want', 'NN')], [('know', 'VB')], [('given', 'VBN')], [('algorithm', 'NN')], [('whose', 'WP$')], [('running', 'VBG')], [('time', 'NN')], [('(', '(')], [('n\\^2', 'NN')], [(')', ')')], [(',', ',')], [('run', 'VB')], [('algorithm', 'NN')], [('quantum', 'NN')], [('computer', 'NN')], [(',', ',')], [('necessarily', 'RB')], [('reduce', 'VB')], [('running', 'VBG')], [('time', 'NN')], [('(', '(')], [('n', 'NN')], [(')', ')')], [(',', ',')], [(',', ',')], [('sqare', 'NN')], [('root', 'NN')], [('n\\^2', 'NN')], [('?', '.')], [('given', 'VBN')], [('algorithm', 'NN')], [('whose', 'WP$')], [('running', 'VBG')], [('time', 'NN')], [('(', '(')], [('n\\^3', 'NN')], [(')', ')')], [(',', ',')], [('quantum', 'NN')], [('computer', 'NN')], [('reduce', 'VB')], [('(', '(')], [('n\\^', 'NN')], [('(', '(')], [('3/2', 'CD')], [(')', ')')], [(')', ')')], [(',', ',')], [(',', ',')], [('square', 'NN')], [('root', 'NN')], [('n\\^3', 'NN')], [('?', '.')]]","study algorithm , people talk time complexity bigo notation . want know give algorithm whose run time ( n\^2 ) , run algorithm quantum computer , necessarily reduce run time ( n ) , , sqare root n\^2 ? give algorithm whose run time ( n\^3 ) , quantum computer reduce ( n\^ ( 3/2 ) ) , , square root n\^3 ?",0_algorithm_time_node_bill,3
274,rushx3,How is memory aligned data good for caching?,,14,0.9,computerscience,https://www.reddit.com/r/computerscience/comments/rushx3/how_is_memory_aligned_data_good_for_caching/,12,"i read some articles about memory alignment and while i was reading about the advantages of memory alignment i read about caching. it was not very clearly explained that how memory alignment helps in caching. i would be delighted if someone could explain this to me.

this [stack overflow answer]() mentions that memory alignment is helpful for caching. i know that aligned memory makes the fetching of the data faster because the cpu does not need to shift the bits in two reads and then combine the results in the register. i got to know about this from this [ibm developer article](-dalign/).

thanks!",1641182808.0,"['read', 'article', 'memory', 'alignment', 'reading', 'advantage', 'memory', 'alignment', 'read', 'cache', '.', 'clearly', 'explain', 'memory', 'alignment', 'help', 'cache', '.', 'would', 'delighted', 'someone', 'could', 'explain', '.', '[', 'stack', 'overflow', 'answer', ']', '(', ')', 'mention', 'memory', 'alignment', 'helpful', 'cache', '.', 'know', 'align', 'memory', 'make', 'fetch', 'data', 'faster', 'cpu', 'need', 'shift', 'bit', 'two', 'read', 'combine', 'result', 'register', '.', 'get', 'know', '[', 'ibm', 'developer', 'article', ']', '(', '-dalign/', ')', '.', 'thanks', '!']","[[('read', 'NN')], [('articles', 'NNS')], [('memory', 'NN')], [('alignment', 'NN')], [('reading', 'NN')], [('advantages', 'NNS')], [('memory', 'NN')], [('alignment', 'NN')], [('read', 'NN')], [('caching', 'VBG')], [('.', '.')], [('clearly', 'RB')], [('explained', 'VBD')], [('memory', 'NN')], [('alignment', 'NN')], [('helps', 'NNS')], [('caching', 'VBG')], [('.', '.')], [('would', 'MD')], [('delighted', 'JJ')], [('someone', 'NN')], [('could', 'MD')], [('explain', 'NN')], [('.', '.')], [('[', 'NN')], [('stack', 'NN')], [('overflow', 'NN')], [('answer', 'NN')], [(']', 'NN')], [('(', '(')], [(')', ')')], [('mentions', 'NNS')], [('memory', 'NN')], [('alignment', 'NN')], [('helpful', 'NN')], [('caching', 'VBG')], [('.', '.')], [('know', 'VB')], [('aligned', 'VBN')], [('memory', 'NN')], [('makes', 'VBZ')], [('fetching', 'VBG')], [('data', 'NNS')], [('faster', 'NN')], [('cpu', 'NN')], [('need', 'NN')], [('shift', 'NN')], [('bits', 'NNS')], [('two', 'CD')], [('reads', 'NNS')], [('combine', 'NN')], [('results', 'NNS')], [('register', 'NN')], [('.', '.')], [('got', 'VBD')], [('know', 'VB')], [('[', 'NN')], [('ibm', 'NN')], [('developer', 'NN')], [('article', 'NN')], [(']', 'NN')], [('(', '(')], [('-dalign/', 'NN')], [(')', ')')], [('.', '.')], [('thanks', 'NNS')], [('!', '.')]]",read article memory alignment reading advantage memory alignment read cache . clearly explain memory alignment help cache . would delighted someone could explain . [ stack overflow answer ] ( ) mention memory alignment helpful cache . know align memory make fetch data faster cpu need shift bit two read combine result register . get know [ ibm developer article ] ( -dalign/ ) . thanks !,1_memory_byte_data_alignment,4
275,rue0sq,"What does it mean for the CPU to ""decode a command""? I mean i get the general idea but how exactly it works?",,48,0.9,computerscience,https://www.reddit.com/r/computerscience/comments/rue0sq/what_does_it_mean_for_the_cpu_to_decode_a_command/,21,"pretty much title, i know that cpu fetches a unit from memory and then it decodes it, but i do not know what exactly that means or how it works",1641143248.0,"['pretty', 'much', 'title', ',', 'know', 'cpu', 'fetch', 'unit', 'memory', 'decodes', ',', 'know', 'exactly', 'mean', 'work']","[[('pretty', 'RB')], [('much', 'JJ')], [('title', 'NN')], [(',', ',')], [('know', 'VB')], [('cpu', 'NN')], [('fetches', 'NNS')], [('unit', 'NN')], [('memory', 'NN')], [('decodes', 'NNS')], [(',', ',')], [('know', 'VB')], [('exactly', 'RB')], [('means', 'NNS')], [('works', 'NNS')]]","pretty much title , know cpu fetch unit memory decodes , know exactly mean work",1_memory_byte_data_alignment,3
276,ruwflx,Question about installation software,,1,0.6,computerscience,https://www.reddit.com/r/computerscience/comments/ruwflx/question_about_installation_software/,8,"bit of background: i am a computer science student and a software developer, have been programming for several years now.

i have been wondering about this for a while now, but how come the installer of a software is sometimes much much lighter than the software itself? as i understand it, the concept of an installer generally is to compress the necessary files for a software, and then distribute the files in the pc + configure whatever settings required to operate the software (add registry records etc.).

but sometimes the weight difference between the installer and the software is really big, like several gbs big, and for games it is sometimes up to a couple dozen gbs even when the installer is an offline one (as in does not have to download extra data in order to finish).

i do not see how these variations can be achieved using conventional compression, especially when the compressed files are not simple textual data.

am i missing some key point in how installers work? is it really just simple compression and decompression? am i just exaggerating the weight differences? (i really do not have a concrete example of an installer that behaves that way at the moment, but if memory serves me right that was the case with many of them)",1641196518.0,"['bit', 'background', ':', 'computer', 'science', 'student', 'software', 'developer', ',', 'program', 'several', 'year', '.', 'wonder', ',', 'come', 'installer', 'software', 'sometimes', 'much', 'much', 'lighter', 'software', '?', 'understand', ',', 'concept', 'installer', 'generally', 'compress', 'necessary', 'file', 'software', ',', 'distribute', 'file', 'pc', '+', 'configure', 'whatever', 'setting', 'require', 'operate', 'software', '(', 'add', 'registry', 'record', 'etc', '.', ')', '.', 'sometimes', 'weight', 'difference', 'installer', 'software', 'really', 'big', ',', 'like', 'several', 'gb', 'big', ',', 'game', 'sometimes', 'couple', 'dozen', 'gb', 'even', 'installer', 'offline', 'one', '(', 'download', 'extra', 'data', 'order', 'finish', ')', '.', 'see', 'variation', 'achieve', 'use', 'conventional', 'compression', ',', 'especially', 'compress', 'file', 'simple', 'textual', 'data', '.', 'miss', 'key', 'point', 'installers', 'work', '?', 'really', 'simple', 'compression', 'decompression', '?', 'exaggerate', 'weight', 'difference', '?', '(', 'really', 'concrete', 'example', 'installer', 'behaves', 'way', 'moment', ',', 'memory', 'serf', 'right', 'case', 'many', ')']","[[('bit', 'NN')], [('background', 'NN')], [(':', ':')], [('computer', 'NN')], [('science', 'NN')], [('student', 'NN')], [('software', 'NN')], [('developer', 'NN')], [(',', ',')], [('programming', 'VBG')], [('several', 'JJ')], [('years', 'NNS')], [('.', '.')], [('wondering', 'VBG')], [(',', ',')], [('come', 'VB')], [('installer', 'NN')], [('software', 'NN')], [('sometimes', 'RB')], [('much', 'JJ')], [('much', 'JJ')], [('lighter', 'NN')], [('software', 'NN')], [('?', '.')], [('understand', 'NN')], [(',', ',')], [('concept', 'NN')], [('installer', 'NN')], [('generally', 'RB')], [('compress', 'NN')], [('necessary', 'JJ')], [('files', 'NNS')], [('software', 'NN')], [(',', ',')], [('distribute', 'NN')], [('files', 'NNS')], [('pc', 'NN')], [('+', 'NN')], [('configure', 'NN')], [('whatever', 'WDT')], [('settings', 'NNS')], [('required', 'VBN')], [('operate', 'NN')], [('software', 'NN')], [('(', '(')], [('add', 'VB')], [('registry', 'NN')], [('records', 'NNS')], [('etc', 'NN')], [('.', '.')], [(')', ')')], [('.', '.')], [('sometimes', 'RB')], [('weight', 'NN')], [('difference', 'NN')], [('installer', 'NN')], [('software', 'NN')], [('really', 'RB')], [('big', 'JJ')], [(',', ',')], [('like', 'IN')], [('several', 'JJ')], [('gbs', 'NN')], [('big', 'JJ')], [(',', ',')], [('games', 'NNS')], [('sometimes', 'RB')], [('couple', 'NN')], [('dozen', 'NN')], [('gbs', 'NN')], [('even', 'RB')], [('installer', 'NN')], [('offline', 'NN')], [('one', 'CD')], [('(', '(')], [('download', 'NN')], [('extra', 'JJ')], [('data', 'NNS')], [('order', 'NN')], [('finish', 'NN')], [(')', ')')], [('.', '.')], [('see', 'VB')], [('variations', 'NNS')], [('achieved', 'VBN')], [('using', 'VBG')], [('conventional', 'JJ')], [('compression', 'NN')], [(',', ',')], [('especially', 'RB')], [('compressed', 'VBN')], [('files', 'NNS')], [('simple', 'NN')], [('textual', 'JJ')], [('data', 'NNS')], [('.', '.')], [('missing', 'VBG')], [('key', 'NN')], [('point', 'NN')], [('installers', 'NNS')], [('work', 'NN')], [('?', '.')], [('really', 'RB')], [('simple', 'NN')], [('compression', 'NN')], [('decompression', 'NN')], [('?', '.')], [('exaggerating', 'VBG')], [('weight', 'NN')], [('differences', 'NNS')], [('?', '.')], [('(', '(')], [('really', 'RB')], [('concrete', 'NN')], [('example', 'NN')], [('installer', 'NN')], [('behaves', 'NNS')], [('way', 'NN')], [('moment', 'NN')], [(',', ',')], [('memory', 'NN')], [('serves', 'NNS')], [('right', 'NN')], [('case', 'NN')], [('many', 'JJ')], [(')', ')')]]","bit background : computer science student software developer , program several year . wonder , come installer software sometimes much much lighter software ? understand , concept installer generally compress necessary file software , distribute file pc + configure whatever setting require operate software ( add registry record etc . ) . sometimes weight difference installer software really big , like several gb big , game sometimes couple dozen gb even installer offline one ( download extra data order finish ) . see variation achieve use conventional compression , especially compress file simple textual data . miss key point installers work ? really simple compression decompression ? exaggerate weight difference ? ( really concrete example installer behaves way moment , memory serf right case many )",1_memory_byte_data_alignment,3
277,rubju8,Resources for time complexities of common data structures across multiple programming languages,,14,0.86,computerscience,https://www.reddit.com/r/computerscience/comments/rubju8/resources_for_time_complexities_of_common_data/,11,"in **js**, array.push() is always o(1) since even if need to 'extend' the current array as the reference to the last item is simply removed.

in **java**, there is no array.push() and o(n) as need to shift all the elements to a the new array.

is there any resources available that show different time complexities for different programming languages?   


happy 2022!",1641136358.0,"['*', '*', 'j', '*', '*', ',', 'array.push', '(', ')', 'always', '(', '1', ')', 'since', 'even', 'need', ""'extend"", ""'"", 'current', 'array', 'reference', 'last', 'item', 'simply', 'remove', '.', '*', '*', 'java', '*', '*', ',', 'array.push', '(', ')', '(', 'n', ')', 'need', 'shift', 'element', 'new', 'array', '.', 'resource', 'available', 'show', 'different', 'time', 'complexity', 'different', 'program', 'language', '?', 'happy', '2022', '!']","[[('*', 'NN')], [('*', 'NN')], [('js', 'NN')], [('*', 'NN')], [('*', 'NN')], [(',', ',')], [('array.push', 'NN')], [('(', '(')], [(')', ')')], [('always', 'RB')], [('(', '(')], [('1', 'CD')], [(')', ')')], [('since', 'IN')], [('even', 'RB')], [('need', 'NN')], [(""'extend"", 'VB')], [(""'"", ""''"")], [('current', 'JJ')], [('array', 'NN')], [('reference', 'NN')], [('last', 'JJ')], [('item', 'NN')], [('simply', 'RB')], [('removed', 'VBN')], [('.', '.')], [('*', 'NN')], [('*', 'NN')], [('java', 'NN')], [('*', 'NN')], [('*', 'NN')], [(',', ',')], [('array.push', 'NN')], [('(', '(')], [(')', ')')], [('(', '(')], [('n', 'NN')], [(')', ')')], [('need', 'NN')], [('shift', 'NN')], [('elements', 'NNS')], [('new', 'JJ')], [('array', 'NN')], [('.', '.')], [('resources', 'NNS')], [('available', 'JJ')], [('show', 'NN')], [('different', 'JJ')], [('time', 'NN')], [('complexities', 'NNS')], [('different', 'JJ')], [('programming', 'VBG')], [('languages', 'NNS')], [('?', '.')], [('happy', 'JJ')], [('2022', 'CD')], [('!', '.')]]","* * j * * , array.push ( ) always ( 1 ) since even need 'extend ' current array reference last item simply remove . * * java * * , array.push ( ) ( n ) need shift element new array . resource available show different time complexity different program language ? happy 2022 !",0_algorithm_time_node_bill,1
278,rtu2da,Why is time stored as a signed integer?,,71,0.93,computerscience,https://www.reddit.com/r/computerscience/comments/rtu2da/why_is_time_stored_as_a_signed_integer/,18,"someone was talking about the y2k bug, whrich reminded me of the 2038 bug and i pulled up the wikipedia page to read up on it again.  i was under the impression that it would flip down to all 0s and move us back to 12/31/69 but i found out i was wrong and that it will just flip the sign when that happens and move us back to 12/13/1901.

but why was time stored as a signed integer anyway?  was there an expected need to work with negative time?  if it was unsigned would not that buy us a few more decades to procrastinate before needing to fix it?",1641075398.0,"['someone', 'talk', 'y2k', 'bug', ',', 'whrich', 'remind', '2038', 'bug', 'pull', 'wikipedia', 'page', 'read', '.', 'impression', 'would', 'flip', '0', 'move', 'u', 'back', '12/31/69', 'found', 'wrong', 'flip', 'sign', 'happens', 'move', 'u', 'back', '12/13/1901', '.', 'time', 'store', 'sign', 'integer', 'anyway', '?', 'expect', 'need', 'work', 'negative', 'time', '?', 'unsigned', 'would', 'buy', 'u', 'decade', 'procrastinate', 'need', 'fix', '?']","[[('someone', 'NN')], [('talking', 'VBG')], [('y2k', 'NN')], [('bug', 'NN')], [(',', ',')], [('whrich', 'NN')], [('reminded', 'VBN')], [('2038', 'CD')], [('bug', 'NN')], [('pulled', 'VBD')], [('wikipedia', 'NN')], [('page', 'NN')], [('read', 'NN')], [('.', '.')], [('impression', 'NN')], [('would', 'MD')], [('flip', 'NN')], [('0s', 'CD')], [('move', 'NN')], [('us', 'PRP')], [('back', 'RB')], [('12/31/69', 'CD')], [('found', 'NN')], [('wrong', 'JJ')], [('flip', 'NN')], [('sign', 'NN')], [('happens', 'NNS')], [('move', 'NN')], [('us', 'PRP')], [('back', 'RB')], [('12/13/1901', 'CD')], [('.', '.')], [('time', 'NN')], [('stored', 'VBN')], [('signed', 'VBN')], [('integer', 'NN')], [('anyway', 'RB')], [('?', '.')], [('expected', 'VBN')], [('need', 'NN')], [('work', 'NN')], [('negative', 'JJ')], [('time', 'NN')], [('?', '.')], [('unsigned', 'JJ')], [('would', 'MD')], [('buy', 'VB')], [('us', 'PRP')], [('decades', 'NNS')], [('procrastinate', 'NN')], [('needing', 'VBG')], [('fix', 'NN')], [('?', '.')]]","someone talk y2k bug , whrich remind 2038 bug pull wikipedia page read . impression would flip 0 move u back 12/31/69 found wrong flip sign happens move u back 12/13/1901 . time store sign integer anyway ? expect need work negative time ? unsigned would buy u decade procrastinate need fix ?",-1_abazbz2abz_2520_problem_use,1
279,ru5qo2,How many internal states are needed in a Turing Machine?,Discussion,10,0.86,computerscience,https://www.reddit.com/r/computerscience/comments/ru5qo2/how_many_internal_states_are_needed_in_a_turing/,12,"i have not personally experimented with a turing machine implementation myself - mainly because building my own implementations makes learning about the concept easier and more fun - but i know enough to know that tm's can simulate tm's, even if at a slower and smaller scale, which makes me wonder.


if a turing program exists that simulates the entirety of a turing machine inside a turing machine, how many internal states would it need to run such a program? would this number vary depending on the size of the tape's alphabet, or the number of states the simulated turing machine can be in?

edit: i found the answer, though i do not yet understand it. a 2-state, 3-letter turing machine can do this. i am searching the internet for proof that that is true.",1641113742.0,"['personally', 'experiment', 'turing', 'machine', 'implementation', '-', 'mainly', 'building', 'implementation', 'make', 'learn', 'concept', 'easy', 'fun', '-', 'know', 'enough', 'know', 'tm', ""'s"", 'simulate', 'tm', ""'s"", ',', 'even', 'slow', 'small', 'scale', ',', 'make', 'wonder', '.', 'turing', 'program', 'exists', 'simulates', 'entirety', 'turing', 'machine', 'inside', 'turing', 'machine', ',', 'many', 'internal', 'state', 'would', 'need', 'run', 'program', '?', 'would', 'number', 'vary', 'depend', 'size', 'tape', ""'s"", 'alphabet', ',', 'number', 'state', 'simulated', 'turing', 'machine', '?', 'edit', ':', 'found', 'answer', ',', 'though', 'yet', 'understand', '.', '2-state', ',', '3-letter', 'turing', 'machine', '.', 'search', 'internet', 'proof', 'true', '.']","[[('personally', 'RB')], [('experimented', 'VBN')], [('turing', 'VBG')], [('machine', 'NN')], [('implementation', 'NN')], [('-', ':')], [('mainly', 'RB')], [('building', 'NN')], [('implementations', 'NNS')], [('makes', 'VBZ')], [('learning', 'VBG')], [('concept', 'NN')], [('easier', 'JJR')], [('fun', 'NN')], [('-', ':')], [('know', 'VB')], [('enough', 'RB')], [('know', 'VB')], [('tm', 'NN')], [(""'s"", 'POS')], [('simulate', 'NN')], [('tm', 'NN')], [(""'s"", 'POS')], [(',', ',')], [('even', 'RB')], [('slower', 'JJR')], [('smaller', 'JJR')], [('scale', 'NN')], [(',', ',')], [('makes', 'VBZ')], [('wonder', 'NN')], [('.', '.')], [('turing', 'VBG')], [('program', 'NN')], [('exists', 'NNS')], [('simulates', 'NNS')], [('entirety', 'NN')], [('turing', 'VBG')], [('machine', 'NN')], [('inside', 'IN')], [('turing', 'VBG')], [('machine', 'NN')], [(',', ',')], [('many', 'JJ')], [('internal', 'JJ')], [('states', 'NNS')], [('would', 'MD')], [('need', 'NN')], [('run', 'VB')], [('program', 'NN')], [('?', '.')], [('would', 'MD')], [('number', 'NN')], [('vary', 'NN')], [('depending', 'VBG')], [('size', 'NN')], [('tape', 'NN')], [(""'s"", 'POS')], [('alphabet', 'NN')], [(',', ',')], [('number', 'NN')], [('states', 'NNS')], [('simulated', 'JJ')], [('turing', 'VBG')], [('machine', 'NN')], [('?', '.')], [('edit', 'NN')], [(':', ':')], [('found', 'NN')], [('answer', 'NN')], [(',', ',')], [('though', 'IN')], [('yet', 'RB')], [('understand', 'NN')], [('.', '.')], [('2-state', 'JJ')], [(',', ',')], [('3-letter', 'JJ')], [('turing', 'VBG')], [('machine', 'NN')], [('.', '.')], [('searching', 'VBG')], [('internet', 'NN')], [('proof', 'NN')], [('true', 'JJ')], [('.', '.')]]","personally experiment turing machine implementation - mainly building implementation make learn concept easy fun - know enough know tm 's simulate tm 's , even slow small scale , make wonder . turing program exists simulates entirety turing machine inside turing machine , many internal state would need run program ? would number vary depend size tape 's alphabet , number state simulated turing machine ? edit : found answer , though yet understand . 2-state , 3-letter turing machine . search internet proof true .",7_tm_state_turing_universal,3
280,ru3c37,Computing Knowledge Itself?,,8,0.65,computerscience,https://www.reddit.com/r/computerscience/comments/ru3c37/computing_knowledge_itself/,18,"so before i start i literally had the idea 5 minutes ago and i hope to explore it more thoroughly with you guys by finding possible problems and possible solutions. so i encourage you to have a think before you comment so we all get the maximum benefit. let‘s get started!

so knowledge is something that people love. rightly so! knowledge helps solve all sorts of problems. in fact, it is a very valuable resource in any given arena. however knowledge also has its own statistical topology. there is ways in which you can get to the next theory quicker and more fundamentally. so why do not we try and teach the ai this!?

we define a computable theoretical topology with a small amount of variables. mathematics itself would be preferable because it is relatively data minimal. then we define the axioms of our current understanding of mathematics. then we let the ai invent knew theories and check it against our current ones. where am i dreaming?",1641103921.0,"['start', 'literally', 'idea', '5', 'minute', 'ago', 'hope', 'explore', 'thoroughly', 'guy', 'find', 'possible', 'problem', 'possible', 'solution', '.', 'encourage', 'think', 'comment', 'get', 'maximum', 'benefit', '.', 'let', '‘', 'get', 'start', '!', 'knowledge', 'something', 'people', 'love', '.', 'rightly', '!', 'knowledge', 'help', 'solve', 'sort', 'problem', '.', 'fact', ',', 'valuable', 'resource', 'give', 'arena', '.', 'however', 'knowledge', 'also', 'statistical', 'topology', '.', 'way', 'get', 'next', 'theory', 'quicker', 'fundamentally', '.', 'try', 'teach', 'ai', '!', '?', 'define', 'computable', 'theoretical', 'topology', 'small', 'amount', 'variable', '.', 'mathematics', 'would', 'preferable', 'relatively', 'data', 'minimal', '.', 'define', 'axiom', 'current', 'understand', 'mathematics', '.', 'let', 'ai', 'invent', 'knew', 'theory', 'check', 'current', 'one', '.', 'dream', '?']","[[('start', 'NN')], [('literally', 'RB')], [('idea', 'NN')], [('5', 'CD')], [('minutes', 'NNS')], [('ago', 'RB')], [('hope', 'NN')], [('explore', 'NN')], [('thoroughly', 'RB')], [('guys', 'NNS')], [('finding', 'VBG')], [('possible', 'JJ')], [('problems', 'NNS')], [('possible', 'JJ')], [('solutions', 'NNS')], [('.', '.')], [('encourage', 'NN')], [('think', 'NN')], [('comment', 'NN')], [('get', 'VB')], [('maximum', 'NN')], [('benefit', 'NN')], [('.', '.')], [('let', 'VB')], [('‘', 'NN')], [('get', 'VB')], [('started', 'VBN')], [('!', '.')], [('knowledge', 'NN')], [('something', 'NN')], [('people', 'NNS')], [('love', 'NN')], [('.', '.')], [('rightly', 'RB')], [('!', '.')], [('knowledge', 'NN')], [('helps', 'NNS')], [('solve', 'NN')], [('sorts', 'NNS')], [('problems', 'NNS')], [('.', '.')], [('fact', 'NN')], [(',', ',')], [('valuable', 'JJ')], [('resource', 'NN')], [('given', 'VBN')], [('arena', 'NN')], [('.', '.')], [('however', 'RB')], [('knowledge', 'NN')], [('also', 'RB')], [('statistical', 'JJ')], [('topology', 'NN')], [('.', '.')], [('ways', 'NNS')], [('get', 'VB')], [('next', 'JJ')], [('theory', 'NN')], [('quicker', 'NN')], [('fundamentally', 'RB')], [('.', '.')], [('try', 'NN')], [('teach', 'NN')], [('ai', 'NN')], [('!', '.')], [('?', '.')], [('define', 'NN')], [('computable', 'JJ')], [('theoretical', 'JJ')], [('topology', 'NN')], [('small', 'JJ')], [('amount', 'NN')], [('variables', 'NNS')], [('.', '.')], [('mathematics', 'NNS')], [('would', 'MD')], [('preferable', 'JJ')], [('relatively', 'RB')], [('data', 'NNS')], [('minimal', 'NN')], [('.', '.')], [('define', 'NN')], [('axioms', 'NNS')], [('current', 'JJ')], [('understanding', 'VBG')], [('mathematics', 'NNS')], [('.', '.')], [('let', 'VB')], [('ai', 'NN')], [('invent', 'NN')], [('knew', 'NNS')], [('theories', 'NNS')], [('check', 'NN')], [('current', 'JJ')], [('ones', 'NNS')], [('.', '.')], [('dreaming', 'VBG')], [('?', '.')]]","start literally idea 5 minute ago hope explore thoroughly guy find possible problem possible solution . encourage think comment get maximum benefit . let ‘ get start ! knowledge something people love . rightly ! knowledge help solve sort problem . fact , valuable resource give arena . however knowledge also statistical topology . way get next theory quicker fundamentally . try teach ai ! ? define computable theoretical topology small amount variable . mathematics would preferable relatively data minimal . define axiom current understand mathematics . let ai invent knew theory check current one . dream ?",-1_abazbz2abz_2520_problem_use,4
281,ru6jx7,I would like to learn how a database is encrypted.,,3,0.67,computerscience,https://www.reddit.com/r/computerscience/comments/ru6jx7/i_would_like_to_learn_how_a_database_is_encrypted/,1,"hello, i understand a database containing passwords should be hashed using some sort of key, but i understand that each entry should be encrypted again in some other way. what i cannot understand is how that works. i would love a few pointers to some resources if anyone knows of any. thanks :).",1641117296.0,"['hello', ',', 'understand', 'database', 'contain', 'password', 'hash', 'use', 'sort', 'key', ',', 'understand', 'entry', 'encrypt', 'way', '.', 'understand', 'work', '.', 'would', 'love', 'pointer', 'resource', 'anyone', 'know', '.', 'thanks', ':', ')', '.']","[[('hello', 'NN')], [(',', ',')], [('understand', 'NN')], [('database', 'NN')], [('containing', 'VBG')], [('passwords', 'NNS')], [('hashed', 'VBN')], [('using', 'VBG')], [('sort', 'NN')], [('key', 'NN')], [(',', ',')], [('understand', 'NN')], [('entry', 'NN')], [('encrypted', 'VBN')], [('way', 'NN')], [('.', '.')], [('understand', 'NN')], [('works', 'NNS')], [('.', '.')], [('would', 'MD')], [('love', 'NN')], [('pointers', 'NNS')], [('resources', 'NNS')], [('anyone', 'NN')], [('knows', 'NNS')], [('.', '.')], [('thanks', 'NNS')], [(':', ':')], [(')', ')')], [('.', '.')]]","hello , understand database contain password hash use sort key , understand entry encrypt way . understand work . would love pointer resource anyone know . thanks : ) .",6_server_packet_key_hash,4
282,rubwjz,How does computers with different systems communicate ?,Help,0,0.44,computerscience,https://www.reddit.com/r/computerscience/comments/rubwjz/how_does_computers_with_different_systems/,5,"how can computers with different systems that have different data type representation communicate properly? what is the concept behind it, any links or articles would be appreciated.",1641137406.0,"['computer', 'different', 'system', 'different', 'data', 'type', 'representation', 'communicate', 'properly', '?', 'concept', 'behind', ',', 'link', 'article', 'would', 'appreciate', '.']","[[('computers', 'NNS')], [('different', 'JJ')], [('systems', 'NNS')], [('different', 'JJ')], [('data', 'NNS')], [('type', 'NN')], [('representation', 'NN')], [('communicate', 'NN')], [('properly', 'RB')], [('?', '.')], [('concept', 'NN')], [('behind', 'IN')], [(',', ',')], [('links', 'NNS')], [('articles', 'NNS')], [('would', 'MD')], [('appreciated', 'VBN')], [('.', '.')]]","computer different system different data type representation communicate properly ? concept behind , link article would appreciate .",1_memory_byte_data_alignment,3
283,rtkdm7,Mind reading algorithms,Discussion,66,0.85,computerscience,https://www.reddit.com/r/computerscience/comments/rtkdm7/mind_reading_algorithms/,25,"good day everyone

recovering sz here, on meds and in therapy

iv been researching the incidences you hear about where, social media,google or the internet seems to read peoples minds. i think its quite common and alarming.

you often hear folk say they do not mention aloud what their thinking let alone have it in their search history or have any record of it, they simply thought it and received an ad or a search suggestion.

my question is this ;

how is this possible? iv heard its a predictive algorithm but how does it do it exactly? is it really an algorithm if its right time after time

iv heard of confirmation bias as well but i do not believe that is what this is


any help appreciated

have a good day",1641047052.0,"['good', 'day', 'everyone', 'recover', 'sz', ',', 'med', 'therapy', 'iv', 'research', 'incidence', 'hear', ',', 'social', 'medium', ',', 'google', 'internet', 'seem', 'read', 'people', 'mind', '.', 'think', 'quite', 'common', 'alarm', '.', 'often', 'hear', 'folk', 'say', 'mention', 'aloud', 'think', 'let', 'alone', 'search', 'history', 'record', ',', 'simply', 'thought', 'receive', 'ad', 'search', 'suggestion', '.', 'question', ';', 'possible', '?', 'iv', 'heard', 'predictive', 'algorithm', 'exactly', '?', 'really', 'algorithm', 'right', 'time', 'time', 'iv', 'heard', 'confirmation', 'bias', 'well', 'believe', 'help', 'appreciate', 'good', 'day']","[[('good', 'JJ')], [('day', 'NN')], [('everyone', 'NN')], [('recovering', 'VBG')], [('sz', 'NN')], [(',', ',')], [('meds', 'NNS')], [('therapy', 'NN')], [('iv', 'NN')], [('researching', 'VBG')], [('incidences', 'NNS')], [('hear', 'NN')], [(',', ',')], [('social', 'JJ')], [('media', 'NNS')], [(',', ',')], [('google', 'NN')], [('internet', 'NN')], [('seems', 'VBZ')], [('read', 'NN')], [('peoples', 'NNS')], [('minds', 'NNS')], [('.', '.')], [('think', 'NN')], [('quite', 'RB')], [('common', 'JJ')], [('alarming', 'VBG')], [('.', '.')], [('often', 'RB')], [('hear', 'NN')], [('folk', 'NN')], [('say', 'VB')], [('mention', 'NN')], [('aloud', 'NN')], [('thinking', 'VBG')], [('let', 'VB')], [('alone', 'RB')], [('search', 'NN')], [('history', 'NN')], [('record', 'NN')], [(',', ',')], [('simply', 'RB')], [('thought', 'NN')], [('received', 'VBN')], [('ad', 'NN')], [('search', 'NN')], [('suggestion', 'NN')], [('.', '.')], [('question', 'NN')], [(';', ':')], [('possible', 'JJ')], [('?', '.')], [('iv', 'NN')], [('heard', 'NN')], [('predictive', 'NN')], [('algorithm', 'NN')], [('exactly', 'RB')], [('?', '.')], [('really', 'RB')], [('algorithm', 'NN')], [('right', 'NN')], [('time', 'NN')], [('time', 'NN')], [('iv', 'NN')], [('heard', 'NN')], [('confirmation', 'NN')], [('bias', 'NN')], [('well', 'RB')], [('believe', 'VB')], [('help', 'NN')], [('appreciated', 'VBN')], [('good', 'JJ')], [('day', 'NN')]]","good day everyone recover sz , med therapy iv research incidence hear , social medium , google internet seem read people mind . think quite common alarm . often hear folk say mention aloud think let alone search history record , simply thought receive ad search suggestion . question ; possible ? iv heard predictive algorithm exactly ? really algorithm right time time iv heard confirmation bias well believe help appreciate good day",3_search_ai_think_google,4
284,rtv1bn,Are there other machines exactly as powerful as the Turing Machine?,Discussion,9,0.74,computerscience,https://www.reddit.com/r/computerscience/comments/rtv1bn/are_there_other_machines_exactly_as_powerful_as/,10,"i am playing around with manually operated mechanical computers (think the abacus, crank calculator, etc.) and i am wondering if there is other deterministic architectures exactly as powerful as the turing machine?

&#x200b;

edit: i have done some hours of research and discovered an online copy of stephen wolfram's ""[a new kind of science](/)"" that includes some mechanisms that match closely what i was looking for, such as [tag systems](--tag-systems/), [register machines](--register-machines/), and [substitution systems](--substitution-systems/). i do not know if any one of them are turing complete yet, but something tells me at least some of them are.",1641078155.0,"['play', 'around', 'manually', 'operate', 'mechanical', 'computer', '(', 'think', 'abacus', ',', 'crank', 'calculator', ',', 'etc', '.', ')', 'wonder', 'deterministic', 'architecture', 'exactly', 'powerful', 'turing', 'machine', '?', '&', '#', 'x200b', ';', 'edit', ':', 'do', 'hour', 'research', 'discover', 'online', 'copy', 'stephen', 'wolfram', ""'s"", '``', '[', 'new', 'kind', 'science', ']', '(', '/', ')', ""''"", 'include', 'mechanism', 'match', 'closely', 'look', ',', '[', 'tag', 'system', ']', '(', '--', 'tag-systems/', ')', ',', '[', 'register', 'machine', ']', '(', '--', 'register-machines/', ')', ',', '[', 'substitution', 'system', ']', '(', '--', 'substitution-systems/', ')', '.', 'know', 'one', 'turing', 'complete', 'yet', ',', 'something', 'tell', 'least', '.']","[[('playing', 'VBG')], [('around', 'IN')], [('manually', 'RB')], [('operated', 'VBN')], [('mechanical', 'JJ')], [('computers', 'NNS')], [('(', '(')], [('think', 'NN')], [('abacus', 'NN')], [(',', ',')], [('crank', 'NN')], [('calculator', 'NN')], [(',', ',')], [('etc', 'NN')], [('.', '.')], [(')', ')')], [('wondering', 'VBG')], [('deterministic', 'JJ')], [('architectures', 'NNS')], [('exactly', 'RB')], [('powerful', 'JJ')], [('turing', 'VBG')], [('machine', 'NN')], [('?', '.')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('edit', 'NN')], [(':', ':')], [('done', 'VBN')], [('hours', 'NNS')], [('research', 'NN')], [('discovered', 'VBN')], [('online', 'NN')], [('copy', 'NN')], [('stephen', 'NN')], [('wolfram', 'NN')], [(""'s"", 'POS')], [('``', '``')], [('[', 'NN')], [('new', 'JJ')], [('kind', 'NN')], [('science', 'NN')], [(']', 'NN')], [('(', '(')], [('/', 'NN')], [(')', ')')], [(""''"", ""''"")], [('includes', 'VBZ')], [('mechanisms', 'NNS')], [('match', 'NN')], [('closely', 'RB')], [('looking', 'VBG')], [(',', ',')], [('[', 'NN')], [('tag', 'NN')], [('systems', 'NNS')], [(']', 'NN')], [('(', '(')], [('--', ':')], [('tag-systems/', 'NN')], [(')', ')')], [(',', ',')], [('[', 'NN')], [('register', 'NN')], [('machines', 'NNS')], [(']', 'NN')], [('(', '(')], [('--', ':')], [('register-machines/', 'NN')], [(')', ')')], [(',', ',')], [('[', 'NN')], [('substitution', 'NN')], [('systems', 'NNS')], [(']', 'NN')], [('(', '(')], [('--', ':')], [('substitution-systems/', 'NN')], [(')', ')')], [('.', '.')], [('know', 'VB')], [('one', 'CD')], [('turing', 'VBG')], [('complete', 'JJ')], [('yet', 'RB')], [(',', ',')], [('something', 'NN')], [('tells', 'NNS')], [('least', 'JJS')], [('.', '.')]]","play around manually operate mechanical computer ( think abacus , crank calculator , etc . ) wonder deterministic architecture exactly powerful turing machine ? & # x200b ; edit : do hour research discover online copy stephen wolfram 's `` [ new kind science ] ( / ) '' include mechanism match closely look , [ tag system ] ( -- tag-systems/ ) , [ register machine ] ( -- register-machines/ ) , [ substitution system ] ( -- substitution-systems/ ) . know one turing complete yet , something tell least .",7_tm_state_turing_universal,3
285,rstlls,Why is RAM called random?,Discussion,177,0.93,computerscience,https://www.reddit.com/r/computerscience/comments/rstlls/why_is_ram_called_random/,33,"good day!

i have been wondering, what is so random about memory?",1640956234.0,"['good', 'day', '!', 'wonder', ',', 'random', 'memory', '?']","[[('good', 'JJ')], [('day', 'NN')], [('!', '.')], [('wondering', 'VBG')], [(',', ',')], [('random', 'NN')], [('memory', 'NN')], [('?', '.')]]","good day ! wonder , random memory ?",1_memory_byte_data_alignment,4
286,rsjxaz,Are there any real-time trackers of Moore's Law?,,23,0.85,computerscience,https://www.reddit.com/r/computerscience/comments/rsjxaz/are_there_any_realtime_trackers_of_moores_law/,6,"i am thinking some sort of website that automatically plots released processors vs their number of transistors or transistors per dollar against time.

it feels obvious enough that either someone is already done it, or it would not work, but all i have been able to find is a [static graph on the wikipedia page](#/media/file:moore's_law_transistor_count_1970-2020.png).",1640920271.0,"['think', 'sort', 'website', 'automatically', 'plot', 'release', 'processor', 'v', 'number', 'transistor', 'transistor', 'per', 'dollar', 'time', '.', 'feel', 'obvious', 'enough', 'either', 'someone', 'already', 'do', ',', 'would', 'work', ',', 'able', 'find', '[', 'static', 'graph', 'wikipedia', 'page', ']', '(', '#', '/media/file', ':', ""moore's_law_transistor_count_1970-2020.png"", ')', '.']","[[('thinking', 'VBG')], [('sort', 'NN')], [('website', 'NN')], [('automatically', 'RB')], [('plots', 'NNS')], [('released', 'VBN')], [('processors', 'NNS')], [('vs', 'NN')], [('number', 'NN')], [('transistors', 'NNS')], [('transistors', 'NNS')], [('per', 'IN')], [('dollar', 'NN')], [('time', 'NN')], [('.', '.')], [('feels', 'NNS')], [('obvious', 'JJ')], [('enough', 'RB')], [('either', 'DT')], [('someone', 'NN')], [('already', 'RB')], [('done', 'VBN')], [(',', ',')], [('would', 'MD')], [('work', 'NN')], [(',', ',')], [('able', 'JJ')], [('find', 'VB')], [('[', 'NN')], [('static', 'JJ')], [('graph', 'NN')], [('wikipedia', 'NN')], [('page', 'NN')], [(']', 'NN')], [('(', '(')], [('#', '#')], [('/media/file', 'NN')], [(':', ':')], [(""moore's_law_transistor_count_1970-2020.png"", 'NN')], [(')', ')')], [('.', '.')]]","think sort website automatically plot release processor v number transistor transistor per dollar time . feel obvious enough either someone already do , would work , able find [ static graph wikipedia page ] ( # /media/file : moore's_law_transistor_count_1970-2020.png ) .",-1_abazbz2abz_2520_problem_use,2
287,rs9uqq,"This may be a dumb question, but how would one scientifically develop AI?",Discussion,76,0.92,computerscience,https://www.reddit.com/r/computerscience/comments/rs9uqq/this_may_be_a_dumb_question_but_how_would_one/,16,"i have been following a youtube channel called two minute papers for some time now and it is awesome stuff. i am a computer science major currently in college (senior) and i was wondering how i could get started or have some fun learning and training my own algorithm based ais?

also, i have done research online with regards to this but i have not found what i am looking for. my real question is, how do ai “scientists” get their start? are they all geniuses that are self taught or is there actually a major/education route you can take to become one?",1640892280.0,"['follow', 'youtube', 'channel', 'call', 'two', 'minute', 'paper', 'time', 'awesome', 'stuff', '.', 'computer', 'science', 'major', 'currently', 'college', '(', 'senior', ')', 'wonder', 'could', 'get', 'start', 'fun', 'learn', 'training', 'algorithm', 'base', 'ai', '?', 'also', ',', 'do', 'research', 'online', 'regard', 'found', 'look', '.', 'real', 'question', ',', 'ai', '“', 'scientist', '”', 'get', 'start', '?', 'genius', 'self', 'taught', 'actually', 'major/education', 'route', 'take', 'become', 'one', '?']","[[('following', 'VBG')], [('youtube', 'NN')], [('channel', 'NNS')], [('called', 'VBN')], [('two', 'CD')], [('minute', 'NN')], [('papers', 'NNS')], [('time', 'NN')], [('awesome', 'NN')], [('stuff', 'NN')], [('.', '.')], [('computer', 'NN')], [('science', 'NN')], [('major', 'JJ')], [('currently', 'RB')], [('college', 'NN')], [('(', '(')], [('senior', 'JJ')], [(')', ')')], [('wondering', 'VBG')], [('could', 'MD')], [('get', 'VB')], [('started', 'VBN')], [('fun', 'NN')], [('learning', 'VBG')], [('training', 'NN')], [('algorithm', 'NN')], [('based', 'VBN')], [('ais', 'NN')], [('?', '.')], [('also', 'RB')], [(',', ',')], [('done', 'VBN')], [('research', 'NN')], [('online', 'NN')], [('regards', 'NNS')], [('found', 'NN')], [('looking', 'VBG')], [('.', '.')], [('real', 'JJ')], [('question', 'NN')], [(',', ',')], [('ai', 'NN')], [('“', 'NN')], [('scientists', 'NNS')], [('”', 'NN')], [('get', 'VB')], [('start', 'NN')], [('?', '.')], [('geniuses', 'NNS')], [('self', 'NN')], [('taught', 'NN')], [('actually', 'RB')], [('major/education', 'NN')], [('route', 'NN')], [('take', 'VB')], [('become', 'NN')], [('one', 'CD')], [('?', '.')]]","follow youtube channel call two minute paper time awesome stuff . computer science major currently college ( senior ) wonder could get start fun learn training algorithm base ai ? also , do research online regard found look . real question , ai “ scientist ” get start ? genius self taught actually major/education route take become one ?",3_search_ai_think_google,5
289,rs0z7i,What is the BEST way to find which agents are the best with minimum games between them (genetic algorithm),,10,0.86,computerscience,https://www.reddit.com/r/computerscience/comments/rs0z7i/what_is_the_best_way_to_find_which_agents_are_the/,9,"hi, i am trying to make a genetic algorithm to play chess. my problem is with finding the fitness value for each model. currently, i just pair each agent with a random agent and the winner adds to his score while the loser subtracts from his score. but i find it not very effective because while having a generation of 10 i only play 10 games and it is not enough to evaluate which agents are best. moreover, i cannot match every agent with every other agent since it will take fo ages to complete training. 

what do you think is the best way to know which agents are the best with minimum games between them?",1640868325.0,"['hi', ',', 'try', 'make', 'genetic', 'algorithm', 'play', 'chess', '.', 'problem', 'find', 'fitness', 'value', 'model', '.', 'currently', ',', 'pair', 'agent', 'random', 'agent', 'winner', 'add', 'score', 'loser', 'subtracts', 'score', '.', 'find', 'effective', 'generation', '10', 'play', '10', 'game', 'enough', 'evaluate', 'agent', 'best', '.', 'moreover', ',', 'match', 'every', 'agent', 'every', 'agent', 'since', 'take', 'fo', 'age', 'complete', 'training', '.', 'think', 'best', 'way', 'know', 'agent', 'best', 'minimum', 'game', '?']","[[('hi', 'NN')], [(',', ',')], [('trying', 'VBG')], [('make', 'VB')], [('genetic', 'JJ')], [('algorithm', 'NN')], [('play', 'NN')], [('chess', 'NN')], [('.', '.')], [('problem', 'NN')], [('finding', 'VBG')], [('fitness', 'NN')], [('value', 'NN')], [('model', 'NN')], [('.', '.')], [('currently', 'RB')], [(',', ',')], [('pair', 'NN')], [('agent', 'NN')], [('random', 'NN')], [('agent', 'NN')], [('winner', 'NN')], [('adds', 'VBZ')], [('score', 'NN')], [('loser', 'NN')], [('subtracts', 'NNS')], [('score', 'NN')], [('.', '.')], [('find', 'VB')], [('effective', 'JJ')], [('generation', 'NN')], [('10', 'CD')], [('play', 'NN')], [('10', 'CD')], [('games', 'NNS')], [('enough', 'RB')], [('evaluate', 'NN')], [('agents', 'NNS')], [('best', 'JJS')], [('.', '.')], [('moreover', 'NN')], [(',', ',')], [('match', 'NN')], [('every', 'DT')], [('agent', 'NN')], [('every', 'DT')], [('agent', 'NN')], [('since', 'IN')], [('take', 'VB')], [('fo', 'NN')], [('ages', 'NNS')], [('complete', 'JJ')], [('training', 'NN')], [('.', '.')], [('think', 'NN')], [('best', 'JJS')], [('way', 'NN')], [('know', 'VB')], [('agents', 'NNS')], [('best', 'JJS')], [('minimum', 'NN')], [('games', 'NNS')], [('?', '.')]]","hi , try make genetic algorithm play chess . problem find fitness value model . currently , pair agent random agent winner add score loser subtracts score . find effective generation 10 play 10 game enough evaluate agent best . moreover , match every agent every agent since take fo age complete training . think best way know agent best minimum game ?",3_search_ai_think_google,2
291,rrvks1,Solving Logic Puzzles Using Computers and Brute Force,,19,0.95,computerscience,https://www.reddit.com/r/computerscience/comments/rrvks1/solving_logic_puzzles_using_computers_and_brute/,5,"i came across the following logic problem:

&#x200b;

&#x200b;



in this problem, you are required to match the real names of basketball players to their nicknames, and sort the basketball players by their heights. normally, this problem would require you to manually enumerate different combinations of names-nicknames and names-heights, until there are no contradictions according to the conditions below.

&#x200b;

i was wondering if these kinds of problems can be solved by brute force using programming languages such as r.

&#x200b;

for example, the code below lists every possible combination of basketball players by height:

    
    my_list = c(""bill"", ""ernie"", ""oscar"", ""sammy"", ""tony"")
    
    d = permn(my_list)
    
    all_combinations  = as.data.frame(matrix(unlist(d), ncol = 120)) |>
      setnames(paste0(""col"", 1:120))
    
    
    data_frame_version = data.frame(matrix(unlist(d), ncol = length(d))
    
    matrix_version = matrix(unlist(d), ncol = length(d)) 
    
    #first 20 rows of matrix version:
    
         [,1]    [,2]    [,3]    [,4]    [,5]    [,6]    [,7]    [,8]    [,9]    [,10]   [,11]   [,12]   [,13]   [,14]   [,15]   [,16]   [,17]   [,18]   [,19]  
    [1,] ""bill""  ""bill""  ""bill""  ""bill""  ""tony""  ""tony""  ""bill""  ""bill""  ""bill""  ""bill""  ""bill""  ""bill""  ""bill""  ""bill""  ""tony""  ""tony""  ""sammy"" ""sammy"" ""sammy""
    [2,] ""ernie"" ""ernie"" ""ernie"" ""tony""  ""bill""  ""bill""  ""tony""  ""ernie"" ""ernie"" ""ernie"" ""sammy"" ""sammy"" ""sammy"" ""tony""  ""bill""  ""sammy"" ""tony""  ""bill""  ""bill"" 
    [3,] ""oscar"" ""oscar"" ""tony""  ""ernie"" ""ernie"" ""ernie"" ""ernie"" ""tony""  ""sammy"" ""sammy"" ""ernie"" ""ernie"" ""tony""  ""sammy"" ""sammy"" ""bill""  ""bill""  ""tony""  ""ernie""
    [4,] ""sammy"" ""tony""  ""oscar"" ""oscar"" ""oscar"" ""sammy"" ""sammy"" ""sammy"" ""tony""  ""oscar"" ""oscar"" ""tony""  ""ernie"" ""ernie"" ""ernie"" ""ernie"" ""ernie"" ""ernie"" ""tony"" 
    [5,] ""tony""  ""sammy"" ""sammy"" ""sammy"" ""sammy"" ""oscar"" ""oscar"" ""oscar"" ""oscar"" ""tony""  ""tony""  ""oscar"" ""oscar"" ""oscar"" ""oscar"" ""oscar"" ""oscar"" ""oscar"" ""oscar""

and this code below records every possible combination of name-nickname:

    
    list.a <- as.list(c(""bill"", ""ernie"", ""oscar"", ""sammy"", ""tony""))
    
    list.b <- as.list(c(""slats"", ""stretch"", ""tiny"", ""tower"", ""tree""))
    
    result.df <- expand.grid(list.a, list.b)
    result.list <- lapply(apply(result.df, 1, identity), unlist)
    result.list <- result.list[order(sapply(result.list, head, 1))]
    
     head(result.list)
    [[1]]
       var1    var2 
     ""bill"" ""slats"" 
    
    [[2]]
         var1      var2 
       ""bill"" ""stretch"" 
    
    [[3]]
      var1   var2 
    ""bill"" ""tiny"" 
    
    [[4]]
       var1    var2 
     ""bill"" ""tower"" 
    
    [[5]]
      var1   var2 
    ""bill"" ""tree"" 
    
    [[6]]
       var1    var2 
    ""ernie"" ""slats"" 

the way i see it, the two objects (""matrix\_version"" and ""result.list"") should contain the right answer to this logic puzzle - i just do not know how to extract the correct combination from these two objects such that the logical conditions are respected.

can someone please show me how to do this?

thanks!",1640848635.0,"['come', 'across', 'follow', 'logic', 'problem', ':', '&', '#', 'x200b', ';', '&', '#', 'x200b', ';', 'problem', ',', 'require', 'match', 'real', 'name', 'basketball', 'player', 'nickname', ',', 'sort', 'basketball', 'player', 'height', '.', 'normally', ',', 'problem', 'would', 'require', 'manually', 'enumerate', 'different', 'combination', 'names-nicknames', 'names-heights', ',', 'contradiction', 'accord', 'condition', '.', '&', '#', 'x200b', ';', 'wonder', 'kind', 'problem', 'solve', 'brute', 'force', 'use', 'program', 'language', 'r.', '&', '#', 'x200b', ';', 'example', ',', 'code', 'list', 'every', 'possible', 'combination', 'basketball', 'player', 'height', ':', 'my_list', '=', 'c', '(', '``', 'bill', ""''"", ',', '``', 'ernie', ""''"", ',', '``', 'oscar', ""''"", ',', '``', 'sammy', ""''"", ',', '``', 'tony', ""''"", ')', '=', 'permn', '(', 'my_list', ')', 'all_combinations', '=', 'as.data.frame', '(', 'matrix', '(', 'unlist', '(', ')', ',', 'ncol', '=', '120', ')', ')', '|', '>', 'setnames', '(', 'paste0', '(', '``', 'col', ""''"", ',', '1:120', ')', ')', 'data_frame_version', '=', 'data.frame', '(', 'matrix', '(', 'unlist', '(', ')', ',', 'ncol', '=', 'length', '(', ')', ')', 'matrix_version', '=', 'matrix', '(', 'unlist', '(', ')', ',', 'ncol', '=', 'length', '(', ')', ')', '#', 'first', '20', 'row', 'matrix', 'version', ':', '[', ',1', ']', '[', ',2', ']', '[', ',3', ']', '[', ',4', ']', '[', ',5', ']', '[', ',6', ']', '[', ',7', ']', '[', ',8', ']', '[', ',9', ']', '[', ',10', ']', '[', ',11', ']', '[', ',12', ']', '[', ',13', ']', '[', ',14', ']', '[', ',15', ']', '[', ',16', ']', '[', ',17', ']', '[', ',18', ']', '[', ',19', ']', '[', '1', ',', ']', '``', 'bill', ""''"", '``', 'bill', ""''"", '``', 'bill', ""''"", '``', 'bill', ""''"", '``', 'tony', ""''"", '``', 'tony', ""''"", '``', 'bill', ""''"", '``', 'bill', ""''"", '``', 'bill', ""''"", '``', 'bill', ""''"", '``', 'bill', ""''"", '``', 'bill', ""''"", '``', 'bill', ""''"", '``', 'bill', ""''"", '``', 'tony', ""''"", '``', 'tony', ""''"", '``', 'sammy', ""''"", '``', 'sammy', ""''"", '``', 'sammy', ""''"", '[', '2', ',', ']', '``', 'ernie', ""''"", '``', 'ernie', ""''"", '``', 'ernie', ""''"", '``', 'tony', ""''"", '``', 'bill', ""''"", '``', 'bill', ""''"", '``', 'tony', ""''"", '``', 'ernie', ""''"", '``', 'ernie', ""''"", '``', 'ernie', ""''"", '``', 'sammy', ""''"", '``', 'sammy', ""''"", '``', 'sammy', ""''"", '``', 'tony', ""''"", '``', 'bill', ""''"", '``', 'sammy', ""''"", '``', 'tony', ""''"", '``', 'bill', ""''"", '``', 'bill', ""''"", '[', '3', ',', ']', '``', 'oscar', ""''"", '``', 'oscar', ""''"", '``', 'tony', ""''"", '``', 'ernie', ""''"", '``', 'ernie', ""''"", '``', 'ernie', ""''"", '``', 'ernie', ""''"", '``', 'tony', ""''"", '``', 'sammy', ""''"", '``', 'sammy', ""''"", '``', 'ernie', ""''"", '``', 'ernie', ""''"", '``', 'tony', ""''"", '``', 'sammy', ""''"", '``', 'sammy', ""''"", '``', 'bill', ""''"", '``', 'bill', ""''"", '``', 'tony', ""''"", '``', 'ernie', ""''"", '[', '4', ',', ']', '``', 'sammy', ""''"", '``', 'tony', ""''"", '``', 'oscar', ""''"", '``', 'oscar', ""''"", '``', 'oscar', ""''"", '``', 'sammy', ""''"", '``', 'sammy', ""''"", '``', 'sammy', ""''"", '``', 'tony', ""''"", '``', 'oscar', ""''"", '``', 'oscar', ""''"", '``', 'tony', ""''"", '``', 'ernie', ""''"", '``', 'ernie', ""''"", '``', 'ernie', ""''"", '``', 'ernie', ""''"", '``', 'ernie', ""''"", '``', 'ernie', ""''"", '``', 'tony', ""''"", '[', '5', ',', ']', '``', 'tony', ""''"", '``', 'sammy', ""''"", '``', 'sammy', ""''"", '``', 'sammy', ""''"", '``', 'sammy', ""''"", '``', 'oscar', ""''"", '``', 'oscar', ""''"", '``', 'oscar', ""''"", '``', 'oscar', ""''"", '``', 'tony', ""''"", '``', 'tony', ""''"", '``', 'oscar', ""''"", '``', 'oscar', ""''"", '``', 'oscar', ""''"", '``', 'oscar', ""''"", '``', 'oscar', ""''"", '``', 'oscar', ""''"", '``', 'oscar', ""''"", '``', 'oscar', ""''"", 'code', 'record', 'every', 'possible', 'combination', 'name-nickname', ':', 'list.a', '<', '-', 'as.list', '(', 'c', '(', '``', 'bill', ""''"", ',', '``', 'ernie', ""''"", ',', '``', 'oscar', ""''"", ',', '``', 'sammy', ""''"", ',', '``', 'tony', ""''"", ')', ')', 'list.b', '<', '-', 'as.list', '(', 'c', '(', '``', 'slat', ""''"", ',', '``', 'stretch', ""''"", ',', '``', 'tiny', ""''"", ',', '``', 'tower', ""''"", ',', '``', 'tree', ""''"", ')', ')', 'result.df', '<', '-', 'expand.grid', '(', 'list.a', ',', 'list.b', ')', 'result.list', '<', '-', 'lapply', '(', 'apply', '(', 'result.df', ',', '1', ',', 'identity', ')', ',', 'unlist', ')', 'result.list', '<', '-', 'result.list', '[', 'order', '(', 'sapply', '(', 'result.list', ',', 'head', ',', '1', ')', ')', ']', 'head', '(', 'result.list', ')', '[', '[', '1', ']', ']', 'var1', 'var2', '``', 'bill', ""''"", '``', 'slat', ""''"", '[', '[', '2', ']', ']', 'var1', 'var2', '``', 'bill', ""''"", '``', 'stretch', ""''"", '[', '[', '3', ']', ']', 'var1', 'var2', '``', 'bill', ""''"", '``', 'tiny', ""''"", '[', '[', '4', ']', ']', 'var1', 'var2', '``', 'bill', ""''"", '``', 'tower', ""''"", '[', '[', '5', ']', ']', 'var1', 'var2', '``', 'bill', ""''"", '``', 'tree', ""''"", '[', '[', '6', ']', ']', 'var1', 'var2', '``', 'ernie', ""''"", '``', 'slat', ""''"", 'way', 'see', ',', 'two', 'object', '(', '``', 'matrix\\_version', ""''"", '``', 'result.list', ""''"", ')', 'contain', 'right', 'answer', 'logic', 'puzzle', '-', 'know', 'extract', 'correct', 'combination', 'two', 'object', 'logical', 'condition', 'respect', '.', 'someone', 'please', 'show', '?', 'thanks', '!']","[[('came', 'VBD')], [('across', 'IN')], [('following', 'VBG')], [('logic', 'NN')], [('problem', 'NN')], [(':', ':')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('problem', 'NN')], [(',', ',')], [('required', 'VBN')], [('match', 'NN')], [('real', 'JJ')], [('names', 'NNS')], [('basketball', 'NN')], [('players', 'NNS')], [('nicknames', 'NNS')], [(',', ',')], [('sort', 'NN')], [('basketball', 'NN')], [('players', 'NNS')], [('heights', 'NNS')], [('.', '.')], [('normally', 'RB')], [(',', ',')], [('problem', 'NN')], [('would', 'MD')], [('require', 'NN')], [('manually', 'RB')], [('enumerate', 'NN')], [('different', 'JJ')], [('combinations', 'NNS')], [('names-nicknames', 'NNS')], [('names-heights', 'NNS')], [(',', ',')], [('contradictions', 'NNS')], [('according', 'VBG')], [('conditions', 'NNS')], [('.', '.')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('wondering', 'VBG')], [('kinds', 'NNS')], [('problems', 'NNS')], [('solved', 'VBN')], [('brute', 'NN')], [('force', 'NN')], [('using', 'VBG')], [('programming', 'VBG')], [('languages', 'NNS')], [('r.', 'NN')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('example', 'NN')], [(',', ',')], [('code', 'NN')], [('lists', 'NNS')], [('every', 'DT')], [('possible', 'JJ')], [('combination', 'NN')], [('basketball', 'NN')], [('players', 'NNS')], [('height', 'NN')], [(':', ':')], [('my_list', 'NN')], [('=', 'NN')], [('c', 'NNS')], [('(', '(')], [('``', '``')], [('bill', 'NN')], [(""''"", ""''"")], [(',', ',')], [('``', '``')], [('ernie', 'NN')], [(""''"", ""''"")], [(',', ',')], [('``', '``')], [('oscar', 'NN')], [(""''"", ""''"")], [(',', ',')], [('``', '``')], [('sammy', 'NN')], [(""''"", ""''"")], [(',', ',')], [('``', '``')], [('tony', 'NN')], [(""''"", ""''"")], [(')', ')')], [('=', 'NN')], [('permn', 'NN')], [('(', '(')], [('my_list', 'NN')], [(')', ')')], [('all_combinations', 'NNS')], [('=', 'NN')], [('as.data.frame', 'NN')], [('(', '(')], [('matrix', 'NN')], [('(', '(')], [('unlist', 'NN')], [('(', '(')], [(')', ')')], [(',', ',')], [('ncol', 'NN')], [('=', 'NN')], [('120', 'CD')], [(')', ')')], [(')', ')')], [('|', 'NN')], [('>', 'NN')], [('setnames', 'NNS')], [('(', '(')], [('paste0', 'NN')], [('(', '(')], [('``', '``')], [('col', 'NN')], [(""''"", ""''"")], [(',', ',')], [('1:120', 'CD')], [(')', ')')], [(')', ')')], [('data_frame_version', 'NN')], [('=', 'NN')], [('data.frame', 'NN')], [('(', '(')], [('matrix', 'NN')], [('(', '(')], [('unlist', 'NN')], [('(', '(')], [(')', ')')], [(',', ',')], [('ncol', 'NN')], [('=', 'NN')], [('length', 'NN')], [('(', '(')], [(')', ')')], [(')', ')')], [('matrix_version', 'NN')], [('=', 'NN')], [('matrix', 'NN')], [('(', '(')], [('unlist', 'NN')], [('(', '(')], [(')', ')')], [(',', ',')], [('ncol', 'NN')], [('=', 'NN')], [('length', 'NN')], [('(', '(')], [(')', ')')], [(')', ')')], [('#', '#')], [('first', 'RB')], [('20', 'CD')], [('rows', 'NNS')], [('matrix', 'NN')], [('version', 'NN')], [(':', ':')], [('[', 'NN')], [(',1', 'NN')], [(']', 'NN')], [('[', 'NN')], [(',2', 'NN')], [(']', 'NN')], [('[', 'NN')], [(',3', 'NN')], [(']', 'NN')], [('[', 'NN')], [(',4', 'NN')], [(']', 'NN')], [('[', 'NN')], [(',5', 'NN')], [(']', 'NN')], [('[', 'NN')], [(',6', 'NN')], [(']', 'NN')], [('[', 'NN')], [(',7', 'NN')], [(']', 'NN')], [('[', 'NN')], [(',8', 'NN')], [(']', 'NN')], [('[', 'NN')], [(',9', 'NN')], [(']', 'NN')], [('[', 'NN')], [(',10', 'NN')], [(']', 'NN')], [('[', 'NN')], [(',11', 'NN')], [(']', 'NN')], [('[', 'NN')], [(',12', 'NN')], [(']', 'NN')], [('[', 'NN')], [(',13', 'NN')], [(']', 'NN')], [('[', 'NN')], [(',14', 'NN')], [(']', 'NN')], [('[', 'NN')], [(',15', 'NN')], [(']', 'NN')], [('[', 'NN')], [(',16', 'NN')], [(']', 'NN')], [('[', 'NN')], [(',17', 'NN')], [(']', 'NN')], [('[', 'NN')], [(',18', 'NN')], [(']', 'NN')], [('[', 'NN')], [(',19', 'NN')], [(']', 'NN')], [('[', 'NN')], [('1', 'CD')], [(',', ',')], [(']', 'NN')], [('``', '``')], [('bill', 'NN')], [(""''"", ""''"")], [('``', '``')], [('bill', 'NN')], [(""''"", ""''"")], [('``', '``')], [('bill', 'NN')], [(""''"", ""''"")], [('``', '``')], [('bill', 'NN')], [(""''"", ""''"")], [('``', '``')], [('tony', 'NN')], [(""''"", ""''"")], [('``', '``')], [('tony', 'NN')], [(""''"", ""''"")], [('``', '``')], [('bill', 'NN')], [(""''"", ""''"")], [('``', '``')], [('bill', 'NN')], [(""''"", ""''"")], [('``', '``')], [('bill', 'NN')], [(""''"", ""''"")], [('``', '``')], [('bill', 'NN')], [(""''"", ""''"")], [('``', '``')], [('bill', 'NN')], [(""''"", ""''"")], [('``', '``')], [('bill', 'NN')], [(""''"", ""''"")], [('``', '``')], [('bill', 'NN')], [(""''"", ""''"")], [('``', '``')], [('bill', 'NN')], [(""''"", ""''"")], [('``', '``')], [('tony', 'NN')], [(""''"", ""''"")], [('``', '``')], [('tony', 'NN')], [(""''"", ""''"")], [('``', '``')], [('sammy', 'NN')], [(""''"", ""''"")], [('``', '``')], [('sammy', 'NN')], [(""''"", ""''"")], [('``', '``')], [('sammy', 'NN')], [(""''"", ""''"")], [('[', 'NN')], [('2', 'CD')], [(',', ',')], [(']', 'NN')], [('``', '``')], [('ernie', 'NN')], [(""''"", ""''"")], [('``', '``')], [('ernie', 'NN')], [(""''"", ""''"")], [('``', '``')], [('ernie', 'NN')], [(""''"", ""''"")], [('``', '``')], [('tony', 'NN')], [(""''"", ""''"")], [('``', '``')], [('bill', 'NN')], [(""''"", ""''"")], [('``', '``')], [('bill', 'NN')], [(""''"", ""''"")], [('``', '``')], [('tony', 'NN')], [(""''"", ""''"")], [('``', '``')], [('ernie', 'NN')], [(""''"", ""''"")], [('``', '``')], [('ernie', 'NN')], [(""''"", ""''"")], [('``', '``')], [('ernie', 'NN')], [(""''"", ""''"")], [('``', '``')], [('sammy', 'NN')], [(""''"", ""''"")], [('``', '``')], [('sammy', 'NN')], [(""''"", ""''"")], [('``', '``')], [('sammy', 'NN')], [(""''"", ""''"")], [('``', '``')], [('tony', 'NN')], [(""''"", ""''"")], [('``', '``')], [('bill', 'NN')], [(""''"", ""''"")], [('``', '``')], [('sammy', 'NN')], [(""''"", ""''"")], [('``', '``')], [('tony', 'NN')], [(""''"", ""''"")], [('``', '``')], [('bill', 'NN')], [(""''"", ""''"")], [('``', '``')], [('bill', 'NN')], [(""''"", ""''"")], [('[', 'NN')], [('3', 'CD')], [(',', ',')], [(']', 'NN')], [('``', '``')], [('oscar', 'NN')], [(""''"", ""''"")], [('``', '``')], [('oscar', 'NN')], [(""''"", ""''"")], [('``', '``')], [('tony', 'NN')], [(""''"", ""''"")], [('``', '``')], [('ernie', 'NN')], [(""''"", ""''"")], [('``', '``')], [('ernie', 'NN')], [(""''"", ""''"")], [('``', '``')], [('ernie', 'NN')], [(""''"", ""''"")], [('``', '``')], [('ernie', 'NN')], [(""''"", ""''"")], [('``', '``')], [('tony', 'NN')], [(""''"", ""''"")], [('``', '``')], [('sammy', 'NN')], [(""''"", ""''"")], [('``', '``')], [('sammy', 'NN')], [(""''"", ""''"")], [('``', '``')], [('ernie', 'NN')], [(""''"", ""''"")], [('``', '``')], [('ernie', 'NN')], [(""''"", ""''"")], [('``', '``')], [('tony', 'NN')], [(""''"", ""''"")], [('``', '``')], [('sammy', 'NN')], [(""''"", ""''"")], [('``', '``')], [('sammy', 'NN')], [(""''"", ""''"")], [('``', '``')], [('bill', 'NN')], [(""''"", ""''"")], [('``', '``')], [('bill', 'NN')], [(""''"", ""''"")], [('``', '``')], [('tony', 'NN')], [(""''"", ""''"")], [('``', '``')], [('ernie', 'NN')], [(""''"", ""''"")], [('[', 'NN')], [('4', 'CD')], [(',', ',')], [(']', 'NN')], [('``', '``')], [('sammy', 'NN')], [(""''"", ""''"")], [('``', '``')], [('tony', 'NN')], [(""''"", ""''"")], [('``', '``')], [('oscar', 'NN')], [(""''"", ""''"")], [('``', '``')], [('oscar', 'NN')], [(""''"", ""''"")], [('``', '``')], [('oscar', 'NN')], [(""''"", ""''"")], [('``', '``')], [('sammy', 'NN')], [(""''"", ""''"")], [('``', '``')], [('sammy', 'NN')], [(""''"", ""''"")], [('``', '``')], [('sammy', 'NN')], [(""''"", ""''"")], [('``', '``')], [('tony', 'NN')], [(""''"", ""''"")], [('``', '``')], [('oscar', 'NN')], [(""''"", ""''"")], [('``', '``')], [('oscar', 'NN')], [(""''"", ""''"")], [('``', '``')], [('tony', 'NN')], [(""''"", ""''"")], [('``', '``')], [('ernie', 'NN')], [(""''"", ""''"")], [('``', '``')], [('ernie', 'NN')], [(""''"", ""''"")], [('``', '``')], [('ernie', 'NN')], [(""''"", ""''"")], [('``', '``')], [('ernie', 'NN')], [(""''"", ""''"")], [('``', '``')], [('ernie', 'NN')], [(""''"", ""''"")], [('``', '``')], [('ernie', 'NN')], [(""''"", ""''"")], [('``', '``')], [('tony', 'NN')], [(""''"", ""''"")], [('[', 'NN')], [('5', 'CD')], [(',', ',')], [(']', 'NN')], [('``', '``')], [('tony', 'NN')], [(""''"", ""''"")], [('``', '``')], [('sammy', 'NN')], [(""''"", ""''"")], [('``', '``')], [('sammy', 'NN')], [(""''"", ""''"")], [('``', '``')], [('sammy', 'NN')], [(""''"", ""''"")], [('``', '``')], [('sammy', 'NN')], [(""''"", ""''"")], [('``', '``')], [('oscar', 'NN')], [(""''"", ""''"")], [('``', '``')], [('oscar', 'NN')], [(""''"", ""''"")], [('``', '``')], [('oscar', 'NN')], [(""''"", ""''"")], [('``', '``')], [('oscar', 'NN')], [(""''"", ""''"")], [('``', '``')], [('tony', 'NN')], [(""''"", ""''"")], [('``', '``')], [('tony', 'NN')], [(""''"", ""''"")], [('``', '``')], [('oscar', 'NN')], [(""''"", ""''"")], [('``', '``')], [('oscar', 'NN')], [(""''"", ""''"")], [('``', '``')], [('oscar', 'NN')], [(""''"", ""''"")], [('``', '``')], [('oscar', 'NN')], [(""''"", ""''"")], [('``', '``')], [('oscar', 'NN')], [(""''"", ""''"")], [('``', '``')], [('oscar', 'NN')], [(""''"", ""''"")], [('``', '``')], [('oscar', 'NN')], [(""''"", ""''"")], [('``', '``')], [('oscar', 'NN')], [(""''"", ""''"")], [('code', 'NN')], [('records', 'NNS')], [('every', 'DT')], [('possible', 'JJ')], [('combination', 'NN')], [('name-nickname', 'NN')], [(':', ':')], [('list.a', 'NN')], [('<', 'NN')], [('-', ':')], [('as.list', 'NN')], [('(', '(')], [('c', 'NNS')], [('(', '(')], [('``', '``')], [('bill', 'NN')], [(""''"", ""''"")], [(',', ',')], [('``', '``')], [('ernie', 'NN')], [(""''"", ""''"")], [(',', ',')], [('``', '``')], [('oscar', 'NN')], [(""''"", ""''"")], [(',', ',')], [('``', '``')], [('sammy', 'NN')], [(""''"", ""''"")], [(',', ',')], [('``', '``')], [('tony', 'NN')], [(""''"", ""''"")], [(')', ')')], [(')', ')')], [('list.b', 'NN')], [('<', 'NN')], [('-', ':')], [('as.list', 'NN')], [('(', '(')], [('c', 'NNS')], [('(', '(')], [('``', '``')], [('slats', 'NNS')], [(""''"", ""''"")], [(',', ',')], [('``', '``')], [('stretch', 'NN')], [(""''"", ""''"")], [(',', ',')], [('``', '``')], [('tiny', 'JJ')], [(""''"", ""''"")], [(',', ',')], [('``', '``')], [('tower', 'NN')], [(""''"", ""''"")], [(',', ',')], [('``', '``')], [('tree', 'NN')], [(""''"", ""''"")], [(')', ')')], [(')', ')')], [('result.df', 'NN')], [('<', 'NN')], [('-', ':')], [('expand.grid', 'NN')], [('(', '(')], [('list.a', 'NN')], [(',', ',')], [('list.b', 'NN')], [(')', ')')], [('result.list', 'NN')], [('<', 'NN')], [('-', ':')], [('lapply', 'NN')], [('(', '(')], [('apply', 'VB')], [('(', '(')], [('result.df', 'NN')], [(',', ',')], [('1', 'CD')], [(',', ',')], [('identity', 'NN')], [(')', ')')], [(',', ',')], [('unlist', 'NN')], [(')', ')')], [('result.list', 'NN')], [('<', 'NN')], [('-', ':')], [('result.list', 'NN')], [('[', 'NN')], [('order', 'NN')], [('(', '(')], [('sapply', 'NN')], [('(', '(')], [('result.list', 'NN')], [(',', ',')], [('head', 'NN')], [(',', ',')], [('1', 'CD')], [(')', ')')], [(')', ')')], [(']', 'NN')], [('head', 'NN')], [('(', '(')], [('result.list', 'NN')], [(')', ')')], [('[', 'NN')], [('[', 'NN')], [('1', 'CD')], [(']', 'NN')], [(']', 'NN')], [('var1', 'NN')], [('var2', 'NN')], [('``', '``')], [('bill', 'NN')], [(""''"", ""''"")], [('``', '``')], [('slats', 'NNS')], [(""''"", ""''"")], [('[', 'NN')], [('[', 'NN')], [('2', 'CD')], [(']', 'NN')], [(']', 'NN')], [('var1', 'NN')], [('var2', 'NN')], [('``', '``')], [('bill', 'NN')], [(""''"", ""''"")], [('``', '``')], [('stretch', 'NN')], [(""''"", ""''"")], [('[', 'NN')], [('[', 'NN')], [('3', 'CD')], [(']', 'NN')], [(']', 'NN')], [('var1', 'NN')], [('var2', 'NN')], [('``', '``')], [('bill', 'NN')], [(""''"", ""''"")], [('``', '``')], [('tiny', 'JJ')], [(""''"", ""''"")], [('[', 'NN')], [('[', 'NN')], [('4', 'CD')], [(']', 'NN')], [(']', 'NN')], [('var1', 'NN')], [('var2', 'NN')], [('``', '``')], [('bill', 'NN')], [(""''"", ""''"")], [('``', '``')], [('tower', 'NN')], [(""''"", ""''"")], [('[', 'NN')], [('[', 'NN')], [('5', 'CD')], [(']', 'NN')], [(']', 'NN')], [('var1', 'NN')], [('var2', 'NN')], [('``', '``')], [('bill', 'NN')], [(""''"", ""''"")], [('``', '``')], [('tree', 'NN')], [(""''"", ""''"")], [('[', 'NN')], [('[', 'NN')], [('6', 'CD')], [(']', 'NN')], [(']', 'NN')], [('var1', 'NN')], [('var2', 'NN')], [('``', '``')], [('ernie', 'NN')], [(""''"", ""''"")], [('``', '``')], [('slats', 'NNS')], [(""''"", ""''"")], [('way', 'NN')], [('see', 'VB')], [(',', ',')], [('two', 'CD')], [('objects', 'NNS')], [('(', '(')], [('``', '``')], [('matrix\\_version', 'NN')], [(""''"", ""''"")], [('``', '``')], [('result.list', 'NN')], [(""''"", ""''"")], [(')', ')')], [('contain', 'NN')], [('right', 'NN')], [('answer', 'NN')], [('logic', 'NN')], [('puzzle', 'NN')], [('-', ':')], [('know', 'VB')], [('extract', 'NN')], [('correct', 'NN')], [('combination', 'NN')], [('two', 'CD')], [('objects', 'NNS')], [('logical', 'JJ')], [('conditions', 'NNS')], [('respected', 'VBN')], [('.', '.')], [('someone', 'NN')], [('please', 'NN')], [('show', 'NN')], [('?', '.')], [('thanks', 'NNS')], [('!', '.')]]","come across follow logic problem : & # x200b ; & # x200b ; problem , require match real name basketball player nickname , sort basketball player height . normally , problem would require manually enumerate different combination names-nicknames names-heights , contradiction accord condition . & # x200b ; wonder kind problem solve brute force use program language r. & # x200b ; example , code list every possible combination basketball player height : my_list = c ( `` bill '' , `` ernie '' , `` oscar '' , `` sammy '' , `` tony '' ) = permn ( my_list ) all_combinations = as.data.frame ( matrix ( unlist ( ) , ncol = 120 ) ) | > setnames ( paste0 ( `` col '' , 1:120 ) ) data_frame_version = data.frame ( matrix ( unlist ( ) , ncol = length ( ) ) matrix_version = matrix ( unlist ( ) , ncol = length ( ) ) # first 20 row matrix version : [ ,1 ] [ ,2 ] [ ,3 ] [ ,4 ] [ ,5 ] [ ,6 ] [ ,7 ] [ ,8 ] [ ,9 ] [ ,10 ] [ ,11 ] [ ,12 ] [ ,13 ] [ ,14 ] [ ,15 ] [ ,16 ] [ ,17 ] [ ,18 ] [ ,19 ] [ 1 , ] `` bill '' `` bill '' `` bill '' `` bill '' `` tony '' `` tony '' `` bill '' `` bill '' `` bill '' `` bill '' `` bill '' `` bill '' `` bill '' `` bill '' `` tony '' `` tony '' `` sammy '' `` sammy '' `` sammy '' [ 2 , ] `` ernie '' `` ernie '' `` ernie '' `` tony '' `` bill '' `` bill '' `` tony '' `` ernie '' `` ernie '' `` ernie '' `` sammy '' `` sammy '' `` sammy '' `` tony '' `` bill '' `` sammy '' `` tony '' `` bill '' `` bill '' [ 3 , ] `` oscar '' `` oscar '' `` tony '' `` ernie '' `` ernie '' `` ernie '' `` ernie '' `` tony '' `` sammy '' `` sammy '' `` ernie '' `` ernie '' `` tony '' `` sammy '' `` sammy '' `` bill '' `` bill '' `` tony '' `` ernie '' [ 4 , ] `` sammy '' `` tony '' `` oscar '' `` oscar '' `` oscar '' `` sammy '' `` sammy '' `` sammy '' `` tony '' `` oscar '' `` oscar '' `` tony '' `` ernie '' `` ernie '' `` ernie '' `` ernie '' `` ernie '' `` ernie '' `` tony '' [ 5 , ] `` tony '' `` sammy '' `` sammy '' `` sammy '' `` sammy '' `` oscar '' `` oscar '' `` oscar '' `` oscar '' `` tony '' `` tony '' `` oscar '' `` oscar '' `` oscar '' `` oscar '' `` oscar '' `` oscar '' `` oscar '' `` oscar '' code record every possible combination name-nickname : list.a < - as.list ( c ( `` bill '' , `` ernie '' , `` oscar '' , `` sammy '' , `` tony '' ) ) list.b < - as.list ( c ( `` slat '' , `` stretch '' , `` tiny '' , `` tower '' , `` tree '' ) ) result.df < - expand.grid ( list.a , list.b ) result.list < - lapply ( apply ( result.df , 1 , identity ) , unlist ) result.list < - result.list [ order ( sapply ( result.list , head , 1 ) ) ] head ( result.list ) [ [ 1 ] ] var1 var2 `` bill '' `` slat '' [ [ 2 ] ] var1 var2 `` bill '' `` stretch '' [ [ 3 ] ] var1 var2 `` bill '' `` tiny '' [ [ 4 ] ] var1 var2 `` bill '' `` tower '' [ [ 5 ] ] var1 var2 `` bill '' `` tree '' [ [ 6 ] ] var1 var2 `` ernie '' `` slat '' way see , two object ( `` matrix\_version '' `` result.list '' ) contain right answer logic puzzle - know extract correct combination two object logical condition respect . someone please show ? thanks !",0_algorithm_time_node_bill,3
292,rrsvuo,"CPU instructions, OS and applications",,22,1.0,computerscience,https://www.reddit.com/r/computerscience/comments/rrsvuo/cpu_instructions_os_and_applications/,5,"hello,

i have a hard time picturing how the cpu instructions, the operating system, and applications work together.

what i mean by that is the following, we have an application that is compiled, now it is converted to cpu instruction (i guess ??), but then this app is using system calls to interact with some i/o devices, how does this system calls go through the os? and if it is just an instruction that invokes an os function that makes that system call, what prevents the application from calling the i/o directly or ""hacking"" that function by pretending it is another process ( as an example a process reading data from a socket owned by another process).

thanks",1640839846.0,"['hello', ',', 'hard', 'time', 'picture', 'cpu', 'instruction', ',', 'operating', 'system', ',', 'application', 'work', 'together', '.', 'mean', 'follow', ',', 'application', 'compile', ',', 'convert', 'cpu', 'instruction', '(', 'guess', '?', '?', ')', ',', 'app', 'use', 'system', 'call', 'interact', 'i/o', 'device', ',', 'system', 'call', 'go', 'o', '?', 'instruction', 'invokes', 'o', 'function', 'make', 'system', 'call', ',', 'prevents', 'application', 'call', 'i/o', 'directly', '``', 'hack', ""''"", 'function', 'pretend', 'another', 'process', '(', 'example', 'process', 'reading', 'data', 'socket', 'own', 'another', 'process', ')', '.', 'thanks']","[[('hello', 'NN')], [(',', ',')], [('hard', 'JJ')], [('time', 'NN')], [('picturing', 'VBG')], [('cpu', 'NN')], [('instructions', 'NNS')], [(',', ',')], [('operating', 'NN')], [('system', 'NN')], [(',', ',')], [('applications', 'NNS')], [('work', 'NN')], [('together', 'RB')], [('.', '.')], [('mean', 'NN')], [('following', 'VBG')], [(',', ',')], [('application', 'NN')], [('compiled', 'VBN')], [(',', ',')], [('converted', 'VBN')], [('cpu', 'NN')], [('instruction', 'NN')], [('(', '(')], [('guess', 'NN')], [('?', '.')], [('?', '.')], [(')', ')')], [(',', ',')], [('app', 'NN')], [('using', 'VBG')], [('system', 'NN')], [('calls', 'NNS')], [('interact', 'NN')], [('i/o', 'NN')], [('devices', 'NNS')], [(',', ',')], [('system', 'NN')], [('calls', 'NNS')], [('go', 'VB')], [('os', 'NN')], [('?', '.')], [('instruction', 'NN')], [('invokes', 'NNS')], [('os', 'NN')], [('function', 'NN')], [('makes', 'VBZ')], [('system', 'NN')], [('call', 'NN')], [(',', ',')], [('prevents', 'NNS')], [('application', 'NN')], [('calling', 'VBG')], [('i/o', 'NN')], [('directly', 'RB')], [('``', '``')], [('hacking', 'VBG')], [(""''"", ""''"")], [('function', 'NN')], [('pretending', 'VBG')], [('another', 'DT')], [('process', 'NN')], [('(', '(')], [('example', 'NN')], [('process', 'NN')], [('reading', 'NN')], [('data', 'NNS')], [('socket', 'NN')], [('owned', 'VBN')], [('another', 'DT')], [('process', 'NN')], [(')', ')')], [('.', '.')], [('thanks', 'NNS')]]","hello , hard time picture cpu instruction , operating system , application work together . mean follow , application compile , convert cpu instruction ( guess ? ? ) , app use system call interact i/o device , system call go o ? instruction invokes o function make system call , prevents application call i/o directly `` hack '' function pretend another process ( example process reading data socket own another process ) . thanks",5_cpu_computer_run_process,2
293,rq60d4,Rules of Programming,Advice,167,0.93,computerscience,https://www.reddit.com/r/computerscience/comments/rq60d4/rules_of_programming/,45,"rob pike's 5 rules of programming

&#x200b;

\#rule 1.

\*you cannot tell where a program is going to spend its time.

bottlenecks occur in surprising places, so do not try to second guess and

put in a speed hack until you have proven that is where the bottleneck is.\*

&#x200b;

\#rule 2.

\*measure. do not tune for speed until you have measured, and even

then do not unless one part of the code overwhelms the rest.\*

&#x200b;

\#rule 3.

\*fancy algorithms are slow when n is small, and n is

usually small. fancy algorithms have big constants. until you know

that n is frequently going to be big, do not get fancy. (even if n

does get big, use rule 2 first.)\*

&#x200b;

\#rule 4.

\*fancy algorithms are buggier than simple ones, and

they are much harder to implement. use simple algorithms as

well as simple data structures.\*

&#x200b;

\#rule 5.

\*data dominates. if you have chosen the right data

structures and organized things well, the algorithms will

almost always be self-evident. data structures, not

algorithms, are central to programming.\*

&#x200b;

\*pike's rules 1 and 2 restate tony hoare's famous maxim

""premature optimization is the root of all evil."" ken

thompson rephrased pike's rules 3 and 4 as ""when in doubt,

use brute force."". rules 3 and 4 are instances of the

design philosophy kiss. rule 5 was previously stated by

fred brooks in the mythical man-month. rule 5 is often

shortened to ""write stupid code that uses smart objects"".\*",1640663682.0,"['rob', 'pike', ""'s"", '5', 'rule', 'program', '&', '#', 'x200b', ';', '\\', '#', 'rule', '1', '.', '\\', '*', 'tell', 'program', 'go', 'spend', 'time', '.', 'bottleneck', 'occur', 'surprising', 'place', ',', 'try', 'second', 'guess', 'put', 'speed', 'hack', 'proven', 'bottleneck', 'is.\\', '*', '&', '#', 'x200b', ';', '\\', '#', 'rule', '2', '.', '\\', '*', 'measure', '.', 'tune', 'speed', 'measure', ',', 'even', 'unless', 'one', 'part', 'code', 'overwhelms', 'rest.\\', '*', '&', '#', 'x200b', ';', '\\', '#', 'rule', '3', '.', '\\', '*', 'fancy', 'algorithm', 'slow', 'n', 'small', ',', 'n', 'usually', 'small', '.', 'fancy', 'algorithm', 'big', 'constant', '.', 'know', 'n', 'frequently', 'go', 'big', ',', 'get', 'fancy', '.', '(', 'even', 'n', 'get', 'big', ',', 'use', 'rule', '2', 'first', '.', ')', '\\', '*', '&', '#', 'x200b', ';', '\\', '#', 'rule', '4', '.', '\\', '*', 'fancy', 'algorithm', 'buggier', 'simple', 'one', ',', 'much', 'harder', 'implement', '.', 'use', 'simple', 'algorithm', 'well', 'simple', 'data', 'structures.\\', '*', '&', '#', 'x200b', ';', '\\', '#', 'rule', '5', '.', '\\', '*', 'data', 'dominates', '.', 'chosen', 'right', 'data', 'structure', 'organize', 'thing', 'well', ',', 'algorithm', 'almost', 'always', 'self-evident', '.', 'data', 'structure', ',', 'algorithm', ',', 'central', 'programming.\\', '*', '&', '#', 'x200b', ';', '\\', '*', 'pike', ""'s"", 'rule', '1', '2', 'restate', 'tony', 'hoare', ""'s"", 'famous', 'maxim', ""''"", 'premature', 'optimization', 'root', 'evil', '.', ""''"", 'ken', 'thompson', 'rephrase', 'pike', ""'s"", 'rule', '3', '4', '``', 'doubt', ',', 'use', 'brute', 'force', '.', '``', '.', 'rule', '3', '4', 'instance', 'design', 'philosophy', 'kiss', '.', 'rule', '5', 'previously', 'state', 'fred', 'brook', 'mythical', 'man-month', '.', 'rule', '5', 'often', 'shorten', '``', 'write', 'stupid', 'code', 'us', 'smart', 'object', ""''"", '.\\', '*']","[[('rob', 'NN')], [('pike', 'NN')], [(""'s"", 'POS')], [('5', 'CD')], [('rules', 'NNS')], [('programming', 'VBG')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('\\', 'NN')], [('#', '#')], [('rule', 'NN')], [('1', 'CD')], [('.', '.')], [('\\', 'NN')], [('*', 'NN')], [('tell', 'NN')], [('program', 'NN')], [('going', 'VBG')], [('spend', 'NN')], [('time', 'NN')], [('.', '.')], [('bottlenecks', 'NNS')], [('occur', 'NN')], [('surprising', 'NN')], [('places', 'NNS')], [(',', ',')], [('try', 'NN')], [('second', 'JJ')], [('guess', 'NN')], [('put', 'NN')], [('speed', 'NN')], [('hack', 'NN')], [('proven', 'NN')], [('bottleneck', 'NN')], [('is.\\', 'NN')], [('*', 'NN')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('\\', 'NN')], [('#', '#')], [('rule', 'NN')], [('2', 'CD')], [('.', '.')], [('\\', 'NN')], [('*', 'NN')], [('measure', 'NN')], [('.', '.')], [('tune', 'NN')], [('speed', 'NN')], [('measured', 'VBN')], [(',', ',')], [('even', 'RB')], [('unless', 'IN')], [('one', 'CD')], [('part', 'NN')], [('code', 'NN')], [('overwhelms', 'NNS')], [('rest.\\', 'NN')], [('*', 'NN')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('\\', 'NN')], [('#', '#')], [('rule', 'NN')], [('3', 'CD')], [('.', '.')], [('\\', 'NN')], [('*', 'NN')], [('fancy', 'NN')], [('algorithms', 'NN')], [('slow', 'VB')], [('n', 'NN')], [('small', 'JJ')], [(',', ',')], [('n', 'NN')], [('usually', 'RB')], [('small', 'JJ')], [('.', '.')], [('fancy', 'NN')], [('algorithms', 'NN')], [('big', 'JJ')], [('constants', 'NNS')], [('.', '.')], [('know', 'VB')], [('n', 'NN')], [('frequently', 'RB')], [('going', 'VBG')], [('big', 'JJ')], [(',', ',')], [('get', 'VB')], [('fancy', 'NN')], [('.', '.')], [('(', '(')], [('even', 'RB')], [('n', 'NN')], [('get', 'VB')], [('big', 'JJ')], [(',', ',')], [('use', 'NN')], [('rule', 'NN')], [('2', 'CD')], [('first', 'RB')], [('.', '.')], [(')', ')')], [('\\', 'NN')], [('*', 'NN')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('\\', 'NN')], [('#', '#')], [('rule', 'NN')], [('4', 'CD')], [('.', '.')], [('\\', 'NN')], [('*', 'NN')], [('fancy', 'NN')], [('algorithms', 'NN')], [('buggier', 'NN')], [('simple', 'NN')], [('ones', 'NNS')], [(',', ',')], [('much', 'JJ')], [('harder', 'NN')], [('implement', 'NN')], [('.', '.')], [('use', 'NN')], [('simple', 'NN')], [('algorithms', 'NN')], [('well', 'RB')], [('simple', 'NN')], [('data', 'NNS')], [('structures.\\', 'NN')], [('*', 'NN')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('\\', 'NN')], [('#', '#')], [('rule', 'NN')], [('5', 'CD')], [('.', '.')], [('\\', 'NN')], [('*', 'NN')], [('data', 'NNS')], [('dominates', 'NNS')], [('.', '.')], [('chosen', 'NN')], [('right', 'NN')], [('data', 'NNS')], [('structures', 'NNS')], [('organized', 'VBN')], [('things', 'NNS')], [('well', 'RB')], [(',', ',')], [('algorithms', 'NN')], [('almost', 'RB')], [('always', 'RB')], [('self-evident', 'NN')], [('.', '.')], [('data', 'NNS')], [('structures', 'NNS')], [(',', ',')], [('algorithms', 'NN')], [(',', ',')], [('central', 'JJ')], [('programming.\\', 'NN')], [('*', 'NN')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('\\', 'NN')], [('*', 'NN')], [('pike', 'NN')], [(""'s"", 'POS')], [('rules', 'NNS')], [('1', 'CD')], [('2', 'CD')], [('restate', 'NN')], [('tony', 'NN')], [('hoare', 'NN')], [(""'s"", 'POS')], [('famous', 'JJ')], [('maxim', 'NN')], [(""''"", ""''"")], [('premature', 'NN')], [('optimization', 'NN')], [('root', 'NN')], [('evil', 'NN')], [('.', '.')], [(""''"", ""''"")], [('ken', 'VB')], [('thompson', 'NN')], [('rephrased', 'VBN')], [('pike', 'NN')], [(""'s"", 'POS')], [('rules', 'NNS')], [('3', 'CD')], [('4', 'CD')], [('``', '``')], [('doubt', 'NN')], [(',', ',')], [('use', 'NN')], [('brute', 'NN')], [('force', 'NN')], [('.', '.')], [('``', '``')], [('.', '.')], [('rules', 'NNS')], [('3', 'CD')], [('4', 'CD')], [('instances', 'NNS')], [('design', 'NN')], [('philosophy', 'NN')], [('kiss', 'NN')], [('.', '.')], [('rule', 'NN')], [('5', 'CD')], [('previously', 'RB')], [('stated', 'VBN')], [('fred', 'VBN')], [('brooks', 'NNS')], [('mythical', 'JJ')], [('man-month', 'JJ')], [('.', '.')], [('rule', 'NN')], [('5', 'CD')], [('often', 'RB')], [('shortened', 'VBN')], [('``', '``')], [('write', 'NN')], [('stupid', 'JJ')], [('code', 'NN')], [('uses', 'NNS')], [('smart', 'NN')], [('objects', 'NNS')], [(""''"", ""''"")], [('.\\', 'NN')], [('*', 'NN')]]","rob pike 's 5 rule program & # x200b ; \ # rule 1 . \ * tell program go spend time . bottleneck occur surprising place , try second guess put speed hack proven bottleneck is.\ * & # x200b ; \ # rule 2 . \ * measure . tune speed measure , even unless one part code overwhelms rest.\ * & # x200b ; \ # rule 3 . \ * fancy algorithm slow n small , n usually small . fancy algorithm big constant . know n frequently go big , get fancy . ( even n get big , use rule 2 first . ) \ * & # x200b ; \ # rule 4 . \ * fancy algorithm buggier simple one , much harder implement . use simple algorithm well simple data structures.\ * & # x200b ; \ # rule 5 . \ * data dominates . chosen right data structure organize thing well , algorithm almost always self-evident . data structure , algorithm , central programming.\ * & # x200b ; \ * pike 's rule 1 2 restate tony hoare 's famous maxim '' premature optimization root evil . '' ken thompson rephrase pike 's rule 3 4 `` doubt , use brute force . `` . rule 3 4 instance design philosophy kiss . rule 5 previously state fred brook mythical man-month . rule 5 often shorten `` write stupid code us smart object '' .\ *",0_algorithm_time_node_bill,3
294,rqysm5,How do we know when real “AI” is achieved?,,0,0.5,computerscience,https://www.reddit.com/r/computerscience/comments/rqysm5/how_do_we_know_when_real_ai_is_achieved/,8,"i see all kinds of marketing about machine learning and ai but i do not think any of it passes the turing test. are there other tests that are used to determine when artificial intelligence is achieved? maybe i am missing something but i do not think ai exists yet, thought?",1640751083.0,"['see', 'kind', 'marketing', 'machine', 'learn', 'ai', 'think', 'pass', 'turing', 'test', '.', 'test', 'use', 'determine', 'artificial', 'intelligence', 'achieve', '?', 'maybe', 'miss', 'something', 'think', 'ai', 'exists', 'yet', ',', 'thought', '?']","[[('see', 'VB')], [('kinds', 'NNS')], [('marketing', 'NN')], [('machine', 'NN')], [('learning', 'VBG')], [('ai', 'NN')], [('think', 'NN')], [('passes', 'NNS')], [('turing', 'VBG')], [('test', 'NN')], [('.', '.')], [('tests', 'NNS')], [('used', 'VBN')], [('determine', 'NN')], [('artificial', 'JJ')], [('intelligence', 'NN')], [('achieved', 'VBN')], [('?', '.')], [('maybe', 'RB')], [('missing', 'VBG')], [('something', 'NN')], [('think', 'NN')], [('ai', 'NN')], [('exists', 'NNS')], [('yet', 'RB')], [(',', ',')], [('thought', 'NN')], [('?', '.')]]","see kind marketing machine learn ai think pass turing test . test use determine artificial intelligence achieve ? maybe miss something think ai exists yet , thought ?",3_search_ai_think_google,2
295,rqqd61,Question about storing variables in memory in programming languages,Help,0,0.44,computerscience,https://www.reddit.com/r/computerscience/comments/rqqd61/question_about_storing_variables_in_memory_in/,3,"let us say i declare int x and x's adress is 1 for example. since x is an integer it will take adesses 1-4. then let us say i declare a float and its adresses are 5-8 

how does the computer know that the data type of adress 1-4 is int and 5-8 is float? does it also have another memory address that points to those 4 memory adresses that says that those are integer and float types? 

i know ints and floats are represented differently in binary but in the end its all 32 bits so the computer could read it however it pleases. 32 bits can be read as an integer or as a completely different float. that is why i do not know if the computer leaves another address just to say what data types are on certain adresses or does it work differently?",1640727368.0,"['let', 'u', 'say', 'declare', 'int', 'x', 'x', ""'s"", 'adress', '1', 'example', '.', 'since', 'x', 'integer', 'take', 'ade', '1-4.', 'let', 'u', 'say', 'declare', 'float', 'adresses', '5-8', 'computer', 'know', 'data', 'type', 'adress', '1-4', 'int', '5-8', 'float', '?', 'also', 'another', 'memory', 'address', 'point', '4', 'memory', 'adresses', 'say', 'integer', 'float', 'type', '?', 'know', 'ints', 'float', 'represent', 'differently', 'binary', 'end', '32', 'bit', 'computer', 'could', 'read', 'however', 'plea', '.', '32', 'bit', 'read', 'integer', 'completely', 'different', 'float', '.', 'know', 'computer', 'leaf', 'another', 'address', 'say', 'data', 'type', 'certain', 'adresses', 'work', 'differently', '?']","[[('let', 'VB')], [('us', 'PRP')], [('say', 'VB')], [('declare', 'NN')], [('int', 'NN')], [('x', 'NN')], [('x', 'NN')], [(""'s"", 'POS')], [('adress', 'NN')], [('1', 'CD')], [('example', 'NN')], [('.', '.')], [('since', 'IN')], [('x', 'NN')], [('integer', 'NN')], [('take', 'VB')], [('adesses', 'NNS')], [('1-4.', 'JJ')], [('let', 'VB')], [('us', 'PRP')], [('say', 'VB')], [('declare', 'NN')], [('float', 'NN')], [('adresses', 'NNS')], [('5-8', 'JJ')], [('computer', 'NN')], [('know', 'VB')], [('data', 'NNS')], [('type', 'NN')], [('adress', 'NN')], [('1-4', 'JJ')], [('int', 'NN')], [('5-8', 'JJ')], [('float', 'NN')], [('?', '.')], [('also', 'RB')], [('another', 'DT')], [('memory', 'NN')], [('address', 'NN')], [('points', 'NNS')], [('4', 'CD')], [('memory', 'NN')], [('adresses', 'NNS')], [('says', 'VBZ')], [('integer', 'NN')], [('float', 'NN')], [('types', 'NNS')], [('?', '.')], [('know', 'VB')], [('ints', 'NNS')], [('floats', 'NNS')], [('represented', 'VBN')], [('differently', 'RB')], [('binary', 'NN')], [('end', 'NN')], [('32', 'CD')], [('bits', 'NNS')], [('computer', 'NN')], [('could', 'MD')], [('read', 'NN')], [('however', 'RB')], [('pleases', 'NNS')], [('.', '.')], [('32', 'CD')], [('bits', 'NNS')], [('read', 'NN')], [('integer', 'NN')], [('completely', 'RB')], [('different', 'JJ')], [('float', 'NN')], [('.', '.')], [('know', 'VB')], [('computer', 'NN')], [('leaves', 'NNS')], [('another', 'DT')], [('address', 'NN')], [('say', 'VB')], [('data', 'NNS')], [('types', 'NNS')], [('certain', 'JJ')], [('adresses', 'NNS')], [('work', 'NN')], [('differently', 'RB')], [('?', '.')]]",let u say declare int x x 's adress 1 example . since x integer take ade 1-4. let u say declare float adresses 5-8 computer know data type adress 1-4 int 5-8 float ? also another memory address point 4 memory adresses say integer float type ? know ints float represent differently binary end 32 bit computer could read however plea . 32 bit read integer completely different float . know computer leaf another address say data type certain adresses work differently ?,1_memory_byte_data_alignment,2
296,rqeudi,What are your resources to understand theory behind programs?,,3,0.8,computerscience,https://www.reddit.com/r/computerscience/comments/rqeudi/what_are_your_resources_to_understand_theory/,4,"hello! i am somewhat new to programming. i am wondering what you are recommendations are for resources (books/youtube videos/websites etc.) that explain theoretical concepts behind programming and programs. one example of what i mean by ""theoretical concepts"" would be explaining what data structures are, from their smallest components to abstract ideas. 

the goal is to understand what exactly is happening when programming, not just learning which statements and syntax to use for any particular language. 

thanks a lot!",1640694726.0,"['hello', '!', 'somewhat', 'new', 'program', '.', 'wonder', 'recommendation', 'resource', '(', 'books/youtube', 'videos/websites', 'etc', '.', ')', 'explain', 'theoretical', 'concept', 'behind', 'program', 'program', '.', 'one', 'example', 'mean', '``', 'theoretical', 'concept', ""''"", 'would', 'explain', 'data', 'structure', ',', 'small', 'component', 'abstract', 'idea', '.', 'goal', 'understand', 'exactly', 'happen', 'program', ',', 'learn', 'statement', 'syntax', 'use', 'particular', 'language', '.', 'thanks', 'lot', '!']","[[('hello', 'NN')], [('!', '.')], [('somewhat', 'RB')], [('new', 'JJ')], [('programming', 'VBG')], [('.', '.')], [('wondering', 'VBG')], [('recommendations', 'NNS')], [('resources', 'NNS')], [('(', '(')], [('books/youtube', 'NN')], [('videos/websites', 'NNS')], [('etc', 'NN')], [('.', '.')], [(')', ')')], [('explain', 'NN')], [('theoretical', 'JJ')], [('concepts', 'NNS')], [('behind', 'IN')], [('programming', 'VBG')], [('programs', 'NNS')], [('.', '.')], [('one', 'CD')], [('example', 'NN')], [('mean', 'NN')], [('``', '``')], [('theoretical', 'JJ')], [('concepts', 'NNS')], [(""''"", ""''"")], [('would', 'MD')], [('explaining', 'VBG')], [('data', 'NNS')], [('structures', 'NNS')], [(',', ',')], [('smallest', 'JJS')], [('components', 'NNS')], [('abstract', 'NN')], [('ideas', 'NNS')], [('.', '.')], [('goal', 'NN')], [('understand', 'NN')], [('exactly', 'RB')], [('happening', 'VBG')], [('programming', 'VBG')], [(',', ',')], [('learning', 'VBG')], [('statements', 'NNS')], [('syntax', 'NN')], [('use', 'NN')], [('particular', 'JJ')], [('language', 'NN')], [('.', '.')], [('thanks', 'NNS')], [('lot', 'NN')], [('!', '.')]]","hello ! somewhat new program . wonder recommendation resource ( books/youtube videos/websites etc . ) explain theoretical concept behind program program . one example mean `` theoretical concept '' would explain data structure , small component abstract idea . goal understand exactly happen program , learn statement syntax use particular language . thanks lot !",-1_abazbz2abz_2520_problem_use,4
297,rpr7gj,Book recommendations on algorithms related to chess programming?,General,57,0.92,computerscience,https://www.reddit.com/r/computerscience/comments/rpr7gj/book_recommendations_on_algorithms_related_to/,14,i have recently taken an interest in chess engines.  i am looking for seminal books that discuss the algorithms used in modern chess programming. there are lots of algorithm books out there. recommendations?,1640622649.0,"['recently', 'take', 'interest', 'chess', 'engine', '.', 'look', 'seminal', 'book', 'discus', 'algorithm', 'use', 'modern', 'chess', 'program', '.', 'lot', 'algorithm', 'book', '.', 'recommendation', '?']","[[('recently', 'RB')], [('taken', 'VBN')], [('interest', 'NN')], [('chess', 'NN')], [('engines', 'NNS')], [('.', '.')], [('looking', 'VBG')], [('seminal', 'JJ')], [('books', 'NNS')], [('discuss', 'NN')], [('algorithms', 'NN')], [('used', 'VBN')], [('modern', 'JJ')], [('chess', 'NN')], [('programming', 'VBG')], [('.', '.')], [('lots', 'NNS')], [('algorithm', 'NN')], [('books', 'NNS')], [('.', '.')], [('recommendations', 'NNS')], [('?', '.')]]",recently take interest chess engine . look seminal book discus algorithm use modern chess program . lot algorithm book . recommendation ?,-1_abazbz2abz_2520_problem_use,3
298,rp30oe,Where does one find out what the latest tech is?,General,65,0.86,computerscience,https://www.reddit.com/r/computerscience/comments/rp30oe/where_does_one_find_out_what_the_latest_tech_is/,11,"hello everyone,

we all know how computer science is such a fast moving and evolving field, but where do you even find out what the next big thing is in the field? youtube/tiktok tech influencers? blogs? news? 

and say you find out that x, y and z are three new things in computer science. does this mean we should learn all of x, y and z if they relate to our field of interest?

thank you!",1640544158.0,"['hello', 'everyone', ',', 'know', 'computer', 'science', 'fast', 'move', 'evolve', 'field', ',', 'even', 'find', 'next', 'big', 'thing', 'field', '?', 'youtube/tiktok', 'tech', 'influencers', '?', 'blog', '?', 'news', '?', 'say', 'find', 'x', ',', 'z', 'three', 'new', 'thing', 'computer', 'science', '.', 'mean', 'learn', 'x', ',', 'z', 'relate', 'field', 'interest', '?', 'thank', '!']","[[('hello', 'NN')], [('everyone', 'NN')], [(',', ',')], [('know', 'VB')], [('computer', 'NN')], [('science', 'NN')], [('fast', 'NN')], [('moving', 'VBG')], [('evolving', 'VBG')], [('field', 'NN')], [(',', ',')], [('even', 'RB')], [('find', 'VB')], [('next', 'JJ')], [('big', 'JJ')], [('thing', 'NN')], [('field', 'NN')], [('?', '.')], [('youtube/tiktok', 'NN')], [('tech', 'NN')], [('influencers', 'NNS')], [('?', '.')], [('blogs', 'NNS')], [('?', '.')], [('news', 'NN')], [('?', '.')], [('say', 'VB')], [('find', 'VB')], [('x', 'NN')], [(',', ',')], [('z', 'NN')], [('three', 'CD')], [('new', 'JJ')], [('things', 'NNS')], [('computer', 'NN')], [('science', 'NN')], [('.', '.')], [('mean', 'NN')], [('learn', 'NN')], [('x', 'NN')], [(',', ',')], [('z', 'NN')], [('relate', 'NN')], [('field', 'NN')], [('interest', 'NN')], [('?', '.')], [('thank', 'NN')], [('!', '.')]]","hello everyone , know computer science fast move evolve field , even find next big thing field ? youtube/tiktok tech influencers ? blog ? news ? say find x , z three new thing computer science . mean learn x , z relate field interest ? thank !",3_search_ai_think_google,5
299,rp1tzo,How does the c++ std rotate algorithm impl work?,General,23,0.88,computerscience,https://www.reddit.com/r/computerscience/comments/rp1tzo/how_does_the_c_std_rotate_algorithm_impl_work/,7,"impl in referring to is here:
/

i cannot find any intuitive explanation online that motivates or proves the correctness of this algorithm.  it does not appear to be the ""clever"" triple reverse method for implementing rotate with o(1) extra space.",1640540786.0,"['impl', 'refer', ':', '/', 'find', 'intuitive', 'explanation', 'online', 'motivates', 'prof', 'correctness', 'algorithm', '.', 'appear', '``', 'clever', ""''"", 'triple', 'reverse', 'method', 'implement', 'rotate', '(', '1', ')', 'extra', 'space', '.']","[[('impl', 'NN')], [('referring', 'VBG')], [(':', ':')], [('/', 'NN')], [('find', 'VB')], [('intuitive', 'JJ')], [('explanation', 'NN')], [('online', 'NN')], [('motivates', 'NNS')], [('proves', 'NNS')], [('correctness', 'NN')], [('algorithm', 'NN')], [('.', '.')], [('appear', 'VB')], [('``', '``')], [('clever', 'NN')], [(""''"", ""''"")], [('triple', 'NN')], [('reverse', 'NN')], [('method', 'NN')], [('implementing', 'VBG')], [('rotate', 'NN')], [('(', '(')], [('1', 'CD')], [(')', ')')], [('extra', 'JJ')], [('space', 'NN')], [('.', '.')]]",impl refer : / find intuitive explanation online motivates prof correctness algorithm . appear `` clever '' triple reverse method implement rotate ( 1 ) extra space .,0_algorithm_time_node_bill,2
300,rop984,K+1 databases more secure than K?,,14,0.89,computerscience,https://www.reddit.com/r/computerscience/comments/rop984/k1_databases_more_secure_than_k/,10,"i am just now, starting to learn about security as a full stack engineer.

in terms of security, does it make sense to separate the database for user authentication w/ the db that stores user data? my approach for a project i am doing is to salt and hash raw passwords (unique salt per password) server-side, and compare that hash output with the stored pre-computed hash output, to do user authentication.

what happens after? i feel like if you can protect the integrity of user->pass and therefore user->userdata, it does not matter whether userauth db and userdata db are separate or not, b/c it would be a pain for a hacker to determine data ownership (assuming data does not hold identifying info). is there a principle i can follow about separating data/processes into different databases?

also, are there any resources one would recommend for application-focused security practices? i do not want to be the security guy, i just want to learn some basic high-level understanding.",1640492946.0,"[',', 'start', 'learn', 'security', 'full', 'stack', 'engineer', '.', 'term', 'security', ',', 'make', 'sense', 'separate', 'database', 'user', 'authentication', 'w/', 'db', 'store', 'user', 'data', '?', 'approach', 'project', 'salt', 'hash', 'raw', 'password', '(', 'unique', 'salt', 'per', 'password', ')', 'server-side', ',', 'compare', 'hash', 'output', 'store', 'pre-computed', 'hash', 'output', ',', 'user', 'authentication', '.', 'happens', '?', 'feel', 'like', 'protect', 'integrity', 'user-', '>', 'pas', 'therefore', 'user-', '>', 'userdata', ',', 'matter', 'whether', 'userauth', 'db', 'userdata', 'db', 'separate', ',', 'b/c', 'would', 'pain', 'hacker', 'determine', 'data', 'ownership', '(', 'assume', 'data', 'hold', 'identify', 'info', ')', '.', 'principle', 'follow', 'separate', 'data/processes', 'different', 'database', '?', 'also', ',', 'resource', 'one', 'would', 'recommend', 'application-focused', 'security', 'practice', '?', 'want', 'security', 'guy', ',', 'want', 'learn', 'basic', 'high-level', 'understand', '.']","[[(',', ',')], [('starting', 'VBG')], [('learn', 'NN')], [('security', 'NN')], [('full', 'JJ')], [('stack', 'NN')], [('engineer', 'NN')], [('.', '.')], [('terms', 'NNS')], [('security', 'NN')], [(',', ',')], [('make', 'VB')], [('sense', 'NN')], [('separate', 'JJ')], [('database', 'NN')], [('user', 'NN')], [('authentication', 'NN')], [('w/', 'NN')], [('db', 'NN')], [('stores', 'NNS')], [('user', 'NN')], [('data', 'NNS')], [('?', '.')], [('approach', 'NN')], [('project', 'NN')], [('salt', 'NN')], [('hash', 'NN')], [('raw', 'NN')], [('passwords', 'NNS')], [('(', '(')], [('unique', 'NN')], [('salt', 'NN')], [('per', 'IN')], [('password', 'NN')], [(')', ')')], [('server-side', 'NN')], [(',', ',')], [('compare', 'NN')], [('hash', 'NN')], [('output', 'NN')], [('stored', 'VBN')], [('pre-computed', 'JJ')], [('hash', 'NN')], [('output', 'NN')], [(',', ',')], [('user', 'NN')], [('authentication', 'NN')], [('.', '.')], [('happens', 'NNS')], [('?', '.')], [('feel', 'NN')], [('like', 'IN')], [('protect', 'NN')], [('integrity', 'NN')], [('user-', 'JJ')], [('>', 'NN')], [('pass', 'NN')], [('therefore', 'RB')], [('user-', 'JJ')], [('>', 'NN')], [('userdata', 'NNS')], [(',', ',')], [('matter', 'NN')], [('whether', 'IN')], [('userauth', 'NN')], [('db', 'NN')], [('userdata', 'NNS')], [('db', 'NN')], [('separate', 'JJ')], [(',', ',')], [('b/c', 'NN')], [('would', 'MD')], [('pain', 'NN')], [('hacker', 'NN')], [('determine', 'NN')], [('data', 'NNS')], [('ownership', 'NN')], [('(', '(')], [('assuming', 'VBG')], [('data', 'NNS')], [('hold', 'NN')], [('identifying', 'VBG')], [('info', 'NN')], [(')', ')')], [('.', '.')], [('principle', 'NN')], [('follow', 'VB')], [('separating', 'VBG')], [('data/processes', 'NNS')], [('different', 'JJ')], [('databases', 'NNS')], [('?', '.')], [('also', 'RB')], [(',', ',')], [('resources', 'NNS')], [('one', 'CD')], [('would', 'MD')], [('recommend', 'NN')], [('application-focused', 'JJ')], [('security', 'NN')], [('practices', 'NNS')], [('?', '.')], [('want', 'NN')], [('security', 'NN')], [('guy', 'NN')], [(',', ',')], [('want', 'NN')], [('learn', 'NN')], [('basic', 'JJ')], [('high-level', 'NN')], [('understanding', 'VBG')], [('.', '.')]]",", start learn security full stack engineer . term security , make sense separate database user authentication w/ db store user data ? approach project salt hash raw password ( unique salt per password ) server-side , compare hash output store pre-computed hash output , user authentication . happens ? feel like protect integrity user- > pas therefore user- > userdata , matter whether userauth db userdata db separate , b/c would pain hacker determine data ownership ( assume data hold identify info ) . principle follow separate data/processes different database ? also , resource one would recommend application-focused security practice ? want security guy , want learn basic high-level understand .",-1_abazbz2abz_2520_problem_use,3
302,rnyhfs,What happens if a component doesn’t do its job before the successive clock tick?,General,60,0.91,computerscience,https://www.reddit.com/r/computerscience/comments/rnyhfs/what_happens_if_a_component_doesnt_do_its_job/,11,i am new to this stuff so maybe my question is not phrased correctly...,1640392031.0,"['new', 'stuff', 'maybe', 'question', 'phrase', 'correctly', '...']","[[('new', 'JJ')], [('stuff', 'NN')], [('maybe', 'RB')], [('question', 'NN')], [('phrased', 'VBN')], [('correctly', 'RB')], [('...', ':')]]",new stuff maybe question phrase correctly ...,3_search_ai_think_google,3
303,rnt040,Operating systems,,29,0.91,computerscience,https://www.reddit.com/r/computerscience/comments/rnt040/operating_systems/,18,"hello,
is there any latest research going on in os? 
i find os specifically very interesting and wish to do research on it.",1640373904.0,"['hello', ',', 'late', 'research', 'go', 'o', '?', 'find', 'o', 'specifically', 'interest', 'wish', 'research', '.']","[[('hello', 'NN')], [(',', ',')], [('latest', 'JJS')], [('research', 'NN')], [('going', 'VBG')], [('os', 'NN')], [('?', '.')], [('find', 'VB')], [('os', 'NN')], [('specifically', 'RB')], [('interesting', 'VBG')], [('wish', 'NN')], [('research', 'NN')], [('.', '.')]]","hello , late research go o ? find o specifically interest wish research .",3_search_ai_think_google,3
305,rnuf9s,Book Recommendation For a Student,Advice,16,0.95,computerscience,https://www.reddit.com/r/computerscience/comments/rnuf9s/book_recommendation_for_a_student/,7,"hi everyone,

i want to read some books related to mathematics and computer science. i am not looking for a book to learn a topic i do not understand; i am just trying to find a book about computer science and/or maths to read to have fun with and to learn something new.

to clarify, i will give an example, although the math is more basic than what i am looking for: the book of numbers by john conway

thanks in advance",1640378438.0,"['hi', 'everyone', ',', 'want', 'read', 'book', 'related', 'mathematics', 'computer', 'science', '.', 'look', 'book', 'learn', 'topic', 'understand', ';', 'try', 'find', 'book', 'computer', 'science', 'and/or', 'math', 'read', 'fun', 'learn', 'something', 'new', '.', 'clarify', ',', 'give', 'example', ',', 'although', 'math', 'basic', 'look', ':', 'book', 'number', 'john', 'conway', 'thanks', 'advance']","[[('hi', 'NN')], [('everyone', 'NN')], [(',', ',')], [('want', 'NN')], [('read', 'NN')], [('books', 'NNS')], [('related', 'JJ')], [('mathematics', 'NNS')], [('computer', 'NN')], [('science', 'NN')], [('.', '.')], [('looking', 'VBG')], [('book', 'NN')], [('learn', 'NN')], [('topic', 'NN')], [('understand', 'NN')], [(';', ':')], [('trying', 'VBG')], [('find', 'VB')], [('book', 'NN')], [('computer', 'NN')], [('science', 'NN')], [('and/or', 'NN')], [('maths', 'NNS')], [('read', 'NN')], [('fun', 'NN')], [('learn', 'NN')], [('something', 'NN')], [('new', 'JJ')], [('.', '.')], [('clarify', 'NN')], [(',', ',')], [('give', 'VB')], [('example', 'NN')], [(',', ',')], [('although', 'IN')], [('math', 'NN')], [('basic', 'JJ')], [('looking', 'VBG')], [(':', ':')], [('book', 'NN')], [('numbers', 'NNS')], [('john', 'NN')], [('conway', 'NN')], [('thanks', 'NNS')], [('advance', 'NN')]]","hi everyone , want read book related mathematics computer science . look book learn topic understand ; try find book computer science and/or math read fun learn something new . clarify , give example , although math basic look : book number john conway thanks advance",4_book_learn_computer_good,3
306,ro43co,NeurIPS author qualification,,2,0.75,computerscience,https://www.reddit.com/r/computerscience/comments/ro43co/neurips_author_qualification/,0,"who can submit papers to neurips? 

are there any specific requirements or qualifications for authors?

i looked in their website and could not find an answer.

thanks!",1640413417.0,"['submit', 'paper', 'neurips', '?', 'specific', 'requirement', 'qualification', 'author', '?', 'look', 'website', 'could', 'find', 'answer', '.', 'thanks', '!']","[[('submit', 'NN')], [('papers', 'NNS')], [('neurips', 'NNS')], [('?', '.')], [('specific', 'JJ')], [('requirements', 'NNS')], [('qualifications', 'NNS')], [('authors', 'NNS')], [('?', '.')], [('looked', 'VBD')], [('website', 'NN')], [('could', 'MD')], [('find', 'VB')], [('answer', 'NN')], [('.', '.')], [('thanks', 'NNS')], [('!', '.')]]",submit paper neurips ? specific requirement qualification author ? look website could find answer . thanks !,-1_abazbz2abz_2520_problem_use,1
307,rnmo0w,Help me understand assembler/assembly language,Help,37,0.85,computerscience,https://www.reddit.com/r/computerscience/comments/rnmo0w/help_me_understand_assemblerassembly_language/,10,"so, i know that a compiler takes the code that you write and processes it into machine code. but what is the role of assembler/assembly language here?",1640353595.0,"[',', 'know', 'compiler', 'take', 'code', 'write', 'process', 'machine', 'code', '.', 'role', 'assembler/assembly', 'language', '?']","[[(',', ',')], [('know', 'VB')], [('compiler', 'NN')], [('takes', 'VBZ')], [('code', 'NN')], [('write', 'NN')], [('processes', 'NNS')], [('machine', 'NN')], [('code', 'NN')], [('.', '.')], [('role', 'NN')], [('assembler/assembly', 'RB')], [('language', 'NN')], [('?', '.')]]",", know compiler take code write process machine code . role assembler/assembly language ?",8_language_one_program_write,3
309,rne5t2,what is the big O for this simple problem?,,69,0.89,computerscience,https://www.reddit.com/r/computerscience/comments/rne5t2/what_is_the_big_o_for_this_simple_problem/,86,"public static int recursivefunction (int n ) {  
   if (n==100) return 606;

   if (n == 99) return 600;

   return recursivefunction(n+2) -12; 

}

&#x200b;

it seems in the worst case scenario this runs forever so i thought it is o(infinity) but my prof put o(n) in the exam as the answer. can someone tell me if my answer is acceptable?",1640320743.0,"['public', 'static', 'int', 'recursivefunction', '(', 'int', 'n', ')', '{', '(', 'n==100', ')', 'return', '606', ';', '(', 'n', '==', '99', ')', 'return', '600', ';', 'return', 'recursivefunction', '(', 'n+2', ')', '-12', ';', '}', '&', '#', 'x200b', ';', 'seem', 'bad', 'case', 'scenario', 'run', 'forever', 'thought', '(', 'infinity', ')', 'prof', 'put', '(', 'n', ')', 'exam', 'answer', '.', 'someone', 'tell', 'answer', 'acceptable', '?']","[[('public', 'NN')], [('static', 'JJ')], [('int', 'NN')], [('recursivefunction', 'NN')], [('(', '(')], [('int', 'NN')], [('n', 'NN')], [(')', ')')], [('{', '(')], [('(', '(')], [('n==100', 'NN')], [(')', ')')], [('return', 'NN')], [('606', 'CD')], [(';', ':')], [('(', '(')], [('n', 'NN')], [('==', 'NN')], [('99', 'CD')], [(')', ')')], [('return', 'NN')], [('600', 'CD')], [(';', ':')], [('return', 'NN')], [('recursivefunction', 'NN')], [('(', '(')], [('n+2', 'NN')], [(')', ')')], [('-12', 'NN')], [(';', ':')], [('}', ')')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('seems', 'VBZ')], [('worst', 'JJS')], [('case', 'NN')], [('scenario', 'NN')], [('runs', 'NNS')], [('forever', 'RB')], [('thought', 'NN')], [('(', '(')], [('infinity', 'NN')], [(')', ')')], [('prof', 'NN')], [('put', 'NN')], [('(', '(')], [('n', 'NN')], [(')', ')')], [('exam', 'NN')], [('answer', 'NN')], [('.', '.')], [('someone', 'NN')], [('tell', 'NN')], [('answer', 'NN')], [('acceptable', 'JJ')], [('?', '.')]]",public static int recursivefunction ( int n ) { ( n==100 ) return 606 ; ( n == 99 ) return 600 ; return recursivefunction ( n+2 ) -12 ; } & # x200b ; seem bad case scenario run forever thought ( infinity ) prof put ( n ) exam answer . someone tell answer acceptable ?,0_algorithm_time_node_bill,3
310,rnc33s,What is your best critique of decentralized public blockchain technology and why it won't play a major role in the future of society?,Discussion,6,0.69,computerscience,https://www.reddit.com/r/computerscience/comments/rnc33s/what_is_your_best_critique_of_decentralized/,18,"i am doing a personal project where i will steel man the arguments for and against a decentralized blockchain led future, and then write a formal dialogue between the two perspectives with citations.

i have done a fair bit of research thus far and have found it much easier to find pro-blockchain future articles/resources (this is not surprising to me), but am still looking for more of both. however, i would be really happy with some solid bear arguments because the ones i have found are not especially convincing. they do more to explain the limitations of blockchains and call out the flaws in maximalist thinking.

can anyone link some really interesting/compelling content for either side? i would really appreciate it, and will absolutely share my work here when it is done!",1640313890.0,"['personal', 'project', 'steel', 'man', 'argument', 'decentralize', 'blockchain', 'lead', 'future', ',', 'write', 'formal', 'dialogue', 'two', 'perspective', 'citation', '.', 'do', 'fair', 'bit', 'research', 'thus', 'far', 'found', 'much', 'easy', 'find', 'pro-blockchain', 'future', 'articles/resources', '(', 'surprising', ')', ',', 'still', 'look', '.', 'however', ',', 'would', 'really', 'happy', 'solid', 'bear', 'argument', 'one', 'found', 'especially', 'convincing', '.', 'explain', 'limitation', 'blockchains', 'call', 'flaw', 'maximalist', 'think', '.', 'anyone', 'link', 'really', 'interesting/compelling', 'content', 'either', 'side', '?', 'would', 'really', 'appreciate', ',', 'absolutely', 'share', 'work', 'do', '!']","[[('personal', 'JJ')], [('project', 'NN')], [('steel', 'NN')], [('man', 'NN')], [('arguments', 'NNS')], [('decentralized', 'VBN')], [('blockchain', 'NN')], [('led', 'VBN')], [('future', 'NN')], [(',', ',')], [('write', 'NN')], [('formal', 'JJ')], [('dialogue', 'NN')], [('two', 'CD')], [('perspectives', 'NNS')], [('citations', 'NNS')], [('.', '.')], [('done', 'VBN')], [('fair', 'NN')], [('bit', 'NN')], [('research', 'NN')], [('thus', 'RB')], [('far', 'RB')], [('found', 'NN')], [('much', 'JJ')], [('easier', 'JJR')], [('find', 'VB')], [('pro-blockchain', 'NN')], [('future', 'NN')], [('articles/resources', 'NNS')], [('(', '(')], [('surprising', 'NN')], [(')', ')')], [(',', ',')], [('still', 'RB')], [('looking', 'VBG')], [('.', '.')], [('however', 'RB')], [(',', ',')], [('would', 'MD')], [('really', 'RB')], [('happy', 'JJ')], [('solid', 'JJ')], [('bear', 'NN')], [('arguments', 'NNS')], [('ones', 'NNS')], [('found', 'NN')], [('especially', 'RB')], [('convincing', 'NN')], [('.', '.')], [('explain', 'NN')], [('limitations', 'NNS')], [('blockchains', 'NNS')], [('call', 'NN')], [('flaws', 'NNS')], [('maximalist', 'NN')], [('thinking', 'VBG')], [('.', '.')], [('anyone', 'NN')], [('link', 'NN')], [('really', 'RB')], [('interesting/compelling', 'VBG')], [('content', 'NN')], [('either', 'DT')], [('side', 'NN')], [('?', '.')], [('would', 'MD')], [('really', 'RB')], [('appreciate', 'NN')], [(',', ',')], [('absolutely', 'RB')], [('share', 'NN')], [('work', 'NN')], [('done', 'VBN')], [('!', '.')]]","personal project steel man argument decentralize blockchain lead future , write formal dialogue two perspective citation . do fair bit research thus far found much easy find pro-blockchain future articles/resources ( surprising ) , still look . however , would really happy solid bear argument one found especially convincing . explain limitation blockchains call flaw maximalist think . anyone link really interesting/compelling content either side ? would really appreciate , absolutely share work do !",-1_abazbz2abz_2520_problem_use,3
311,rmtdj4,"A fascinating read about ELF ..take a peek , if it's interesting to you or importantly, have time!",Article,69,0.91,computerscience,https://www.reddit.com/r/computerscience/comments/rmtdj4/a_fascinating_read_about_elf_take_a_peek_if_its/,5," part one: [-elf](-elf) 

part two: [-elf-2](-elf-2)",1640257630.0,"['part', 'one', ':', '[', '-elf', ']', '(', '-elf', ')', 'part', 'two', ':', '[', '-elf-2', ']', '(', '-elf-2', ')']","[[('part', 'NN')], [('one', 'CD')], [(':', ':')], [('[', 'NN')], [('-elf', 'NN')], [(']', 'NN')], [('(', '(')], [('-elf', 'NN')], [(')', ')')], [('part', 'NN')], [('two', 'CD')], [(':', ':')], [('[', 'NN')], [('-elf-2', 'NN')], [(']', 'NN')], [('(', '(')], [('-elf-2', 'NN')], [(')', ')')]]",part one : [ -elf ] ( -elf ) part two : [ -elf-2 ] ( -elf-2 ),-1_abazbz2abz_2520_problem_use,4
312,rmewjn,Web pages indexing and ethics for search engine results ?,General,17,0.88,computerscience,https://www.reddit.com/r/computerscience/comments/rmewjn/web_pages_indexing_and_ethics_for_search_engine/,1,"recently, i have started looking into search engines and some algorithms that get used for crawling and ranking the pages on certain factors.

i wanted to understand different perspectives on ideal ethics we should adopt while creating something similar of our own. i very much know that the combination of keywords generate different results but my question is how to go about some of these keywords which can be borderline non acceptable. for example, someone recently pointed this out to me. the word voyeur is not shown in search recommendation although some movie with same name recently came out and is available on prime. so this got me curious and i searched for the actors in the movie with that movie's keywords and results were not according to my expectation to say the least. (search for sydney sweeney voyeur and go to images/videos tab and you will understand my point)

this also leads to another question regarding the most popular search engines that we use everyday...so suppose some particular word is not ""acceptable"" according to societal norms but gets very popular due to certain pop culture catalyst. how does these search engines work around that to handle these cases ?  [because any 12 year old who uses amazon prime will see the movie voyeurs there on the home page and will go to google to search for actor etc and my good it can be daunting]

p.s. i hope i have not derailed too much in the description but the title should give away the gist. and sorry for the typos, typing from mobile.",1640207457.0,"['recently', ',', 'start', 'look', 'search', 'engine', 'algorithm', 'get', 'use', 'crawl', 'rank', 'page', 'certain', 'factor', '.', 'want', 'understand', 'different', 'perspective', 'ideal', 'ethic', 'adopt', 'create', 'something', 'similar', '.', 'much', 'know', 'combination', 'keywords', 'generate', 'different', 'result', 'question', 'go', 'keywords', 'borderline', 'non', 'acceptable', '.', 'example', ',', 'someone', 'recently', 'point', '.', 'word', 'voyeur', 'show', 'search', 'recommendation', 'although', 'movie', 'name', 'recently', 'come', 'available', 'prime', '.', 'get', 'curious', 'search', 'actor', 'movie', 'movie', ""'s"", 'keywords', 'result', 'accord', 'expectation', 'say', 'least', '.', '(', 'search', 'sydney', 'sweeney', 'voyeur', 'go', 'images/videos', 'tab', 'understand', 'point', ')', 'also', 'lead', 'another', 'question', 'regard', 'popular', 'search', 'engine', 'use', 'everyday', '...', 'suppose', 'particular', 'word', '``', 'acceptable', ""''"", 'accord', 'societal', 'norm', 'get', 'popular', 'due', 'certain', 'pop', 'culture', 'catalyst', '.', 'search', 'engine', 'work', 'around', 'handle', 'case', '?', '[', '12', 'year', 'old', 'us', 'amazon', 'prime', 'see', 'movie', 'voyeur', 'home', 'page', 'go', 'google', 'search', 'actor', 'etc', 'good', 'daunt', ']', 'p.s', '.', 'hope', 'derail', 'much', 'description', 'title', 'give', 'away', 'gist', '.', 'sorry', 'typo', ',', 'type', 'mobile', '.']","[[('recently', 'RB')], [(',', ',')], [('started', 'VBN')], [('looking', 'VBG')], [('search', 'NN')], [('engines', 'NNS')], [('algorithms', 'NN')], [('get', 'VB')], [('used', 'VBN')], [('crawling', 'VBG')], [('ranking', 'VBG')], [('pages', 'NNS')], [('certain', 'JJ')], [('factors', 'NNS')], [('.', '.')], [('wanted', 'VBD')], [('understand', 'NN')], [('different', 'JJ')], [('perspectives', 'NNS')], [('ideal', 'NN')], [('ethics', 'NNS')], [('adopt', 'NN')], [('creating', 'VBG')], [('something', 'NN')], [('similar', 'JJ')], [('.', '.')], [('much', 'JJ')], [('know', 'VB')], [('combination', 'NN')], [('keywords', 'NNS')], [('generate', 'NN')], [('different', 'JJ')], [('results', 'NNS')], [('question', 'NN')], [('go', 'VB')], [('keywords', 'NNS')], [('borderline', 'NN')], [('non', 'NN')], [('acceptable', 'JJ')], [('.', '.')], [('example', 'NN')], [(',', ',')], [('someone', 'NN')], [('recently', 'RB')], [('pointed', 'VBN')], [('.', '.')], [('word', 'NN')], [('voyeur', 'NN')], [('shown', 'VBN')], [('search', 'NN')], [('recommendation', 'NN')], [('although', 'IN')], [('movie', 'NN')], [('name', 'NN')], [('recently', 'RB')], [('came', 'VBD')], [('available', 'JJ')], [('prime', 'NN')], [('.', '.')], [('got', 'VBD')], [('curious', 'JJ')], [('searched', 'VBN')], [('actors', 'NNS')], [('movie', 'NN')], [('movie', 'NN')], [(""'s"", 'POS')], [('keywords', 'NNS')], [('results', 'NNS')], [('according', 'VBG')], [('expectation', 'NN')], [('say', 'VB')], [('least', 'JJS')], [('.', '.')], [('(', '(')], [('search', 'NN')], [('sydney', 'NN')], [('sweeney', 'NN')], [('voyeur', 'NN')], [('go', 'VB')], [('images/videos', 'NN')], [('tab', 'NN')], [('understand', 'NN')], [('point', 'NN')], [(')', ')')], [('also', 'RB')], [('leads', 'NNS')], [('another', 'DT')], [('question', 'NN')], [('regarding', 'VBG')], [('popular', 'JJ')], [('search', 'NN')], [('engines', 'NNS')], [('use', 'NN')], [('everyday', 'NN')], [('...', ':')], [('suppose', 'NN')], [('particular', 'JJ')], [('word', 'NN')], [('``', '``')], [('acceptable', 'JJ')], [(""''"", ""''"")], [('according', 'VBG')], [('societal', 'NN')], [('norms', 'NNS')], [('gets', 'VBZ')], [('popular', 'JJ')], [('due', 'JJ')], [('certain', 'JJ')], [('pop', 'NN')], [('culture', 'NN')], [('catalyst', 'NN')], [('.', '.')], [('search', 'NN')], [('engines', 'NNS')], [('work', 'NN')], [('around', 'IN')], [('handle', 'NN')], [('cases', 'NNS')], [('?', '.')], [('[', 'NN')], [('12', 'CD')], [('year', 'NN')], [('old', 'JJ')], [('uses', 'NNS')], [('amazon', 'NN')], [('prime', 'NN')], [('see', 'VB')], [('movie', 'NN')], [('voyeurs', 'NNS')], [('home', 'NN')], [('page', 'NN')], [('go', 'VB')], [('google', 'NN')], [('search', 'NN')], [('actor', 'NN')], [('etc', 'NN')], [('good', 'JJ')], [('daunting', 'VBG')], [(']', 'NN')], [('p.s', 'NN')], [('.', '.')], [('hope', 'NN')], [('derailed', 'VBN')], [('much', 'JJ')], [('description', 'NN')], [('title', 'NN')], [('give', 'VB')], [('away', 'RB')], [('gist', 'NN')], [('.', '.')], [('sorry', 'NN')], [('typos', 'NN')], [(',', ',')], [('typing', 'VBG')], [('mobile', 'NN')], [('.', '.')]]","recently , start look search engine algorithm get use crawl rank page certain factor . want understand different perspective ideal ethic adopt create something similar . much know combination keywords generate different result question go keywords borderline non acceptable . example , someone recently point . word voyeur show search recommendation although movie name recently come available prime . get curious search actor movie movie 's keywords result accord expectation say least . ( search sydney sweeney voyeur go images/videos tab understand point ) also lead another question regard popular search engine use everyday ... suppose particular word `` acceptable '' accord societal norm get popular due certain pop culture catalyst . search engine work around handle case ? [ 12 year old us amazon prime see movie voyeur home page go google search actor etc good daunt ] p.s . hope derail much description title give away gist . sorry typo , type mobile .",3_search_ai_think_google,2
313,rm1nxm,is there a book which takes me through the process of how computers and/or programming languages were first invented?,Discussion,105,0.99,computerscience,https://www.reddit.com/r/computerscience/comments/rm1nxm/is_there_a_book_which_takes_me_through_the/,22,"

id love a book that is like a history lesson but also showing the technical details that the founders struggled with and eventually solved. basically a book where, if i was teleported in time and space to the lunch room of the inventors i would understand the conversation they have about what they are trying to figure out. 

i know it sounds a bit vague since its a very big topic but i am interested in both the hardware and the software, like anything from 1930s to 1970s.",1640165632.0,"['id', 'love', 'book', 'like', 'history', 'lesson', 'also', 'show', 'technical', 'detail', 'founder', 'struggle', 'eventually', 'solve', '.', 'basically', 'book', ',', 'teleport', 'time', 'space', 'lunch', 'room', 'inventor', 'would', 'understand', 'conversation', 'try', 'figure', '.', 'know', 'sound', 'bit', 'vague', 'since', 'big', 'topic', 'interested', 'hardware', 'software', ',', 'like', 'anything', '1930s', '1970s', '.']","[[('id', 'NN')], [('love', 'NN')], [('book', 'NN')], [('like', 'IN')], [('history', 'NN')], [('lesson', 'NN')], [('also', 'RB')], [('showing', 'VBG')], [('technical', 'JJ')], [('details', 'NNS')], [('founders', 'NNS')], [('struggled', 'VBN')], [('eventually', 'RB')], [('solved', 'VBN')], [('.', '.')], [('basically', 'RB')], [('book', 'NN')], [(',', ',')], [('teleported', 'VBN')], [('time', 'NN')], [('space', 'NN')], [('lunch', 'NN')], [('room', 'NN')], [('inventors', 'NNS')], [('would', 'MD')], [('understand', 'NN')], [('conversation', 'NN')], [('trying', 'VBG')], [('figure', 'NN')], [('.', '.')], [('know', 'VB')], [('sounds', 'NNS')], [('bit', 'NN')], [('vague', 'NN')], [('since', 'IN')], [('big', 'JJ')], [('topic', 'NN')], [('interested', 'JJ')], [('hardware', 'NN')], [('software', 'NN')], [(',', ',')], [('like', 'IN')], [('anything', 'NN')], [('1930s', 'CD')], [('1970s', 'NNS')], [('.', '.')]]","id love book like history lesson also show technical detail founder struggle eventually solve . basically book , teleport time space lunch room inventor would understand conversation try figure . know sound bit vague since big topic interested hardware software , like anything 1930s 1970s .",4_book_learn_computer_good,4
314,rls9mc,Can nodes in balanced binary search trees contain parent node field?,Help,27,0.86,computerscience,https://www.reddit.com/r/computerscience/comments/rls9mc/can_nodes_in_balanced_binary_search_trees_contain/,9," the background of this question comes from me the fact that in skiena's book ""the algorithm design manual: second edition"" page 85:



he claims that the delete-minimum operation for the priority queue when implemented with a balanced search tree will have o(log n) time complexity. but, i disagree with that statement if the nodes in a balanced search tree have a parent node field. because since we have a pointer to the minimum it takes constant time pointer manipulation to unlink the minimum node and since the new minimum node will be the parent node, setting the pointer to the new minimum also takes constant time. unless my assumptions on how a balanced search tree is misguided (i assume a balanced search tree is functionally equivalent to a binary tree, except its self-balancing process), then the delete-minimum operation should have o(1) time complexity. where have i gone wrong?",1640132590.0,"['background', 'question', 'come', 'fact', 'skiena', ""'s"", 'book', '``', 'algorithm', 'design', 'manual', ':', 'second', 'edition', ""''"", 'page', '85', ':', 'claim', 'delete-minimum', 'operation', 'priority', 'queue', 'implement', 'balance', 'search', 'tree', '(', 'log', 'n', ')', 'time', 'complexity', '.', ',', 'disagree', 'statement', 'node', 'balance', 'search', 'tree', 'parent', 'node', 'field', '.', 'since', 'pointer', 'minimum', 'take', 'constant', 'time', 'pointer', 'manipulation', 'unlink', 'minimum', 'node', 'since', 'new', 'minimum', 'node', 'parent', 'node', ',', 'set', 'pointer', 'new', 'minimum', 'also', 'take', 'constant', 'time', '.', 'unless', 'assumption', 'balance', 'search', 'tree', 'misguide', '(', 'assume', 'balance', 'search', 'tree', 'functionally', 'equivalent', 'binary', 'tree', ',', 'except', 'self-balancing', 'process', ')', ',', 'delete-minimum', 'operation', '(', '1', ')', 'time', 'complexity', '.', 'go', 'wrong', '?']","[[('background', 'NN')], [('question', 'NN')], [('comes', 'VBZ')], [('fact', 'NN')], [('skiena', 'NN')], [(""'s"", 'POS')], [('book', 'NN')], [('``', '``')], [('algorithm', 'NN')], [('design', 'NN')], [('manual', 'JJ')], [(':', ':')], [('second', 'JJ')], [('edition', 'NN')], [(""''"", ""''"")], [('page', 'NN')], [('85', 'CD')], [(':', ':')], [('claims', 'NNS')], [('delete-minimum', 'JJ')], [('operation', 'NN')], [('priority', 'NN')], [('queue', 'NN')], [('implemented', 'VBN')], [('balanced', 'VBN')], [('search', 'NN')], [('tree', 'NN')], [('(', '(')], [('log', 'NN')], [('n', 'NN')], [(')', ')')], [('time', 'NN')], [('complexity', 'NN')], [('.', '.')], [(',', ',')], [('disagree', 'NN')], [('statement', 'NN')], [('nodes', 'NNS')], [('balanced', 'VBN')], [('search', 'NN')], [('tree', 'NN')], [('parent', 'NN')], [('node', 'NN')], [('field', 'NN')], [('.', '.')], [('since', 'IN')], [('pointer', 'NN')], [('minimum', 'NN')], [('takes', 'VBZ')], [('constant', 'JJ')], [('time', 'NN')], [('pointer', 'NN')], [('manipulation', 'NN')], [('unlink', 'NN')], [('minimum', 'NN')], [('node', 'NN')], [('since', 'IN')], [('new', 'JJ')], [('minimum', 'NN')], [('node', 'NN')], [('parent', 'NN')], [('node', 'NN')], [(',', ',')], [('setting', 'VBG')], [('pointer', 'NN')], [('new', 'JJ')], [('minimum', 'NN')], [('also', 'RB')], [('takes', 'VBZ')], [('constant', 'JJ')], [('time', 'NN')], [('.', '.')], [('unless', 'IN')], [('assumptions', 'NNS')], [('balanced', 'VBN')], [('search', 'NN')], [('tree', 'NN')], [('misguided', 'VBN')], [('(', '(')], [('assume', 'VB')], [('balanced', 'VBN')], [('search', 'NN')], [('tree', 'NN')], [('functionally', 'RB')], [('equivalent', 'NN')], [('binary', 'NN')], [('tree', 'NN')], [(',', ',')], [('except', 'IN')], [('self-balancing', 'NN')], [('process', 'NN')], [(')', ')')], [(',', ',')], [('delete-minimum', 'JJ')], [('operation', 'NN')], [('(', '(')], [('1', 'CD')], [(')', ')')], [('time', 'NN')], [('complexity', 'NN')], [('.', '.')], [('gone', 'VBN')], [('wrong', 'JJ')], [('?', '.')]]","background question come fact skiena 's book `` algorithm design manual : second edition '' page 85 : claim delete-minimum operation priority queue implement balance search tree ( log n ) time complexity . , disagree statement node balance search tree parent node field . since pointer minimum take constant time pointer manipulation unlink minimum node since new minimum node parent node , set pointer new minimum also take constant time . unless assumption balance search tree misguide ( assume balance search tree functionally equivalent binary tree , except self-balancing process ) , delete-minimum operation ( 1 ) time complexity . go wrong ?",0_algorithm_time_node_bill,3
315,rma55n,Question about ALU Design,Help,0,0.25,computerscience,https://www.reddit.com/r/computerscience/comments/rma55n/question_about_alu_design/,10,"hi , i am a bit confused about the ways in which an alu is designed , so and alu has mainly 2 operations: arithmetic and logic , the arithmetic part is mostly achieved through adders but what about the logic part?
i saw an online article and they used and , nor , xor gates , but why those gates specifically? , would not it make more sense to use and , or , not gates as they are the basic logical gates? i am extremely new to this stuff , am i missing out on something?",1640194155.0,"['hi', ',', 'bit', 'confuse', 'way', 'alu', 'design', ',', 'alu', 'mainly', '2', 'operation', ':', 'arithmetic', 'logic', ',', 'arithmetic', 'part', 'mostly', 'achieve', 'adder', 'logic', 'part', '?', 'saw', 'online', 'article', 'use', ',', ',', 'xor', 'gate', ',', 'gate', 'specifically', '?', ',', 'would', 'make', 'sense', 'use', ',', ',', 'gate', 'basic', 'logical', 'gate', '?', 'extremely', 'new', 'stuff', ',', 'miss', 'something', '?']","[[('hi', 'NN')], [(',', ',')], [('bit', 'NN')], [('confused', 'VBN')], [('ways', 'NNS')], [('alu', 'NN')], [('designed', 'VBN')], [(',', ',')], [('alu', 'NN')], [('mainly', 'RB')], [('2', 'CD')], [('operations', 'NNS')], [(':', ':')], [('arithmetic', 'JJ')], [('logic', 'NN')], [(',', ',')], [('arithmetic', 'JJ')], [('part', 'NN')], [('mostly', 'RB')], [('achieved', 'VBN')], [('adders', 'NNS')], [('logic', 'NN')], [('part', 'NN')], [('?', '.')], [('saw', 'NN')], [('online', 'NN')], [('article', 'NN')], [('used', 'VBN')], [(',', ',')], [(',', ',')], [('xor', 'NN')], [('gates', 'NNS')], [(',', ',')], [('gates', 'NNS')], [('specifically', 'RB')], [('?', '.')], [(',', ',')], [('would', 'MD')], [('make', 'VB')], [('sense', 'NN')], [('use', 'NN')], [(',', ',')], [(',', ',')], [('gates', 'NNS')], [('basic', 'JJ')], [('logical', 'JJ')], [('gates', 'NNS')], [('?', '.')], [('extremely', 'RB')], [('new', 'JJ')], [('stuff', 'NN')], [(',', ',')], [('missing', 'VBG')], [('something', 'NN')], [('?', '.')]]","hi , bit confuse way alu design , alu mainly 2 operation : arithmetic logic , arithmetic part mostly achieve adder logic part ? saw online article use , , xor gate , gate specifically ? , would make sense use , , gate basic logical gate ? extremely new stuff , miss something ?",-1_abazbz2abz_2520_problem_use,3
316,rlfsh9,How does data structure alignment help in efficient reading of memory?,,49,0.93,computerscience,https://www.reddit.com/r/computerscience/comments/rlfsh9/how_does_data_structure_alignment_help_in/,9,"i know that data structure alignment is done to prevent a data structure being stored across two memory blocks. this was explained by you/auntiesauce in another post i created regarding [the internal working of structs](/).
> now, why does the second rule ensure we do not have one element of a struct stretched across two blocks? here is an example: let us say we have a struct that an 8 byte element and a 1 byte element:
> 
> | 8 bytes | 1 byte
> 
> now, let us say we want to make an array of structs. each struct is 8 bytes in size, and arrays are stored contiguously in memory, so we have
>
> 8+1 bytes | 8+1 bytes | 8+1 bytes | etc…
> 
> if our array is large enough we will eventually approach the end of a block. will a block size ever be divisible by 9? like, almost definitely not. so you will get the end of the block with less than 9 bytes of space left, and the struct will get chopped!

in the wikipedia article about [data structure alignment](), it is written that cpu can efficiently read memory when it is data structure aligned.
> the cpu in modern computer hardware performs reads and writes to memory most efficiently when the data is naturally aligned, which generally means that the data's memory address is a multiple of the data size

so my question is that how does data structure alignment actually help in the efficient memory reads by the cpu.

thanks!",1640096846.0,"['know', 'data', 'structure', 'alignment', 'do', 'prevent', 'data', 'structure', 'store', 'across', 'two', 'memory', 'block', '.', 'explain', 'you/auntiesauce', 'another', 'post', 'create', 'regard', '[', 'internal', 'work', 'structs', ']', '(', '/', ')', '.', '>', ',', 'second', 'rule', 'ensure', 'one', 'element', 'struct', 'stretch', 'across', 'two', 'block', '?', 'example', ':', 'let', 'u', 'say', 'struct', '8', 'byte', 'element', '1', 'byte', 'element', ':', '>', '>', '|', '8', 'byte', '|', '1', 'byte', '>', '>', ',', 'let', 'u', 'say', 'want', 'make', 'array', 'structs', '.', 'struct', '8', 'byte', 'size', ',', 'array', 'store', 'contiguously', 'memory', ',', '>', '>', '8+1', 'byte', '|', '8+1', 'byte', '|', '8+1', 'byte', '|', 'etc…', '>', '>', 'array', 'large', 'enough', 'eventually', 'approach', 'end', 'block', '.', 'block', 'size', 'ever', 'divisible', '9', '?', 'like', ',', 'almost', 'definitely', '.', 'get', 'end', 'block', 'less', '9', 'byte', 'space', 'left', ',', 'struct', 'get', 'chopped', '!', 'wikipedia', 'article', '[', 'data', 'structure', 'alignment', ']', '(', ')', ',', 'write', 'cpu', 'efficiently', 'read', 'memory', 'data', 'structure', 'align', '.', '>', 'cpu', 'modern', 'computer', 'hardware', 'performs', 'read', 'writes', 'memory', 'efficiently', 'data', 'naturally', 'align', ',', 'generally', 'mean', 'data', ""'s"", 'memory', 'address', 'multiple', 'data', 'size', 'question', 'data', 'structure', 'alignment', 'actually', 'help', 'efficient', 'memory', 'read', 'cpu', '.', 'thanks', '!']","[[('know', 'VB')], [('data', 'NNS')], [('structure', 'NN')], [('alignment', 'NN')], [('done', 'VBN')], [('prevent', 'NN')], [('data', 'NNS')], [('structure', 'NN')], [('stored', 'VBN')], [('across', 'IN')], [('two', 'CD')], [('memory', 'NN')], [('blocks', 'NNS')], [('.', '.')], [('explained', 'VBD')], [('you/auntiesauce', 'NN')], [('another', 'DT')], [('post', 'NN')], [('created', 'VBN')], [('regarding', 'VBG')], [('[', 'NN')], [('internal', 'JJ')], [('working', 'VBG')], [('structs', 'NNS')], [(']', 'NN')], [('(', '(')], [('/', 'NN')], [(')', ')')], [('.', '.')], [('>', 'NN')], [(',', ',')], [('second', 'JJ')], [('rule', 'NN')], [('ensure', 'VB')], [('one', 'CD')], [('element', 'NN')], [('struct', 'NN')], [('stretched', 'VBN')], [('across', 'IN')], [('two', 'CD')], [('blocks', 'NNS')], [('?', '.')], [('example', 'NN')], [(':', ':')], [('let', 'VB')], [('us', 'PRP')], [('say', 'VB')], [('struct', 'NN')], [('8', 'CD')], [('byte', 'NN')], [('element', 'NN')], [('1', 'CD')], [('byte', 'NN')], [('element', 'NN')], [(':', ':')], [('>', 'NN')], [('>', 'NN')], [('|', 'NN')], [('8', 'CD')], [('bytes', 'NNS')], [('|', 'NN')], [('1', 'CD')], [('byte', 'NN')], [('>', 'NN')], [('>', 'NN')], [(',', ',')], [('let', 'VB')], [('us', 'PRP')], [('say', 'VB')], [('want', 'NN')], [('make', 'VB')], [('array', 'NN')], [('structs', 'NNS')], [('.', '.')], [('struct', 'NN')], [('8', 'CD')], [('bytes', 'NNS')], [('size', 'NN')], [(',', ',')], [('arrays', 'NNS')], [('stored', 'VBN')], [('contiguously', 'RB')], [('memory', 'NN')], [(',', ',')], [('>', 'NN')], [('>', 'NN')], [('8+1', 'CD')], [('bytes', 'NNS')], [('|', 'NN')], [('8+1', 'CD')], [('bytes', 'NNS')], [('|', 'NN')], [('8+1', 'CD')], [('bytes', 'NNS')], [('|', 'NN')], [('etc…', 'NN')], [('>', 'NN')], [('>', 'NN')], [('array', 'NN')], [('large', 'JJ')], [('enough', 'RB')], [('eventually', 'RB')], [('approach', 'NN')], [('end', 'NN')], [('block', 'NN')], [('.', '.')], [('block', 'NN')], [('size', 'NN')], [('ever', 'RB')], [('divisible', 'JJ')], [('9', 'CD')], [('?', '.')], [('like', 'IN')], [(',', ',')], [('almost', 'RB')], [('definitely', 'RB')], [('.', '.')], [('get', 'VB')], [('end', 'NN')], [('block', 'NN')], [('less', 'RBR')], [('9', 'CD')], [('bytes', 'NNS')], [('space', 'NN')], [('left', 'NN')], [(',', ',')], [('struct', 'NN')], [('get', 'VB')], [('chopped', 'NN')], [('!', '.')], [('wikipedia', 'NN')], [('article', 'NN')], [('[', 'NN')], [('data', 'NNS')], [('structure', 'NN')], [('alignment', 'NN')], [(']', 'NN')], [('(', '(')], [(')', ')')], [(',', ',')], [('written', 'VBN')], [('cpu', 'NN')], [('efficiently', 'RB')], [('read', 'NN')], [('memory', 'NN')], [('data', 'NNS')], [('structure', 'NN')], [('aligned', 'VBN')], [('.', '.')], [('>', 'NN')], [('cpu', 'NN')], [('modern', 'JJ')], [('computer', 'NN')], [('hardware', 'NN')], [('performs', 'NNS')], [('reads', 'NNS')], [('writes', 'NNS')], [('memory', 'NN')], [('efficiently', 'RB')], [('data', 'NNS')], [('naturally', 'RB')], [('aligned', 'VBN')], [(',', ',')], [('generally', 'RB')], [('means', 'NNS')], [('data', 'NNS')], [(""'s"", 'POS')], [('memory', 'NN')], [('address', 'NN')], [('multiple', 'NN')], [('data', 'NNS')], [('size', 'NN')], [('question', 'NN')], [('data', 'NNS')], [('structure', 'NN')], [('alignment', 'NN')], [('actually', 'RB')], [('help', 'NN')], [('efficient', 'NN')], [('memory', 'NN')], [('reads', 'NNS')], [('cpu', 'NN')], [('.', '.')], [('thanks', 'NNS')], [('!', '.')]]","know data structure alignment do prevent data structure store across two memory block . explain you/auntiesauce another post create regard [ internal work structs ] ( / ) . > , second rule ensure one element struct stretch across two block ? example : let u say struct 8 byte element 1 byte element : > > | 8 byte | 1 byte > > , let u say want make array structs . struct 8 byte size , array store contiguously memory , > > 8+1 byte | 8+1 byte | 8+1 byte | etc… > > array large enough eventually approach end block . block size ever divisible 9 ? like , almost definitely . get end block less 9 byte space left , struct get chopped ! wikipedia article [ data structure alignment ] ( ) , write cpu efficiently read memory data structure align . > cpu modern computer hardware performs read writes memory efficiently data naturally align , generally mean data 's memory address multiple data size question data structure alignment actually help efficient memory read cpu . thanks !",1_memory_byte_data_alignment,2
317,rm2a30,How is long distance network communication done?,,1,0.6,computerscience,https://www.reddit.com/r/computerscience/comments/rm2a30/how_is_long_distance_network_communication_done/,3," i just started learning networking and i was playing with tracert.

one  of the outputs got me wondering. i am in europe and trying to access new  york server. 

&#x200b;

    tracing route to 104.21.24.154 over a maximum of 30 hops
    
      1     4 ms     1 ms     3 ms  192.168.0.1
    ...
      5     9 ms     5 ms     6 ms  xe-8-1-3-3180.bar1.sofia1.level3.net [212.162.46.177]
      6     *        *       33 ms  ae-2-3216.ear4.frankfurt1.level3.net [4.69.210.66]
      7    41 ms    33 ms    36 ms  195.122.183.210
      8    33 ms    30 ms    38 ms  104.21.24.154

 

the 7-th address is in  germany  and  the 8-th (destination) is in new york. so how is the communication  between the two routers performed?

are  there routers between the last two points that tracert cannot find  information for or a satellite communication or a really long cable?",1640168240.0,"['start', 'learn', 'networking', 'play', 'tracert', '.', 'one', 'output', 'get', 'wonder', '.', 'europe', 'try', 'access', 'new', 'york', 'server', '.', '&', '#', 'x200b', ';', 'trace', 'route', '104.21.24.154', 'maximum', '30', 'hop', '1', '4', 'm', '1', 'm', '3', 'm', '192.168.0.1', '...', '5', '9', 'm', '5', 'm', '6', 'm', 'xe-8-1-3-3180.bar1.sofia1.level3.net', '[', '212.162.46.177', ']', '6', '*', '*', '33', 'm', 'ae-2-3216.ear4.frankfurt1.level3.net', '[', '4.69.210.66', ']', '7', '41', 'm', '33', 'm', '36', 'm', '195.122.183.210', '8', '33', 'm', '30', 'm', '38', 'm', '104.21.24.154', '7-th', 'address', 'germany', '8-th', '(', 'destination', ')', 'new', 'york', '.', 'communication', 'two', 'router', 'perform', '?', 'router', 'last', 'two', 'point', 'tracert', 'find', 'information', 'satellite', 'communication', 'really', 'long', 'cable', '?']","[[('started', 'VBN')], [('learning', 'VBG')], [('networking', 'NN')], [('playing', 'VBG')], [('tracert', 'NN')], [('.', '.')], [('one', 'CD')], [('outputs', 'NNS')], [('got', 'VBD')], [('wondering', 'VBG')], [('.', '.')], [('europe', 'NN')], [('trying', 'VBG')], [('access', 'NN')], [('new', 'JJ')], [('york', 'NN')], [('server', 'NN')], [('.', '.')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('tracing', 'VBG')], [('route', 'NN')], [('104.21.24.154', 'CD')], [('maximum', 'NN')], [('30', 'CD')], [('hops', 'NNS')], [('1', 'CD')], [('4', 'CD')], [('ms', 'NN')], [('1', 'CD')], [('ms', 'NN')], [('3', 'CD')], [('ms', 'NN')], [('192.168.0.1', 'CD')], [('...', ':')], [('5', 'CD')], [('9', 'CD')], [('ms', 'NN')], [('5', 'CD')], [('ms', 'NN')], [('6', 'CD')], [('ms', 'NN')], [('xe-8-1-3-3180.bar1.sofia1.level3.net', 'NN')], [('[', 'NN')], [('212.162.46.177', 'CD')], [(']', 'NN')], [('6', 'CD')], [('*', 'NN')], [('*', 'NN')], [('33', 'CD')], [('ms', 'NN')], [('ae-2-3216.ear4.frankfurt1.level3.net', 'NN')], [('[', 'NN')], [('4.69.210.66', 'CD')], [(']', 'NN')], [('7', 'CD')], [('41', 'CD')], [('ms', 'NN')], [('33', 'CD')], [('ms', 'NN')], [('36', 'CD')], [('ms', 'NN')], [('195.122.183.210', 'CD')], [('8', 'CD')], [('33', 'CD')], [('ms', 'NN')], [('30', 'CD')], [('ms', 'NN')], [('38', 'CD')], [('ms', 'NN')], [('104.21.24.154', 'CD')], [('7-th', 'JJ')], [('address', 'NN')], [('germany', 'NN')], [('8-th', 'JJ')], [('(', '(')], [('destination', 'NN')], [(')', ')')], [('new', 'JJ')], [('york', 'NN')], [('.', '.')], [('communication', 'NN')], [('two', 'CD')], [('routers', 'NNS')], [('performed', 'VBN')], [('?', '.')], [('routers', 'NNS')], [('last', 'JJ')], [('two', 'CD')], [('points', 'NNS')], [('tracert', 'NN')], [('find', 'VB')], [('information', 'NN')], [('satellite', 'NN')], [('communication', 'NN')], [('really', 'RB')], [('long', 'RB')], [('cable', 'NN')], [('?', '.')]]",start learn networking play tracert . one output get wonder . europe try access new york server . & # x200b ; trace route 104.21.24.154 maximum 30 hop 1 4 m 1 m 3 m 192.168.0.1 ... 5 9 m 5 m 6 m xe-8-1-3-3180.bar1.sofia1.level3.net [ 212.162.46.177 ] 6 * * 33 m ae-2-3216.ear4.frankfurt1.level3.net [ 4.69.210.66 ] 7 41 m 33 m 36 m 195.122.183.210 8 33 m 30 m 38 m 104.21.24.154 7-th address germany 8-th ( destination ) new york . communication two router perform ? router last two point tracert find information satellite communication really long cable ?,6_server_packet_key_hash,1
318,rlgtu5,Concept of Delayed abstraction,Article,2,1.0,computerscience,https://www.reddit.com/r/computerscience/comments/rlgtu5/concept_of_delayed_abstraction/,0,"hi,

i am trying to understand the concept of delayed abstraction from the following paper at:

[verx](-verx.pdf)

     to verify a past ltl specification of a bundle of contracts c
    we apply abstract interpretation over a symbolic domain.
    we employ predicate abstraction [35] but without the usual
    conversion to boolean programs. our approach is similar to
    that of flanagan and qadeer [32] where two transformers are
    alternated: precise symbolic transformers to handle individual
    commands, and an imprecise transformer to ensure convergence.
    in contrast, classic abstraction applies an imprecise
    transformer at every step. hence, we call the precise/imprecise
    approach delayed abstraction.

somebody please guide me.

zulfi.",1640100001.0,"['hi', ',', 'try', 'understand', 'concept', 'delayed', 'abstraction', 'follow', 'paper', ':', '[', 'verx', ']', '(', '-verx.pdf', ')', 'verify', 'past', 'ltl', 'specification', 'bundle', 'contract', 'c', 'apply', 'abstract', 'interpretation', 'symbolic', 'domain', '.', 'employ', 'predicate', 'abstraction', '[', '35', ']', 'without', 'usual', 'conversion', 'boolean', 'program', '.', 'approach', 'similar', 'flanagan', 'qadeer', '[', '32', ']', 'two', 'transformer', 'alternate', ':', 'precise', 'symbolic', 'transformer', 'handle', 'individual', 'command', ',', 'imprecise', 'transformer', 'ensure', 'convergence', '.', 'contrast', ',', 'classic', 'abstraction', 'applies', 'imprecise', 'transformer', 'every', 'step', '.', 'hence', ',', 'call', 'precise/imprecise', 'approach', 'delayed', 'abstraction', '.', 'somebody', 'please', 'guide', '.', 'zulfi', '.']","[[('hi', 'NN')], [(',', ',')], [('trying', 'VBG')], [('understand', 'NN')], [('concept', 'NN')], [('delayed', 'NNS')], [('abstraction', 'NN')], [('following', 'VBG')], [('paper', 'NN')], [(':', ':')], [('[', 'NN')], [('verx', 'NN')], [(']', 'NN')], [('(', '(')], [('-verx.pdf', 'NN')], [(')', ')')], [('verify', 'NN')], [('past', 'NN')], [('ltl', 'NN')], [('specification', 'NN')], [('bundle', 'NN')], [('contracts', 'NNS')], [('c', 'NNS')], [('apply', 'VB')], [('abstract', 'NN')], [('interpretation', 'NN')], [('symbolic', 'NN')], [('domain', 'NN')], [('.', '.')], [('employ', 'NN')], [('predicate', 'NN')], [('abstraction', 'NN')], [('[', 'NN')], [('35', 'CD')], [(']', 'NN')], [('without', 'IN')], [('usual', 'JJ')], [('conversion', 'NN')], [('boolean', 'NN')], [('programs', 'NNS')], [('.', '.')], [('approach', 'NN')], [('similar', 'JJ')], [('flanagan', 'NN')], [('qadeer', 'NN')], [('[', 'NN')], [('32', 'CD')], [(']', 'NN')], [('two', 'CD')], [('transformers', 'NNS')], [('alternated', 'VBN')], [(':', ':')], [('precise', 'NN')], [('symbolic', 'NN')], [('transformers', 'NNS')], [('handle', 'NN')], [('individual', 'JJ')], [('commands', 'NNS')], [(',', ',')], [('imprecise', 'NN')], [('transformer', 'NN')], [('ensure', 'VB')], [('convergence', 'NN')], [('.', '.')], [('contrast', 'NN')], [(',', ',')], [('classic', 'JJ')], [('abstraction', 'NN')], [('applies', 'NNS')], [('imprecise', 'NN')], [('transformer', 'NN')], [('every', 'DT')], [('step', 'NN')], [('.', '.')], [('hence', 'NN')], [(',', ',')], [('call', 'NN')], [('precise/imprecise', 'NN')], [('approach', 'NN')], [('delayed', 'NNS')], [('abstraction', 'NN')], [('.', '.')], [('somebody', 'NN')], [('please', 'NN')], [('guide', 'NN')], [('.', '.')], [('zulfi', 'NN')], [('.', '.')]]","hi , try understand concept delayed abstraction follow paper : [ verx ] ( -verx.pdf ) verify past ltl specification bundle contract c apply abstract interpretation symbolic domain . employ predicate abstraction [ 35 ] without usual conversion boolean program . approach similar flanagan qadeer [ 32 ] two transformer alternate : precise symbolic transformer handle individual command , imprecise transformer ensure convergence . contrast , classic abstraction applies imprecise transformer every step . hence , call precise/imprecise approach delayed abstraction . somebody please guide . zulfi .",7_tm_state_turing_universal,3
319,rkr2j4,Andrew Tannenbaum,,68,0.92,computerscience,https://www.reddit.com/r/computerscience/comments/rkr2j4/andrew_tannenbaum/,26,"hello, i have gone through tanenbaum's books on os. they are very informative and interesting. so much that i googled about the author and his. in his wiki i came to know that he has got degrees in physics and astrophysics from mit and berkeley. 
i am curious as to how he got the expertise to write books and do research on os? he has other books also like structured computer organization, computer networks etc. it seems like he has studied cs in his physics courses. i dig into his career but could not find any info related to when and where he learned cs. 

kindly address me the missing link if anyone knows, as his wiki says he is a established physicist while his books and his career speaks he is a computer scientist.",1640017594.0,"['hello', ',', 'go', 'tanenbaum', ""'s"", 'book', 'o', '.', 'informative', 'interest', '.', 'much', 'google', 'author', '.', 'wiki', 'come', 'know', 'get', 'degree', 'physic', 'astrophysics', 'mit', 'berkeley', '.', 'curious', 'get', 'expertise', 'write', 'book', 'research', 'o', '?', 'book', 'also', 'like', 'structure', 'computer', 'organization', ',', 'computer', 'network', 'etc', '.', 'seem', 'like', 'study', 'c', 'physic', 'course', '.', 'dig', 'career', 'could', 'find', 'info', 'related', 'learn', 'c', '.', 'kindly', 'address', 'miss', 'link', 'anyone', 'know', ',', 'wiki', 'say', 'establish', 'physicist', 'book', 'career', 'speaks', 'computer', 'scientist', '.']","[[('hello', 'NN')], [(',', ',')], [('gone', 'VBN')], [('tanenbaum', 'NN')], [(""'s"", 'POS')], [('books', 'NNS')], [('os', 'NN')], [('.', '.')], [('informative', 'JJ')], [('interesting', 'VBG')], [('.', '.')], [('much', 'JJ')], [('googled', 'VBN')], [('author', 'NN')], [('.', '.')], [('wiki', 'NN')], [('came', 'VBD')], [('know', 'VB')], [('got', 'VBD')], [('degrees', 'NNS')], [('physics', 'NNS')], [('astrophysics', 'NNS')], [('mit', 'NN')], [('berkeley', 'NN')], [('.', '.')], [('curious', 'JJ')], [('got', 'VBD')], [('expertise', 'NN')], [('write', 'NN')], [('books', 'NNS')], [('research', 'NN')], [('os', 'NN')], [('?', '.')], [('books', 'NNS')], [('also', 'RB')], [('like', 'IN')], [('structured', 'VBN')], [('computer', 'NN')], [('organization', 'NN')], [(',', ',')], [('computer', 'NN')], [('networks', 'NNS')], [('etc', 'NN')], [('.', '.')], [('seems', 'VBZ')], [('like', 'IN')], [('studied', 'VBN')], [('cs', 'NN')], [('physics', 'NNS')], [('courses', 'NNS')], [('.', '.')], [('dig', 'NN')], [('career', 'NN')], [('could', 'MD')], [('find', 'VB')], [('info', 'NN')], [('related', 'JJ')], [('learned', 'VBN')], [('cs', 'NN')], [('.', '.')], [('kindly', 'RB')], [('address', 'NN')], [('missing', 'VBG')], [('link', 'NN')], [('anyone', 'NN')], [('knows', 'NNS')], [(',', ',')], [('wiki', 'NN')], [('says', 'VBZ')], [('established', 'VBN')], [('physicist', 'NN')], [('books', 'NNS')], [('career', 'NN')], [('speaks', 'NNS')], [('computer', 'NN')], [('scientist', 'NN')], [('.', '.')]]","hello , go tanenbaum 's book o . informative interest . much google author . wiki come know get degree physic astrophysics mit berkeley . curious get expertise write book research o ? book also like structure computer organization , computer network etc . seem like study c physic course . dig career could find info related learn c . kindly address miss link anyone know , wiki say establish physicist book career speaks computer scientist .",4_book_learn_computer_good,4
320,rkf6jh,I really want to design a single board computer. I have a lot to learn. Advice of specific resources?,Help,25,0.88,computerscience,https://www.reddit.com/r/computerscience/comments/rkf6jh/i_really_want_to_design_a_single_board_computer_i/,17,"i am aware this is not an easy task but i do not care. i want to do it. i am an electronic engineer and have experience with electricity, testing and troubleshooting pcbs. i have never designed anything besides simple circuits with lights and switches.. lol. 

currently studying software development for a bachelors and i am comptia a+ certified.

to be able to design an sbc i definitely need to improve in designing pcbs. i need to improve my understanding of computers so i can have a better comprehension of how some of the components on an sbc will go together.

i feel a bit overwhelmed to be honest and wanted to consult you guys so i can define a learning path for me so i can actually start considering designs.

if you have ideas or specific resources that would be helpful for me and my intentions i would appreciate it.",1639976497.0,"['aware', 'easy', 'task', 'care', '.', 'want', '.', 'electronic', 'engineer', 'experience', 'electricity', ',', 'test', 'troubleshoot', 'pcbs', '.', 'never', 'design', 'anything', 'besides', 'simple', 'circuit', 'light', 'switch', '..', 'lol', '.', 'currently', 'study', 'software', 'development', 'bachelor', 'comptia', 'a+', 'certify', '.', 'able', 'design', 'sbc', 'definitely', 'need', 'improve', 'design', 'pcbs', '.', 'need', 'improve', 'understand', 'computer', 'well', 'comprehension', 'component', 'sbc', 'go', 'together', '.', 'feel', 'bit', 'overwhelmed', 'honest', 'want', 'consult', 'guy', 'define', 'learn', 'path', 'actually', 'start', 'consider', 'design', '.', 'idea', 'specific', 'resource', 'would', 'helpful', 'intention', 'would', 'appreciate', '.']","[[('aware', 'JJ')], [('easy', 'JJ')], [('task', 'NN')], [('care', 'NN')], [('.', '.')], [('want', 'NN')], [('.', '.')], [('electronic', 'JJ')], [('engineer', 'NN')], [('experience', 'NN')], [('electricity', 'NN')], [(',', ',')], [('testing', 'VBG')], [('troubleshooting', 'VBG')], [('pcbs', 'NN')], [('.', '.')], [('never', 'RB')], [('designed', 'VBN')], [('anything', 'NN')], [('besides', 'IN')], [('simple', 'NN')], [('circuits', 'NNS')], [('lights', 'NNS')], [('switches', 'NNS')], [('..', 'NN')], [('lol', 'NN')], [('.', '.')], [('currently', 'RB')], [('studying', 'VBG')], [('software', 'NN')], [('development', 'NN')], [('bachelors', 'NNS')], [('comptia', 'NN')], [('a+', 'NN')], [('certified', 'VBN')], [('.', '.')], [('able', 'JJ')], [('design', 'NN')], [('sbc', 'NN')], [('definitely', 'RB')], [('need', 'NN')], [('improve', 'VB')], [('designing', 'VBG')], [('pcbs', 'NN')], [('.', '.')], [('need', 'NN')], [('improve', 'VB')], [('understanding', 'VBG')], [('computers', 'NNS')], [('better', 'RBR')], [('comprehension', 'NN')], [('components', 'NNS')], [('sbc', 'NN')], [('go', 'VB')], [('together', 'RB')], [('.', '.')], [('feel', 'NN')], [('bit', 'NN')], [('overwhelmed', 'JJ')], [('honest', 'NN')], [('wanted', 'VBD')], [('consult', 'NN')], [('guys', 'NNS')], [('define', 'NN')], [('learning', 'VBG')], [('path', 'NN')], [('actually', 'RB')], [('start', 'NN')], [('considering', 'VBG')], [('designs', 'NNS')], [('.', '.')], [('ideas', 'NNS')], [('specific', 'JJ')], [('resources', 'NNS')], [('would', 'MD')], [('helpful', 'NN')], [('intentions', 'NNS')], [('would', 'MD')], [('appreciate', 'NN')], [('.', '.')]]","aware easy task care . want . electronic engineer experience electricity , test troubleshoot pcbs . never design anything besides simple circuit light switch .. lol . currently study software development bachelor comptia a+ certify . able design sbc definitely need improve design pcbs . need improve understand computer well comprehension component sbc go together . feel bit overwhelmed honest want consult guy define learn path actually start consider design . idea specific resource would helpful intention would appreciate .",2_computer_learn_science_study,3
321,rkr18d,Looking for textbook recommendations for algorithm analysis/proofs?,General,2,0.75,computerscience,https://www.reddit.com/r/computerscience/comments/rkr18d/looking_for_textbook_recommendations_for/,3,"any recommendations? looking for a book that will go through the analysis of algorithms, giving proofs by induction/contradiction etc. 

is there well known go-to resource for what i am looking for? or any suggestions that you just found to be great in general?

thanks in advance.",1640017494.0,"['recommendation', '?', 'look', 'book', 'go', 'analysis', 'algorithm', ',', 'give', 'proof', 'induction/contradiction', 'etc', '.', 'well', 'know', 'go-to', 'resource', 'look', '?', 'suggestion', 'found', 'great', 'general', '?', 'thanks', 'advance', '.']","[[('recommendations', 'NNS')], [('?', '.')], [('looking', 'VBG')], [('book', 'NN')], [('go', 'VB')], [('analysis', 'NN')], [('algorithms', 'NN')], [(',', ',')], [('giving', 'VBG')], [('proofs', 'NN')], [('induction/contradiction', 'NN')], [('etc', 'NN')], [('.', '.')], [('well', 'RB')], [('known', 'VBN')], [('go-to', 'NN')], [('resource', 'NN')], [('looking', 'VBG')], [('?', '.')], [('suggestions', 'NNS')], [('found', 'NN')], [('great', 'JJ')], [('general', 'JJ')], [('?', '.')], [('thanks', 'NNS')], [('advance', 'NN')], [('.', '.')]]","recommendation ? look book go analysis algorithm , give proof induction/contradiction etc . well know go-to resource look ? suggestion found great general ? thanks advance .",4_book_learn_computer_good,4
322,rk5sms,"Is there a ""perfect"" random event?",Help,44,0.87,computerscience,https://www.reddit.com/r/computerscience/comments/rk5sms/is_there_a_perfect_random_event/,18,"i do not mean a coin toss or such thing, as its technically determined as soon as you flip the coin ( gravity, wind etc.), but rather a totally unpredictable event like a programmed coin toss, but i am not sure wether its actually totally random. (sorry for bad my bad english)",1639948067.0,"['mean', 'coin', 'toss', 'thing', ',', 'technically', 'determine', 'soon', 'flip', 'coin', '(', 'gravity', ',', 'wind', 'etc', '.', ')', ',', 'rather', 'totally', 'unpredictable', 'event', 'like', 'programmed', 'coin', 'toss', ',', 'sure', 'wether', 'actually', 'totally', 'random', '.', '(', 'sorry', 'bad', 'bad', 'english', ')']","[[('mean', 'NN')], [('coin', 'NN')], [('toss', 'NN')], [('thing', 'NN')], [(',', ',')], [('technically', 'RB')], [('determined', 'VBN')], [('soon', 'RB')], [('flip', 'NN')], [('coin', 'NN')], [('(', '(')], [('gravity', 'NN')], [(',', ',')], [('wind', 'NN')], [('etc', 'NN')], [('.', '.')], [(')', ')')], [(',', ',')], [('rather', 'RB')], [('totally', 'RB')], [('unpredictable', 'JJ')], [('event', 'NN')], [('like', 'IN')], [('programmed', 'NN')], [('coin', 'NN')], [('toss', 'NN')], [(',', ',')], [('sure', 'NN')], [('wether', 'NN')], [('actually', 'RB')], [('totally', 'RB')], [('random', 'NN')], [('.', '.')], [('(', '(')], [('sorry', 'NN')], [('bad', 'JJ')], [('bad', 'JJ')], [('english', 'JJ')], [(')', ')')]]","mean coin toss thing , technically determine soon flip coin ( gravity , wind etc . ) , rather totally unpredictable event like programmed coin toss , sure wether actually totally random . ( sorry bad bad english )",-1_abazbz2abz_2520_problem_use,2
323,rkfmao,I'm making a web app and I'm hashing the passwords with a salted bcrypt after that I hash the hashed value with md5 then store it in my DB. Do you guys think this is secure or do you have any recommendations?,Advice,2,0.63,computerscience,https://www.reddit.com/r/computerscience/comments/rkfmao/im_making_a_web_app_and_im_hashing_the_passwords/,23,"my thought is that even if the db leaked and even if they got the salt by hacking into the server they would still have to deal with the md5 they would not be able to decode it without knowing the original value is because first, they would have the guess the md5 hashed value that bcrypt generated then decode it with the salt.

what do you guys think? i hope that hacking will not be an issue though as my production environment will be locked down pretty well.",1639978028.0,"['thought', 'even', 'db', 'leak', 'even', 'get', 'salt', 'hack', 'server', 'would', 'still', 'deal', 'md5', 'would', 'able', 'decode', 'without', 'know', 'original', 'value', 'first', ',', 'would', 'guess', 'md5', 'hash', 'value', 'bcrypt', 'generate', 'decode', 'salt', '.', 'guy', 'think', '?', 'hope', 'hack', 'issue', 'though', 'production', 'environment', 'lock', 'pretty', 'well', '.']","[[('thought', 'NN')], [('even', 'RB')], [('db', 'NN')], [('leaked', 'VBN')], [('even', 'RB')], [('got', 'VBD')], [('salt', 'NN')], [('hacking', 'VBG')], [('server', 'NN')], [('would', 'MD')], [('still', 'RB')], [('deal', 'NN')], [('md5', 'NN')], [('would', 'MD')], [('able', 'JJ')], [('decode', 'NN')], [('without', 'IN')], [('knowing', 'VBG')], [('original', 'JJ')], [('value', 'NN')], [('first', 'RB')], [(',', ',')], [('would', 'MD')], [('guess', 'NN')], [('md5', 'NN')], [('hashed', 'VBN')], [('value', 'NN')], [('bcrypt', 'NN')], [('generated', 'VBN')], [('decode', 'NN')], [('salt', 'NN')], [('.', '.')], [('guys', 'NNS')], [('think', 'NN')], [('?', '.')], [('hope', 'NN')], [('hacking', 'VBG')], [('issue', 'NN')], [('though', 'IN')], [('production', 'NN')], [('environment', 'NN')], [('locked', 'VBN')], [('pretty', 'RB')], [('well', 'RB')], [('.', '.')]]","thought even db leak even get salt hack server would still deal md5 would able decode without know original value first , would guess md5 hash value bcrypt generate decode salt . guy think ? hope hack issue though production environment lock pretty well .",6_server_packet_key_hash,2
324,rjvbrs,Looking for programming challenges/projects related to randomization/approximation algorithms.,,61,0.95,computerscience,https://www.reddit.com/r/computerscience/comments/rjvbrs/looking_for_programming_challengesprojects/,17,"hello, i have been reading on randomized/approximative algorithms books, and while math is aesthetically pleasing, i wish to get my hands dirty with practical coding challenges or projects.

any recommendations?",1639915018.0,"['hello', ',', 'reading', 'randomized/approximative', 'algorithm', 'book', ',', 'math', 'aesthetically', 'please', ',', 'wish', 'get', 'hand', 'dirty', 'practical', 'cod', 'challenge', 'project', '.', 'recommendation', '?']","[[('hello', 'NN')], [(',', ',')], [('reading', 'NN')], [('randomized/approximative', 'NN')], [('algorithms', 'NN')], [('books', 'NNS')], [(',', ',')], [('math', 'NN')], [('aesthetically', 'RB')], [('pleasing', 'VBG')], [(',', ',')], [('wish', 'NN')], [('get', 'VB')], [('hands', 'NNS')], [('dirty', 'NN')], [('practical', 'JJ')], [('coding', 'VBG')], [('challenges', 'NNS')], [('projects', 'NNS')], [('.', '.')], [('recommendations', 'NNS')], [('?', '.')]]","hello , reading randomized/approximative algorithm book , math aesthetically please , wish get hand dirty practical cod challenge project . recommendation ?",-1_abazbz2abz_2520_problem_use,1
325,rjwxfl,Why does SSH use symmetric encryption,,18,0.93,computerscience,https://www.reddit.com/r/computerscience/comments/rjwxfl/why_does_ssh_use_symmetric_encryption/,5,"hello everyone! 
i have been reading up on ssh and am trying to figure out why ssh uses symmetric encryption for communication when asymmetric encryption is used for authentication and key exchange.
the only reason i can think of is symmetric cryptography allows for fast encryption and decryption. is there any other reason?",1639921080.0,"['hello', 'everyone', '!', 'reading', 'ssh', 'try', 'figure', 'ssh', 'us', 'symmetric', 'encryption', 'communication', 'asymmetric', 'encryption', 'use', 'authentication', 'key', 'exchange', '.', 'reason', 'think', 'symmetric', 'cryptography', 'allows', 'fast', 'encryption', 'decryption', '.', 'reason', '?']","[[('hello', 'NN')], [('everyone', 'NN')], [('!', '.')], [('reading', 'NN')], [('ssh', 'NN')], [('trying', 'VBG')], [('figure', 'NN')], [('ssh', 'NN')], [('uses', 'NNS')], [('symmetric', 'NN')], [('encryption', 'NN')], [('communication', 'NN')], [('asymmetric', 'NN')], [('encryption', 'NN')], [('used', 'VBN')], [('authentication', 'NN')], [('key', 'NN')], [('exchange', 'NN')], [('.', '.')], [('reason', 'NN')], [('think', 'NN')], [('symmetric', 'NN')], [('cryptography', 'NN')], [('allows', 'NNS')], [('fast', 'NN')], [('encryption', 'NN')], [('decryption', 'NN')], [('.', '.')], [('reason', 'NN')], [('?', '.')]]",hello everyone ! reading ssh try figure ssh us symmetric encryption communication asymmetric encryption use authentication key exchange . reason think symmetric cryptography allows fast encryption decryption . reason ?,6_server_packet_key_hash,4
326,rk78ya,Reentrancy Detection Technique by Zeus tool,,1,0.67,computerscience,https://www.reddit.com/r/computerscience/comments/rk78ya/reentrancy_detection_technique_by_zeus_tool/,1,"  

i was reading the detection of same function reentrancy by zeus as discussed in \[[zeus: reentrancy detection](/~joel.reardon/blockchain/readings/ndss2018_09-1_kalra_paper.pdf)\]. they have done cloning. i cannot understand this method. is this a valid method of testing a sc because we are modifying the sc. can we modify the sc during testing?

the paper says:

    reentrancy in solidity can happen via the call method. send only invokes the default function with limited gas for logging purposes. zeus handles same-function reentrancy by first cloning the function under consideration, and inserting a call to the clone before the invocation to call. fig. 14 shows the patched function for the example in fig. 2. note that zeus ensures that the patch is done within the same basic block so as to ensure that if the cloned function is called, then the invocation to call is also made. further, we also assert false before the call code. if the verifier finds a path leading to this assert, it indicates a bug.

somebody please help me to understand .

zulfi.",1639952159.0,"['reading', 'detection', 'function', 'reentrancy', 'zeus', 'discuss', '\\', '[', '[', 'zeus', ':', 'reentrancy', 'detection', ']', '(', '/~joel.reardon/blockchain/readings/ndss2018_09-1_kalra_paper.pdf', ')', '\\', ']', '.', 'do', 'clone', '.', 'understand', 'method', '.', 'valid', 'method', 'test', 'sc', 'modify', 'sc', '.', 'modify', 'sc', 'test', '?', 'paper', 'say', ':', 'reentrancy', 'solidity', 'happen', 'via', 'call', 'method', '.', 'send', 'invokes', 'default', 'function', 'limited', 'gas', 'log', 'purpose', '.', 'zeus', 'handle', 'same-function', 'reentrancy', 'first', 'clone', 'function', 'consideration', ',', 'insert', 'call', 'clone', 'invocation', 'call', '.', 'fig', '.', '14', 'show', 'patch', 'function', 'example', 'fig', '.', '2.', 'note', 'zeus', 'ensures', 'patch', 'do', 'within', 'basic', 'block', 'ensure', 'clone', 'function', 'call', ',', 'invocation', 'call', 'also', 'make', '.', ',', 'also', 'assert', 'false', 'call', 'code', '.', 'verifier', 'find', 'path', 'lead', 'assert', ',', 'indicates', 'bug', '.', 'somebody', 'please', 'help', 'understand', '.', 'zulfi', '.']","[[('reading', 'NN')], [('detection', 'NN')], [('function', 'NN')], [('reentrancy', 'NN')], [('zeus', 'NN')], [('discussed', 'VBN')], [('\\', 'NN')], [('[', 'NN')], [('[', 'NN')], [('zeus', 'NN')], [(':', ':')], [('reentrancy', 'NN')], [('detection', 'NN')], [(']', 'NN')], [('(', '(')], [('/~joel.reardon/blockchain/readings/ndss2018_09-1_kalra_paper.pdf', 'NN')], [(')', ')')], [('\\', 'NN')], [(']', 'NN')], [('.', '.')], [('done', 'VBN')], [('cloning', 'VBG')], [('.', '.')], [('understand', 'NN')], [('method', 'NN')], [('.', '.')], [('valid', 'JJ')], [('method', 'NN')], [('testing', 'VBG')], [('sc', 'NN')], [('modifying', 'VBG')], [('sc', 'NN')], [('.', '.')], [('modify', 'NN')], [('sc', 'NN')], [('testing', 'VBG')], [('?', '.')], [('paper', 'NN')], [('says', 'VBZ')], [(':', ':')], [('reentrancy', 'NN')], [('solidity', 'NN')], [('happen', 'VB')], [('via', 'IN')], [('call', 'NN')], [('method', 'NN')], [('.', '.')], [('send', 'NN')], [('invokes', 'NNS')], [('default', 'NN')], [('function', 'NN')], [('limited', 'JJ')], [('gas', 'NN')], [('logging', 'VBG')], [('purposes', 'NNS')], [('.', '.')], [('zeus', 'NN')], [('handles', 'NNS')], [('same-function', 'NN')], [('reentrancy', 'NN')], [('first', 'RB')], [('cloning', 'VBG')], [('function', 'NN')], [('consideration', 'NN')], [(',', ',')], [('inserting', 'VBG')], [('call', 'NN')], [('clone', 'NN')], [('invocation', 'NN')], [('call', 'NN')], [('.', '.')], [('fig', 'NN')], [('.', '.')], [('14', 'CD')], [('shows', 'NNS')], [('patched', 'VBN')], [('function', 'NN')], [('example', 'NN')], [('fig', 'NN')], [('.', '.')], [('2.', 'CD')], [('note', 'NN')], [('zeus', 'NN')], [('ensures', 'NNS')], [('patch', 'NN')], [('done', 'VBN')], [('within', 'IN')], [('basic', 'JJ')], [('block', 'NN')], [('ensure', 'VB')], [('cloned', 'VBN')], [('function', 'NN')], [('called', 'VBN')], [(',', ',')], [('invocation', 'NN')], [('call', 'NN')], [('also', 'RB')], [('made', 'VBN')], [('.', '.')], [(',', ',')], [('also', 'RB')], [('assert', 'NN')], [('false', 'JJ')], [('call', 'NN')], [('code', 'NN')], [('.', '.')], [('verifier', 'NN')], [('finds', 'NNS')], [('path', 'NN')], [('leading', 'VBG')], [('assert', 'NN')], [(',', ',')], [('indicates', 'NNS')], [('bug', 'NN')], [('.', '.')], [('somebody', 'NN')], [('please', 'NN')], [('help', 'NN')], [('understand', 'NN')], [('.', '.')], [('zulfi', 'NN')], [('.', '.')]]","reading detection function reentrancy zeus discuss \ [ [ zeus : reentrancy detection ] ( /~joel.reardon/blockchain/readings/ndss2018_09-1_kalra_paper.pdf ) \ ] . do clone . understand method . valid method test sc modify sc . modify sc test ? paper say : reentrancy solidity happen via call method . send invokes default function limited gas log purpose . zeus handle same-function reentrancy first clone function consideration , insert call clone invocation call . fig . 14 show patch function example fig . 2. note zeus ensures patch do within basic block ensure clone function call , invocation call also make . , also assert false call code . verifier find path lead assert , indicates bug . somebody please help understand . zulfi .",-1_abazbz2abz_2520_problem_use,1
327,rj8mre,How do structs work internally?,Help,67,0.93,computerscience,https://www.reddit.com/r/computerscience/comments/rj8mre/how_do_structs_work_internally/,35,"how do structs work internally in memory. i know that an instance of a struct is a pointer to the first field of the struct. i also know that all the fields of a struct are contiguous to each other in memory so the memory address of the second field of a struct can be accessed by adding the size of the first field to the memory address address of the first field.

i am failing to understand that how do we access the consequent fields of a struct with just the memory address of the first field. we can do it in arrays by jumping x bits ahead according to the data type of the array, we can only do this in arrays because the values in a certain array have the same data type. my question is that how do we navigate through the fields of a struct by only knowing the memory address of the first field of the struct.

thanks!",1639837811.0,"['structs', 'work', 'internally', 'memory', '.', 'know', 'instance', 'struct', 'pointer', 'first', 'field', 'struct', '.', 'also', 'know', 'field', 'struct', 'contiguous', 'memory', 'memory', 'address', 'second', 'field', 'struct', 'access', 'add', 'size', 'first', 'field', 'memory', 'address', 'address', 'first', 'field', '.', 'fail', 'understand', 'access', 'consequent', 'field', 'struct', 'memory', 'address', 'first', 'field', '.', 'array', 'jumping', 'x', 'bit', 'ahead', 'accord', 'data', 'type', 'array', ',', 'array', 'value', 'certain', 'array', 'data', 'type', '.', 'question', 'navigate', 'field', 'struct', 'know', 'memory', 'address', 'first', 'field', 'struct', '.', 'thanks', '!']","[[('structs', 'NNS')], [('work', 'NN')], [('internally', 'RB')], [('memory', 'NN')], [('.', '.')], [('know', 'VB')], [('instance', 'NN')], [('struct', 'NN')], [('pointer', 'NN')], [('first', 'RB')], [('field', 'NN')], [('struct', 'NN')], [('.', '.')], [('also', 'RB')], [('know', 'VB')], [('fields', 'NNS')], [('struct', 'NN')], [('contiguous', 'JJ')], [('memory', 'NN')], [('memory', 'NN')], [('address', 'NN')], [('second', 'JJ')], [('field', 'NN')], [('struct', 'NN')], [('accessed', 'VBN')], [('adding', 'VBG')], [('size', 'NN')], [('first', 'RB')], [('field', 'NN')], [('memory', 'NN')], [('address', 'NN')], [('address', 'NN')], [('first', 'RB')], [('field', 'NN')], [('.', '.')], [('failing', 'VBG')], [('understand', 'NN')], [('access', 'NN')], [('consequent', 'NN')], [('fields', 'NNS')], [('struct', 'NN')], [('memory', 'NN')], [('address', 'NN')], [('first', 'RB')], [('field', 'NN')], [('.', '.')], [('arrays', 'NNS')], [('jumping', 'NN')], [('x', 'NN')], [('bits', 'NNS')], [('ahead', 'RB')], [('according', 'VBG')], [('data', 'NNS')], [('type', 'NN')], [('array', 'NN')], [(',', ',')], [('arrays', 'NNS')], [('values', 'NNS')], [('certain', 'JJ')], [('array', 'NN')], [('data', 'NNS')], [('type', 'NN')], [('.', '.')], [('question', 'NN')], [('navigate', 'NN')], [('fields', 'NNS')], [('struct', 'NN')], [('knowing', 'VBG')], [('memory', 'NN')], [('address', 'NN')], [('first', 'RB')], [('field', 'NN')], [('struct', 'NN')], [('.', '.')], [('thanks', 'NNS')], [('!', '.')]]","structs work internally memory . know instance struct pointer first field struct . also know field struct contiguous memory memory address second field struct access add size first field memory address address first field . fail understand access consequent field struct memory address first field . array jumping x bit ahead accord data type array , array value certain array data type . question navigate field struct know memory address first field struct . thanks !",1_memory_byte_data_alignment,4
328,rj7x0t,Can someone explain how I would calculate the Big-Theta notation for this bit of code please? (Python),,8,0.75,computerscience,https://www.reddit.com/r/computerscience/comments/rj7x0t/can_someone_explain_how_i_would_calculate_the/,7,"    specifieditem = 'item6'
    lists = [['item1', 'item2'],
                  ['item3', 'item4'],
                  ['item5', 'item6']]
    
    wasitemfound = false
    
    for list in lists:
            for item in list:
                if item == specifieditem:
                    freefromingredient = true
                    break

please do not just give me the answer, if you could explain how i would calculate it that would be great! thanks :)",1639835496.0,"['specifieditem', '=', ""'item6'"", 'list', '=', '[', '[', ""'item1"", ""'"", ',', ""'item2"", ""'"", ']', ',', '[', ""'item3"", ""'"", ',', ""'item4"", ""'"", ']', ',', '[', ""'item5"", ""'"", ',', ""'item6"", ""'"", ']', ']', 'wasitemfound', '=', 'false', 'list', 'list', ':', 'item', 'list', ':', 'item', '==', 'specifieditem', ':', 'freefromingredient', '=', 'true', 'break', 'please', 'give', 'answer', ',', 'could', 'explain', 'would', 'calculate', 'would', 'great', '!', 'thanks', ':', ')']","[[('specifieditem', 'NN')], [('=', 'NN')], [(""'item6'"", 'NNS')], [('lists', 'NNS')], [('=', 'NN')], [('[', 'NN')], [('[', 'NN')], [(""'item1"", 'NNS')], [(""'"", ""''"")], [(',', ',')], [(""'item2"", 'NNS')], [(""'"", ""''"")], [(']', 'NN')], [(',', ',')], [('[', 'NN')], [(""'item3"", 'NNS')], [(""'"", ""''"")], [(',', ',')], [(""'item4"", 'NNS')], [(""'"", ""''"")], [(']', 'NN')], [(',', ',')], [('[', 'NN')], [(""'item5"", 'NNS')], [(""'"", ""''"")], [(',', ',')], [(""'item6"", 'NNS')], [(""'"", ""''"")], [(']', 'NN')], [(']', 'NN')], [('wasitemfound', 'NN')], [('=', 'NN')], [('false', 'JJ')], [('list', 'NN')], [('lists', 'NNS')], [(':', ':')], [('item', 'NN')], [('list', 'NN')], [(':', ':')], [('item', 'NN')], [('==', 'NN')], [('specifieditem', 'NN')], [(':', ':')], [('freefromingredient', 'NN')], [('=', 'NN')], [('true', 'JJ')], [('break', 'NN')], [('please', 'NN')], [('give', 'VB')], [('answer', 'NN')], [(',', ',')], [('could', 'MD')], [('explain', 'NN')], [('would', 'MD')], [('calculate', 'NN')], [('would', 'MD')], [('great', 'JJ')], [('!', '.')], [('thanks', 'NNS')], [(':', ':')], [(')', ')')]]","specifieditem = 'item6' list = [ [ 'item1 ' , 'item2 ' ] , [ 'item3 ' , 'item4 ' ] , [ 'item5 ' , 'item6 ' ] ] wasitemfound = false list list : item list : item == specifieditem : freefromingredient = true break please give answer , could explain would calculate would great ! thanks : )",0_algorithm_time_node_bill,1
330,risxvd,Uptime difference between servers and computers?,,24,0.85,computerscience,https://www.reddit.com/r/computerscience/comments/risxvd/uptime_difference_between_servers_and_computers/,13,"i was curious about the differences in how we treat servers and computers. so for example, if my computer is on for several weeks, it starts to get slow and weird things start happening until i eventually shut down or restart and it comes back up peforming normally. why is it that servers can stay up for months or even years and not experience the same flakeyness as regular computers. i imagine it has some to do with the os and some to do with the hardware, but wanted to see if anyone could enlighten me. thank you.",1639781308.0,"['curious', 'difference', 'treat', 'server', 'computer', '.', 'example', ',', 'computer', 'several', 'week', ',', 'start', 'get', 'slow', 'weird', 'thing', 'start', 'happen', 'eventually', 'shut', 'restart', 'come', 'back', 'peforming', 'normally', '.', 'server', 'stay', 'month', 'even', 'year', 'experience', 'flakeyness', 'regular', 'computer', '.', 'imagine', 'o', 'hardware', ',', 'want', 'see', 'anyone', 'could', 'enlighten', '.', 'thank', '.']","[[('curious', 'JJ')], [('differences', 'NNS')], [('treat', 'NN')], [('servers', 'NNS')], [('computers', 'NNS')], [('.', '.')], [('example', 'NN')], [(',', ',')], [('computer', 'NN')], [('several', 'JJ')], [('weeks', 'NNS')], [(',', ',')], [('starts', 'NNS')], [('get', 'VB')], [('slow', 'VB')], [('weird', 'NN')], [('things', 'NNS')], [('start', 'NN')], [('happening', 'VBG')], [('eventually', 'RB')], [('shut', 'NN')], [('restart', 'NN')], [('comes', 'VBZ')], [('back', 'RB')], [('peforming', 'VBG')], [('normally', 'RB')], [('.', '.')], [('servers', 'NNS')], [('stay', 'NN')], [('months', 'NNS')], [('even', 'RB')], [('years', 'NNS')], [('experience', 'NN')], [('flakeyness', 'NN')], [('regular', 'JJ')], [('computers', 'NNS')], [('.', '.')], [('imagine', 'NN')], [('os', 'NN')], [('hardware', 'NN')], [(',', ',')], [('wanted', 'VBD')], [('see', 'VB')], [('anyone', 'NN')], [('could', 'MD')], [('enlighten', 'VB')], [('.', '.')], [('thank', 'NN')], [('.', '.')]]","curious difference treat server computer . example , computer several week , start get slow weird thing start happen eventually shut restart come back peforming normally . server stay month even year experience flakeyness regular computer . imagine o hardware , want see anyone could enlighten . thank .",5_cpu_computer_run_process,2
331,rinkr5,How far can a one terabyte file be compressed?,Help,27,0.7,computerscience,https://www.reddit.com/r/computerscience/comments/rinkr5/how_far_can_a_one_terabyte_file_be_compressed/,36,"does anyone know how far a one terabyte file can be compressed? what is the limit of today’s technology compared to 2000 and 2010? regarding the compression of a file. 

if one terabyte holds 1,000,000,000,000 bytes, what is the utmost limit of compression?

if data loss will occur, tell me the limit for both. with and without data loss.

edit: let us say the data is an entire computer full of word files, photos, and videos. i know it is basically impossible to state an exact amount of word files, photos, and videos, however, i am stating an example. one terabyte of your entire computer. going off the assumption that your computer is exactly one terabyte of data.

edit 2: if someone has an exact example, let me know. for example, your own computer. how much would you be capable of compressing? let me know the beginning size and then the compressed size.",1639765489.0,"['anyone', 'know', 'far', 'one', 'terabyte', 'file', 'compress', '?', 'limit', 'today', '’', 'technology', 'compare', '2000', '2010', '?', 'regard', 'compression', 'file', '.', 'one', 'terabyte', 'hold', '1,000,000,000,000', 'byte', ',', 'utmost', 'limit', 'compression', '?', 'data', 'loss', 'occur', ',', 'tell', 'limit', '.', 'without', 'data', 'loss', '.', 'edit', ':', 'let', 'u', 'say', 'data', 'entire', 'computer', 'full', 'word', 'file', ',', 'photo', ',', 'video', '.', 'know', 'basically', 'impossible', 'state', 'exact', 'amount', 'word', 'file', ',', 'photo', ',', 'video', ',', 'however', ',', 'state', 'example', '.', 'one', 'terabyte', 'entire', 'computer', '.', 'go', 'assumption', 'computer', 'exactly', 'one', 'terabyte', 'data', '.', 'edit', '2', ':', 'someone', 'exact', 'example', ',', 'let', 'know', '.', 'example', ',', 'computer', '.', 'much', 'would', 'capable', 'compress', '?', 'let', 'know', 'begin', 'size', 'compress', 'size', '.']","[[('anyone', 'NN')], [('know', 'VB')], [('far', 'RB')], [('one', 'CD')], [('terabyte', 'NN')], [('file', 'NN')], [('compressed', 'VBN')], [('?', '.')], [('limit', 'NN')], [('today', 'NN')], [('’', 'NN')], [('technology', 'NN')], [('compared', 'VBN')], [('2000', 'CD')], [('2010', 'CD')], [('?', '.')], [('regarding', 'VBG')], [('compression', 'NN')], [('file', 'NN')], [('.', '.')], [('one', 'CD')], [('terabyte', 'NN')], [('holds', 'VBZ')], [('1,000,000,000,000', 'CD')], [('bytes', 'NNS')], [(',', ',')], [('utmost', 'NN')], [('limit', 'NN')], [('compression', 'NN')], [('?', '.')], [('data', 'NNS')], [('loss', 'NN')], [('occur', 'NN')], [(',', ',')], [('tell', 'NN')], [('limit', 'NN')], [('.', '.')], [('without', 'IN')], [('data', 'NNS')], [('loss', 'NN')], [('.', '.')], [('edit', 'NN')], [(':', ':')], [('let', 'VB')], [('us', 'PRP')], [('say', 'VB')], [('data', 'NNS')], [('entire', 'JJ')], [('computer', 'NN')], [('full', 'JJ')], [('word', 'NN')], [('files', 'NNS')], [(',', ',')], [('photos', 'NNS')], [(',', ',')], [('videos', 'NNS')], [('.', '.')], [('know', 'VB')], [('basically', 'RB')], [('impossible', 'JJ')], [('state', 'NN')], [('exact', 'NN')], [('amount', 'NN')], [('word', 'NN')], [('files', 'NNS')], [(',', ',')], [('photos', 'NNS')], [(',', ',')], [('videos', 'NNS')], [(',', ',')], [('however', 'RB')], [(',', ',')], [('stating', 'VBG')], [('example', 'NN')], [('.', '.')], [('one', 'CD')], [('terabyte', 'NN')], [('entire', 'JJ')], [('computer', 'NN')], [('.', '.')], [('going', 'VBG')], [('assumption', 'NN')], [('computer', 'NN')], [('exactly', 'RB')], [('one', 'CD')], [('terabyte', 'NN')], [('data', 'NNS')], [('.', '.')], [('edit', 'NN')], [('2', 'CD')], [(':', ':')], [('someone', 'NN')], [('exact', 'NN')], [('example', 'NN')], [(',', ',')], [('let', 'VB')], [('know', 'VB')], [('.', '.')], [('example', 'NN')], [(',', ',')], [('computer', 'NN')], [('.', '.')], [('much', 'JJ')], [('would', 'MD')], [('capable', 'JJ')], [('compressing', 'VBG')], [('?', '.')], [('let', 'VB')], [('know', 'VB')], [('beginning', 'VBG')], [('size', 'NN')], [('compressed', 'VBN')], [('size', 'NN')], [('.', '.')]]","anyone know far one terabyte file compress ? limit today ’ technology compare 2000 2010 ? regard compression file . one terabyte hold 1,000,000,000,000 byte , utmost limit compression ? data loss occur , tell limit . without data loss . edit : let u say data entire computer full word file , photo , video . know basically impossible state exact amount word file , photo , video , however , state example . one terabyte entire computer . go assumption computer exactly one terabyte data . edit 2 : someone exact example , let know . example , computer . much would capable compress ? let know begin size compress size .",1_memory_byte_data_alignment,1
332,rihkz0,Software Architecture Readings,,30,0.96,computerscience,https://www.reddit.com/r/computerscience/comments/rihkz0/software_architecture_readings/,7,"hey all, i am looking for some software architecture design books or websites that can help me devlop and understand large and scalable projects. it is difficult trying to find readings that are not aimed at newbies. really just looking to advance my skills. java is my primary language if it matters.",1639748149.0,"['hey', ',', 'look', 'software', 'architecture', 'design', 'book', 'website', 'help', 'devlop', 'understand', 'large', 'scalable', 'project', '.', 'difficult', 'try', 'find', 'reading', 'aim', 'newbie', '.', 'really', 'look', 'advance', 'skill', '.', 'java', 'primary', 'language', 'matter', '.']","[[('hey', 'NN')], [(',', ',')], [('looking', 'VBG')], [('software', 'NN')], [('architecture', 'NN')], [('design', 'NN')], [('books', 'NNS')], [('websites', 'NNS')], [('help', 'NN')], [('devlop', 'NN')], [('understand', 'NN')], [('large', 'JJ')], [('scalable', 'JJ')], [('projects', 'NNS')], [('.', '.')], [('difficult', 'JJ')], [('trying', 'VBG')], [('find', 'VB')], [('readings', 'NNS')], [('aimed', 'VBN')], [('newbies', 'NNS')], [('.', '.')], [('really', 'RB')], [('looking', 'VBG')], [('advance', 'NN')], [('skills', 'NNS')], [('.', '.')], [('java', 'NN')], [('primary', 'NN')], [('language', 'NN')], [('matters', 'NNS')], [('.', '.')]]","hey , look software architecture design book website help devlop understand large scalable project . difficult try find reading aim newbie . really look advance skill . java primary language matter .",3_search_ai_think_google,4
333,rip3jw,Question: Alan Turing’s approach to decidability problem,Discussion,3,0.71,computerscience,https://www.reddit.com/r/computerscience/comments/rip3jw/question_alan_turings_approach_to_decidability/,7,"a question: alan turing’s approach to decidability problem(can we know beforehand if certain numbers and theorems are calculable and provable) was that if there existed a decidable program d that takes another program as input and decides if it will finish, we can encode the program itself and there should exist a decidability program that decides on the program d. so is decidability decidable. well now my question is cannot the answer be yes. that would make an infinite chain of decidability programs but that does not mean it is logically incoherent as suggested by the analogy used that this problem reduces to logical problem that arise from:“this statement is false”.why is the answer no?",1639769913.0,"['question', ':', 'alan', 'turing', '’', 'approach', 'decidability', 'problem', '(', 'know', 'beforehand', 'certain', 'number', 'theorem', 'calculable', 'provable', ')', 'exist', 'decidable', 'program', 'take', 'another', 'program', 'input', 'decides', 'finish', ',', 'encode', 'program', 'exist', 'decidability', 'program', 'decides', 'program', 'd.', 'decidability', 'decidable', '.', 'well', 'question', 'answer', 'yes', '.', 'would', 'make', 'infinite', 'chain', 'decidability', 'program', 'mean', 'logically', 'incoherent', 'suggest', 'analogy', 'use', 'problem', 'reduces', 'logical', 'problem', 'arise', ':', '“', 'statement', 'false', '”', '.why', 'answer', '?']","[[('question', 'NN')], [(':', ':')], [('alan', 'NN')], [('turing', 'VBG')], [('’', 'NN')], [('approach', 'NN')], [('decidability', 'NN')], [('problem', 'NN')], [('(', '(')], [('know', 'VB')], [('beforehand', 'NN')], [('certain', 'JJ')], [('numbers', 'NNS')], [('theorems', 'NNS')], [('calculable', 'JJ')], [('provable', 'JJ')], [(')', ')')], [('existed', 'VBN')], [('decidable', 'JJ')], [('program', 'NN')], [('takes', 'VBZ')], [('another', 'DT')], [('program', 'NN')], [('input', 'NN')], [('decides', 'NNS')], [('finish', 'NN')], [(',', ',')], [('encode', 'NN')], [('program', 'NN')], [('exist', 'NN')], [('decidability', 'NN')], [('program', 'NN')], [('decides', 'NNS')], [('program', 'NN')], [('d.', 'NN')], [('decidability', 'NN')], [('decidable', 'JJ')], [('.', '.')], [('well', 'RB')], [('question', 'NN')], [('answer', 'NN')], [('yes', 'NNS')], [('.', '.')], [('would', 'MD')], [('make', 'VB')], [('infinite', 'NN')], [('chain', 'NN')], [('decidability', 'NN')], [('programs', 'NNS')], [('mean', 'NN')], [('logically', 'RB')], [('incoherent', 'NN')], [('suggested', 'VBN')], [('analogy', 'NN')], [('used', 'VBN')], [('problem', 'NN')], [('reduces', 'NNS')], [('logical', 'JJ')], [('problem', 'NN')], [('arise', 'NN')], [(':', ':')], [('“', 'NN')], [('statement', 'NN')], [('false', 'JJ')], [('”', 'NN')], [('.why', 'NN')], [('answer', 'NN')], [('?', '.')]]","question : alan turing ’ approach decidability problem ( know beforehand certain number theorem calculable provable ) exist decidable program take another program input decides finish , encode program exist decidability program decides program d. decidability decidable . well question answer yes . would make infinite chain decidability program mean logically incoherent suggest analogy use problem reduces logical problem arise : “ statement false ” .why answer ?",-1_abazbz2abz_2520_problem_use,2
334,ri2yda,Question about a possible attack on WEP,,40,0.94,computerscience,https://www.reddit.com/r/computerscience/comments/ri2yda/question_about_a_possible_attack_on_wep/,10,"hello everyone, i am learning about the wired equivalent privacy (wep) protocol. i thought about a possible attack and wanted to know if it is possible:

an adversary intercepts a packet/frame that has the initialisation vector (in plaintext) and the ciphertext. they then replace the ciphertext with some other data, and send it to the intended recipient.

is it possible to perform this attack without the recipient detecting that this has happened and without finding the value of the secret shared key? 

thanks in advance!",1639696553.0,"['hello', 'everyone', ',', 'learn', 'wire', 'equivalent', 'privacy', '(', 'wep', ')', 'protocol', '.', 'thought', 'possible', 'attack', 'want', 'know', 'possible', ':', 'adversary', 'intercept', 'packet/frame', 'initialisation', 'vector', '(', 'plaintext', ')', 'ciphertext', '.', 'replace', 'ciphertext', 'data', ',', 'send', 'intend', 'recipient', '.', 'possible', 'perform', 'attack', 'without', 'recipient', 'detect', 'happen', 'without', 'find', 'value', 'secret', 'share', 'key', '?', 'thanks', 'advance', '!']","[[('hello', 'NN')], [('everyone', 'NN')], [(',', ',')], [('learning', 'VBG')], [('wired', 'VBD')], [('equivalent', 'NN')], [('privacy', 'NN')], [('(', '(')], [('wep', 'NN')], [(')', ')')], [('protocol', 'NN')], [('.', '.')], [('thought', 'NN')], [('possible', 'JJ')], [('attack', 'NN')], [('wanted', 'VBD')], [('know', 'VB')], [('possible', 'JJ')], [(':', ':')], [('adversary', 'NN')], [('intercepts', 'NNS')], [('packet/frame', 'NN')], [('initialisation', 'NN')], [('vector', 'NN')], [('(', '(')], [('plaintext', 'NN')], [(')', ')')], [('ciphertext', 'NN')], [('.', '.')], [('replace', 'VB')], [('ciphertext', 'NN')], [('data', 'NNS')], [(',', ',')], [('send', 'NN')], [('intended', 'VBN')], [('recipient', 'NN')], [('.', '.')], [('possible', 'JJ')], [('perform', 'NN')], [('attack', 'NN')], [('without', 'IN')], [('recipient', 'NN')], [('detecting', 'VBG')], [('happened', 'VBD')], [('without', 'IN')], [('finding', 'VBG')], [('value', 'NN')], [('secret', 'NN')], [('shared', 'VBN')], [('key', 'NN')], [('?', '.')], [('thanks', 'NNS')], [('advance', 'NN')], [('!', '.')]]","hello everyone , learn wire equivalent privacy ( wep ) protocol . thought possible attack want know possible : adversary intercept packet/frame initialisation vector ( plaintext ) ciphertext . replace ciphertext data , send intend recipient . possible perform attack without recipient detect happen without find value secret share key ? thanks advance !",6_server_packet_key_hash,1
336,ri6duj,Question about the time complexity of a specific algorithm,Help,1,0.67,computerscience,https://www.reddit.com/r/computerscience/comments/ri6duj/question_about_the_time_complexity_of_a_specific/,3,"i was watching a youtube video about coding interviews and after looking in the comments, someone was claiming that [this]() algorithm had a time complexity of o(n) where n is the size of the array.

i have more of a technical background rather than a cs one so this is my thinking when approaching this:

because he is taking each integer in the array and brute force testing it against all other integers in that array and then moving onto the next integer if there is no match, the algorithm will take exponentially more time as the array size increases and therefore has a time complexity of o(n^2).

for example, an array with 2 integers will have 4 (2^2) total pairs: 00, 01, 10, 11,

while an array with 4 integers will have 16 (4^2) pairs: 0000, 0001, 0010, 0011, 0100, 0101, 0110, 0111, 1000, 1001, 1010, 1011, 1100, 1101, 1110, 1111

so which one is it? o(n) or o(n^2)?",1639706958.0,"['watch', 'youtube', 'video', 'cod', 'interview', 'look', 'comment', ',', 'someone', 'claim', '[', ']', '(', ')', 'algorithm', 'time', 'complexity', '(', 'n', ')', 'n', 'size', 'array', '.', 'technical', 'background', 'rather', 'c', 'one', 'think', 'approach', ':', 'take', 'integer', 'array', 'brute', 'force', 'test', 'integer', 'array', 'move', 'onto', 'next', 'integer', 'match', ',', 'algorithm', 'take', 'exponentially', 'time', 'array', 'size', 'increase', 'therefore', 'time', 'complexity', '(', 'n^2', ')', '.', 'example', ',', 'array', '2', 'integer', '4', '(', '2^2', ')', 'total', 'pair', ':', '00', ',', '01', ',', '10', ',', '11', ',', 'array', '4', 'integer', '16', '(', '4^2', ')', 'pair', ':', '0000', ',', '0001', ',', '0010', ',', '0011', ',', '0100', ',', '0101', ',', '0110', ',', '0111', ',', '1000', ',', '1001', ',', '1010', ',', '1011', ',', '1100', ',', '1101', ',', '1110', ',', '1111', 'one', '?', '(', 'n', ')', '(', 'n^2', ')', '?']","[[('watching', 'VBG')], [('youtube', 'NN')], [('video', 'NN')], [('coding', 'VBG')], [('interviews', 'NNS')], [('looking', 'VBG')], [('comments', 'NNS')], [(',', ',')], [('someone', 'NN')], [('claiming', 'VBG')], [('[', 'NN')], [(']', 'NN')], [('(', '(')], [(')', ')')], [('algorithm', 'NN')], [('time', 'NN')], [('complexity', 'NN')], [('(', '(')], [('n', 'NN')], [(')', ')')], [('n', 'NN')], [('size', 'NN')], [('array', 'NN')], [('.', '.')], [('technical', 'JJ')], [('background', 'NN')], [('rather', 'RB')], [('cs', 'NN')], [('one', 'CD')], [('thinking', 'VBG')], [('approaching', 'VBG')], [(':', ':')], [('taking', 'VBG')], [('integer', 'NN')], [('array', 'NN')], [('brute', 'NN')], [('force', 'NN')], [('testing', 'VBG')], [('integers', 'NNS')], [('array', 'NN')], [('moving', 'VBG')], [('onto', 'IN')], [('next', 'JJ')], [('integer', 'NN')], [('match', 'NN')], [(',', ',')], [('algorithm', 'NN')], [('take', 'VB')], [('exponentially', 'RB')], [('time', 'NN')], [('array', 'NN')], [('size', 'NN')], [('increases', 'NNS')], [('therefore', 'RB')], [('time', 'NN')], [('complexity', 'NN')], [('(', '(')], [('n^2', 'NN')], [(')', ')')], [('.', '.')], [('example', 'NN')], [(',', ',')], [('array', 'NN')], [('2', 'CD')], [('integers', 'NNS')], [('4', 'CD')], [('(', '(')], [('2^2', 'CD')], [(')', ')')], [('total', 'JJ')], [('pairs', 'NNS')], [(':', ':')], [('00', 'CD')], [(',', ',')], [('01', 'CD')], [(',', ',')], [('10', 'CD')], [(',', ',')], [('11', 'CD')], [(',', ',')], [('array', 'NN')], [('4', 'CD')], [('integers', 'NNS')], [('16', 'CD')], [('(', '(')], [('4^2', 'CD')], [(')', ')')], [('pairs', 'NNS')], [(':', ':')], [('0000', 'CD')], [(',', ',')], [('0001', 'CD')], [(',', ',')], [('0010', 'CD')], [(',', ',')], [('0011', 'CD')], [(',', ',')], [('0100', 'CD')], [(',', ',')], [('0101', 'CD')], [(',', ',')], [('0110', 'CD')], [(',', ',')], [('0111', 'CD')], [(',', ',')], [('1000', 'CD')], [(',', ',')], [('1001', 'CD')], [(',', ',')], [('1010', 'CD')], [(',', ',')], [('1011', 'CD')], [(',', ',')], [('1100', 'CD')], [(',', ',')], [('1101', 'CD')], [(',', ',')], [('1110', 'CD')], [(',', ',')], [('1111', 'CD')], [('one', 'CD')], [('?', '.')], [('(', '(')], [('n', 'NN')], [(')', ')')], [('(', '(')], [('n^2', 'NN')], [(')', ')')], [('?', '.')]]","watch youtube video cod interview look comment , someone claim [ ] ( ) algorithm time complexity ( n ) n size array . technical background rather c one think approach : take integer array brute force test integer array move onto next integer match , algorithm take exponentially time array size increase therefore time complexity ( n^2 ) . example , array 2 integer 4 ( 2^2 ) total pair : 00 , 01 , 10 , 11 , array 4 integer 16 ( 4^2 ) pair : 0000 , 0001 , 0010 , 0011 , 0100 , 0101 , 0110 , 0111 , 1000 , 1001 , 1010 , 1011 , 1100 , 1101 , 1110 , 1111 one ? ( n ) ( n^2 ) ?",0_algorithm_time_node_bill,3
337,rhll1c,"If a text message held 64 characters, would that equal 64 bytes?",Help,24,0.84,computerscience,https://www.reddit.com/r/computerscience/comments/rhll1c/if_a_text_message_held_64_characters_would_that/,28,"i am not sure if this is the right place to ask, however, i am going to ask anyways. i am pretty sure one byte equals eight bits. if that is correct, am i correct in assuming that one byte equals one character? are all characters the same amount of bytes? like, numbers and letters. example being; 7 compared to h. they would both equal one byte? separately, of course. not together. 

also, is a space considered a character byte? 

lastly, is there a difference between a email message versus a text message? pertaining to byte size per character. 

if this is not the right place for this question, could someone point me to the correct area? if this is the right area, mind answering these questions?",1639639943.0,"['sure', 'right', 'place', 'ask', ',', 'however', ',', 'go', 'ask', 'anyways', '.', 'pretty', 'sure', 'one', 'byte', 'equal', 'eight', 'bit', '.', 'correct', ',', 'correct', 'assume', 'one', 'byte', 'equal', 'one', 'character', '?', 'character', 'amount', 'byte', '?', 'like', ',', 'number', 'letter', '.', 'example', ';', '7', 'compare', 'h.', 'would', 'equal', 'one', 'byte', '?', 'separately', ',', 'course', '.', 'together', '.', 'also', ',', 'space', 'consider', 'character', 'byte', '?', 'lastly', ',', 'difference', 'email', 'message', 'versus', 'text', 'message', '?', 'pertain', 'byte', 'size', 'per', 'character', '.', 'right', 'place', 'question', ',', 'could', 'someone', 'point', 'correct', 'area', '?', 'right', 'area', ',', 'mind', 'answer', 'question', '?']","[[('sure', 'NN')], [('right', 'NN')], [('place', 'NN')], [('ask', 'NN')], [(',', ',')], [('however', 'RB')], [(',', ',')], [('going', 'VBG')], [('ask', 'NN')], [('anyways', 'NNS')], [('.', '.')], [('pretty', 'RB')], [('sure', 'NN')], [('one', 'CD')], [('byte', 'NN')], [('equals', 'NNS')], [('eight', 'CD')], [('bits', 'NNS')], [('.', '.')], [('correct', 'NN')], [(',', ',')], [('correct', 'NN')], [('assuming', 'VBG')], [('one', 'CD')], [('byte', 'NN')], [('equals', 'NNS')], [('one', 'CD')], [('character', 'NN')], [('?', '.')], [('characters', 'NNS')], [('amount', 'NN')], [('bytes', 'NNS')], [('?', '.')], [('like', 'IN')], [(',', ',')], [('numbers', 'NNS')], [('letters', 'NNS')], [('.', '.')], [('example', 'NN')], [(';', ':')], [('7', 'CD')], [('compared', 'VBN')], [('h.', 'NN')], [('would', 'MD')], [('equal', 'JJ')], [('one', 'CD')], [('byte', 'NN')], [('?', '.')], [('separately', 'RB')], [(',', ',')], [('course', 'NN')], [('.', '.')], [('together', 'RB')], [('.', '.')], [('also', 'RB')], [(',', ',')], [('space', 'NN')], [('considered', 'VBN')], [('character', 'NN')], [('byte', 'NN')], [('?', '.')], [('lastly', 'RB')], [(',', ',')], [('difference', 'NN')], [('email', 'NN')], [('message', 'NN')], [('versus', 'NN')], [('text', 'NN')], [('message', 'NN')], [('?', '.')], [('pertaining', 'VBG')], [('byte', 'NN')], [('size', 'NN')], [('per', 'IN')], [('character', 'NN')], [('.', '.')], [('right', 'NN')], [('place', 'NN')], [('question', 'NN')], [(',', ',')], [('could', 'MD')], [('someone', 'NN')], [('point', 'NN')], [('correct', 'NN')], [('area', 'NN')], [('?', '.')], [('right', 'NN')], [('area', 'NN')], [(',', ',')], [('mind', 'NN')], [('answering', 'VBG')], [('questions', 'NNS')], [('?', '.')]]","sure right place ask , however , go ask anyways . pretty sure one byte equal eight bit . correct , correct assume one byte equal one character ? character amount byte ? like , number letter . example ; 7 compare h. would equal one byte ? separately , course . together . also , space consider character byte ? lastly , difference email message versus text message ? pertain byte size per character . right place question , could someone point correct area ? right area , mind answer question ?",1_memory_byte_data_alignment,3
339,rhhyf3,I have questions about the physical nature of files,Discussion,5,0.86,computerscience,https://www.reddit.com/r/computerscience/comments/rhhyf3/i_have_questions_about_the_physical_nature_of/,6,"will downloading files wear on a computer? 

the processes of downloading files, storing information, sending information, etc.

does the process destroy wires, chips the memory drive, etc?

does a file physically imprint itself in such a way that it can never be completely erased?

is there a field of study that relates to my specific interest?

thank you",1639627270.0,"['download', 'file', 'wear', 'computer', '?', 'process', 'download', 'file', ',', 'store', 'information', ',', 'send', 'information', ',', 'etc', '.', 'process', 'destroy', 'wire', ',', 'chip', 'memory', 'drive', ',', 'etc', '?', 'file', 'physically', 'imprint', 'way', 'never', 'completely', 'erase', '?', 'field', 'study', 'relates', 'specific', 'interest', '?', 'thank']","[[('downloading', 'VBG')], [('files', 'NNS')], [('wear', 'NN')], [('computer', 'NN')], [('?', '.')], [('processes', 'NNS')], [('downloading', 'VBG')], [('files', 'NNS')], [(',', ',')], [('storing', 'VBG')], [('information', 'NN')], [(',', ',')], [('sending', 'VBG')], [('information', 'NN')], [(',', ',')], [('etc', 'NN')], [('.', '.')], [('process', 'NN')], [('destroy', 'NN')], [('wires', 'NNS')], [(',', ',')], [('chips', 'NNS')], [('memory', 'NN')], [('drive', 'NN')], [(',', ',')], [('etc', 'NN')], [('?', '.')], [('file', 'NN')], [('physically', 'RB')], [('imprint', 'NN')], [('way', 'NN')], [('never', 'RB')], [('completely', 'RB')], [('erased', 'VBN')], [('?', '.')], [('field', 'NN')], [('study', 'NN')], [('relates', 'NNS')], [('specific', 'JJ')], [('interest', 'NN')], [('?', '.')], [('thank', 'NN')]]","download file wear computer ? process download file , store information , send information , etc . process destroy wire , chip memory drive , etc ? file physically imprint way never completely erase ? field study relates specific interest ? thank",-1_abazbz2abz_2520_problem_use,1
340,rhnc1k,[Discrete Maths] Surjective functions,Help,1,0.67,computerscience,https://www.reddit.com/r/computerscience/comments/rhnc1k/discrete_maths_surjective_functions/,3,"so if asked to prove that f(x) = y is surjective, we check if all the elements in the co-domain(y) have an element in the domain(x), so does this mean that we can have an element in x that does not map onto any value in y. i.e
for the domain {x1, x2, x3} and the codomain {y1, y2}

f(x1) > y1
f(x2) > y2
f(x3) > blank

is this surjective? since i have heard that when mapping, all elements in x are used, but when we check if a function is surjective we only use elements in y to check for x, so there might be some elements in x that do not map to y",1639647549.0,"['ask', 'prove', 'f', '(', 'x', ')', '=', 'surjective', ',', 'check', 'element', 'co-domain', '(', ')', 'element', 'domain', '(', 'x', ')', ',', 'mean', 'element', 'x', 'map', 'onto', 'value', 'y.', 'i.e', 'domain', '{', 'x1', ',', 'x2', ',', 'x3', '}', 'codomain', '{', 'y1', ',', 'y2', '}', 'f', '(', 'x1', ')', '>', 'y1', 'f', '(', 'x2', ')', '>', 'y2', 'f', '(', 'x3', ')', '>', 'blank', 'surjective', '?', 'since', 'heard', 'mapping', ',', 'element', 'x', 'use', ',', 'check', 'function', 'surjective', 'use', 'element', 'check', 'x', ',', 'might', 'element', 'x', 'map']","[[('asked', 'VBN')], [('prove', 'NN')], [('f', 'NN')], [('(', '(')], [('x', 'NN')], [(')', ')')], [('=', 'NN')], [('surjective', 'NN')], [(',', ',')], [('check', 'NN')], [('elements', 'NNS')], [('co-domain', 'NN')], [('(', '(')], [(')', ')')], [('element', 'NN')], [('domain', 'NN')], [('(', '(')], [('x', 'NN')], [(')', ')')], [(',', ',')], [('mean', 'NN')], [('element', 'NN')], [('x', 'NN')], [('map', 'NN')], [('onto', 'IN')], [('value', 'NN')], [('y.', 'NN')], [('i.e', 'NN')], [('domain', 'NN')], [('{', '(')], [('x1', 'NN')], [(',', ',')], [('x2', 'NN')], [(',', ',')], [('x3', 'NN')], [('}', ')')], [('codomain', 'NN')], [('{', '(')], [('y1', 'NN')], [(',', ',')], [('y2', 'NN')], [('}', ')')], [('f', 'NN')], [('(', '(')], [('x1', 'NN')], [(')', ')')], [('>', 'NN')], [('y1', 'NN')], [('f', 'NN')], [('(', '(')], [('x2', 'NN')], [(')', ')')], [('>', 'NN')], [('y2', 'NN')], [('f', 'NN')], [('(', '(')], [('x3', 'NN')], [(')', ')')], [('>', 'NN')], [('blank', 'NN')], [('surjective', 'NN')], [('?', '.')], [('since', 'IN')], [('heard', 'NN')], [('mapping', 'NN')], [(',', ',')], [('elements', 'NNS')], [('x', 'NN')], [('used', 'VBN')], [(',', ',')], [('check', 'NN')], [('function', 'NN')], [('surjective', 'NN')], [('use', 'NN')], [('elements', 'NNS')], [('check', 'NN')], [('x', 'NN')], [(',', ',')], [('might', 'MD')], [('elements', 'NNS')], [('x', 'NN')], [('map', 'NN')]]","ask prove f ( x ) = surjective , check element co-domain ( ) element domain ( x ) , mean element x map onto value y. i.e domain { x1 , x2 , x3 } codomain { y1 , y2 } f ( x1 ) > y1 f ( x2 ) > y2 f ( x3 ) > blank surjective ? since heard mapping , element x use , check function surjective use element check x , might element x map",-1_abazbz2abz_2520_problem_use,3
341,rgnbmf,I wrote code the stupid way,,137,0.96,computerscience,https://www.reddit.com/r/computerscience/comments/rgnbmf/i_wrote_code_the_stupid_way/,33,"i have been working as a software developer for 6 months and during this time i had to write a certain query and did it in the absolute stupidest and unnecessarily complex way that i thought was genius and was very proud of.
meanwhile a coworker had to solve the same problem and i came across his solution. i was embarrassed by it is simplicity and now i feel like a moron.
has anybody had similar experiences?",1639533028.0,"['work', 'software', 'developer', '6', 'month', 'time', 'write', 'certain', 'query', 'absolute', 'stupidest', 'unnecessarily', 'complex', 'way', 'thought', 'genius', 'proud', '.', 'meanwhile', 'coworker', 'solve', 'problem', 'come', 'across', 'solution', '.', 'embarrass', 'simplicity', 'feel', 'like', 'moron', '.', 'anybody', 'similar', 'experience', '?']","[[('working', 'VBG')], [('software', 'NN')], [('developer', 'NN')], [('6', 'CD')], [('months', 'NNS')], [('time', 'NN')], [('write', 'NN')], [('certain', 'JJ')], [('query', 'NN')], [('absolute', 'NN')], [('stupidest', 'NN')], [('unnecessarily', 'RB')], [('complex', 'JJ')], [('way', 'NN')], [('thought', 'NN')], [('genius', 'NN')], [('proud', 'NN')], [('.', '.')], [('meanwhile', 'RB')], [('coworker', 'NN')], [('solve', 'NN')], [('problem', 'NN')], [('came', 'VBD')], [('across', 'IN')], [('solution', 'NN')], [('.', '.')], [('embarrassed', 'VBN')], [('simplicity', 'NN')], [('feel', 'NN')], [('like', 'IN')], [('moron', 'NN')], [('.', '.')], [('anybody', 'NN')], [('similar', 'JJ')], [('experiences', 'NNS')], [('?', '.')]]",work software developer 6 month time write certain query absolute stupidest unnecessarily complex way thought genius proud . meanwhile coworker solve problem come across solution . embarrass simplicity feel like moron . anybody similar experience ?,-1_abazbz2abz_2520_problem_use,1
342,rh7r2v,Bresenham's Line Drawing Algorithm is... confusing?,Help,2,0.75,computerscience,https://www.reddit.com/r/computerscience/comments/rh7r2v/bresenhams_line_drawing_algorithm_is_confusing/,1,"forgive me if this is the wrong sub for this, but i am kind of getting desperate at this point.

can anyone explain in a dumbed down manner how the following lines from [bresenham's line drawing algorithm](-line-drawing-algorithm-2e0e953901b3) make sense? essentially, this is used to calculate where the next pixel should be drawn when attempting to draw a line between two points in a 2d space:

>we use dx and dy values to calculate the initial decision variable (d). value of the decision variable is changed on each step.  
>  
>d=2dy-dx  
>  
>similarly, we need to calculate △e and △ne values. after the first initiation, these values are not changed.  
>  
>...

like, where does the multiplication come from and why is it arbitrarily on dy and not dx? not only that, most of this method seems to only account for positive increases, and although it does mention them, it does not give a proper solution to other cases.

also, a ""slope error"" does not seem to be something google wants to tell me about. so, what is the deal with that?",1639598063.0,"['forgive', 'wrong', 'sub', ',', 'kind', 'get', 'desperate', 'point', '.', 'anyone', 'explain', 'dumbed', 'manner', 'follow', 'line', '[', 'bresenham', ""'s"", 'line', 'draw', 'algorithm', ']', '(', '-line-drawing-algorithm-2e0e953901b3', ')', 'make', 'sense', '?', 'essentially', ',', 'use', 'calculate', 'next', 'pixel', 'drawn', 'attempt', 'draw', 'line', 'two', 'point', '2d', 'space', ':', '>', 'use', 'dx', 'dy', 'value', 'calculate', 'initial', 'decision', 'variable', '(', ')', '.', 'value', 'decision', 'variable', 'change', 'step', '.', '>', '>', 'd=2dy-dx', '>', '>', 'similarly', ',', 'need', 'calculate', '△e', '△ne', 'value', '.', 'first', 'initiation', ',', 'value', 'change', '.', '>', '>', '...', 'like', ',', 'multiplication', 'come', 'arbitrarily', 'dy', 'dx', '?', ',', 'method', 'seem', 'account', 'positive', 'increase', ',', 'although', 'mention', ',', 'give', 'proper', 'solution', 'case', '.', 'also', ',', '``', 'slope', 'error', ""''"", 'seem', 'something', 'google', 'want', 'tell', '.', ',', 'deal', '?']","[[('forgive', 'JJ')], [('wrong', 'JJ')], [('sub', 'NN')], [(',', ',')], [('kind', 'NN')], [('getting', 'VBG')], [('desperate', 'NN')], [('point', 'NN')], [('.', '.')], [('anyone', 'NN')], [('explain', 'NN')], [('dumbed', 'NN')], [('manner', 'NN')], [('following', 'VBG')], [('lines', 'NNS')], [('[', 'NN')], [('bresenham', 'NN')], [(""'s"", 'POS')], [('line', 'NN')], [('drawing', 'VBG')], [('algorithm', 'NN')], [(']', 'NN')], [('(', '(')], [('-line-drawing-algorithm-2e0e953901b3', 'NN')], [(')', ')')], [('make', 'VB')], [('sense', 'NN')], [('?', '.')], [('essentially', 'RB')], [(',', ',')], [('used', 'VBN')], [('calculate', 'NN')], [('next', 'JJ')], [('pixel', 'NN')], [('drawn', 'NN')], [('attempting', 'VBG')], [('draw', 'NN')], [('line', 'NN')], [('two', 'CD')], [('points', 'NNS')], [('2d', 'CD')], [('space', 'NN')], [(':', ':')], [('>', 'NN')], [('use', 'NN')], [('dx', 'NN')], [('dy', 'NN')], [('values', 'NNS')], [('calculate', 'NN')], [('initial', 'JJ')], [('decision', 'NN')], [('variable', 'JJ')], [('(', '(')], [(')', ')')], [('.', '.')], [('value', 'NN')], [('decision', 'NN')], [('variable', 'JJ')], [('changed', 'VBN')], [('step', 'NN')], [('.', '.')], [('>', 'NN')], [('>', 'NN')], [('d=2dy-dx', 'NN')], [('>', 'NN')], [('>', 'NN')], [('similarly', 'RB')], [(',', ',')], [('need', 'NN')], [('calculate', 'NN')], [('△e', 'NN')], [('△ne', 'NN')], [('values', 'NNS')], [('.', '.')], [('first', 'RB')], [('initiation', 'NN')], [(',', ',')], [('values', 'NNS')], [('changed', 'VBN')], [('.', '.')], [('>', 'NN')], [('>', 'NN')], [('...', ':')], [('like', 'IN')], [(',', ',')], [('multiplication', 'NN')], [('come', 'VB')], [('arbitrarily', 'RB')], [('dy', 'NN')], [('dx', 'NN')], [('?', '.')], [(',', ',')], [('method', 'NN')], [('seems', 'VBZ')], [('account', 'NN')], [('positive', 'JJ')], [('increases', 'NNS')], [(',', ',')], [('although', 'IN')], [('mention', 'NN')], [(',', ',')], [('give', 'VB')], [('proper', 'NN')], [('solution', 'NN')], [('cases', 'NNS')], [('.', '.')], [('also', 'RB')], [(',', ',')], [('``', '``')], [('slope', 'NN')], [('error', 'NN')], [(""''"", ""''"")], [('seem', 'NN')], [('something', 'NN')], [('google', 'NN')], [('wants', 'VBZ')], [('tell', 'NN')], [('.', '.')], [(',', ',')], [('deal', 'NN')], [('?', '.')]]","forgive wrong sub , kind get desperate point . anyone explain dumbed manner follow line [ bresenham 's line draw algorithm ] ( -line-drawing-algorithm-2e0e953901b3 ) make sense ? essentially , use calculate next pixel drawn attempt draw line two point 2d space : > use dx dy value calculate initial decision variable ( ) . value decision variable change step . > > d=2dy-dx > > similarly , need calculate △e △ne value . first initiation , value change . > > ... like , multiplication come arbitrarily dy dx ? , method seem account positive increase , although mention , give proper solution case . also , `` slope error '' seem something google want tell . , deal ?",0_algorithm_time_node_bill,2
344,rg53gw,Is there a website or atleast a document that lists common optimizations done by compilers or interpreters?,Discussion,64,0.97,computerscience,https://www.reddit.com/r/computerscience/comments/rg53gw/is_there_a_website_or_atleast_a_document_that/,5,when watching tutorials i often notice them sometimes saying one way is better due to compiler optimizations. i know they treat it as a black box for time reasons but it would be nice to have a compilation that lists what these optimizations are and when the compiler does them. even without looking at the assembly or atleast an explained version of it.,1639479581.0,"['watch', 'tutorial', 'often', 'notice', 'sometimes', 'say', 'one', 'way', 'well', 'due', 'compiler', 'optimization', '.', 'know', 'treat', 'black', 'box', 'time', 'reason', 'would', 'nice', 'compilation', 'list', 'optimization', 'compiler', '.', 'even', 'without', 'look', 'assembly', 'atleast', 'explain', 'version', '.']","[[('watching', 'VBG')], [('tutorials', 'NNS')], [('often', 'RB')], [('notice', 'NN')], [('sometimes', 'RB')], [('saying', 'VBG')], [('one', 'CD')], [('way', 'NN')], [('better', 'RBR')], [('due', 'JJ')], [('compiler', 'NN')], [('optimizations', 'NNS')], [('.', '.')], [('know', 'VB')], [('treat', 'NN')], [('black', 'JJ')], [('box', 'NN')], [('time', 'NN')], [('reasons', 'NNS')], [('would', 'MD')], [('nice', 'JJ')], [('compilation', 'NN')], [('lists', 'NNS')], [('optimizations', 'NNS')], [('compiler', 'NN')], [('.', '.')], [('even', 'RB')], [('without', 'IN')], [('looking', 'VBG')], [('assembly', 'RB')], [('atleast', 'NN')], [('explained', 'VBD')], [('version', 'NN')], [('.', '.')]]",watch tutorial often notice sometimes say one way well due compiler optimization . know treat black box time reason would nice compilation list optimization compiler . even without look assembly atleast explain version .,8_language_one_program_write,4
345,rfmupc,How should I introduce a kid to programming?,General,133,0.97,computerscience,https://www.reddit.com/r/computerscience/comments/rfmupc/how_should_i_introduce_a_kid_to_programming/,74,"hello everybody! 

i am a 4th year computer science student. my fiancé’s 10 year old sister has expressed some interest to me about the work i do and said she wants to learn how to code. 

does anybody have any resources or advice on how to introduce kids at this age to programming? she is interested in games like roblox. i just feel like the approach i took to start learning might not be appropriate since i started as an adult.",1639421131.0,"['hello', 'everybody', '!', '4th', 'year', 'computer', 'science', 'student', '.', 'fiancé', '’', '10', 'year', 'old', 'sister', 'express', 'interest', 'work', 'say', 'want', 'learn', 'code', '.', 'anybody', 'resource', 'advice', 'introduce', 'kid', 'age', 'program', '?', 'interested', 'game', 'like', 'roblox', '.', 'feel', 'like', 'approach', 'take', 'start', 'learn', 'might', 'appropriate', 'since', 'start', 'adult', '.']","[[('hello', 'NN')], [('everybody', 'NN')], [('!', '.')], [('4th', 'CD')], [('year', 'NN')], [('computer', 'NN')], [('science', 'NN')], [('student', 'NN')], [('.', '.')], [('fiancé', 'NN')], [('’', 'NN')], [('10', 'CD')], [('year', 'NN')], [('old', 'JJ')], [('sister', 'NN')], [('expressed', 'VBN')], [('interest', 'NN')], [('work', 'NN')], [('said', 'VBD')], [('wants', 'VBZ')], [('learn', 'NN')], [('code', 'NN')], [('.', '.')], [('anybody', 'NN')], [('resources', 'NNS')], [('advice', 'NN')], [('introduce', 'NN')], [('kids', 'NNS')], [('age', 'NN')], [('programming', 'VBG')], [('?', '.')], [('interested', 'JJ')], [('games', 'NNS')], [('like', 'IN')], [('roblox', 'NN')], [('.', '.')], [('feel', 'NN')], [('like', 'IN')], [('approach', 'NN')], [('took', 'VBD')], [('start', 'NN')], [('learning', 'VBG')], [('might', 'MD')], [('appropriate', 'NN')], [('since', 'IN')], [('started', 'VBN')], [('adult', 'NN')], [('.', '.')]]",hello everybody ! 4th year computer science student . fiancé ’ 10 year old sister express interest work say want learn code . anybody resource advice introduce kid age program ? interested game like roblox . feel like approach take start learn might appropriate since start adult .,2_computer_learn_science_study,5
346,rf81l6,Viruses- mutation?,,22,0.87,computerscience,https://www.reddit.com/r/computerscience/comments/rf81l6/viruses_mutation/,14,so seeing as various types of colds and viruses can autonomously mutate- is it possible for a computer virus to mutate by itself?,1639372760.0,"['see', 'various', 'type', 'cold', 'virus', 'autonomously', 'mutate-', 'possible', 'computer', 'virus', 'mutate', '?']","[[('seeing', 'VBG')], [('various', 'JJ')], [('types', 'NNS')], [('colds', 'NNS')], [('viruses', 'NNS')], [('autonomously', 'RB')], [('mutate-', 'NN')], [('possible', 'JJ')], [('computer', 'NN')], [('virus', 'NN')], [('mutate', 'NN')], [('?', '.')]]",see various type cold virus autonomously mutate- possible computer virus mutate ?,-1_abazbz2abz_2520_problem_use,3
348,rf03ai,Understanding NP Completeness,Advice,48,0.95,computerscience,https://www.reddit.com/r/computerscience/comments/rf03ai/understanding_np_completeness/,15,"can you share a good website, book or other resources where the ideas related to np complete and np hard complexity classes are explained intuitively?

i read cormen and wikipedia but feel like i want something more. 

thanks.",1639348304.0,"['share', 'good', 'website', ',', 'book', 'resource', 'idea', 'related', 'np', 'complete', 'np', 'hard', 'complexity', 'class', 'explain', 'intuitively', '?', 'read', 'cormen', 'wikipedia', 'feel', 'like', 'want', 'something', '.', 'thanks', '.']","[[('share', 'NN')], [('good', 'JJ')], [('website', 'NN')], [(',', ',')], [('book', 'NN')], [('resources', 'NNS')], [('ideas', 'NNS')], [('related', 'JJ')], [('np', 'NN')], [('complete', 'JJ')], [('np', 'NN')], [('hard', 'JJ')], [('complexity', 'NN')], [('classes', 'NNS')], [('explained', 'VBD')], [('intuitively', 'RB')], [('?', '.')], [('read', 'NN')], [('cormen', 'NNS')], [('wikipedia', 'NN')], [('feel', 'NN')], [('like', 'IN')], [('want', 'NN')], [('something', 'NN')], [('.', '.')], [('thanks', 'NNS')], [('.', '.')]]","share good website , book resource idea related np complete np hard complexity class explain intuitively ? read cormen wikipedia feel like want something . thanks .",-1_abazbz2abz_2520_problem_use,3
351,rfa9t6,Will we ever reach a point were no more malware can be created.,Discussion,0,0.5,computerscience,https://www.reddit.com/r/computerscience/comments/rfa9t6/will_we_ever_reach_a_point_were_no_more_malware/,12,"will there ever be a point were every possible malware type will be detected by antivirus software, making malware nonexistent?",1639381039.0,"['ever', 'point', 'every', 'possible', 'malware', 'type', 'detect', 'antivirus', 'software', ',', 'make', 'malware', 'nonexistent', '?']","[[('ever', 'RB')], [('point', 'NN')], [('every', 'DT')], [('possible', 'JJ')], [('malware', 'NN')], [('type', 'NN')], [('detected', 'VBN')], [('antivirus', 'NN')], [('software', 'NN')], [(',', ',')], [('making', 'VBG')], [('malware', 'NN')], [('nonexistent', 'NN')], [('?', '.')]]","ever point every possible malware type detect antivirus software , make malware nonexistent ?",8_language_one_program_write,1
352,reinb8,"Is the ""mod"" in Modular square root same as the other mod (e.g. 5%2 = 1)?",Help,22,0.87,computerscience,https://www.reddit.com/r/computerscience/comments/reinb8/is_the_mod_in_modular_square_root_same_as_the/,5,"hey, i am not from a computer science background but i do software dev. i was trying to understand vdf and how it works - verifiable delay function. i came across 'modular square root' in [=\_-feyazzjew](-feyazzjew). i was not able to interpret how ""mod"" was being used here. 

tried this link: [\_square\_root](), its even confusing. 

any resources or material to understand the background will help. 

thanks in advance.",1639289343.0,"['hey', ',', 'computer', 'science', 'background', 'software', 'dev', '.', 'try', 'understand', 'vdf', 'work', '-', 'verifiable', 'delay', 'function', '.', 'come', 'across', ""'modular"", 'square', 'root', ""'"", '[', '=\\_-feyazzjew', ']', '(', '-feyazzjew', ')', '.', 'able', 'interpret', '``', 'mod', ""''"", 'use', '.', 'try', 'link', ':', '[', '\\_square\\_root', ']', '(', ')', ',', 'even', 'confuse', '.', 'resource', 'material', 'understand', 'background', 'help', '.', 'thanks', 'advance', '.']","[[('hey', 'NN')], [(',', ',')], [('computer', 'NN')], [('science', 'NN')], [('background', 'NN')], [('software', 'NN')], [('dev', 'NN')], [('.', '.')], [('trying', 'VBG')], [('understand', 'NN')], [('vdf', 'NN')], [('works', 'NNS')], [('-', ':')], [('verifiable', 'JJ')], [('delay', 'NN')], [('function', 'NN')], [('.', '.')], [('came', 'VBD')], [('across', 'IN')], [(""'modular"", 'JJ')], [('square', 'NN')], [('root', 'NN')], [(""'"", ""''"")], [('[', 'NN')], [('=\\_-feyazzjew', 'NN')], [(']', 'NN')], [('(', '(')], [('-feyazzjew', 'NN')], [(')', ')')], [('.', '.')], [('able', 'JJ')], [('interpret', 'NN')], [('``', '``')], [('mod', 'NN')], [(""''"", ""''"")], [('used', 'VBN')], [('.', '.')], [('tried', 'VBN')], [('link', 'NN')], [(':', ':')], [('[', 'NN')], [('\\_square\\_root', 'NN')], [(']', 'NN')], [('(', '(')], [(')', ')')], [(',', ',')], [('even', 'RB')], [('confusing', 'VBG')], [('.', '.')], [('resources', 'NNS')], [('material', 'NN')], [('understand', 'NN')], [('background', 'NN')], [('help', 'NN')], [('.', '.')], [('thanks', 'NNS')], [('advance', 'NN')], [('.', '.')]]","hey , computer science background software dev . try understand vdf work - verifiable delay function . come across 'modular square root ' [ =\_-feyazzjew ] ( -feyazzjew ) . able interpret `` mod '' use . try link : [ \_square\_root ] ( ) , even confuse . resource material understand background help . thanks advance .",0_algorithm_time_node_bill,2
353,rdc453,Why do computer scientists (and mathematicians) use the worst variable names in proofs and papers?!?,,215,0.9,computerscience,https://www.reddit.com/r/computerscience/comments/rdc453/why_do_computer_scientists_and_mathematicians_use/,83,"sorry if this post does not quite fit this sub but this has been bothering me for ages and i have recently hit a breaking point for my frustration. 

it just pisses me off that there are 26 letters in the alphabet and 325 pairs of letters you can choose and for some reason the pair that we all seem to use is (i,j).  
there are literally no two letters that look more alike and that could get more easily mixed up but for some reason whether it be in code are in my case here in proofs and papers these two letters are always used together.  
why should i have to use a magnifying glass to read a damn proof from a paper that could not have the decency to at least use a better font?

and it does not stop at (i,j). 
we also love to use (m,n), (p,q), (you,v). 

like i get it, it is more clear that the variables are related when they look alike, but it should certainly be more important that people do not mix them up???",1639152919.0,"['sorry', 'post', 'quite', 'fit', 'sub', 'bother', 'age', 'recently', 'hit', 'break', 'point', 'frustration', '.', 'piss', '26', 'letter', 'alphabet', '325', 'pair', 'letter', 'choose', 'reason', 'pair', 'seem', 'use', '(', ',', 'j', ')', '.', 'literally', 'two', 'letter', 'look', 'alike', 'could', 'get', 'easily', 'mixed', 'reason', 'whether', 'code', 'case', 'proof', 'paper', 'two', 'letter', 'always', 'use', 'together', '.', 'use', 'magnify', 'glass', 'read', 'damn', 'proof', 'paper', 'could', 'decency', 'least', 'use', 'well', 'font', '?', 'stop', '(', ',', 'j', ')', '.', 'also', 'love', 'use', '(', ',', 'n', ')', ',', '(', 'p', ',', 'q', ')', ',', '(', ',', 'v', ')', '.', 'like', 'get', ',', 'clear', 'variable', 'related', 'look', 'alike', ',', 'certainly', 'important', 'people', 'mix', '?', '?', '?']","[[('sorry', 'NN')], [('post', 'NN')], [('quite', 'RB')], [('fit', 'NN')], [('sub', 'NN')], [('bothering', 'VBG')], [('ages', 'NNS')], [('recently', 'RB')], [('hit', 'NN')], [('breaking', 'VBG')], [('point', 'NN')], [('frustration', 'NN')], [('.', '.')], [('pisses', 'NNS')], [('26', 'CD')], [('letters', 'NNS')], [('alphabet', 'NN')], [('325', 'CD')], [('pairs', 'NNS')], [('letters', 'NNS')], [('choose', 'NN')], [('reason', 'NN')], [('pair', 'NN')], [('seem', 'NN')], [('use', 'NN')], [('(', '(')], [(',', ',')], [('j', 'NN')], [(')', ')')], [('.', '.')], [('literally', 'RB')], [('two', 'CD')], [('letters', 'NNS')], [('look', 'NN')], [('alike', 'RB')], [('could', 'MD')], [('get', 'VB')], [('easily', 'RB')], [('mixed', 'JJ')], [('reason', 'NN')], [('whether', 'IN')], [('code', 'NN')], [('case', 'NN')], [('proofs', 'NN')], [('papers', 'NNS')], [('two', 'CD')], [('letters', 'NNS')], [('always', 'RB')], [('used', 'VBN')], [('together', 'RB')], [('.', '.')], [('use', 'NN')], [('magnifying', 'VBG')], [('glass', 'NN')], [('read', 'NN')], [('damn', 'NN')], [('proof', 'NN')], [('paper', 'NN')], [('could', 'MD')], [('decency', 'NN')], [('least', 'JJS')], [('use', 'NN')], [('better', 'RBR')], [('font', 'NN')], [('?', '.')], [('stop', 'NN')], [('(', '(')], [(',', ',')], [('j', 'NN')], [(')', ')')], [('.', '.')], [('also', 'RB')], [('love', 'NN')], [('use', 'NN')], [('(', '(')], [(',', ',')], [('n', 'NN')], [(')', ')')], [(',', ',')], [('(', '(')], [('p', 'NN')], [(',', ',')], [('q', 'NN')], [(')', ')')], [(',', ',')], [('(', '(')], [(',', ',')], [('v', 'NN')], [(')', ')')], [('.', '.')], [('like', 'IN')], [('get', 'VB')], [(',', ',')], [('clear', 'JJ')], [('variables', 'NNS')], [('related', 'JJ')], [('look', 'NN')], [('alike', 'RB')], [(',', ',')], [('certainly', 'RB')], [('important', 'JJ')], [('people', 'NNS')], [('mix', 'NN')], [('?', '.')], [('?', '.')], [('?', '.')]]","sorry post quite fit sub bother age recently hit break point frustration . piss 26 letter alphabet 325 pair letter choose reason pair seem use ( , j ) . literally two letter look alike could get easily mixed reason whether code case proof paper two letter always use together . use magnify glass read damn proof paper could decency least use well font ? stop ( , j ) . also love use ( , n ) , ( p , q ) , ( , v ) . like get , clear variable related look alike , certainly important people mix ? ? ?",-1_abazbz2abz_2520_problem_use,2
354,rdlhtp,Computer science riddle: monkey and 10 cages,,46,0.96,computerscience,https://www.reddit.com/r/computerscience/comments/rdlhtp/computer_science_riddle_monkey_and_10_cages/,25,"there is a monkey and 10 cages.
each cage has a door and there is a passage between each adjacent cage, not including 1 and 10.

the monkey starts at a random cage. your goal is to find him. you may open and close as many cage doors as you want, but each time you close a cage the monkey must go through a passages to a different adjacent cage. 

the monkey can enter a previously opened cage (for example, he was in cage 5, you looked inside cage 4 and once you closed it he moved into cage 4).

example:

monkey at 6, you opened 8, you closed 8, monkey went from 6 to 5. you opened 4, you closed 4, monkey went from 5 to 4. repeating.

the goal is to find a method that ensures you will find the monkey in the least amount of doors opened.

me and my friends had a go on this one for about 2 hours, we came up with a 17 moves solution that is i will describe below in the first comment.

the person who told us about it said there is a better solution with less doors to open.
i hope you can help me find it. good luck!",1639178190.0,"['monkey', '10', 'cage', '.', 'cage', 'door', 'passage', 'adjacent', 'cage', ',', 'include', '1', '10.', 'monkey', 'start', 'random', 'cage', '.', 'goal', 'find', '.', 'may', 'open', 'close', 'many', 'cage', 'door', 'want', ',', 'time', 'close', 'cage', 'monkey', 'must', 'go', 'passage', 'different', 'adjacent', 'cage', '.', 'monkey', 'enter', 'previously', 'open', 'cage', '(', 'example', ',', 'cage', '5', ',', 'look', 'inside', 'cage', '4', 'close', 'move', 'cage', '4', ')', '.', 'example', ':', 'monkey', '6', ',', 'open', '8', ',', 'close', '8', ',', 'monkey', 'go', '6', '5.', 'open', '4', ',', 'close', '4', ',', 'monkey', 'go', '5', '4.', 'repeat', '.', 'goal', 'find', 'method', 'ensures', 'find', 'monkey', 'least', 'amount', 'door', 'open', '.', 'friend', 'go', 'one', '2', 'hour', ',', 'come', '17', 'move', 'solution', 'describe', 'first', 'comment', '.', 'person', 'told', 'u', 'say', 'well', 'solution', 'less', 'door', 'open', '.', 'hope', 'help', 'find', '.', 'good', 'luck', '!']","[[('monkey', 'NN')], [('10', 'CD')], [('cages', 'NNS')], [('.', '.')], [('cage', 'NN')], [('door', 'NN')], [('passage', 'NN')], [('adjacent', 'NN')], [('cage', 'NN')], [(',', ',')], [('including', 'VBG')], [('1', 'CD')], [('10.', 'CD')], [('monkey', 'NN')], [('starts', 'NNS')], [('random', 'NN')], [('cage', 'NN')], [('.', '.')], [('goal', 'NN')], [('find', 'VB')], [('.', '.')], [('may', 'MD')], [('open', 'JJ')], [('close', 'RB')], [('many', 'JJ')], [('cage', 'NN')], [('doors', 'NNS')], [('want', 'NN')], [(',', ',')], [('time', 'NN')], [('close', 'RB')], [('cage', 'NN')], [('monkey', 'NN')], [('must', 'MD')], [('go', 'VB')], [('passages', 'NNS')], [('different', 'JJ')], [('adjacent', 'NN')], [('cage', 'NN')], [('.', '.')], [('monkey', 'NN')], [('enter', 'NN')], [('previously', 'RB')], [('opened', 'VBN')], [('cage', 'NN')], [('(', '(')], [('example', 'NN')], [(',', ',')], [('cage', 'NN')], [('5', 'CD')], [(',', ',')], [('looked', 'VBD')], [('inside', 'IN')], [('cage', 'NN')], [('4', 'CD')], [('closed', 'VBD')], [('moved', 'VBN')], [('cage', 'NN')], [('4', 'CD')], [(')', ')')], [('.', '.')], [('example', 'NN')], [(':', ':')], [('monkey', 'NN')], [('6', 'CD')], [(',', ',')], [('opened', 'VBN')], [('8', 'CD')], [(',', ',')], [('closed', 'VBD')], [('8', 'CD')], [(',', ',')], [('monkey', 'NN')], [('went', 'VBD')], [('6', 'CD')], [('5.', 'CD')], [('opened', 'VBN')], [('4', 'CD')], [(',', ',')], [('closed', 'VBD')], [('4', 'CD')], [(',', ',')], [('monkey', 'NN')], [('went', 'VBD')], [('5', 'CD')], [('4.', 'CD')], [('repeating', 'VBG')], [('.', '.')], [('goal', 'NN')], [('find', 'VB')], [('method', 'NN')], [('ensures', 'NNS')], [('find', 'VB')], [('monkey', 'NN')], [('least', 'JJS')], [('amount', 'NN')], [('doors', 'NNS')], [('opened', 'VBN')], [('.', '.')], [('friends', 'NNS')], [('go', 'VB')], [('one', 'CD')], [('2', 'CD')], [('hours', 'NNS')], [(',', ',')], [('came', 'VBD')], [('17', 'CD')], [('moves', 'NNS')], [('solution', 'NN')], [('describe', 'NN')], [('first', 'RB')], [('comment', 'NN')], [('.', '.')], [('person', 'NN')], [('told', 'NN')], [('us', 'PRP')], [('said', 'VBD')], [('better', 'RBR')], [('solution', 'NN')], [('less', 'RBR')], [('doors', 'NNS')], [('open', 'JJ')], [('.', '.')], [('hope', 'NN')], [('help', 'NN')], [('find', 'VB')], [('.', '.')], [('good', 'JJ')], [('luck', 'NN')], [('!', '.')]]","monkey 10 cage . cage door passage adjacent cage , include 1 10. monkey start random cage . goal find . may open close many cage door want , time close cage monkey must go passage different adjacent cage . monkey enter previously open cage ( example , cage 5 , look inside cage 4 close move cage 4 ) . example : monkey 6 , open 8 , close 8 , monkey go 6 5. open 4 , close 4 , monkey go 5 4. repeat . goal find method ensures find monkey least amount door open . friend go one 2 hour , come 17 move solution describe first comment . person told u say well solution less door open . hope help find . good luck !",0_algorithm_time_node_bill,4
355,rdr5st,Coding path to learning guidance,Help,3,0.8,computerscience,https://www.reddit.com/r/computerscience/comments/rdr5st/coding_path_to_learning_guidance/,5,"hi, i have 0 experience in coding (went to school for finance), and my end goal is to learn solidity. i want to start with javascript but should i learn about data structures and algorithms first or first learn the basics of javascript. i also saw that there are courses of data strucutres and algorithms specific to javascript. any guidance would be helpful.",1639195644.0,"['hi', ',', '0', 'experience', 'cod', '(', 'go', 'school', 'finance', ')', ',', 'end', 'goal', 'learn', 'solidity', '.', 'want', 'start', 'javascript', 'learn', 'data', 'structure', 'algorithm', 'first', 'first', 'learn', 'basic', 'javascript', '.', 'also', 'saw', 'course', 'data', 'strucutres', 'algorithm', 'specific', 'javascript', '.', 'guidance', 'would', 'helpful', '.']","[[('hi', 'NN')], [(',', ',')], [('0', 'CD')], [('experience', 'NN')], [('coding', 'VBG')], [('(', '(')], [('went', 'VBD')], [('school', 'NN')], [('finance', 'NN')], [(')', ')')], [(',', ',')], [('end', 'NN')], [('goal', 'NN')], [('learn', 'NN')], [('solidity', 'NN')], [('.', '.')], [('want', 'NN')], [('start', 'NN')], [('javascript', 'NN')], [('learn', 'NN')], [('data', 'NNS')], [('structures', 'NNS')], [('algorithms', 'NN')], [('first', 'RB')], [('first', 'RB')], [('learn', 'NN')], [('basics', 'NNS')], [('javascript', 'NN')], [('.', '.')], [('also', 'RB')], [('saw', 'NN')], [('courses', 'NNS')], [('data', 'NNS')], [('strucutres', 'NNS')], [('algorithms', 'NN')], [('specific', 'JJ')], [('javascript', 'NN')], [('.', '.')], [('guidance', 'NN')], [('would', 'MD')], [('helpful', 'NN')], [('.', '.')]]","hi , 0 experience cod ( go school finance ) , end goal learn solidity . want start javascript learn data structure algorithm first first learn basic javascript . also saw course data strucutres algorithm specific javascript . guidance would helpful .",-1_abazbz2abz_2520_problem_use,3
356,rdo7ab,Confusion on adder-subtractor circuits.,,1,0.6,computerscience,https://www.reddit.com/r/computerscience/comments/rdo7ab/confusion_on_addersubtractor_circuits/,2,"&#x200b;



so in an adder-subtractor circuit the output for addition will be as an unsigned integer while the output for subtraction will be in two's complement form right?  


if so does the circuit not work when the difference is less than minimum two's complement value? for example in two's complement a 4-bit integer can range from -8 to 7 in decimal. but you can input 0000 - 1001 for example. the difference of those two terms would be -9 in decimal which is less than -8 the lowest possible value. so are adder-subtractors unable to work when the difference of the input is less than minimum two's complement value?  


sorry if this makes no sense. i am very confused.",1639186172.0,"['&', '#', 'x200b', ';', 'adder-subtractor', 'circuit', 'output', 'addition', 'unsigned', 'integer', 'output', 'subtraction', 'two', ""'s"", 'complement', 'form', 'right', '?', 'circuit', 'work', 'difference', 'less', 'minimum', 'two', ""'s"", 'complement', 'value', '?', 'example', 'two', ""'s"", 'complement', '4-bit', 'integer', 'range', '-8', '7', 'decimal', '.', 'input', '0000', '-', '1001', 'example', '.', 'difference', 'two', 'term', 'would', '-9', 'decimal', 'less', '-8', 'low', 'possible', 'value', '.', 'adder-subtractors', 'unable', 'work', 'difference', 'input', 'less', 'minimum', 'two', ""'s"", 'complement', 'value', '?', 'sorry', 'make', 'sense', '.', 'confuse', '.']","[[('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('adder-subtractor', 'NN')], [('circuit', 'NN')], [('output', 'NN')], [('addition', 'NN')], [('unsigned', 'JJ')], [('integer', 'NN')], [('output', 'NN')], [('subtraction', 'NN')], [('two', 'CD')], [(""'s"", 'POS')], [('complement', 'NN')], [('form', 'NN')], [('right', 'NN')], [('?', '.')], [('circuit', 'NN')], [('work', 'NN')], [('difference', 'NN')], [('less', 'RBR')], [('minimum', 'NN')], [('two', 'CD')], [(""'s"", 'POS')], [('complement', 'NN')], [('value', 'NN')], [('?', '.')], [('example', 'NN')], [('two', 'CD')], [(""'s"", 'POS')], [('complement', 'NN')], [('4-bit', 'NN')], [('integer', 'NN')], [('range', 'NN')], [('-8', 'NN')], [('7', 'CD')], [('decimal', 'NN')], [('.', '.')], [('input', 'NN')], [('0000', 'CD')], [('-', ':')], [('1001', 'CD')], [('example', 'NN')], [('.', '.')], [('difference', 'NN')], [('two', 'CD')], [('terms', 'NNS')], [('would', 'MD')], [('-9', 'NN')], [('decimal', 'NN')], [('less', 'RBR')], [('-8', 'NN')], [('lowest', 'JJS')], [('possible', 'JJ')], [('value', 'NN')], [('.', '.')], [('adder-subtractors', 'NNS')], [('unable', 'JJ')], [('work', 'NN')], [('difference', 'NN')], [('input', 'NN')], [('less', 'RBR')], [('minimum', 'NN')], [('two', 'CD')], [(""'s"", 'POS')], [('complement', 'NN')], [('value', 'NN')], [('?', '.')], [('sorry', 'NN')], [('makes', 'VBZ')], [('sense', 'NN')], [('.', '.')], [('confused', 'VBN')], [('.', '.')]]",& # x200b ; adder-subtractor circuit output addition unsigned integer output subtraction two 's complement form right ? circuit work difference less minimum two 's complement value ? example two 's complement 4-bit integer range -8 7 decimal . input 0000 - 1001 example . difference two term would -9 decimal less -8 low possible value . adder-subtractors unable work difference input less minimum two 's complement value ? sorry make sense . confuse .,1_memory_byte_data_alignment,3
357,rcla2n,So what do computer scientists think about NFTs? Cool tech with real world application? Or just a new way for rich people to launder money?,Discussion,101,0.87,computerscience,https://www.reddit.com/r/computerscience/comments/rcla2n/so_what_do_computer_scientists_think_about_nfts/,82,"seems like everyone is talking about nfts in some capacity but i have not seen a lot of opinions about them from tech literate people, just wondering what the general consensus on them is from a comp sci perspective.",1639067420.0,"['seem', 'like', 'everyone', 'talk', 'nfts', 'capacity', 'see', 'lot', 'opinion', 'tech', 'literate', 'people', ',', 'wonder', 'general', 'consensus', 'comp', 'sci', 'perspective', '.']","[[('seems', 'VBZ')], [('like', 'IN')], [('everyone', 'NN')], [('talking', 'VBG')], [('nfts', 'NNS')], [('capacity', 'NN')], [('seen', 'VBN')], [('lot', 'NN')], [('opinions', 'NNS')], [('tech', 'NN')], [('literate', 'NN')], [('people', 'NNS')], [(',', ',')], [('wondering', 'VBG')], [('general', 'JJ')], [('consensus', 'NN')], [('comp', 'NN')], [('sci', 'NN')], [('perspective', 'NN')], [('.', '.')]]","seem like everyone talk nfts capacity see lot opinion tech literate people , wonder general consensus comp sci perspective .",3_search_ai_think_google,3
358,rcip1t,How do you think should Calculus be taught to Computer Scientists?,Discussion,68,0.89,computerscience,https://www.reddit.com/r/computerscience/comments/rcip1t/how_do_you_think_should_calculus_be_taught_to/,32,"do you think that it is better to teach it with an emphasis on applying calculus to actual problems instead of the conventional way of integrating this ugly monstrous function? if you were to teach it to undergraduates doing cs, then how would you do it?",1639059771.0,"['think', 'well', 'teach', 'emphasis', 'apply', 'calculus', 'actual', 'problem', 'instead', 'conventional', 'way', 'integrate', 'ugly', 'monstrous', 'function', '?', 'teach', 'undergraduate', 'c', ',', 'would', '?']","[[('think', 'NN')], [('better', 'RBR')], [('teach', 'NN')], [('emphasis', 'NN')], [('applying', 'VBG')], [('calculus', 'NN')], [('actual', 'JJ')], [('problems', 'NNS')], [('instead', 'RB')], [('conventional', 'JJ')], [('way', 'NN')], [('integrating', 'VBG')], [('ugly', 'RB')], [('monstrous', 'JJ')], [('function', 'NN')], [('?', '.')], [('teach', 'NN')], [('undergraduates', 'NNS')], [('cs', 'NN')], [(',', ',')], [('would', 'MD')], [('?', '.')]]","think well teach emphasis apply calculus actual problem instead conventional way integrate ugly monstrous function ? teach undergraduate c , would ?",2_computer_learn_science_study,1
359,rc955j,Time Complexity,,24,0.93,computerscience,https://www.reddit.com/r/computerscience/comments/rc955j/time_complexity/,13,"i have this question where it asks what the time complexity of this piece of code is. i know that the solution is o(n), but i cannot wrap my head around the ""why"" of it. i was wondering if someone could help explain it to me.

",1639022484.0,"['question', 'asks', 'time', 'complexity', 'piece', 'code', '.', 'know', 'solution', '(', 'n', ')', ',', 'wrap', 'head', 'around', '``', ""''"", '.', 'wonder', 'someone', 'could', 'help', 'explain', '.']","[[('question', 'NN')], [('asks', 'NNS')], [('time', 'NN')], [('complexity', 'NN')], [('piece', 'NN')], [('code', 'NN')], [('.', '.')], [('know', 'VB')], [('solution', 'NN')], [('(', '(')], [('n', 'NN')], [(')', ')')], [(',', ',')], [('wrap', 'NN')], [('head', 'NN')], [('around', 'IN')], [('``', '``')], [(""''"", ""''"")], [('.', '.')], [('wondering', 'VBG')], [('someone', 'NN')], [('could', 'MD')], [('help', 'NN')], [('explain', 'NN')], [('.', '.')]]","question asks time complexity piece code . know solution ( n ) , wrap head around `` '' . wonder someone could help explain .",0_algorithm_time_node_bill,2
360,rbwnot,How do I get better at coding?,Help,116,0.95,computerscience,https://www.reddit.com/r/computerscience/comments/rbwnot/how_do_i_get_better_at_coding/,43,"i am taking computer science in school and i will admit, i am not the best at it and i want to change that, i want to get better at coding but i am not sure how i should go about it because i have heard that practise is the best way of getting better at it but i am not sure where i should practise (we are studying python btw)

thanks in advance!",1638985373.0,"['take', 'computer', 'science', 'school', 'admit', ',', 'best', 'want', 'change', ',', 'want', 'get', 'well', 'cod', 'sure', 'go', 'heard', 'practise', 'best', 'way', 'get', 'well', 'sure', 'practise', '(', 'study', 'python', 'btw', ')', 'thanks', 'advance', '!']","[[('taking', 'VBG')], [('computer', 'NN')], [('science', 'NN')], [('school', 'NN')], [('admit', 'NN')], [(',', ',')], [('best', 'JJS')], [('want', 'NN')], [('change', 'NN')], [(',', ',')], [('want', 'NN')], [('get', 'VB')], [('better', 'RBR')], [('coding', 'VBG')], [('sure', 'NN')], [('go', 'VB')], [('heard', 'NN')], [('practise', 'NN')], [('best', 'JJS')], [('way', 'NN')], [('getting', 'VBG')], [('better', 'RBR')], [('sure', 'NN')], [('practise', 'NN')], [('(', '(')], [('studying', 'VBG')], [('python', 'NN')], [('btw', 'NN')], [(')', ')')], [('thanks', 'NNS')], [('advance', 'NN')], [('!', '.')]]","take computer science school admit , best want change , want get well cod sure go heard practise best way get well sure practise ( study python btw ) thanks advance !",2_computer_learn_science_study,4
361,rc3wsu,"You are tasked with creating a ""library"" computer which can survive societal collapse and remain operational for decades, centuries, or longer. How would you go about it? What kind of hardware and software would it need?",Discussion,36,0.91,computerscience,https://www.reddit.com/r/computerscience/comments/rc3wsu/you_are_tasked_with_creating_a_library_computer/,26,"perhaps this is not quite the right subreddit. i am doing some research for a bit of fiction i am working on. 

let us say it is built using current or very-near-future tech. the group making it has the resources of a large nation. their aim is to preserve human knowledge even if we get knocked back into the stone age, and for the device to remain operational for long enough to be used to help rebuild society.

what sort of information would it store? what sort of hardware would be able to store and retrieve data for a very long time? what kind of software would run on it? what can be done to make sure it is stable? what kind of software would be most useful for this purpose? what and how do we teach a user who might not even know how to write? how would we power it?

how long, realistically, could we make such a device remain operational? what kind of peripherals could this device use? (communicate with a paired satellite in a geostationary orbit, antenna on top of a mountain, etc)",1639006059.0,"['perhaps', 'quite', 'right', 'subreddit', '.', 'research', 'bit', 'fiction', 'work', '.', 'let', 'u', 'say', 'built', 'use', 'current', 'very-near-future', 'tech', '.', 'group', 'make', 'resource', 'large', 'nation', '.', 'aim', 'preserve', 'human', 'knowledge', 'even', 'get', 'knock', 'back', 'stone', 'age', ',', 'device', 'remain', 'operational', 'long', 'enough', 'use', 'help', 'rebuild', 'society', '.', 'sort', 'information', 'would', 'store', '?', 'sort', 'hardware', 'would', 'able', 'store', 'retrieve', 'data', 'long', 'time', '?', 'kind', 'software', 'would', 'run', '?', 'do', 'make', 'sure', 'stable', '?', 'kind', 'software', 'would', 'useful', 'purpose', '?', 'teach', 'user', 'might', 'even', 'know', 'write', '?', 'would', 'power', '?', 'long', ',', 'realistically', ',', 'could', 'make', 'device', 'remain', 'operational', '?', 'kind', 'peripheral', 'could', 'device', 'use', '?', '(', 'communicate', 'pair', 'satellite', 'geostationary', 'orbit', ',', 'antenna', 'top', 'mountain', ',', 'etc', ')']","[[('perhaps', 'RB')], [('quite', 'RB')], [('right', 'NN')], [('subreddit', 'NN')], [('.', '.')], [('research', 'NN')], [('bit', 'NN')], [('fiction', 'NN')], [('working', 'VBG')], [('.', '.')], [('let', 'VB')], [('us', 'PRP')], [('say', 'VB')], [('built', 'NN')], [('using', 'VBG')], [('current', 'JJ')], [('very-near-future', 'NN')], [('tech', 'NN')], [('.', '.')], [('group', 'NN')], [('making', 'VBG')], [('resources', 'NNS')], [('large', 'JJ')], [('nation', 'NN')], [('.', '.')], [('aim', 'NN')], [('preserve', 'NN')], [('human', 'NN')], [('knowledge', 'NN')], [('even', 'RB')], [('get', 'VB')], [('knocked', 'VBN')], [('back', 'RB')], [('stone', 'NN')], [('age', 'NN')], [(',', ',')], [('device', 'NN')], [('remain', 'NN')], [('operational', 'JJ')], [('long', 'RB')], [('enough', 'RB')], [('used', 'VBN')], [('help', 'NN')], [('rebuild', 'NN')], [('society', 'NN')], [('.', '.')], [('sort', 'NN')], [('information', 'NN')], [('would', 'MD')], [('store', 'NN')], [('?', '.')], [('sort', 'NN')], [('hardware', 'NN')], [('would', 'MD')], [('able', 'JJ')], [('store', 'NN')], [('retrieve', 'NN')], [('data', 'NNS')], [('long', 'RB')], [('time', 'NN')], [('?', '.')], [('kind', 'NN')], [('software', 'NN')], [('would', 'MD')], [('run', 'VB')], [('?', '.')], [('done', 'VBN')], [('make', 'VB')], [('sure', 'NN')], [('stable', 'JJ')], [('?', '.')], [('kind', 'NN')], [('software', 'NN')], [('would', 'MD')], [('useful', 'JJ')], [('purpose', 'NN')], [('?', '.')], [('teach', 'NN')], [('user', 'NN')], [('might', 'MD')], [('even', 'RB')], [('know', 'VB')], [('write', 'NN')], [('?', '.')], [('would', 'MD')], [('power', 'NN')], [('?', '.')], [('long', 'RB')], [(',', ',')], [('realistically', 'RB')], [(',', ',')], [('could', 'MD')], [('make', 'VB')], [('device', 'NN')], [('remain', 'NN')], [('operational', 'JJ')], [('?', '.')], [('kind', 'NN')], [('peripherals', 'NNS')], [('could', 'MD')], [('device', 'NN')], [('use', 'NN')], [('?', '.')], [('(', '(')], [('communicate', 'NN')], [('paired', 'VBN')], [('satellite', 'NN')], [('geostationary', 'JJ')], [('orbit', 'NN')], [(',', ',')], [('antenna', 'NN')], [('top', 'NN')], [('mountain', 'NN')], [(',', ',')], [('etc', 'NN')], [(')', ')')]]","perhaps quite right subreddit . research bit fiction work . let u say built use current very-near-future tech . group make resource large nation . aim preserve human knowledge even get knock back stone age , device remain operational long enough use help rebuild society . sort information would store ? sort hardware would able store retrieve data long time ? kind software would run ? do make sure stable ? kind software would useful purpose ? teach user might even know write ? would power ? long , realistically , could make device remain operational ? kind peripheral could device use ? ( communicate pair satellite geostationary orbit , antenna top mountain , etc )",-1_abazbz2abz_2520_problem_use,3
362,rcfj0u,"Don't Just Track Your Machine Learning Experiments, Version Them - Managing ML Experiments as Code with Git and DVC",Article,3,0.71,computerscience,https://www.reddit.com/r/computerscience/comments/rcfj0u/dont_just_track_your_machine_learning_experiments/,1,"ml experiments often get split between git for code and experiment tracking tools for meta-information - because git cannot manage or compare all that experiment meta-information, but it is still better for code.

the following guide explains how to apply dvc for ml experiment versioning that combines experiment tracking and version control: [do not just track your ml experiments, version them](-experiment-versioning) - instead of managing these separately, keep everything in one place and get the benefits of both, like:

* experiments as code: track meta-information in the repository and version it like code.
* versioned reproducibility: save and restore experiment state, and track changes to only execute what is new.
* distributed experiments: organize locally and choose what to share, reusing your existing repo setup.

experiment versioning treats experiments as code. it saves all metrics, hyperparameters, and artifact information in text files that can be versioned by git, which becomes a store for experiment meta-information. the article above shows how with dvc tool, you can push experiments just like git branches, giving you flexibility to share experiment you choose.",1639048353.0,"['ml', 'experiment', 'often', 'get', 'split', 'git', 'code', 'experiment', 'track', 'tool', 'meta-information', '-', 'git', 'manage', 'compare', 'experiment', 'meta-information', ',', 'still', 'well', 'code', '.', 'follow', 'guide', 'explains', 'apply', 'dvc', 'ml', 'experiment', 'versioning', 'combine', 'experiment', 'track', 'version', 'control', ':', '[', 'track', 'ml', 'experiment', ',', 'version', ']', '(', '-experiment-versioning', ')', '-', 'instead', 'manage', 'separately', ',', 'keep', 'everything', 'one', 'place', 'get', 'benefit', ',', 'like', ':', '*', 'experiment', 'code', ':', 'track', 'meta-information', 'repository', 'version', 'like', 'code', '.', '*', 'versioned', 'reproducibility', ':', 'save', 'restore', 'experiment', 'state', ',', 'track', 'change', 'execute', 'new', '.', '*', 'distribute', 'experiment', ':', 'organize', 'locally', 'choose', 'share', ',', 'reuse', 'exist', 'repo', 'setup', '.', 'experiment', 'versioning', 'treat', 'experiment', 'code', '.', 'save', 'metric', ',', 'hyperparameters', ',', 'artifact', 'information', 'text', 'file', 'versioned', 'git', ',', 'becomes', 'store', 'experiment', 'meta-information', '.', 'article', 'show', 'dvc', 'tool', ',', 'push', 'experiment', 'like', 'git', 'branch', ',', 'give', 'flexibility', 'share', 'experiment', 'choose', '.']","[[('ml', 'NN')], [('experiments', 'NNS')], [('often', 'RB')], [('get', 'VB')], [('split', 'NN')], [('git', 'NN')], [('code', 'NN')], [('experiment', 'NN')], [('tracking', 'VBG')], [('tools', 'NNS')], [('meta-information', 'NN')], [('-', ':')], [('git', 'NN')], [('manage', 'NN')], [('compare', 'NN')], [('experiment', 'NN')], [('meta-information', 'NN')], [(',', ',')], [('still', 'RB')], [('better', 'RBR')], [('code', 'NN')], [('.', '.')], [('following', 'VBG')], [('guide', 'NN')], [('explains', 'NNS')], [('apply', 'VB')], [('dvc', 'NN')], [('ml', 'NN')], [('experiment', 'NN')], [('versioning', 'VBG')], [('combines', 'NNS')], [('experiment', 'NN')], [('tracking', 'VBG')], [('version', 'NN')], [('control', 'NN')], [(':', ':')], [('[', 'NN')], [('track', 'NN')], [('ml', 'NN')], [('experiments', 'NNS')], [(',', ',')], [('version', 'NN')], [(']', 'NN')], [('(', '(')], [('-experiment-versioning', 'VBG')], [(')', ')')], [('-', ':')], [('instead', 'RB')], [('managing', 'VBG')], [('separately', 'RB')], [(',', ',')], [('keep', 'VB')], [('everything', 'NN')], [('one', 'CD')], [('place', 'NN')], [('get', 'VB')], [('benefits', 'NNS')], [(',', ',')], [('like', 'IN')], [(':', ':')], [('*', 'NN')], [('experiments', 'NNS')], [('code', 'NN')], [(':', ':')], [('track', 'NN')], [('meta-information', 'NN')], [('repository', 'NN')], [('version', 'NN')], [('like', 'IN')], [('code', 'NN')], [('.', '.')], [('*', 'NN')], [('versioned', 'VBN')], [('reproducibility', 'NN')], [(':', ':')], [('save', 'VB')], [('restore', 'NN')], [('experiment', 'NN')], [('state', 'NN')], [(',', ',')], [('track', 'NN')], [('changes', 'NNS')], [('execute', 'NN')], [('new', 'JJ')], [('.', '.')], [('*', 'NN')], [('distributed', 'VBN')], [('experiments', 'NNS')], [(':', ':')], [('organize', 'VB')], [('locally', 'RB')], [('choose', 'NN')], [('share', 'NN')], [(',', ',')], [('reusing', 'VBG')], [('existing', 'VBG')], [('repo', 'NN')], [('setup', 'NN')], [('.', '.')], [('experiment', 'NN')], [('versioning', 'VBG')], [('treats', 'NNS')], [('experiments', 'NNS')], [('code', 'NN')], [('.', '.')], [('saves', 'NNS')], [('metrics', 'NNS')], [(',', ',')], [('hyperparameters', 'NNS')], [(',', ',')], [('artifact', 'NN')], [('information', 'NN')], [('text', 'NN')], [('files', 'NNS')], [('versioned', 'VBN')], [('git', 'NN')], [(',', ',')], [('becomes', 'NNS')], [('store', 'NN')], [('experiment', 'NN')], [('meta-information', 'NN')], [('.', '.')], [('article', 'NN')], [('shows', 'NNS')], [('dvc', 'NN')], [('tool', 'NN')], [(',', ',')], [('push', 'NN')], [('experiments', 'NNS')], [('like', 'IN')], [('git', 'NN')], [('branches', 'NNS')], [(',', ',')], [('giving', 'VBG')], [('flexibility', 'NN')], [('share', 'NN')], [('experiment', 'NN')], [('choose', 'NN')], [('.', '.')]]","ml experiment often get split git code experiment track tool meta-information - git manage compare experiment meta-information , still well code . follow guide explains apply dvc ml experiment versioning combine experiment track version control : [ track ml experiment , version ] ( -experiment-versioning ) - instead manage separately , keep everything one place get benefit , like : * experiment code : track meta-information repository version like code . * versioned reproducibility : save restore experiment state , track change execute new . * distribute experiment : organize locally choose share , reuse exist repo setup . experiment versioning treat experiment code . save metric , hyperparameters , artifact information text file versioned git , becomes store experiment meta-information . article show dvc tool , push experiment like git branch , give flexibility share experiment choose .",-1_abazbz2abz_2520_problem_use,4
363,rcj9zu,How does a cpu process information,Help,0,0.33,computerscience,https://www.reddit.com/r/computerscience/comments/rcj9zu/how_does_a_cpu_process_information/,4,"i heard about something turning on and off, i do not know anything more",1639061548.0,"['heard', 'something', 'turn', ',', 'know', 'anything']","[[('heard', 'NN')], [('something', 'NN')], [('turning', 'VBG')], [(',', ',')], [('know', 'VB')], [('anything', 'NN')]]","heard something turn , know anything",3_search_ai_think_google,2
364,rc1j2y,"Difference between data type, structure, schema, model",,3,0.81,computerscience,https://www.reddit.com/r/computerscience/comments/rc1j2y/difference_between_data_type_structure_schema/,4,"what is the difference between data type, structure, schema and model? and what is the relationship between each? any examples?

new to cs and would love to learn more. thanks!",1638999111.0,"['difference', 'data', 'type', ',', 'structure', ',', 'schema', 'model', '?', 'relationship', '?', 'example', '?', 'new', 'c', 'would', 'love', 'learn', '.', 'thanks', '!']","[[('difference', 'NN')], [('data', 'NNS')], [('type', 'NN')], [(',', ',')], [('structure', 'NN')], [(',', ',')], [('schema', 'NN')], [('model', 'NN')], [('?', '.')], [('relationship', 'NN')], [('?', '.')], [('examples', 'NNS')], [('?', '.')], [('new', 'JJ')], [('cs', 'NN')], [('would', 'MD')], [('love', 'NN')], [('learn', 'NN')], [('.', '.')], [('thanks', 'NNS')], [('!', '.')]]","difference data type , structure , schema model ? relationship ? example ? new c would love learn . thanks !",-1_abazbz2abz_2520_problem_use,5
365,rc9jzq,Can AI theoretically solve the halting problem or at least most of it?,,0,0.18,computerscience,https://www.reddit.com/r/computerscience/comments/rc9jzq/can_ai_theoretically_solve_the_halting_problem_or/,15,"imagine you have an neural network system, and its a classifier. it takes in some code and spits out whether or not it will halt or not. you could imagine in a simple case that you train the neural network with code that has a while (true) loop. it clearly halts and the ai can report that it halts with some trivial training examples, probably easily, without the need to do an infinite amount of computation.

so theoretically as you expand the sophistication of the ai system and incorporate more training and more examples it should be able to determine whether code halts more and more. it seems obvious, at minimum, that the ai should be able to determine whether a much larger range of code either halts or not without doing any traditional computation. have there been any cs papers exploring whether ai could expand the reach of solvable verifiable problems traditionally thought to have been out of computational reach e.g. in the np space?",1639023865.0,"['imagine', 'neural', 'network', 'system', ',', 'classifier', '.', 'take', 'code', 'spit', 'whether', 'halt', '.', 'could', 'imagine', 'simple', 'case', 'train', 'neural', 'network', 'code', '(', 'true', ')', 'loop', '.', 'clearly', 'halt', 'ai', 'report', 'halt', 'trivial', 'training', 'example', ',', 'probably', 'easily', ',', 'without', 'need', 'infinite', 'amount', 'computation', '.', 'theoretically', 'expand', 'sophistication', 'ai', 'system', 'incorporate', 'training', 'example', 'able', 'determine', 'whether', 'code', 'halt', '.', 'seem', 'obvious', ',', 'minimum', ',', 'ai', 'able', 'determine', 'whether', 'much', 'large', 'range', 'code', 'either', 'halt', 'without', 'traditional', 'computation', '.', 'c', 'paper', 'explore', 'whether', 'ai', 'could', 'expand', 'reach', 'solvable', 'verifiable', 'problem', 'traditionally', 'thought', 'computational', 'reach', 'e.g', '.', 'np', 'space', '?']","[[('imagine', 'NN')], [('neural', 'JJ')], [('network', 'NN')], [('system', 'NN')], [(',', ',')], [('classifier', 'NN')], [('.', '.')], [('takes', 'VBZ')], [('code', 'NN')], [('spits', 'NNS')], [('whether', 'IN')], [('halt', 'NN')], [('.', '.')], [('could', 'MD')], [('imagine', 'NN')], [('simple', 'NN')], [('case', 'NN')], [('train', 'NN')], [('neural', 'JJ')], [('network', 'NN')], [('code', 'NN')], [('(', '(')], [('true', 'JJ')], [(')', ')')], [('loop', 'NN')], [('.', '.')], [('clearly', 'RB')], [('halts', 'NNS')], [('ai', 'NN')], [('report', 'NN')], [('halts', 'NNS')], [('trivial', 'JJ')], [('training', 'NN')], [('examples', 'NNS')], [(',', ',')], [('probably', 'RB')], [('easily', 'RB')], [(',', ',')], [('without', 'IN')], [('need', 'NN')], [('infinite', 'NN')], [('amount', 'NN')], [('computation', 'NN')], [('.', '.')], [('theoretically', 'RB')], [('expand', 'NN')], [('sophistication', 'NN')], [('ai', 'NN')], [('system', 'NN')], [('incorporate', 'NN')], [('training', 'NN')], [('examples', 'NNS')], [('able', 'JJ')], [('determine', 'NN')], [('whether', 'IN')], [('code', 'NN')], [('halts', 'NNS')], [('.', '.')], [('seems', 'VBZ')], [('obvious', 'JJ')], [(',', ',')], [('minimum', 'NN')], [(',', ',')], [('ai', 'NN')], [('able', 'JJ')], [('determine', 'NN')], [('whether', 'IN')], [('much', 'JJ')], [('larger', 'JJR')], [('range', 'NN')], [('code', 'NN')], [('either', 'DT')], [('halts', 'NNS')], [('without', 'IN')], [('traditional', 'JJ')], [('computation', 'NN')], [('.', '.')], [('cs', 'NN')], [('papers', 'NNS')], [('exploring', 'VBG')], [('whether', 'IN')], [('ai', 'NN')], [('could', 'MD')], [('expand', 'NN')], [('reach', 'NN')], [('solvable', 'JJ')], [('verifiable', 'JJ')], [('problems', 'NNS')], [('traditionally', 'RB')], [('thought', 'NN')], [('computational', 'NN')], [('reach', 'NN')], [('e.g', 'NN')], [('.', '.')], [('np', 'NN')], [('space', 'NN')], [('?', '.')]]","imagine neural network system , classifier . take code spit whether halt . could imagine simple case train neural network code ( true ) loop . clearly halt ai report halt trivial training example , probably easily , without need infinite amount computation . theoretically expand sophistication ai system incorporate training example able determine whether code halt . seem obvious , minimum , ai able determine whether much large range code either halt without traditional computation . c paper explore whether ai could expand reach solvable verifiable problem traditionally thought computational reach e.g . np space ?",3_search_ai_think_google,3
366,rawuw6,For the computational scientists and AI guys here,General,97,0.9,computerscience,https://www.reddit.com/r/computerscience/comments/rawuw6/for_the_computational_scientists_and_ai_guys_here/,42,tell us about some cool projects that you have worked on.,1638875623.0,"['tell', 'u', 'cool', 'project', 'work', '.']","[[('tell', 'NN')], [('us', 'PRP')], [('cool', 'NN')], [('projects', 'NNS')], [('worked', 'VBN')], [('.', '.')]]",tell u cool project work .,-1_abazbz2abz_2520_problem_use,4
367,rbng33,Etymology of screen dump,Discussion,1,1.0,computerscience,https://www.reddit.com/r/computerscience/comments/rbng33/etymology_of_screen_dump/,5,"i am posting here because internet is for once proving useless in answering this question, what is the etymology of screen dump?

over the years the word, screenshot, has taken over for the use of 'dump', but in my native language the word still carries this legacy meaning. i have got a master in informatics and currently doing my phd in information systems research, but cannot for the life of me find the answer. the old-school 70s and 80s professors in my research group, who lived through the nascent computer science days, does not have the answer either.  


any old school computer scientists here that might know the reasoning behind this naming? what is the reason for using dump? i have been speculating that it has something to do with how computers back in the day had to dump the memory and not make a screen photograph, but something else. would love to hear your speculations, or possible answer!",1638955440.0,"['post', 'internet', 'prove', 'useless', 'answer', 'question', ',', 'etymology', 'screen', 'dump', '?', 'year', 'word', ',', 'screenshot', ',', 'take', 'use', ""'dump"", ""'"", ',', 'native', 'language', 'word', 'still', 'carry', 'legacy', 'meaning', '.', 'get', 'master', 'informatics', 'currently', 'phd', 'information', 'system', 'research', ',', 'life', 'find', 'answer', '.', 'old-school', '70', '80', 'professor', 'research', 'group', ',', 'live', 'nascent', 'computer', 'science', 'day', ',', 'answer', 'either', '.', 'old', 'school', 'computer', 'scientist', 'might', 'know', 'reason', 'behind', 'name', '?', 'reason', 'use', 'dump', '?', 'speculate', 'something', 'computer', 'back', 'day', 'dump', 'memory', 'make', 'screen', 'photograph', ',', 'something', 'else', '.', 'would', 'love', 'hear', 'speculation', ',', 'possible', 'answer', '!']","[[('posting', 'VBG')], [('internet', 'NN')], [('proving', 'VBG')], [('useless', 'NN')], [('answering', 'VBG')], [('question', 'NN')], [(',', ',')], [('etymology', 'NN')], [('screen', 'NN')], [('dump', 'NN')], [('?', '.')], [('years', 'NNS')], [('word', 'NN')], [(',', ',')], [('screenshot', 'NN')], [(',', ',')], [('taken', 'VBN')], [('use', 'NN')], [(""'dump"", 'NN')], [(""'"", ""''"")], [(',', ',')], [('native', 'JJ')], [('language', 'NN')], [('word', 'NN')], [('still', 'RB')], [('carries', 'VBZ')], [('legacy', 'NN')], [('meaning', 'NN')], [('.', '.')], [('got', 'VBD')], [('master', 'NN')], [('informatics', 'NNS')], [('currently', 'RB')], [('phd', 'NN')], [('information', 'NN')], [('systems', 'NNS')], [('research', 'NN')], [(',', ',')], [('life', 'NN')], [('find', 'VB')], [('answer', 'NN')], [('.', '.')], [('old-school', 'NN')], [('70s', 'NNS')], [('80s', 'CD')], [('professors', 'NNS')], [('research', 'NN')], [('group', 'NN')], [(',', ',')], [('lived', 'VBD')], [('nascent', 'NN')], [('computer', 'NN')], [('science', 'NN')], [('days', 'NNS')], [(',', ',')], [('answer', 'NN')], [('either', 'DT')], [('.', '.')], [('old', 'JJ')], [('school', 'NN')], [('computer', 'NN')], [('scientists', 'NNS')], [('might', 'MD')], [('know', 'VB')], [('reasoning', 'VBG')], [('behind', 'IN')], [('naming', 'VBG')], [('?', '.')], [('reason', 'NN')], [('using', 'VBG')], [('dump', 'NN')], [('?', '.')], [('speculating', 'VBG')], [('something', 'NN')], [('computers', 'NNS')], [('back', 'RB')], [('day', 'NN')], [('dump', 'NN')], [('memory', 'NN')], [('make', 'VB')], [('screen', 'NN')], [('photograph', 'NN')], [(',', ',')], [('something', 'NN')], [('else', 'RB')], [('.', '.')], [('would', 'MD')], [('love', 'NN')], [('hear', 'NN')], [('speculations', 'NNS')], [(',', ',')], [('possible', 'JJ')], [('answer', 'NN')], [('!', '.')]]","post internet prove useless answer question , etymology screen dump ? year word , screenshot , take use 'dump ' , native language word still carry legacy meaning . get master informatics currently phd information system research , life find answer . old-school 70 80 professor research group , live nascent computer science day , answer either . old school computer scientist might know reason behind name ? reason use dump ? speculate something computer back day dump memory make screen photograph , something else . would love hear speculation , possible answer !",3_search_ai_think_google,1
368,rb9f0g,Good books on optical/photonic computing?,,3,0.72,computerscience,https://www.reddit.com/r/computerscience/comments/rb9f0g/good_books_on_opticalphotonic_computing/,2,\^,1638910927.0,['\\^'],"[[('\\^', 'NN')]]",\^,-1_abazbz2abz_2520_problem_use,5
370,ra4e6d,Linear algebra and matrices in computer science,,104,0.99,computerscience,https://www.reddit.com/r/computerscience/comments/ra4e6d/linear_algebra_and_matrices_in_computer_science/,23,"i am really struggling with the first course on linear algebra and matrices and i find it hard to motivate myself, as i do not know many real-life applications to the things i am learning, or am trying to learn.

i know these things have many applications in cs, but since i do not have a clear vision on what i would like to do in this field yet (so far i have enjoyed web deving and i am interested in audio programming and graphics, although i have not gotten into them yet), i do not really know why these things are relevant for me.

any pragmatic examples on why i really should learn this stuff? thank you.

edit: thanks to everyone who has responded, it is greatly appreciated!",1638787049.0,"['really', 'struggle', 'first', 'course', 'linear', 'algebra', 'matrix', 'find', 'hard', 'motivate', ',', 'know', 'many', 'real-life', 'application', 'thing', 'learn', ',', 'try', 'learn', '.', 'know', 'thing', 'many', 'application', 'c', ',', 'since', 'clear', 'vision', 'would', 'like', 'field', 'yet', '(', 'far', 'enjoy', 'web', 'deving', 'interested', 'audio', 'program', 'graphic', ',', 'although', 'gotten', 'yet', ')', ',', 'really', 'know', 'thing', 'relevant', '.', 'pragmatic', 'example', 'really', 'learn', 'stuff', '?', 'thank', '.', 'edit', ':', 'thanks', 'everyone', 'respond', ',', 'greatly', 'appreciate', '!']","[[('really', 'RB')], [('struggling', 'VBG')], [('first', 'RB')], [('course', 'NN')], [('linear', 'NN')], [('algebra', 'NN')], [('matrices', 'NNS')], [('find', 'VB')], [('hard', 'JJ')], [('motivate', 'NN')], [(',', ',')], [('know', 'VB')], [('many', 'JJ')], [('real-life', 'NN')], [('applications', 'NNS')], [('things', 'NNS')], [('learning', 'VBG')], [(',', ',')], [('trying', 'VBG')], [('learn', 'NN')], [('.', '.')], [('know', 'VB')], [('things', 'NNS')], [('many', 'JJ')], [('applications', 'NNS')], [('cs', 'NN')], [(',', ',')], [('since', 'IN')], [('clear', 'JJ')], [('vision', 'NN')], [('would', 'MD')], [('like', 'IN')], [('field', 'NN')], [('yet', 'RB')], [('(', '(')], [('far', 'RB')], [('enjoyed', 'VBN')], [('web', 'NN')], [('deving', 'VBG')], [('interested', 'JJ')], [('audio', 'NN')], [('programming', 'VBG')], [('graphics', 'NNS')], [(',', ',')], [('although', 'IN')], [('gotten', 'NNS')], [('yet', 'RB')], [(')', ')')], [(',', ',')], [('really', 'RB')], [('know', 'VB')], [('things', 'NNS')], [('relevant', 'NN')], [('.', '.')], [('pragmatic', 'JJ')], [('examples', 'NNS')], [('really', 'RB')], [('learn', 'NN')], [('stuff', 'NN')], [('?', '.')], [('thank', 'NN')], [('.', '.')], [('edit', 'NN')], [(':', ':')], [('thanks', 'NNS')], [('everyone', 'NN')], [('responded', 'VBD')], [(',', ',')], [('greatly', 'RB')], [('appreciated', 'VBN')], [('!', '.')]]","really struggle first course linear algebra matrix find hard motivate , know many real-life application thing learn , try learn . know thing many application c , since clear vision would like field yet ( far enjoy web deving interested audio program graphic , although gotten yet ) , really know thing relevant . pragmatic example really learn stuff ? thank . edit : thanks everyone respond , greatly appreciate !",-1_abazbz2abz_2520_problem_use,3
373,rahxnv,Formal Automata Theory next steps,General,10,0.92,computerscience,https://www.reddit.com/r/computerscience/comments/rahxnv/formal_automata_theory_next_steps/,6,"i just recently finished studying automata. i found it very interesting and enjoyed the intuitive process, even though i struggled a bit.

i was wondering what topics or subject matters would be best to study next?",1638825302.0,"['recently', 'finish', 'study', 'automaton', '.', 'found', 'interest', 'enjoy', 'intuitive', 'process', ',', 'even', 'though', 'struggle', 'bit', '.', 'wonder', 'topic', 'subject', 'matter', 'would', 'best', 'study', 'next', '?']","[[('recently', 'RB')], [('finished', 'VBN')], [('studying', 'VBG')], [('automata', 'NNS')], [('.', '.')], [('found', 'NN')], [('interesting', 'VBG')], [('enjoyed', 'VBN')], [('intuitive', 'JJ')], [('process', 'NN')], [(',', ',')], [('even', 'RB')], [('though', 'IN')], [('struggled', 'VBN')], [('bit', 'NN')], [('.', '.')], [('wondering', 'VBG')], [('topics', 'NNS')], [('subject', 'NN')], [('matters', 'NNS')], [('would', 'MD')], [('best', 'JJS')], [('study', 'NN')], [('next', 'JJ')], [('?', '.')]]","recently finish study automaton . found interest enjoy intuitive process , even though struggle bit . wonder topic subject matter would best study next ?",2_computer_learn_science_study,4
374,raflir,Question on malware.,,10,0.76,computerscience,https://www.reddit.com/r/computerscience/comments/raflir/question_on_malware/,4," 

how is it that malware can run on computers that do not have programs that run the language installed? or even certain libraries?

like if i do not have python installed and i get a python virus, how does it run?

or if i did have it, but did not have the right libraries, how could it function?

sorry if this is a stupid question, i am relatively new.

&#x200b;

i just really do not understand how code can even run without the right stuff installed.",1638819261.0,"['malware', 'run', 'computer', 'program', 'run', 'language', 'instal', '?', 'even', 'certain', 'library', '?', 'like', 'python', 'instal', 'get', 'python', 'virus', ',', 'run', '?', ',', 'right', 'library', ',', 'could', 'function', '?', 'sorry', 'stupid', 'question', ',', 'relatively', 'new', '.', '&', '#', 'x200b', ';', 'really', 'understand', 'code', 'even', 'run', 'without', 'right', 'stuff', 'instal', '.']","[[('malware', 'NN')], [('run', 'VB')], [('computers', 'NNS')], [('programs', 'NNS')], [('run', 'VB')], [('language', 'NN')], [('installed', 'VBN')], [('?', '.')], [('even', 'RB')], [('certain', 'JJ')], [('libraries', 'NNS')], [('?', '.')], [('like', 'IN')], [('python', 'NN')], [('installed', 'VBN')], [('get', 'VB')], [('python', 'NN')], [('virus', 'NN')], [(',', ',')], [('run', 'VB')], [('?', '.')], [(',', ',')], [('right', 'NN')], [('libraries', 'NNS')], [(',', ',')], [('could', 'MD')], [('function', 'NN')], [('?', '.')], [('sorry', 'NN')], [('stupid', 'JJ')], [('question', 'NN')], [(',', ',')], [('relatively', 'RB')], [('new', 'JJ')], [('.', '.')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('really', 'RB')], [('understand', 'NN')], [('code', 'NN')], [('even', 'RB')], [('run', 'VB')], [('without', 'IN')], [('right', 'NN')], [('stuff', 'NN')], [('installed', 'VBN')], [('.', '.')]]","malware run computer program run language instal ? even certain library ? like python instal get python virus , run ? , right library , could function ? sorry stupid question , relatively new . & # x200b ; really understand code even run without right stuff instal .",8_language_one_program_write,1
375,raadci,Computation tree,Advice,4,0.84,computerscience,https://www.reddit.com/r/computerscience/comments/raadci/computation_tree/,3,"was watching presentation by the guy steele

[]()

he describes computation as computation tree.

i am trying to find if there are research (books) that focuses on computation trees specifically?

take code -> unfold its execution into computation tree 

found this: [\_tree\_logic]()

this is close but i was wondering is there something that applies ""computation tree"" in compiler/jit/interpreter optimization...?

thanks!",1638805950.0,"['watch', 'presentation', 'guy', 'steele', '[', ']', '(', ')', 'describes', 'computation', 'computation', 'tree', '.', 'try', 'find', 'research', '(', 'book', ')', 'focus', 'computation', 'tree', 'specifically', '?', 'take', 'code', '-', '>', 'unfold', 'execution', 'computation', 'tree', 'found', ':', '[', '\\_tree\\_logic', ']', '(', ')', 'close', 'wonder', 'something', 'applies', '``', 'computation', 'tree', ""''"", 'compiler/jit/interpreter', 'optimization', '...', '?', 'thanks', '!']","[[('watching', 'VBG')], [('presentation', 'NN')], [('guy', 'NN')], [('steele', 'NN')], [('[', 'NN')], [(']', 'NN')], [('(', '(')], [(')', ')')], [('describes', 'NNS')], [('computation', 'NN')], [('computation', 'NN')], [('tree', 'NN')], [('.', '.')], [('trying', 'VBG')], [('find', 'VB')], [('research', 'NN')], [('(', '(')], [('books', 'NNS')], [(')', ')')], [('focuses', 'NNS')], [('computation', 'NN')], [('trees', 'NNS')], [('specifically', 'RB')], [('?', '.')], [('take', 'VB')], [('code', 'NN')], [('-', ':')], [('>', 'NN')], [('unfold', 'JJ')], [('execution', 'NN')], [('computation', 'NN')], [('tree', 'NN')], [('found', 'NN')], [(':', ':')], [('[', 'NN')], [('\\_tree\\_logic', 'NN')], [(']', 'NN')], [('(', '(')], [(')', ')')], [('close', 'RB')], [('wondering', 'VBG')], [('something', 'NN')], [('applies', 'NNS')], [('``', '``')], [('computation', 'NN')], [('tree', 'NN')], [(""''"", ""''"")], [('compiler/jit/interpreter', 'NN')], [('optimization', 'NN')], [('...', ':')], [('?', '.')], [('thanks', 'NNS')], [('!', '.')]]",watch presentation guy steele [ ] ( ) describes computation computation tree . try find research ( book ) focus computation tree specifically ? take code - > unfold execution computation tree found : [ \_tree\_logic ] ( ) close wonder something applies `` computation tree '' compiler/jit/interpreter optimization ... ? thanks !,-1_abazbz2abz_2520_problem_use,3
376,ram49s,Everything's a Provider?,Advice,1,0.57,computerscience,https://www.reddit.com/r/computerscience/comments/ram49s/everythings_a_provider/,4,"i showed a junior engineer that you can reduce dependencies by using inheritance and only using the parts of the interface you need.

for example,

class circle : shape, uielement {}

and later, if all you need is shape properties, then use a shape ref to point to a circle, do not require circles.

but instead, he is now broken *everything* down into single field classes/structures. e.g.

class nameprovider { string name; }

class addressprovider { string address; }

class ageprovider { int age; }

class titleprovider { string title; }

class rankprovider { int rank; }

class heightprovider { int height; }

...

class thing : nameprovider, addressprovider, ageprovider, titleprovider, rankprovider, heightprovider, ...

i find this level of breaking things ridiculous, and it is become impossible to work with his code. it takes forever to figure out what anything is and where it is defined. but he is in love with this new approach and will not compromise. is there a formal reason to not break things out so much? or better yet, is there a test for when you have broken things out the right amount?",1638837044.0,"['show', 'junior', 'engineer', 'reduce', 'dependency', 'use', 'inheritance', 'use', 'part', 'interface', 'need', '.', 'example', ',', 'class', 'circle', ':', 'shape', ',', 'uielement', '{', '}', 'later', ',', 'need', 'shape', 'property', ',', 'use', 'shape', 'ref', 'point', 'circle', ',', 'require', 'circle', '.', 'instead', ',', 'broken', '*', 'everything', '*', 'single', 'field', 'classes/structures', '.', 'e.g', '.', 'class', 'nameprovider', '{', 'string', 'name', ';', '}', 'class', 'addressprovider', '{', 'string', 'address', ';', '}', 'class', 'ageprovider', '{', 'int', 'age', ';', '}', 'class', 'titleprovider', '{', 'string', 'title', ';', '}', 'class', 'rankprovider', '{', 'int', 'rank', ';', '}', 'class', 'heightprovider', '{', 'int', 'height', ';', '}', '...', 'class', 'thing', ':', 'nameprovider', ',', 'addressprovider', ',', 'ageprovider', ',', 'titleprovider', ',', 'rankprovider', ',', 'heightprovider', ',', '...', 'find', 'level', 'break', 'thing', 'ridiculous', ',', 'become', 'impossible', 'work', 'code', '.', 'take', 'forever', 'figure', 'anything', 'define', '.', 'love', 'new', 'approach', 'compromise', '.', 'formal', 'reason', 'break', 'thing', 'much', '?', 'well', 'yet', ',', 'test', 'broken', 'thing', 'right', 'amount', '?']","[[('showed', 'VBD')], [('junior', 'NN')], [('engineer', 'NN')], [('reduce', 'VB')], [('dependencies', 'NNS')], [('using', 'VBG')], [('inheritance', 'NN')], [('using', 'VBG')], [('parts', 'NNS')], [('interface', 'NN')], [('need', 'NN')], [('.', '.')], [('example', 'NN')], [(',', ',')], [('class', 'NN')], [('circle', 'NN')], [(':', ':')], [('shape', 'NN')], [(',', ',')], [('uielement', 'NN')], [('{', '(')], [('}', ')')], [('later', 'RB')], [(',', ',')], [('need', 'NN')], [('shape', 'NN')], [('properties', 'NNS')], [(',', ',')], [('use', 'NN')], [('shape', 'NN')], [('ref', 'NN')], [('point', 'NN')], [('circle', 'NN')], [(',', ',')], [('require', 'NN')], [('circles', 'NNS')], [('.', '.')], [('instead', 'RB')], [(',', ',')], [('broken', 'NN')], [('*', 'NN')], [('everything', 'NN')], [('*', 'NN')], [('single', 'JJ')], [('field', 'NN')], [('classes/structures', 'NNS')], [('.', '.')], [('e.g', 'NN')], [('.', '.')], [('class', 'NN')], [('nameprovider', 'NN')], [('{', '(')], [('string', 'NN')], [('name', 'NN')], [(';', ':')], [('}', ')')], [('class', 'NN')], [('addressprovider', 'NN')], [('{', '(')], [('string', 'NN')], [('address', 'NN')], [(';', ':')], [('}', ')')], [('class', 'NN')], [('ageprovider', 'NN')], [('{', '(')], [('int', 'NN')], [('age', 'NN')], [(';', ':')], [('}', ')')], [('class', 'NN')], [('titleprovider', 'NN')], [('{', '(')], [('string', 'NN')], [('title', 'NN')], [(';', ':')], [('}', ')')], [('class', 'NN')], [('rankprovider', 'NN')], [('{', '(')], [('int', 'NN')], [('rank', 'NN')], [(';', ':')], [('}', ')')], [('class', 'NN')], [('heightprovider', 'NN')], [('{', '(')], [('int', 'NN')], [('height', 'NN')], [(';', ':')], [('}', ')')], [('...', ':')], [('class', 'NN')], [('thing', 'NN')], [(':', ':')], [('nameprovider', 'NN')], [(',', ',')], [('addressprovider', 'NN')], [(',', ',')], [('ageprovider', 'NN')], [(',', ',')], [('titleprovider', 'NN')], [(',', ',')], [('rankprovider', 'NN')], [(',', ',')], [('heightprovider', 'NN')], [(',', ',')], [('...', ':')], [('find', 'VB')], [('level', 'NN')], [('breaking', 'VBG')], [('things', 'NNS')], [('ridiculous', 'JJ')], [(',', ',')], [('become', 'NN')], [('impossible', 'JJ')], [('work', 'NN')], [('code', 'NN')], [('.', '.')], [('takes', 'VBZ')], [('forever', 'RB')], [('figure', 'NN')], [('anything', 'NN')], [('defined', 'VBN')], [('.', '.')], [('love', 'NN')], [('new', 'JJ')], [('approach', 'NN')], [('compromise', 'NN')], [('.', '.')], [('formal', 'JJ')], [('reason', 'NN')], [('break', 'NN')], [('things', 'NNS')], [('much', 'JJ')], [('?', '.')], [('better', 'RBR')], [('yet', 'RB')], [(',', ',')], [('test', 'NN')], [('broken', 'NN')], [('things', 'NNS')], [('right', 'NN')], [('amount', 'NN')], [('?', '.')]]","show junior engineer reduce dependency use inheritance use part interface need . example , class circle : shape , uielement { } later , need shape property , use shape ref point circle , require circle . instead , broken * everything * single field classes/structures . e.g . class nameprovider { string name ; } class addressprovider { string address ; } class ageprovider { int age ; } class titleprovider { string title ; } class rankprovider { int rank ; } class heightprovider { int height ; } ... class thing : nameprovider , addressprovider , ageprovider , titleprovider , rankprovider , heightprovider , ... find level break thing ridiculous , become impossible work code . take forever figure anything define . love new approach compromise . formal reason break thing much ? well yet , test broken thing right amount ?",-1_abazbz2abz_2520_problem_use,2
377,rabwtu,Does it make sense to study something from 2007 and will it really make me a better engineer?,,3,0.67,computerscience,https://www.reddit.com/r/computerscience/comments/rabwtu/does_it_make_sense_to_study_something_from_2007/,4,"hi. i am a self-taught developer who studied cs50 and full-stack web development and is solving coding challenges daily. i am trying to become a better developer by deeply understanding the fundamentals of cs but i am not really sure if i will become a better developer by doing so. i came across that website: [/](/)

and i found it has old books and 2007 mit courses. i want to know from more experienced developers out there if it is worth it to study these old heavy textbooks and courses? i am not trying to learn the theoretical side of computer science or something i am just trying to become a better developer who can provide better value for businesses.",1638809925.0,"['hi', '.', 'self-taught', 'developer', 'study', 'cs50', 'full-stack', 'web', 'development', 'solve', 'cod', 'challenge', 'daily', '.', 'try', 'become', 'well', 'developer', 'deeply', 'understand', 'fundamental', 'c', 'really', 'sure', 'become', 'well', 'developer', '.', 'come', 'across', 'website', ':', '[', '/', ']', '(', '/', ')', 'found', 'old', 'book', '2007', 'mit', 'course', '.', 'want', 'know', 'experienced', 'developer', 'worth', 'study', 'old', 'heavy', 'textbook', 'course', '?', 'try', 'learn', 'theoretical', 'side', 'computer', 'science', 'something', 'try', 'become', 'well', 'developer', 'provide', 'well', 'value', 'business', '.']","[[('hi', 'NN')], [('.', '.')], [('self-taught', 'NN')], [('developer', 'NN')], [('studied', 'VBN')], [('cs50', 'NN')], [('full-stack', 'NN')], [('web', 'NN')], [('development', 'NN')], [('solving', 'VBG')], [('coding', 'VBG')], [('challenges', 'NNS')], [('daily', 'JJ')], [('.', '.')], [('trying', 'VBG')], [('become', 'NN')], [('better', 'RBR')], [('developer', 'NN')], [('deeply', 'NN')], [('understanding', 'VBG')], [('fundamentals', 'NNS')], [('cs', 'NN')], [('really', 'RB')], [('sure', 'NN')], [('become', 'NN')], [('better', 'RBR')], [('developer', 'NN')], [('.', '.')], [('came', 'VBD')], [('across', 'IN')], [('website', 'NN')], [(':', ':')], [('[', 'NN')], [('/', 'NN')], [(']', 'NN')], [('(', '(')], [('/', 'NN')], [(')', ')')], [('found', 'NN')], [('old', 'JJ')], [('books', 'NNS')], [('2007', 'CD')], [('mit', 'NN')], [('courses', 'NNS')], [('.', '.')], [('want', 'NN')], [('know', 'VB')], [('experienced', 'JJ')], [('developers', 'NNS')], [('worth', 'NN')], [('study', 'NN')], [('old', 'JJ')], [('heavy', 'JJ')], [('textbooks', 'NNS')], [('courses', 'NNS')], [('?', '.')], [('trying', 'VBG')], [('learn', 'NN')], [('theoretical', 'JJ')], [('side', 'NN')], [('computer', 'NN')], [('science', 'NN')], [('something', 'NN')], [('trying', 'VBG')], [('become', 'NN')], [('better', 'RBR')], [('developer', 'NN')], [('provide', 'NN')], [('better', 'RBR')], [('value', 'NN')], [('businesses', 'NNS')], [('.', '.')]]",hi . self-taught developer study cs50 full-stack web development solve cod challenge daily . try become well developer deeply understand fundamental c really sure become well developer . come across website : [ / ] ( / ) found old book 2007 mit course . want know experienced developer worth study old heavy textbook course ? try learn theoretical side computer science something try become well developer provide well value business .,2_computer_learn_science_study,2
379,r9qvnk,How do I lead a project?,,1,0.6,computerscience,https://www.reddit.com/r/computerscience/comments/r9qvnk/how_do_i_lead_a_project/,8,"alright, to give some background on myself, i am a junior in high school who has been learning to code and programming for the past 2 years in just one language. anyways, this year, i decided to join my school's cs club where they said they were taking applicants for team leads. i did not really know what a team lead was and they left it pretty vague so i decided to sign up because i felt like why not and that this would probably be a good opportunity for me to learn some leadership skills. this being said, i really did not know what i was getting into. for one thing, i assumed that we would be having team meetings during the club at lunch on friday when we usually meet, however, in reality i am supposed to schedule meetings on my own. anyways, this is not really too much of an issue for me however, my largest issue is the fact that 9 people signed up to be in my group, most of them arguably better programmers than me, and others, quite beginner. this is an issue for me because i have never actually coded something not by myself so i really have no idea how to divide up the work into 9 parts given how interrelated everything is in the project. in the same sense, i really have no idea how often i should meet with my group. i feel like the project is fairly simple and i am afraid if we meet even just an hour a week we would probably finish within a month. if you want more details on what the project is, feel free to dm me, however, if anyone could give me advice on how i should proceed given how lost i am that would be great.",1638742267.0,"['alright', ',', 'give', 'background', ',', 'junior', 'high', 'school', 'learn', 'code', 'program', 'past', '2', 'year', 'one', 'language', '.', 'anyways', ',', 'year', ',', 'decide', 'join', 'school', ""'s"", 'c', 'club', 'say', 'take', 'applicant', 'team', 'lead', '.', 'really', 'know', 'team', 'lead', 'left', 'pretty', 'vague', 'decide', 'sign', 'felt', 'like', 'would', 'probably', 'good', 'opportunity', 'learn', 'leadership', 'skill', '.', 'say', ',', 'really', 'know', 'get', '.', 'one', 'thing', ',', 'assume', 'would', 'team', 'meeting', 'club', 'lunch', 'friday', 'usually', 'meet', ',', 'however', ',', 'reality', 'suppose', 'schedule', 'meeting', '.', 'anyways', ',', 'really', 'much', 'issue', 'however', ',', 'large', 'issue', 'fact', '9', 'people', 'sign', 'group', ',', 'arguably', 'well', 'programmer', ',', 'others', ',', 'quite', 'beginner', '.', 'issue', 'never', 'actually', 'cod', 'something', 'really', 'idea', 'divide', 'work', '9', 'part', 'give', 'interrelate', 'everything', 'project', '.', 'sense', ',', 'really', 'idea', 'often', 'meet', 'group', '.', 'feel', 'like', 'project', 'fairly', 'simple', 'afraid', 'meet', 'even', 'hour', 'week', 'would', 'probably', 'finish', 'within', 'month', '.', 'want', 'detail', 'project', ',', 'feel', 'free', 'dm', ',', 'however', ',', 'anyone', 'could', 'give', 'advice', 'proceed', 'give', 'lose', 'would', 'great', '.']","[[('alright', 'NN')], [(',', ',')], [('give', 'VB')], [('background', 'NN')], [(',', ',')], [('junior', 'NN')], [('high', 'JJ')], [('school', 'NN')], [('learning', 'VBG')], [('code', 'NN')], [('programming', 'VBG')], [('past', 'NN')], [('2', 'CD')], [('years', 'NNS')], [('one', 'CD')], [('language', 'NN')], [('.', '.')], [('anyways', 'NNS')], [(',', ',')], [('year', 'NN')], [(',', ',')], [('decided', 'VBD')], [('join', 'NN')], [('school', 'NN')], [(""'s"", 'POS')], [('cs', 'NN')], [('club', 'NN')], [('said', 'VBD')], [('taking', 'VBG')], [('applicants', 'NNS')], [('team', 'NN')], [('leads', 'NNS')], [('.', '.')], [('really', 'RB')], [('know', 'VB')], [('team', 'NN')], [('lead', 'NN')], [('left', 'NN')], [('pretty', 'RB')], [('vague', 'NN')], [('decided', 'VBD')], [('sign', 'NN')], [('felt', 'NN')], [('like', 'IN')], [('would', 'MD')], [('probably', 'RB')], [('good', 'JJ')], [('opportunity', 'NN')], [('learn', 'NN')], [('leadership', 'NN')], [('skills', 'NNS')], [('.', '.')], [('said', 'VBD')], [(',', ',')], [('really', 'RB')], [('know', 'VB')], [('getting', 'VBG')], [('.', '.')], [('one', 'CD')], [('thing', 'NN')], [(',', ',')], [('assumed', 'VBN')], [('would', 'MD')], [('team', 'NN')], [('meetings', 'NNS')], [('club', 'NN')], [('lunch', 'NN')], [('friday', 'NN')], [('usually', 'RB')], [('meet', 'NN')], [(',', ',')], [('however', 'RB')], [(',', ',')], [('reality', 'NN')], [('supposed', 'VBN')], [('schedule', 'NN')], [('meetings', 'NNS')], [('.', '.')], [('anyways', 'NNS')], [(',', ',')], [('really', 'RB')], [('much', 'JJ')], [('issue', 'NN')], [('however', 'RB')], [(',', ',')], [('largest', 'JJS')], [('issue', 'NN')], [('fact', 'NN')], [('9', 'CD')], [('people', 'NNS')], [('signed', 'VBN')], [('group', 'NN')], [(',', ',')], [('arguably', 'RB')], [('better', 'RBR')], [('programmers', 'NNS')], [(',', ',')], [('others', 'NNS')], [(',', ',')], [('quite', 'RB')], [('beginner', 'NN')], [('.', '.')], [('issue', 'NN')], [('never', 'RB')], [('actually', 'RB')], [('coded', 'VBN')], [('something', 'NN')], [('really', 'RB')], [('idea', 'NN')], [('divide', 'NN')], [('work', 'NN')], [('9', 'CD')], [('parts', 'NNS')], [('given', 'VBN')], [('interrelated', 'VBN')], [('everything', 'NN')], [('project', 'NN')], [('.', '.')], [('sense', 'NN')], [(',', ',')], [('really', 'RB')], [('idea', 'NN')], [('often', 'RB')], [('meet', 'NN')], [('group', 'NN')], [('.', '.')], [('feel', 'NN')], [('like', 'IN')], [('project', 'NN')], [('fairly', 'RB')], [('simple', 'NN')], [('afraid', 'NN')], [('meet', 'NN')], [('even', 'RB')], [('hour', 'NN')], [('week', 'NN')], [('would', 'MD')], [('probably', 'RB')], [('finish', 'NN')], [('within', 'IN')], [('month', 'NN')], [('.', '.')], [('want', 'NN')], [('details', 'NNS')], [('project', 'NN')], [(',', ',')], [('feel', 'NN')], [('free', 'JJ')], [('dm', 'NN')], [(',', ',')], [('however', 'RB')], [(',', ',')], [('anyone', 'NN')], [('could', 'MD')], [('give', 'VB')], [('advice', 'NN')], [('proceed', 'NN')], [('given', 'VBN')], [('lost', 'VBN')], [('would', 'MD')], [('great', 'JJ')], [('.', '.')]]","alright , give background , junior high school learn code program past 2 year one language . anyways , year , decide join school 's c club say take applicant team lead . really know team lead left pretty vague decide sign felt like would probably good opportunity learn leadership skill . say , really know get . one thing , assume would team meeting club lunch friday usually meet , however , reality suppose schedule meeting . anyways , really much issue however , large issue fact 9 people sign group , arguably well programmer , others , quite beginner . issue never actually cod something really idea divide work 9 part give interrelate everything project . sense , really idea often meet group . feel like project fairly simple afraid meet even hour week would probably finish within month . want detail project , feel free dm , however , anyone could give advice proceed give lose would great .",2_computer_learn_science_study,3
380,r95hk3,How do computers render perfect circles given things like SVG images?,Discussion,18,0.95,computerscience,https://www.reddit.com/r/computerscience/comments/r95hk3/how_do_computers_render_perfect_circles_given/,10,"i do not know if this is the right place to ask but i could not think of any other subs that might be appropriate. basically, how does the computer take an svg image, and create a perfect circle that is perfectly circular no matter how ""zoomed in"" you are. it seems like its either a lot less complicated than i am assuming or a lot more complicated than i am assuming, but it seemed like an interesting topic.",1638671737.0,"['know', 'right', 'place', 'ask', 'could', 'think', 'sub', 'might', 'appropriate', '.', 'basically', ',', 'computer', 'take', 'svg', 'image', ',', 'create', 'perfect', 'circle', 'perfectly', 'circular', 'matter', '``', 'zoom', ""''"", '.', 'seem', 'like', 'either', 'lot', 'less', 'complicate', 'assume', 'lot', 'complicate', 'assume', ',', 'seem', 'like', 'interest', 'topic', '.']","[[('know', 'VB')], [('right', 'NN')], [('place', 'NN')], [('ask', 'NN')], [('could', 'MD')], [('think', 'NN')], [('subs', 'NNS')], [('might', 'MD')], [('appropriate', 'NN')], [('.', '.')], [('basically', 'RB')], [(',', ',')], [('computer', 'NN')], [('take', 'VB')], [('svg', 'NN')], [('image', 'NN')], [(',', ',')], [('create', 'NN')], [('perfect', 'NN')], [('circle', 'NN')], [('perfectly', 'RB')], [('circular', 'NN')], [('matter', 'NN')], [('``', '``')], [('zoomed', 'VBN')], [(""''"", ""''"")], [('.', '.')], [('seems', 'VBZ')], [('like', 'IN')], [('either', 'DT')], [('lot', 'NN')], [('less', 'RBR')], [('complicated', 'VBN')], [('assuming', 'VBG')], [('lot', 'NN')], [('complicated', 'VBN')], [('assuming', 'VBG')], [(',', ',')], [('seemed', 'VBD')], [('like', 'IN')], [('interesting', 'VBG')], [('topic', 'NN')], [('.', '.')]]","know right place ask could think sub might appropriate . basically , computer take svg image , create perfect circle perfectly circular matter `` zoom '' . seem like either lot less complicate assume lot complicate assume , seem like interest topic .",-1_abazbz2abz_2520_problem_use,3
381,r8rl8f,What Part of Computer Science Does Computer Graphics Fall Under?,,75,0.94,computerscience,https://www.reddit.com/r/computerscience/comments/r8rl8f/what_part_of_computer_science_does_computer/,21,"i am really interested in creating software like game-engines or 3d modeling software, mainly i like to deal with the graphical aspects of the software like reflections or lighting. what would be the name of the course that i will study?",1638630602.0,"['really', 'interested', 'create', 'software', 'like', 'game-engines', '3d', 'model', 'software', ',', 'mainly', 'like', 'deal', 'graphical', 'aspect', 'software', 'like', 'reflection', 'light', '.', 'would', 'name', 'course', 'study', '?']","[[('really', 'RB')], [('interested', 'JJ')], [('creating', 'VBG')], [('software', 'NN')], [('like', 'IN')], [('game-engines', 'NNS')], [('3d', 'CD')], [('modeling', 'VBG')], [('software', 'NN')], [(',', ',')], [('mainly', 'RB')], [('like', 'IN')], [('deal', 'NN')], [('graphical', 'JJ')], [('aspects', 'NNS')], [('software', 'NN')], [('like', 'IN')], [('reflections', 'NNS')], [('lighting', 'VBG')], [('.', '.')], [('would', 'MD')], [('name', 'NN')], [('course', 'NN')], [('study', 'NN')], [('?', '.')]]","really interested create software like game-engines 3d model software , mainly like deal graphical aspect software like reflection light . would name course study ?",2_computer_learn_science_study,3
382,r8z2ei,"Does publishing an app on the Apple store constitute as ""commercialization""?",,5,0.73,computerscience,https://www.reddit.com/r/computerscience/comments/r8z2ei/does_publishing_an_app_on_the_apple_store/,8,"i am working on an ios application for my portfolio. i am a frontend guy so i am using an open api as the backend. it is free to use but strictly mentions that the data must not be ""commercialized"". 

1. does this mean i can only use the api as a personal project, and not publish? 

2. or does it mean i can publish my application - i just cannot monetize it?",1638651761.0,"['work', 'io', 'application', 'portfolio', '.', 'frontend', 'guy', 'use', 'open', 'api', 'backend', '.', 'free', 'use', 'strictly', 'mention', 'data', 'must', '``', 'commercialize', ""''"", '.', '1.', 'mean', 'use', 'api', 'personal', 'project', ',', 'publish', '?', '2.', 'mean', 'publish', 'application', '-', 'monetize', '?']","[[('working', 'VBG')], [('ios', 'NNS')], [('application', 'NN')], [('portfolio', 'NN')], [('.', '.')], [('frontend', 'NN')], [('guy', 'NN')], [('using', 'VBG')], [('open', 'JJ')], [('api', 'NN')], [('backend', 'NN')], [('.', '.')], [('free', 'JJ')], [('use', 'NN')], [('strictly', 'RB')], [('mentions', 'NNS')], [('data', 'NNS')], [('must', 'MD')], [('``', '``')], [('commercialized', 'VBN')], [(""''"", ""''"")], [('.', '.')], [('1.', 'CD')], [('mean', 'NN')], [('use', 'NN')], [('api', 'NN')], [('personal', 'JJ')], [('project', 'NN')], [(',', ',')], [('publish', 'NN')], [('?', '.')], [('2.', 'CD')], [('mean', 'NN')], [('publish', 'NN')], [('application', 'NN')], [('-', ':')], [('monetize', 'NN')], [('?', '.')]]","work io application portfolio . frontend guy use open api backend . free use strictly mention data must `` commercialize '' . 1. mean use api personal project , publish ? 2. mean publish application - monetize ?",-1_abazbz2abz_2520_problem_use,3
383,r8upnl,How did early computers understand input?,Discussion,3,0.62,computerscience,https://www.reddit.com/r/computerscience/comments/r8upnl/how_did_early_computers_understand_input/,8,"i know they used punch cards and ascii, but without programming languages like we have nowadays how did the computers understand what was on the cards? how can a machine understand input without a language allowing it to do so? it would be like talking to a rock and expecting it to do something. i am really curious about how this worked, how the first communication with machines began. cannot seem to find an answer on google",1638639539.0,"['know', 'use', 'punch', 'card', 'ascii', ',', 'without', 'program', 'language', 'like', 'nowadays', 'computer', 'understand', 'card', '?', 'machine', 'understand', 'input', 'without', 'language', 'allow', '?', 'would', 'like', 'talk', 'rock', 'expect', 'something', '.', 'really', 'curious', 'work', ',', 'first', 'communication', 'machine', 'begin', '.', 'seem', 'find', 'answer', 'google']","[[('know', 'VB')], [('used', 'VBN')], [('punch', 'NN')], [('cards', 'NNS')], [('ascii', 'NN')], [(',', ',')], [('without', 'IN')], [('programming', 'VBG')], [('languages', 'NNS')], [('like', 'IN')], [('nowadays', 'NNS')], [('computers', 'NNS')], [('understand', 'NN')], [('cards', 'NNS')], [('?', '.')], [('machine', 'NN')], [('understand', 'NN')], [('input', 'NN')], [('without', 'IN')], [('language', 'NN')], [('allowing', 'VBG')], [('?', '.')], [('would', 'MD')], [('like', 'IN')], [('talking', 'VBG')], [('rock', 'NN')], [('expecting', 'VBG')], [('something', 'NN')], [('.', '.')], [('really', 'RB')], [('curious', 'JJ')], [('worked', 'VBN')], [(',', ',')], [('first', 'RB')], [('communication', 'NN')], [('machines', 'NNS')], [('began', 'VBD')], [('.', '.')], [('seem', 'NN')], [('find', 'VB')], [('answer', 'NN')], [('google', 'NN')]]","know use punch card ascii , without program language like nowadays computer understand card ? machine understand input without language allow ? would like talk rock expect something . really curious work , first communication machine begin . seem find answer google",8_language_one_program_write,2
384,r8f02f,How does firmware get updated?,Discussion,26,0.84,computerscience,https://www.reddit.com/r/computerscience/comments/r8f02f/how_does_firmware_get_updated/,16,"so if firmware is on an rom chip soldered to the motherboard, this should mean it is impossible to change what is on the chip because it is read only. but firmware updates happen over the internet, so how is that possible?",1638583707.0,"['firmware', 'rom', 'chip', 'solder', 'motherboard', ',', 'mean', 'impossible', 'change', 'chip', 'read', '.', 'firmware', 'update', 'happen', 'internet', ',', 'possible', '?']","[[('firmware', 'NN')], [('rom', 'NN')], [('chip', 'NN')], [('soldered', 'VBN')], [('motherboard', 'NN')], [(',', ',')], [('mean', 'NN')], [('impossible', 'JJ')], [('change', 'NN')], [('chip', 'NN')], [('read', 'NN')], [('.', '.')], [('firmware', 'NN')], [('updates', 'NNS')], [('happen', 'VB')], [('internet', 'NN')], [(',', ',')], [('possible', 'JJ')], [('?', '.')]]","firmware rom chip solder motherboard , mean impossible change chip read . firmware update happen internet , possible ?",5_cpu_computer_run_process,3
385,r8mrol,Are pointers useless in the same scope?,Discussion,3,1.0,computerscience,https://www.reddit.com/r/computerscience/comments/r8mrol/are_pointers_useless_in_the_same_scope/,8,"pointers are obviously very useful when they point to values across function calls but are they actually useful while pointing to values in the same scope. for example if a variable `age` stores the value `114`, i can update the the value of `age` by creating a pointer to that memory address, but why would i do that? i can simply change the value of `age` directly because i have access to it as i am changing from the same scope.

a reason i could think of for creating a pointer to a variable in the same scope is that it might be useful to have pointers point to a variable in the same scope because it would make the naming easy and referencing to the value in huge codebases would be made easier, but i do not think that this is a good use case. 

the main purpose of pointers is to stop the wastage of memory by copying of the values stored in a variable to another variable but if we are creating pointers, we are of course storing them in a variable which is taking memory so we are back to square one. this might not be the case where variables store a lot of data, this is true for variables that store less data than the memory address itself.

my question is that is there any use for creating pointers that point to variables in the same scope or they are never used like that. stating any examples would be very helpful!",1638613113.0,"['pointer', 'obviously', 'useful', 'point', 'value', 'across', 'function', 'call', 'actually', 'useful', 'point', 'value', 'scope', '.', 'example', 'variable', '`', 'age', '`', 'store', 'value', '`', '114', '`', ',', 'update', 'value', '`', 'age', '`', 'create', 'pointer', 'memory', 'address', ',', 'would', '?', 'simply', 'change', 'value', '`', 'age', '`', 'directly', 'access', 'change', 'scope', '.', 'reason', 'could', 'think', 'create', 'pointer', 'variable', 'scope', 'might', 'useful', 'pointer', 'point', 'variable', 'scope', 'would', 'make', 'name', 'easy', 'reference', 'value', 'huge', 'codebases', 'would', 'make', 'easy', ',', 'think', 'good', 'use', 'case', '.', 'main', 'purpose', 'pointer', 'stop', 'wastage', 'memory', 'copying', 'value', 'store', 'variable', 'another', 'variable', 'create', 'pointer', ',', 'course', 'store', 'variable', 'take', 'memory', 'back', 'square', 'one', '.', 'might', 'case', 'variable', 'store', 'lot', 'data', ',', 'true', 'variable', 'store', 'less', 'data', 'memory', 'address', '.', 'question', 'use', 'create', 'pointer', 'point', 'variable', 'scope', 'never', 'use', 'like', '.', 'state', 'example', 'would', 'helpful', '!']","[[('pointers', 'NNS')], [('obviously', 'RB')], [('useful', 'JJ')], [('point', 'NN')], [('values', 'NNS')], [('across', 'IN')], [('function', 'NN')], [('calls', 'NNS')], [('actually', 'RB')], [('useful', 'JJ')], [('pointing', 'VBG')], [('values', 'NNS')], [('scope', 'NN')], [('.', '.')], [('example', 'NN')], [('variable', 'JJ')], [('`', '``')], [('age', 'NN')], [('`', '``')], [('stores', 'NNS')], [('value', 'NN')], [('`', '``')], [('114', 'CD')], [('`', '``')], [(',', ',')], [('update', 'NN')], [('value', 'NN')], [('`', '``')], [('age', 'NN')], [('`', '``')], [('creating', 'VBG')], [('pointer', 'NN')], [('memory', 'NN')], [('address', 'NN')], [(',', ',')], [('would', 'MD')], [('?', '.')], [('simply', 'RB')], [('change', 'NN')], [('value', 'NN')], [('`', '``')], [('age', 'NN')], [('`', '``')], [('directly', 'RB')], [('access', 'NN')], [('changing', 'VBG')], [('scope', 'NN')], [('.', '.')], [('reason', 'NN')], [('could', 'MD')], [('think', 'NN')], [('creating', 'VBG')], [('pointer', 'NN')], [('variable', 'JJ')], [('scope', 'NN')], [('might', 'MD')], [('useful', 'JJ')], [('pointers', 'NNS')], [('point', 'NN')], [('variable', 'JJ')], [('scope', 'NN')], [('would', 'MD')], [('make', 'VB')], [('naming', 'VBG')], [('easy', 'JJ')], [('referencing', 'VBG')], [('value', 'NN')], [('huge', 'JJ')], [('codebases', 'NNS')], [('would', 'MD')], [('made', 'VBN')], [('easier', 'JJR')], [(',', ',')], [('think', 'NN')], [('good', 'JJ')], [('use', 'NN')], [('case', 'NN')], [('.', '.')], [('main', 'JJ')], [('purpose', 'NN')], [('pointers', 'NNS')], [('stop', 'NN')], [('wastage', 'NN')], [('memory', 'NN')], [('copying', 'NN')], [('values', 'NNS')], [('stored', 'VBN')], [('variable', 'JJ')], [('another', 'DT')], [('variable', 'JJ')], [('creating', 'VBG')], [('pointers', 'NNS')], [(',', ',')], [('course', 'NN')], [('storing', 'VBG')], [('variable', 'JJ')], [('taking', 'VBG')], [('memory', 'NN')], [('back', 'RB')], [('square', 'NN')], [('one', 'CD')], [('.', '.')], [('might', 'MD')], [('case', 'NN')], [('variables', 'NNS')], [('store', 'NN')], [('lot', 'NN')], [('data', 'NNS')], [(',', ',')], [('true', 'JJ')], [('variables', 'NNS')], [('store', 'NN')], [('less', 'RBR')], [('data', 'NNS')], [('memory', 'NN')], [('address', 'NN')], [('.', '.')], [('question', 'NN')], [('use', 'NN')], [('creating', 'VBG')], [('pointers', 'NNS')], [('point', 'NN')], [('variables', 'NNS')], [('scope', 'NN')], [('never', 'RB')], [('used', 'VBN')], [('like', 'IN')], [('.', '.')], [('stating', 'VBG')], [('examples', 'NNS')], [('would', 'MD')], [('helpful', 'NN')], [('!', '.')]]","pointer obviously useful point value across function call actually useful point value scope . example variable ` age ` store value ` 114 ` , update value ` age ` create pointer memory address , would ? simply change value ` age ` directly access change scope . reason could think create pointer variable scope might useful pointer point variable scope would make name easy reference value huge codebases would make easy , think good use case . main purpose pointer stop wastage memory copying value store variable another variable create pointer , course store variable take memory back square one . might case variable store lot data , true variable store less data memory address . question use create pointer point variable scope never use like . state example would helpful !",1_memory_byte_data_alignment,3
386,r80r4b,Any good resources or books for learning Lambda Calculus?,,49,0.97,computerscience,https://www.reddit.com/r/computerscience/comments/r80r4b/any_good_resources_or_books_for_learning_lambda/,11,"as in title, i would appreciate any reccomendation.",1638543014.0,"['title', ',', 'would', 'appreciate', 'reccomendation', '.']","[[('title', 'NN')], [(',', ',')], [('would', 'MD')], [('appreciate', 'NN')], [('reccomendation', 'NN')], [('.', '.')]]","title , would appreciate reccomendation .",4_book_learn_computer_good,3
387,r81i62,Any good resources to learn Boolean Algebra?,Help,19,0.96,computerscience,https://www.reddit.com/r/computerscience/comments/r81i62/any_good_resources_to_learn_boolean_algebra/,11,i have my exams in a few days and i need to learn about boolean algebras and logic gates. can you guys please help me with some resources?,1638545028.0,"['exam', 'day', 'need', 'learn', 'boolean', 'algebra', 'logic', 'gate', '.', 'guy', 'please', 'help', 'resource', '?']","[[('exams', 'NNS')], [('days', 'NNS')], [('need', 'NN')], [('learn', 'NN')], [('boolean', 'NN')], [('algebras', 'NNS')], [('logic', 'NN')], [('gates', 'NNS')], [('.', '.')], [('guys', 'NNS')], [('please', 'NN')], [('help', 'NN')], [('resources', 'NNS')], [('?', '.')]]",exam day need learn boolean algebra logic gate . guy please help resource ?,7_tm_state_turing_universal,4
388,r7x6t1,What is the difference between AI specialists and computational scientists?,,3,1.0,computerscience,https://www.reddit.com/r/computerscience/comments/r7x6t1/what_is_the_difference_between_ai_specialists_and/,2,i am currently an ug student in comp sci and want to pg in a field that contributes more to scientific research. the fields i have found that do this are ai and computational science. they seem pretty close to me so what is the difference between them and which is better wrt to my goal?,1638531200.0,"['currently', 'ug', 'student', 'comp', 'sci', 'want', 'pg', 'field', 'contributes', 'scientific', 'research', '.', 'field', 'found', 'ai', 'computational', 'science', '.', 'seem', 'pretty', 'close', 'difference', 'well', 'wrt', 'goal', '?']","[[('currently', 'RB')], [('ug', 'NN')], [('student', 'NN')], [('comp', 'NN')], [('sci', 'NN')], [('want', 'NN')], [('pg', 'NN')], [('field', 'NN')], [('contributes', 'NNS')], [('scientific', 'JJ')], [('research', 'NN')], [('.', '.')], [('fields', 'NNS')], [('found', 'NN')], [('ai', 'NN')], [('computational', 'NN')], [('science', 'NN')], [('.', '.')], [('seem', 'NN')], [('pretty', 'RB')], [('close', 'RB')], [('difference', 'NN')], [('better', 'RBR')], [('wrt', 'NN')], [('goal', 'NN')], [('?', '.')]]",currently ug student comp sci want pg field contributes scientific research . field found ai computational science . seem pretty close difference well wrt goal ?,3_search_ai_think_google,3
390,r7nt4h,Help with Asymptotic Growth,Advice,12,0.78,computerscience,https://www.reddit.com/r/computerscience/comments/r7nt4h/help_with_asymptotic_growth/,5,"edit: for people asking the same question as me, i have found an incredibly useful video that explains asymptotic growth and asymptotic bounding. please watch this here: []()

hello. this post is very simple: i am struggling to understand asymptotic growth. it just seems like this pointless silly abstract mathematical concept that does not even make sense when its applied to things like computational complexity. i can write down definitions of what it means for f to equal o(g), but i do not understand the problem, i do not understand how this is the solution, and i do not understand how the solution could not be something else. basically, i need a resource that can really comprehensively teach what this thing is in a way that makes sense for it to exist.

&#x200b;

rant-- skip to tl;dr if uninterested

like if you already have a function that perfectly describes your algorithms time complexity, what is the point in simplifying it in a weird way that breaks algebra rules? if you are trying to compare it to another algorithm, then why not just... compare it to another algorithm? grab two functions, from two different algorithms, come up with some reasonable input sizes, and evaluate. simple as that. but then there is this best case worst case thing? and i do not get how what comes out of the definitions is the best or worst case... the way that o(n) was defined to me just made it seem like any arbitrary function that was larger than f(n) could suffice in defining the worst case scenario...

&#x200b;

tl;dr please give me resources on asymptotic growth that go deeper into explaining why its a thing and how its actually useful",1638497963.0,"['edit', ':', 'people', 'ask', 'question', ',', 'found', 'incredibly', 'useful', 'video', 'explains', 'asymptotic', 'growth', 'asymptotic', 'bound', '.', 'please', 'watch', ':', '[', ']', '(', ')', 'hello', '.', 'post', 'simple', ':', 'struggle', 'understand', 'asymptotic', 'growth', '.', 'seem', 'like', 'pointless', 'silly', 'abstract', 'mathematical', 'concept', 'even', 'make', 'sense', 'apply', 'thing', 'like', 'computational', 'complexity', '.', 'write', 'definition', 'mean', 'f', 'equal', '(', 'g', ')', ',', 'understand', 'problem', ',', 'understand', 'solution', ',', 'understand', 'solution', 'could', 'something', 'else', '.', 'basically', ',', 'need', 'resource', 'really', 'comprehensively', 'teach', 'thing', 'way', 'make', 'sense', 'exist', '.', '&', '#', 'x200b', ';', 'rant', '--', 'skip', 'tl', ';', 'dr', 'uninterested', 'like', 'already', 'function', 'perfectly', 'describes', 'algorithm', 'time', 'complexity', ',', 'point', 'simplify', 'weird', 'way', 'break', 'algebra', 'rule', '?', 'try', 'compare', 'another', 'algorithm', ',', '...', 'compare', 'another', 'algorithm', '?', 'grab', 'two', 'function', ',', 'two', 'different', 'algorithm', ',', 'come', 'reasonable', 'input', 'size', ',', 'evaluate', '.', 'simple', '.', 'best', 'case', 'bad', 'case', 'thing', '?', 'get', 'come', 'definition', 'best', 'bad', 'case', '...', 'way', '(', 'n', ')', 'define', 'make', 'seem', 'like', 'arbitrary', 'function', 'large', 'f', '(', 'n', ')', 'could', 'suffice', 'define', 'bad', 'case', 'scenario', '...', '&', '#', 'x200b', ';', 'tl', ';', 'dr', 'please', 'give', 'resource', 'asymptotic', 'growth', 'go', 'deeper', 'explain', 'thing', 'actually', 'useful']","[[('edit', 'NN')], [(':', ':')], [('people', 'NNS')], [('asking', 'VBG')], [('question', 'NN')], [(',', ',')], [('found', 'NN')], [('incredibly', 'RB')], [('useful', 'JJ')], [('video', 'NN')], [('explains', 'NNS')], [('asymptotic', 'JJ')], [('growth', 'NN')], [('asymptotic', 'JJ')], [('bounding', 'VBG')], [('.', '.')], [('please', 'NN')], [('watch', 'NN')], [(':', ':')], [('[', 'NN')], [(']', 'NN')], [('(', '(')], [(')', ')')], [('hello', 'NN')], [('.', '.')], [('post', 'NN')], [('simple', 'NN')], [(':', ':')], [('struggling', 'VBG')], [('understand', 'NN')], [('asymptotic', 'JJ')], [('growth', 'NN')], [('.', '.')], [('seems', 'VBZ')], [('like', 'IN')], [('pointless', 'NN')], [('silly', 'RB')], [('abstract', 'NN')], [('mathematical', 'JJ')], [('concept', 'NN')], [('even', 'RB')], [('make', 'VB')], [('sense', 'NN')], [('applied', 'VBN')], [('things', 'NNS')], [('like', 'IN')], [('computational', 'NN')], [('complexity', 'NN')], [('.', '.')], [('write', 'NN')], [('definitions', 'NNS')], [('means', 'NNS')], [('f', 'NN')], [('equal', 'JJ')], [('(', '(')], [('g', 'NN')], [(')', ')')], [(',', ',')], [('understand', 'NN')], [('problem', 'NN')], [(',', ',')], [('understand', 'NN')], [('solution', 'NN')], [(',', ',')], [('understand', 'NN')], [('solution', 'NN')], [('could', 'MD')], [('something', 'NN')], [('else', 'RB')], [('.', '.')], [('basically', 'RB')], [(',', ',')], [('need', 'NN')], [('resource', 'NN')], [('really', 'RB')], [('comprehensively', 'RB')], [('teach', 'NN')], [('thing', 'NN')], [('way', 'NN')], [('makes', 'VBZ')], [('sense', 'NN')], [('exist', 'NN')], [('.', '.')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('rant', 'NN')], [('--', ':')], [('skip', 'NN')], [('tl', 'NN')], [(';', ':')], [('dr', 'NN')], [('uninterested', 'JJ')], [('like', 'IN')], [('already', 'RB')], [('function', 'NN')], [('perfectly', 'RB')], [('describes', 'NNS')], [('algorithms', 'NN')], [('time', 'NN')], [('complexity', 'NN')], [(',', ',')], [('point', 'NN')], [('simplifying', 'VBG')], [('weird', 'NN')], [('way', 'NN')], [('breaks', 'NNS')], [('algebra', 'NN')], [('rules', 'NNS')], [('?', '.')], [('trying', 'VBG')], [('compare', 'NN')], [('another', 'DT')], [('algorithm', 'NN')], [(',', ',')], [('...', ':')], [('compare', 'NN')], [('another', 'DT')], [('algorithm', 'NN')], [('?', '.')], [('grab', 'NN')], [('two', 'CD')], [('functions', 'NNS')], [(',', ',')], [('two', 'CD')], [('different', 'JJ')], [('algorithms', 'NN')], [(',', ',')], [('come', 'VB')], [('reasonable', 'JJ')], [('input', 'NN')], [('sizes', 'NNS')], [(',', ',')], [('evaluate', 'NN')], [('.', '.')], [('simple', 'NN')], [('.', '.')], [('best', 'JJS')], [('case', 'NN')], [('worst', 'JJS')], [('case', 'NN')], [('thing', 'NN')], [('?', '.')], [('get', 'VB')], [('comes', 'VBZ')], [('definitions', 'NNS')], [('best', 'JJS')], [('worst', 'JJS')], [('case', 'NN')], [('...', ':')], [('way', 'NN')], [('(', '(')], [('n', 'NN')], [(')', ')')], [('defined', 'VBN')], [('made', 'VBN')], [('seem', 'NN')], [('like', 'IN')], [('arbitrary', 'JJ')], [('function', 'NN')], [('larger', 'JJR')], [('f', 'NN')], [('(', '(')], [('n', 'NN')], [(')', ')')], [('could', 'MD')], [('suffice', 'NN')], [('defining', 'VBG')], [('worst', 'JJS')], [('case', 'NN')], [('scenario', 'NN')], [('...', ':')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('tl', 'NN')], [(';', ':')], [('dr', 'NN')], [('please', 'NN')], [('give', 'VB')], [('resources', 'NNS')], [('asymptotic', 'JJ')], [('growth', 'NN')], [('go', 'VB')], [('deeper', 'NN')], [('explaining', 'VBG')], [('thing', 'NN')], [('actually', 'RB')], [('useful', 'JJ')]]","edit : people ask question , found incredibly useful video explains asymptotic growth asymptotic bound . please watch : [ ] ( ) hello . post simple : struggle understand asymptotic growth . seem like pointless silly abstract mathematical concept even make sense apply thing like computational complexity . write definition mean f equal ( g ) , understand problem , understand solution , understand solution could something else . basically , need resource really comprehensively teach thing way make sense exist . & # x200b ; rant -- skip tl ; dr uninterested like already function perfectly describes algorithm time complexity , point simplify weird way break algebra rule ? try compare another algorithm , ... compare another algorithm ? grab two function , two different algorithm , come reasonable input size , evaluate . simple . best case bad case thing ? get come definition best bad case ... way ( n ) define make seem like arbitrary function large f ( n ) could suffice define bad case scenario ... & # x200b ; tl ; dr please give resource asymptotic growth go deeper explain thing actually useful",0_algorithm_time_node_bill,1
391,r7fkp9,Official client verification,,19,0.86,computerscience,https://www.reddit.com/r/computerscience/comments/r7fkp9/official_client_verification/,9,is there a way i can have a client send something like a hash of it is executable to confirm the client has not been modified to a server?,1638474405.0,"['way', 'client', 'send', 'something', 'like', 'hash', 'executable', 'confirm', 'client', 'modify', 'server', '?']","[[('way', 'NN')], [('client', 'NN')], [('send', 'NN')], [('something', 'NN')], [('like', 'IN')], [('hash', 'NN')], [('executable', 'JJ')], [('confirm', 'NN')], [('client', 'NN')], [('modified', 'VBN')], [('server', 'NN')], [('?', '.')]]",way client send something like hash executable confirm client modify server ?,6_server_packet_key_hash,1
392,r6vpdh,Encrypted dead man's switch,,85,0.9,computerscience,https://www.reddit.com/r/computerscience/comments/r6vpdh/encrypted_dead_mans_switch/,51,"i want to make a dead man's switch to release all my code publicly and my master password to my family, but i want it to be encrypted beforehand, and have a low chance of being cracked or destroyed before deployment, i do not have anyone trusted to maintain it and i might end up in a psyc ward for long periods of time

any way set up a dead man's switch with these conditions?",1638410229.0,"['want', 'make', 'dead', 'man', ""'s"", 'switch', 'release', 'code', 'publicly', 'master', 'password', 'family', ',', 'want', 'encrypt', 'beforehand', ',', 'low', 'chance', 'crack', 'destroyed', 'deployment', ',', 'anyone', 'trust', 'maintain', 'might', 'end', 'psyc', 'ward', 'long', 'period', 'time', 'way', 'set', 'dead', 'man', ""'s"", 'switch', 'condition', '?']","[[('want', 'NN')], [('make', 'VB')], [('dead', 'JJ')], [('man', 'NN')], [(""'s"", 'POS')], [('switch', 'NN')], [('release', 'NN')], [('code', 'NN')], [('publicly', 'RB')], [('master', 'NN')], [('password', 'NN')], [('family', 'NN')], [(',', ',')], [('want', 'NN')], [('encrypted', 'VBN')], [('beforehand', 'NN')], [(',', ',')], [('low', 'JJ')], [('chance', 'NN')], [('cracked', 'VBN')], [('destroyed', 'NN')], [('deployment', 'NN')], [(',', ',')], [('anyone', 'NN')], [('trusted', 'VBN')], [('maintain', 'NN')], [('might', 'MD')], [('end', 'NN')], [('psyc', 'NN')], [('ward', 'NN')], [('long', 'RB')], [('periods', 'NNS')], [('time', 'NN')], [('way', 'NN')], [('set', 'NN')], [('dead', 'JJ')], [('man', 'NN')], [(""'s"", 'POS')], [('switch', 'NN')], [('conditions', 'NNS')], [('?', '.')]]","want make dead man 's switch release code publicly master password family , want encrypt beforehand , low chance crack destroyed deployment , anyone trust maintain might end psyc ward long period time way set dead man 's switch condition ?",6_server_packet_key_hash,1
393,r70ia7,Algorithm Time Complexity,Help,14,0.86,computerscience,https://www.reddit.com/r/computerscience/comments/r70ia7/algorithm_time_complexity/,3,"i was given a function t(n) = 5n + t(n-1)

my understanding is the algorithm will always have a big o time complexity of of o(n) because there is not any multiplication to increase n's power, but the answer that was expected from me was o(n\^2). even in words, i could say that the function calls itself 5n times plus another n minus 1 times, so the time complexity should still be linear with respect to n inputs. why is this o(n\^2)?",1638424964.0,"['give', 'function', '(', 'n', ')', '=', '5n', '+', '(', 'n-1', ')', 'understand', 'algorithm', 'always', 'big', 'time', 'complexity', '(', 'n', ')', 'multiplication', 'increase', 'n', ""'s"", 'power', ',', 'answer', 'expect', '(', 'n\\^2', ')', '.', 'even', 'word', ',', 'could', 'say', 'function', 'call', '5n', 'time', 'plus', 'another', 'n', 'minus', '1', 'time', ',', 'time', 'complexity', 'still', 'linear', 'respect', 'n', 'input', '.', '(', 'n\\^2', ')', '?']","[[('given', 'VBN')], [('function', 'NN')], [('(', '(')], [('n', 'NN')], [(')', ')')], [('=', 'NN')], [('5n', 'CD')], [('+', 'NN')], [('(', '(')], [('n-1', 'JJ')], [(')', ')')], [('understanding', 'VBG')], [('algorithm', 'NN')], [('always', 'RB')], [('big', 'JJ')], [('time', 'NN')], [('complexity', 'NN')], [('(', '(')], [('n', 'NN')], [(')', ')')], [('multiplication', 'NN')], [('increase', 'NN')], [('n', 'NN')], [(""'s"", 'POS')], [('power', 'NN')], [(',', ',')], [('answer', 'NN')], [('expected', 'VBN')], [('(', '(')], [('n\\^2', 'NN')], [(')', ')')], [('.', '.')], [('even', 'RB')], [('words', 'NNS')], [(',', ',')], [('could', 'MD')], [('say', 'VB')], [('function', 'NN')], [('calls', 'NNS')], [('5n', 'CD')], [('times', 'NNS')], [('plus', 'CC')], [('another', 'DT')], [('n', 'NN')], [('minus', 'NN')], [('1', 'CD')], [('times', 'NNS')], [(',', ',')], [('time', 'NN')], [('complexity', 'NN')], [('still', 'RB')], [('linear', 'NN')], [('respect', 'NN')], [('n', 'NN')], [('inputs', 'NNS')], [('.', '.')], [('(', '(')], [('n\\^2', 'NN')], [(')', ')')], [('?', '.')]]","give function ( n ) = 5n + ( n-1 ) understand algorithm always big time complexity ( n ) multiplication increase n 's power , answer expect ( n\^2 ) . even word , could say function call 5n time plus another n minus 1 time , time complexity still linear respect n input . ( n\^2 ) ?",0_algorithm_time_node_bill,2
394,r71nbu,VMs and Executing Machine Code,General,9,0.91,computerscience,https://www.reddit.com/r/computerscience/comments/r71nbu/vms_and_executing_machine_code/,2,"sometimes when trying to run a vm, you need to enable virtualization in the bios. i always presumed this meant that the hypervisor was sending machine code directly to the cpu, which in turn interacts with all the peripherals for the vm, and that the host os was ""allowing"" the vm's machine code to pass by.

however, i just watched [this video](-4meom) where he says that the hypervisor (or at least a type 2 hypervisor) is making a virtual representation of the hardware. when i use something like vmware (type 1) desktop, is it actually interacting with bare metal? whereas something like virtual box (type 2) goes through the host kernel?  any insight is appreciated.",1638429089.0,"['sometimes', 'try', 'run', 'vm', ',', 'need', 'enable', 'virtualization', 'bios', '.', 'always', 'presume', 'meant', 'hypervisor', 'send', 'machine', 'code', 'directly', 'cpu', ',', 'turn', 'interacts', 'peripheral', 'vm', ',', 'host', 'o', '``', 'allow', ""''"", 'vm', ""'s"", 'machine', 'code', 'pas', '.', 'however', ',', 'watch', '[', 'video', ']', '(', '-4meom', ')', 'say', 'hypervisor', '(', 'least', 'type', '2', 'hypervisor', ')', 'make', 'virtual', 'representation', 'hardware', '.', 'use', 'something', 'like', 'vmware', '(', 'type', '1', ')', 'desktop', ',', 'actually', 'interact', 'bare', 'metal', '?', 'whereas', 'something', 'like', 'virtual', 'box', '(', 'type', '2', ')', 'go', 'host', 'kernel', '?', 'insight', 'appreciate', '.']","[[('sometimes', 'RB')], [('trying', 'VBG')], [('run', 'VB')], [('vm', 'NN')], [(',', ',')], [('need', 'NN')], [('enable', 'JJ')], [('virtualization', 'NN')], [('bios', 'NNS')], [('.', '.')], [('always', 'RB')], [('presumed', 'VBN')], [('meant', 'NN')], [('hypervisor', 'NN')], [('sending', 'VBG')], [('machine', 'NN')], [('code', 'NN')], [('directly', 'RB')], [('cpu', 'NN')], [(',', ',')], [('turn', 'NN')], [('interacts', 'NNS')], [('peripherals', 'NNS')], [('vm', 'NN')], [(',', ',')], [('host', 'NN')], [('os', 'NN')], [('``', '``')], [('allowing', 'VBG')], [(""''"", ""''"")], [('vm', 'NN')], [(""'s"", 'POS')], [('machine', 'NN')], [('code', 'NN')], [('pass', 'NN')], [('.', '.')], [('however', 'RB')], [(',', ',')], [('watched', 'VBN')], [('[', 'NN')], [('video', 'NN')], [(']', 'NN')], [('(', '(')], [('-4meom', 'NN')], [(')', ')')], [('says', 'VBZ')], [('hypervisor', 'NN')], [('(', '(')], [('least', 'JJS')], [('type', 'NN')], [('2', 'CD')], [('hypervisor', 'NN')], [(')', ')')], [('making', 'VBG')], [('virtual', 'JJ')], [('representation', 'NN')], [('hardware', 'NN')], [('.', '.')], [('use', 'NN')], [('something', 'NN')], [('like', 'IN')], [('vmware', 'NN')], [('(', '(')], [('type', 'NN')], [('1', 'CD')], [(')', ')')], [('desktop', 'NN')], [(',', ',')], [('actually', 'RB')], [('interacting', 'VBG')], [('bare', 'NN')], [('metal', 'NN')], [('?', '.')], [('whereas', 'NNS')], [('something', 'NN')], [('like', 'IN')], [('virtual', 'JJ')], [('box', 'NN')], [('(', '(')], [('type', 'NN')], [('2', 'CD')], [(')', ')')], [('goes', 'VBZ')], [('host', 'NN')], [('kernel', 'NNS')], [('?', '.')], [('insight', 'NN')], [('appreciated', 'VBN')], [('.', '.')]]","sometimes try run vm , need enable virtualization bios . always presume meant hypervisor send machine code directly cpu , turn interacts peripheral vm , host o `` allow '' vm 's machine code pas . however , watch [ video ] ( -4meom ) say hypervisor ( least type 2 hypervisor ) make virtual representation hardware . use something like vmware ( type 1 ) desktop , actually interact bare metal ? whereas something like virtual box ( type 2 ) go host kernel ? insight appreciate .",5_cpu_computer_run_process,2
395,r6f0od,Learning OS after learning C,Discussion,53,0.96,computerscience,https://www.reddit.com/r/computerscience/comments/r6f0od/learning_os_after_learning_c/,12,"hey guys i wanted to know. if someone knows c and wanted to get into the world of operating systems and know all the round robin, multiprocessing stuff should they:
a) read an entire book on os first, before getting their hands dirty with real code 
                                                 or
b)should read books, alongside getting their hands dirty while following the documentation of the os they have chosen.
i want to know you all thoughts and opinions.",1638366123.0,"['hey', 'guy', 'want', 'know', '.', 'someone', 'know', 'c', 'want', 'get', 'world', 'operating', 'system', 'know', 'round', 'robin', ',', 'multiprocessing', 'stuff', ':', ')', 'read', 'entire', 'book', 'o', 'first', ',', 'get', 'hand', 'dirty', 'real', 'code', 'b', ')', 'read', 'book', ',', 'alongside', 'get', 'hand', 'dirty', 'follow', 'documentation', 'o', 'chosen', '.', 'want', 'know', 'thought', 'opinion', '.']","[[('hey', 'NN')], [('guys', 'NNS')], [('wanted', 'VBD')], [('know', 'VB')], [('.', '.')], [('someone', 'NN')], [('knows', 'NNS')], [('c', 'NNS')], [('wanted', 'VBD')], [('get', 'VB')], [('world', 'NN')], [('operating', 'NN')], [('systems', 'NNS')], [('know', 'VB')], [('round', 'NN')], [('robin', 'NN')], [(',', ',')], [('multiprocessing', 'VBG')], [('stuff', 'NN')], [(':', ':')], [(')', ')')], [('read', 'NN')], [('entire', 'JJ')], [('book', 'NN')], [('os', 'NN')], [('first', 'RB')], [(',', ',')], [('getting', 'VBG')], [('hands', 'NNS')], [('dirty', 'NN')], [('real', 'JJ')], [('code', 'NN')], [('b', 'NN')], [(')', ')')], [('read', 'NN')], [('books', 'NNS')], [(',', ',')], [('alongside', 'RB')], [('getting', 'VBG')], [('hands', 'NNS')], [('dirty', 'NN')], [('following', 'VBG')], [('documentation', 'NN')], [('os', 'NN')], [('chosen', 'NN')], [('.', '.')], [('want', 'NN')], [('know', 'VB')], [('thoughts', 'NNS')], [('opinions', 'NNS')], [('.', '.')]]","hey guy want know . someone know c want get world operating system know round robin , multiprocessing stuff : ) read entire book o first , get hand dirty real code b ) read book , alongside get hand dirty follow documentation o chosen . want know thought opinion .",5_cpu_computer_run_process,1
396,r6eo9a,Getting into computational modelling ?,,6,1.0,computerscience,https://www.reddit.com/r/computerscience/comments/r6eo9a/getting_into_computational_modelling/,8,"hi guys, i am an undergrad cognitive psychology student and recently i came across the existence of the use of computational models to study phenomena.

since i have always been pretty keen on computer science i wanted to dive more into it but i could not find much material on the web about what knowledge you need to start developing these programs.

i am particularly interested in computational linguistics and computational biology.

do you guys have any suggestions on what mathematical and cs knowledge is needed in order to have a solid background for starting to build these models ? i have some programming skills but only with python and java and i do not know what language is used for models (c++ maybe?)

i have already asked some professors but i still have some doubts about it.",1638365054.0,"['hi', 'guy', ',', 'undergrad', 'cognitive', 'psychology', 'student', 'recently', 'come', 'across', 'existence', 'use', 'computational', 'model', 'study', 'phenomenon', '.', 'since', 'always', 'pretty', 'keen', 'computer', 'science', 'want', 'dive', 'could', 'find', 'much', 'material', 'web', 'knowledge', 'need', 'start', 'develop', 'program', '.', 'particularly', 'interested', 'computational', 'linguistics', 'computational', 'biology', '.', 'guy', 'suggestion', 'mathematical', 'c', 'knowledge', 'need', 'order', 'solid', 'background', 'start', 'build', 'model', '?', 'program', 'skill', 'python', 'java', 'know', 'language', 'use', 'model', '(', 'c++', 'maybe', '?', ')', 'already', 'ask', 'professor', 'still', 'doubt', '.']","[[('hi', 'NN')], [('guys', 'NNS')], [(',', ',')], [('undergrad', 'NN')], [('cognitive', 'NN')], [('psychology', 'NN')], [('student', 'NN')], [('recently', 'RB')], [('came', 'VBD')], [('across', 'IN')], [('existence', 'NN')], [('use', 'NN')], [('computational', 'NN')], [('models', 'NNS')], [('study', 'NN')], [('phenomena', 'NN')], [('.', '.')], [('since', 'IN')], [('always', 'RB')], [('pretty', 'RB')], [('keen', 'NN')], [('computer', 'NN')], [('science', 'NN')], [('wanted', 'VBD')], [('dive', 'NN')], [('could', 'MD')], [('find', 'VB')], [('much', 'JJ')], [('material', 'NN')], [('web', 'NN')], [('knowledge', 'NN')], [('need', 'NN')], [('start', 'NN')], [('developing', 'VBG')], [('programs', 'NNS')], [('.', '.')], [('particularly', 'RB')], [('interested', 'JJ')], [('computational', 'NN')], [('linguistics', 'NNS')], [('computational', 'NN')], [('biology', 'NN')], [('.', '.')], [('guys', 'NNS')], [('suggestions', 'NNS')], [('mathematical', 'JJ')], [('cs', 'NN')], [('knowledge', 'NN')], [('needed', 'VBN')], [('order', 'NN')], [('solid', 'JJ')], [('background', 'NN')], [('starting', 'VBG')], [('build', 'NN')], [('models', 'NNS')], [('?', '.')], [('programming', 'VBG')], [('skills', 'NNS')], [('python', 'NN')], [('java', 'NN')], [('know', 'VB')], [('language', 'NN')], [('used', 'VBN')], [('models', 'NNS')], [('(', '(')], [('c++', 'NN')], [('maybe', 'RB')], [('?', '.')], [(')', ')')], [('already', 'RB')], [('asked', 'VBN')], [('professors', 'NNS')], [('still', 'RB')], [('doubts', 'NNS')], [('.', '.')]]","hi guy , undergrad cognitive psychology student recently come across existence use computational model study phenomenon . since always pretty keen computer science want dive could find much material web knowledge need start develop program . particularly interested computational linguistics computational biology . guy suggestion mathematical c knowledge need order solid background start build model ? program skill python java know language use model ( c++ maybe ? ) already ask professor still doubt .",2_computer_learn_science_study,3
397,r639yl,Resources to learn about the inner-workings of a computer at a technical level?,,49,0.97,computerscience,https://www.reddit.com/r/computerscience/comments/r639yl/resources_to_learn_about_the_innerworkings_of_a/,14,"hi all, it professional here. recently i have become interested in learning more about how the components inside computers work. for example, i know what cpu, gpu, ram, etc are...but how do they actually operate?  i am talking at an extremely technical level. does this fall under computer science? thanks all.",1638323120.0,"['hi', ',', 'professional', '.', 'recently', 'become', 'interested', 'learn', 'component', 'inside', 'computer', 'work', '.', 'example', ',', 'know', 'cpu', ',', 'gpu', ',', 'ram', ',', 'etc', '...', 'actually', 'operate', '?', 'talk', 'extremely', 'technical', 'level', '.', 'fall', 'computer', 'science', '?', 'thanks', '.']","[[('hi', 'NN')], [(',', ',')], [('professional', 'JJ')], [('.', '.')], [('recently', 'RB')], [('become', 'NN')], [('interested', 'JJ')], [('learning', 'VBG')], [('components', 'NNS')], [('inside', 'IN')], [('computers', 'NNS')], [('work', 'NN')], [('.', '.')], [('example', 'NN')], [(',', ',')], [('know', 'VB')], [('cpu', 'NN')], [(',', ',')], [('gpu', 'NN')], [(',', ',')], [('ram', 'NN')], [(',', ',')], [('etc', 'NN')], [('...', ':')], [('actually', 'RB')], [('operate', 'NN')], [('?', '.')], [('talking', 'VBG')], [('extremely', 'RB')], [('technical', 'JJ')], [('level', 'NN')], [('.', '.')], [('fall', 'NN')], [('computer', 'NN')], [('science', 'NN')], [('?', '.')], [('thanks', 'NNS')], [('.', '.')]]","hi , professional . recently become interested learn component inside computer work . example , know cpu , gpu , ram , etc ... actually operate ? talk extremely technical level . fall computer science ? thanks .",-1_abazbz2abz_2520_problem_use,5
398,r6qahx,I'm a hard sci-fi writer looking to write about cyborgs that edit their RNA with the help of nanites. How do i find the processing power to do this effectively?,,0,0.5,computerscience,https://www.reddit.com/r/computerscience/comments/r6qahx/im_a_hard_scifi_writer_looking_to_write_about/,2,"i am fully aware that controlling the many variables that go into genetics is a difficult task. previously i had the computers that controlled the nanites linked to a massive, planet-wide supercomputer, but realized this connection would be impossible to maintain on earth (the cyborgs are also aliens). is there a way i can fit the needed processing power into a small package? ",1638395644.0,"['fully', 'aware', 'control', 'many', 'variable', 'go', 'genetics', 'difficult', 'task', '.', 'previously', 'computer', 'control', 'nanites', 'link', 'massive', ',', 'planet-wide', 'supercomputer', ',', 'realize', 'connection', 'would', 'impossible', 'maintain', 'earth', '(', 'cyborg', 'also', 'alien', ')', '.', 'way', 'fit', 'need', 'processing', 'power', 'small', 'package', '?']","[[('fully', 'RB')], [('aware', 'JJ')], [('controlling', 'VBG')], [('many', 'JJ')], [('variables', 'NNS')], [('go', 'VB')], [('genetics', 'NNS')], [('difficult', 'JJ')], [('task', 'NN')], [('.', '.')], [('previously', 'RB')], [('computers', 'NNS')], [('controlled', 'VBN')], [('nanites', 'NNS')], [('linked', 'VBN')], [('massive', 'JJ')], [(',', ',')], [('planet-wide', 'NN')], [('supercomputer', 'NN')], [(',', ',')], [('realized', 'VBN')], [('connection', 'NN')], [('would', 'MD')], [('impossible', 'JJ')], [('maintain', 'NN')], [('earth', 'NN')], [('(', '(')], [('cyborgs', 'NN')], [('also', 'RB')], [('aliens', 'NNS')], [(')', ')')], [('.', '.')], [('way', 'NN')], [('fit', 'NN')], [('needed', 'VBN')], [('processing', 'NN')], [('power', 'NN')], [('small', 'JJ')], [('package', 'NN')], [('?', '.')]]","fully aware control many variable go genetics difficult task . previously computer control nanites link massive , planet-wide supercomputer , realize connection would impossible maintain earth ( cyborg also alien ) . way fit need processing power small package ?",-1_abazbz2abz_2520_problem_use,3
399,r6ei7a,Network simulator,,4,1.0,computerscience,https://www.reddit.com/r/computerscience/comments/r6ei7a/network_simulator/,4,"in uni are currently using modeler of riverbed, which was created by opnet in case you know it. i basically hate that tool to the core, it makes our lives misserable! ..mostly due to the lack of documentation.  
it is basically a tool where you can create logical or physical networks to simulate, with many choices for mediums, settings, protocols, profiles e.t.c.  


 i was wondering, what are the similar alternatives out there for it in big companies?",1638364521.0,"['uni', 'currently', 'use', 'modeler', 'riverbed', ',', 'create', 'opnet', 'case', 'know', '.', 'basically', 'hate', 'tool', 'core', ',', 'make', 'life', 'misserable', '!', '..', 'mostly', 'due', 'lack', 'documentation', '.', 'basically', 'tool', 'create', 'logical', 'physical', 'network', 'simulate', ',', 'many', 'choice', 'medium', ',', 'setting', ',', 'protocol', ',', 'profile', 'e.t.c', '.', 'wonder', ',', 'similar', 'alternative', 'big', 'company', '?']","[[('uni', 'JJ')], [('currently', 'RB')], [('using', 'VBG')], [('modeler', 'NN')], [('riverbed', 'NN')], [(',', ',')], [('created', 'VBN')], [('opnet', 'NN')], [('case', 'NN')], [('know', 'VB')], [('.', '.')], [('basically', 'RB')], [('hate', 'NN')], [('tool', 'NN')], [('core', 'NN')], [(',', ',')], [('makes', 'VBZ')], [('lives', 'NNS')], [('misserable', 'JJ')], [('!', '.')], [('..', 'NN')], [('mostly', 'RB')], [('due', 'JJ')], [('lack', 'NN')], [('documentation', 'NN')], [('.', '.')], [('basically', 'RB')], [('tool', 'NN')], [('create', 'NN')], [('logical', 'JJ')], [('physical', 'JJ')], [('networks', 'NNS')], [('simulate', 'NN')], [(',', ',')], [('many', 'JJ')], [('choices', 'NNS')], [('mediums', 'NNS')], [(',', ',')], [('settings', 'NNS')], [(',', ',')], [('protocols', 'NNS')], [(',', ',')], [('profiles', 'NNS')], [('e.t.c', 'NN')], [('.', '.')], [('wondering', 'VBG')], [(',', ',')], [('similar', 'JJ')], [('alternatives', 'NNS')], [('big', 'JJ')], [('companies', 'NNS')], [('?', '.')]]","uni currently use modeler riverbed , create opnet case know . basically hate tool core , make life misserable ! .. mostly due lack documentation . basically tool create logical physical network simulate , many choice medium , setting , protocol , profile e.t.c . wonder , similar alternative big company ?",-1_abazbz2abz_2520_problem_use,2
400,r5yufr,Why might changing process priority and forcing a single CPU thread to focus on a program improve the stability of that program?,,56,0.96,computerscience,https://www.reddit.com/r/computerscience/comments/r5yufr/why_might_changing_process_priority_and_forcing_a/,22,"this is kind of a specific question but, i formulated it in the most general way possible so anyone can benefit from any answers.

i have a very lightweight visual novel video game called *shiny days*. for some reason, the game runs just fine with minimal bugs in windowed mode. however, when in fullscreen mode, the game will freeze at a very specific moment in the game every time without fail.

the fix for this endorsed by the community is to change the process priority to ""above normal"" and change the processor affinity to only ""cpu 0"" or ""cpu 1."" this is to force the program to only use a single thread.

&#x200b;

the question i am asking here is, why does that fix work? why would increasing process priority and limiting the program to a single thread help anything? i know what the fix does but, i do not get why it stops the freezing of the program in such an effective way. what do you guys think is going on here? i am curious to hear any insights computer science experts would have to say on why this fix actually works.",1638310213.0,"['kind', 'specific', 'question', ',', 'formulate', 'general', 'way', 'possible', 'anyone', 'benefit', 'answer', '.', 'lightweight', 'visual', 'novel', 'video', 'game', 'call', '*', 'shiny', 'day', '*', '.', 'reason', ',', 'game', 'run', 'fine', 'minimal', 'bug', 'windowed', 'mode', '.', 'however', ',', 'fullscreen', 'mode', ',', 'game', 'freeze', 'specific', 'moment', 'game', 'every', 'time', 'without', 'fail', '.', 'fix', 'endorse', 'community', 'change', 'process', 'priority', '``', 'normal', ""''"", 'change', 'processor', 'affinity', '``', 'cpu', '0', ""''"", '``', 'cpu', '1', '.', ""''"", 'force', 'program', 'use', 'single', 'thread', '.', '&', '#', 'x200b', ';', 'question', 'ask', ',', 'fix', 'work', '?', 'would', 'increase', 'process', 'priority', 'limit', 'program', 'single', 'thread', 'help', 'anything', '?', 'know', 'fix', ',', 'get', 'stop', 'freeze', 'program', 'effective', 'way', '.', 'guy', 'think', 'go', '?', 'curious', 'hear', 'insight', 'computer', 'science', 'expert', 'would', 'say', 'fix', 'actually', 'work', '.']","[[('kind', 'NN')], [('specific', 'JJ')], [('question', 'NN')], [(',', ',')], [('formulated', 'VBN')], [('general', 'JJ')], [('way', 'NN')], [('possible', 'JJ')], [('anyone', 'NN')], [('benefit', 'NN')], [('answers', 'NNS')], [('.', '.')], [('lightweight', 'NN')], [('visual', 'JJ')], [('novel', 'NN')], [('video', 'NN')], [('game', 'NN')], [('called', 'VBN')], [('*', 'NN')], [('shiny', 'NN')], [('days', 'NNS')], [('*', 'NN')], [('.', '.')], [('reason', 'NN')], [(',', ',')], [('game', 'NN')], [('runs', 'NNS')], [('fine', 'NN')], [('minimal', 'NN')], [('bugs', 'NNS')], [('windowed', 'NN')], [('mode', 'NN')], [('.', '.')], [('however', 'RB')], [(',', ',')], [('fullscreen', 'NN')], [('mode', 'NN')], [(',', ',')], [('game', 'NN')], [('freeze', 'NN')], [('specific', 'JJ')], [('moment', 'NN')], [('game', 'NN')], [('every', 'DT')], [('time', 'NN')], [('without', 'IN')], [('fail', 'NN')], [('.', '.')], [('fix', 'NN')], [('endorsed', 'VBN')], [('community', 'NN')], [('change', 'NN')], [('process', 'NN')], [('priority', 'NN')], [('``', '``')], [('normal', 'JJ')], [(""''"", ""''"")], [('change', 'NN')], [('processor', 'NN')], [('affinity', 'NN')], [('``', '``')], [('cpu', 'NN')], [('0', 'CD')], [(""''"", ""''"")], [('``', '``')], [('cpu', 'NN')], [('1', 'CD')], [('.', '.')], [(""''"", ""''"")], [('force', 'NN')], [('program', 'NN')], [('use', 'NN')], [('single', 'JJ')], [('thread', 'NN')], [('.', '.')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('question', 'NN')], [('asking', 'VBG')], [(',', ',')], [('fix', 'NN')], [('work', 'NN')], [('?', '.')], [('would', 'MD')], [('increasing', 'VBG')], [('process', 'NN')], [('priority', 'NN')], [('limiting', 'VBG')], [('program', 'NN')], [('single', 'JJ')], [('thread', 'NN')], [('help', 'NN')], [('anything', 'NN')], [('?', '.')], [('know', 'VB')], [('fix', 'NN')], [(',', ',')], [('get', 'VB')], [('stops', 'NNS')], [('freezing', 'VBG')], [('program', 'NN')], [('effective', 'JJ')], [('way', 'NN')], [('.', '.')], [('guys', 'NNS')], [('think', 'NN')], [('going', 'VBG')], [('?', '.')], [('curious', 'JJ')], [('hear', 'NN')], [('insights', 'NNS')], [('computer', 'NN')], [('science', 'NN')], [('experts', 'NNS')], [('would', 'MD')], [('say', 'VB')], [('fix', 'NN')], [('actually', 'RB')], [('works', 'NNS')], [('.', '.')]]","kind specific question , formulate general way possible anyone benefit answer . lightweight visual novel video game call * shiny day * . reason , game run fine minimal bug windowed mode . however , fullscreen mode , game freeze specific moment game every time without fail . fix endorse community change process priority `` normal '' change processor affinity `` cpu 0 '' `` cpu 1 . '' force program use single thread . & # x200b ; question ask , fix work ? would increase process priority limit program single thread help anything ? know fix , get stop freeze program effective way . guy think go ? curious hear insight computer science expert would say fix actually work .",5_cpu_computer_run_process,4
401,r6bl5i,Does Concorde algorithm really give an optimal solution to the TSP ?,,2,0.75,computerscience,https://www.reddit.com/r/computerscience/comments/r6bl5i/does_concorde_algorithm_really_give_an_optimal/,9,"recently, i played around with concorde algorithm [available here]().

it should return an optimal solution, however some choice he made in his optimal path are counterintuitive.

for example, i would have thought that green path would be more optimized than the red one proposed by concord :

[red path is suboptimal ?]()

&#x200b;

is this caused by some rounding approximation ?",1638353634.0,"['recently', ',', 'played', 'around', 'concorde', 'algorithm', '[', 'available', ']', '(', ')', '.', 'return', 'optimal', 'solution', ',', 'however', 'choice', 'make', 'optimal', 'path', 'counterintuitive', '.', 'example', ',', 'would', 'thought', 'green', 'path', 'would', 'optimize', 'red', 'one', 'propose', 'concord', ':', '[', 'red', 'path', 'suboptimal', '?', ']', '(', ')', '&', '#', 'x200b', ';', 'cause', 'round', 'approximation', '?']","[[('recently', 'RB')], [(',', ',')], [('played', 'NNS')], [('around', 'IN')], [('concorde', 'NN')], [('algorithm', 'NN')], [('[', 'NN')], [('available', 'JJ')], [(']', 'NN')], [('(', '(')], [(')', ')')], [('.', '.')], [('return', 'NN')], [('optimal', 'JJ')], [('solution', 'NN')], [(',', ',')], [('however', 'RB')], [('choice', 'NN')], [('made', 'VBN')], [('optimal', 'JJ')], [('path', 'NN')], [('counterintuitive', 'NN')], [('.', '.')], [('example', 'NN')], [(',', ',')], [('would', 'MD')], [('thought', 'NN')], [('green', 'JJ')], [('path', 'NN')], [('would', 'MD')], [('optimized', 'VBN')], [('red', 'JJ')], [('one', 'CD')], [('proposed', 'VBN')], [('concord', 'NN')], [(':', ':')], [('[', 'NN')], [('red', 'JJ')], [('path', 'NN')], [('suboptimal', 'NN')], [('?', '.')], [(']', 'NN')], [('(', '(')], [(')', ')')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('caused', 'VBN')], [('rounding', 'VBG')], [('approximation', 'NN')], [('?', '.')]]","recently , played around concorde algorithm [ available ] ( ) . return optimal solution , however choice make optimal path counterintuitive . example , would thought green path would optimize red one propose concord : [ red path suboptimal ? ] ( ) & # x200b ; cause round approximation ?",0_algorithm_time_node_bill,3
402,r5rwl8,How does a web server talk with an API at a low level.,Help,25,0.91,computerscience,https://www.reddit.com/r/computerscience/comments/r5rwl8/how_does_a_web_server_talk_with_an_api_at_a_low/,4,"hello, i am trying to get a deeper understanding of networking, specially low level network programming. i have been reading about sockets and how to write server programs using socket libraries like winsock or socket.h, but i am kind of confused about how the server then talks with other programs. i think the best way to explain it, is for me to lay out what i think is happening when a simple get request hits an http server.

assume a client and server socket are already connected using tcp.

data arrives to the network interface for the machine, the driver for network interface card tells the os that it has data (through an interrupt?). the os then looks at the ip:port# and if there is a connected socket listening with that ip and port, it then (through the socket library) passes the data to the process that is the ""server"". the server has the payload with the http headers, metadata, body, etc. now let us say i have written an api using c# using the webapi framework in dotnet. does the server open a socket with the process running the api in order to pass the http request info to the correct endpoint? is the server and the api the same process, and the dotnet framework (or any api framework) is baking in the socket code and acting as a server as well? or is it something i am completely missing?

&#x200b;

let me know if this makes sense at all. please correct and incorrect assumptions or missing steps in my walkthrough. i am trying to remove as much abstraction as possible and understand how something like this works at a low level.

thanks for your time!",1638291958.0,"['hello', ',', 'try', 'get', 'deeper', 'understand', 'networking', ',', 'specially', 'low', 'level', 'network', 'program', '.', 'reading', 'socket', 'write', 'server', 'program', 'use', 'socket', 'library', 'like', 'winsock', 'socket.h', ',', 'kind', 'confuse', 'server', 'talk', 'program', '.', 'think', 'best', 'way', 'explain', ',', 'lay', 'think', 'happen', 'simple', 'get', 'request', 'hit', 'http', 'server', '.', 'assume', 'client', 'server', 'socket', 'already', 'connect', 'use', 'tcp', '.', 'data', 'arrives', 'network', 'interface', 'machine', ',', 'driver', 'network', 'interface', 'card', 'tell', 'o', 'data', '(', 'interrupt', '?', ')', '.', 'o', 'look', 'ip', ':', 'port', '#', 'connect', 'socket', 'listen', 'ip', 'port', ',', '(', 'socket', 'library', ')', 'pass', 'data', 'process', '``', 'server', ""''"", '.', 'server', 'payload', 'http', 'header', ',', 'metadata', ',', 'body', ',', 'etc', '.', 'let', 'u', 'say', 'write', 'api', 'use', 'c', '#', 'use', 'webapi', 'framework', 'dotnet', '.', 'server', 'open', 'socket', 'process', 'run', 'api', 'order', 'pas', 'http', 'request', 'info', 'correct', 'endpoint', '?', 'server', 'api', 'process', ',', 'dotnet', 'framework', '(', 'api', 'framework', ')', 'baking', 'socket', 'code', 'act', 'server', 'well', '?', 'something', 'completely', 'miss', '?', '&', '#', 'x200b', ';', 'let', 'know', 'make', 'sense', '.', 'please', 'correct', 'incorrect', 'assumption', 'miss', 'step', 'walkthrough', '.', 'try', 'remove', 'much', 'abstraction', 'possible', 'understand', 'something', 'like', 'work', 'low', 'level', '.', 'thanks', 'time', '!']","[[('hello', 'NN')], [(',', ',')], [('trying', 'VBG')], [('get', 'VB')], [('deeper', 'NN')], [('understanding', 'VBG')], [('networking', 'NN')], [(',', ',')], [('specially', 'RB')], [('low', 'JJ')], [('level', 'NN')], [('network', 'NN')], [('programming', 'VBG')], [('.', '.')], [('reading', 'NN')], [('sockets', 'NNS')], [('write', 'NN')], [('server', 'NN')], [('programs', 'NNS')], [('using', 'VBG')], [('socket', 'NN')], [('libraries', 'NNS')], [('like', 'IN')], [('winsock', 'NN')], [('socket.h', 'NN')], [(',', ',')], [('kind', 'NN')], [('confused', 'VBN')], [('server', 'NN')], [('talks', 'NNS')], [('programs', 'NNS')], [('.', '.')], [('think', 'NN')], [('best', 'JJS')], [('way', 'NN')], [('explain', 'NN')], [(',', ',')], [('lay', 'NN')], [('think', 'NN')], [('happening', 'VBG')], [('simple', 'NN')], [('get', 'VB')], [('request', 'NN')], [('hits', 'NNS')], [('http', 'NN')], [('server', 'NN')], [('.', '.')], [('assume', 'VB')], [('client', 'NN')], [('server', 'NN')], [('socket', 'NN')], [('already', 'RB')], [('connected', 'VBN')], [('using', 'VBG')], [('tcp', 'NN')], [('.', '.')], [('data', 'NNS')], [('arrives', 'NNS')], [('network', 'NN')], [('interface', 'NN')], [('machine', 'NN')], [(',', ',')], [('driver', 'NN')], [('network', 'NN')], [('interface', 'NN')], [('card', 'NN')], [('tells', 'NNS')], [('os', 'NN')], [('data', 'NNS')], [('(', '(')], [('interrupt', 'NN')], [('?', '.')], [(')', ')')], [('.', '.')], [('os', 'NN')], [('looks', 'NNS')], [('ip', 'NN')], [(':', ':')], [('port', 'NN')], [('#', '#')], [('connected', 'VBN')], [('socket', 'NN')], [('listening', 'VBG')], [('ip', 'NN')], [('port', 'NN')], [(',', ',')], [('(', '(')], [('socket', 'NN')], [('library', 'NN')], [(')', ')')], [('passes', 'NNS')], [('data', 'NNS')], [('process', 'NN')], [('``', '``')], [('server', 'NN')], [(""''"", ""''"")], [('.', '.')], [('server', 'NN')], [('payload', 'NN')], [('http', 'NN')], [('headers', 'NNS')], [(',', ',')], [('metadata', 'NNS')], [(',', ',')], [('body', 'NN')], [(',', ',')], [('etc', 'NN')], [('.', '.')], [('let', 'VB')], [('us', 'PRP')], [('say', 'VB')], [('written', 'VBN')], [('api', 'NN')], [('using', 'VBG')], [('c', 'NNS')], [('#', '#')], [('using', 'VBG')], [('webapi', 'NN')], [('framework', 'NN')], [('dotnet', 'NN')], [('.', '.')], [('server', 'NN')], [('open', 'JJ')], [('socket', 'NN')], [('process', 'NN')], [('running', 'VBG')], [('api', 'NN')], [('order', 'NN')], [('pass', 'NN')], [('http', 'NN')], [('request', 'NN')], [('info', 'NN')], [('correct', 'NN')], [('endpoint', 'NN')], [('?', '.')], [('server', 'NN')], [('api', 'NN')], [('process', 'NN')], [(',', ',')], [('dotnet', 'NN')], [('framework', 'NN')], [('(', '(')], [('api', 'NN')], [('framework', 'NN')], [(')', ')')], [('baking', 'NN')], [('socket', 'NN')], [('code', 'NN')], [('acting', 'VBG')], [('server', 'NN')], [('well', 'RB')], [('?', '.')], [('something', 'NN')], [('completely', 'RB')], [('missing', 'VBG')], [('?', '.')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('let', 'VB')], [('know', 'VB')], [('makes', 'VBZ')], [('sense', 'NN')], [('.', '.')], [('please', 'NN')], [('correct', 'NN')], [('incorrect', 'NN')], [('assumptions', 'NNS')], [('missing', 'VBG')], [('steps', 'NNS')], [('walkthrough', 'NN')], [('.', '.')], [('trying', 'VBG')], [('remove', 'VB')], [('much', 'JJ')], [('abstraction', 'NN')], [('possible', 'JJ')], [('understand', 'NN')], [('something', 'NN')], [('like', 'IN')], [('works', 'NNS')], [('low', 'JJ')], [('level', 'NN')], [('.', '.')], [('thanks', 'NNS')], [('time', 'NN')], [('!', '.')]]","hello , try get deeper understand networking , specially low level network program . reading socket write server program use socket library like winsock socket.h , kind confuse server talk program . think best way explain , lay think happen simple get request hit http server . assume client server socket already connect use tcp . data arrives network interface machine , driver network interface card tell o data ( interrupt ? ) . o look ip : port # connect socket listen ip port , ( socket library ) pass data process `` server '' . server payload http header , metadata , body , etc . let u say write api use c # use webapi framework dotnet . server open socket process run api order pas http request info correct endpoint ? server api process , dotnet framework ( api framework ) baking socket code act server well ? something completely miss ? & # x200b ; let know make sense . please correct incorrect assumption miss step walkthrough . try remove much abstraction possible understand something like work low level . thanks time !",6_server_packet_key_hash,2
403,r54to6,(HELP) Learning Networking,,27,0.97,computerscience,https://www.reddit.com/r/computerscience/comments/r54to6/help_learning_networking/,11,"hey guys, i just wanted to see if any of you know any good resource because so far i have read many books but none of them helped me (head first, cisco , comptia)  i know those are good books but i need something that explains everything, i am a complete beginner.. for example they start talking about protocols without explaining what  a protocol is and a lot of things like that they just say words without explaining

i need a book or course that gives a deep introduction.",1638217686.0,"['hey', 'guy', ',', 'want', 'see', 'know', 'good', 'resource', 'far', 'read', 'many', 'book', 'none', 'help', '(', 'head', 'first', ',', 'cisco', ',', 'comptia', ')', 'know', 'good', 'book', 'need', 'something', 'explains', 'everything', ',', 'complete', 'beginner', '..', 'example', 'start', 'talk', 'protocol', 'without', 'explain', 'protocol', 'lot', 'thing', 'like', 'say', 'word', 'without', 'explain', 'need', 'book', 'course', 'give', 'deep', 'introduction', '.']","[[('hey', 'NN')], [('guys', 'NNS')], [(',', ',')], [('wanted', 'VBD')], [('see', 'VB')], [('know', 'VB')], [('good', 'JJ')], [('resource', 'NN')], [('far', 'RB')], [('read', 'NN')], [('many', 'JJ')], [('books', 'NNS')], [('none', 'NN')], [('helped', 'VBD')], [('(', '(')], [('head', 'NN')], [('first', 'RB')], [(',', ',')], [('cisco', 'NN')], [(',', ',')], [('comptia', 'NN')], [(')', ')')], [('know', 'VB')], [('good', 'JJ')], [('books', 'NNS')], [('need', 'NN')], [('something', 'NN')], [('explains', 'NNS')], [('everything', 'NN')], [(',', ',')], [('complete', 'JJ')], [('beginner', 'NN')], [('..', 'NN')], [('example', 'NN')], [('start', 'NN')], [('talking', 'VBG')], [('protocols', 'NNS')], [('without', 'IN')], [('explaining', 'VBG')], [('protocol', 'NN')], [('lot', 'NN')], [('things', 'NNS')], [('like', 'IN')], [('say', 'VB')], [('words', 'NNS')], [('without', 'IN')], [('explaining', 'VBG')], [('need', 'NN')], [('book', 'NN')], [('course', 'NN')], [('gives', 'VBZ')], [('deep', 'NN')], [('introduction', 'NN')], [('.', '.')]]","hey guy , want see know good resource far read many book none help ( head first , cisco , comptia ) know good book need something explains everything , complete beginner .. example start talk protocol without explain protocol lot thing like say word without explain need book course give deep introduction .",-1_abazbz2abz_2520_problem_use,3
405,r4v7w6,Operations of a memory stack and how it is used to implement function calls on a computer,,33,0.98,computerscience,https://www.reddit.com/r/computerscience/comments/r4v7w6/operations_of_a_memory_stack_and_how_it_is_used/,10,"hi everyone, i have recently been doing some personal research on data structures and algorithms, one of the things i want to look into is a memory stack. 
i have already written about how a stack data structure works in c# (what is does, what the operations are and some examples) but i also need to talk about a memory stack.

would anyone be able to explain to me in simple terms what a memory stack is and if there is any different between a stack in c# and a memory stack and also how it is used to implement function calls in a computer?

everything i have found online is either too complicated or is just telling me you can push and pop like you can in the c# stack so i do not understand the difference.
thanks :)",1638190442.0,"['hi', 'everyone', ',', 'recently', 'personal', 'research', 'data', 'structure', 'algorithm', ',', 'one', 'thing', 'want', 'look', 'memory', 'stack', '.', 'already', 'write', 'stack', 'data', 'structure', 'work', 'c', '#', '(', ',', 'operation', 'example', ')', 'also', 'need', 'talk', 'memory', 'stack', '.', 'would', 'anyone', 'able', 'explain', 'simple', 'term', 'memory', 'stack', 'different', 'stack', 'c', '#', 'memory', 'stack', 'also', 'use', 'implement', 'function', 'call', 'computer', '?', 'everything', 'found', 'online', 'either', 'complicate', 'tell', 'push', 'pop', 'like', 'c', '#', 'stack', 'understand', 'difference', '.', 'thanks', ':', ')']","[[('hi', 'NN')], [('everyone', 'NN')], [(',', ',')], [('recently', 'RB')], [('personal', 'JJ')], [('research', 'NN')], [('data', 'NNS')], [('structures', 'NNS')], [('algorithms', 'NN')], [(',', ',')], [('one', 'CD')], [('things', 'NNS')], [('want', 'NN')], [('look', 'NN')], [('memory', 'NN')], [('stack', 'NN')], [('.', '.')], [('already', 'RB')], [('written', 'VBN')], [('stack', 'NN')], [('data', 'NNS')], [('structure', 'NN')], [('works', 'NNS')], [('c', 'NNS')], [('#', '#')], [('(', '(')], [(',', ',')], [('operations', 'NNS')], [('examples', 'NNS')], [(')', ')')], [('also', 'RB')], [('need', 'NN')], [('talk', 'NN')], [('memory', 'NN')], [('stack', 'NN')], [('.', '.')], [('would', 'MD')], [('anyone', 'NN')], [('able', 'JJ')], [('explain', 'NN')], [('simple', 'NN')], [('terms', 'NNS')], [('memory', 'NN')], [('stack', 'NN')], [('different', 'JJ')], [('stack', 'NN')], [('c', 'NNS')], [('#', '#')], [('memory', 'NN')], [('stack', 'NN')], [('also', 'RB')], [('used', 'VBN')], [('implement', 'NN')], [('function', 'NN')], [('calls', 'NNS')], [('computer', 'NN')], [('?', '.')], [('everything', 'NN')], [('found', 'NN')], [('online', 'NN')], [('either', 'DT')], [('complicated', 'VBN')], [('telling', 'VBG')], [('push', 'NN')], [('pop', 'NN')], [('like', 'IN')], [('c', 'NNS')], [('#', '#')], [('stack', 'NN')], [('understand', 'NN')], [('difference', 'NN')], [('.', '.')], [('thanks', 'NNS')], [(':', ':')], [(')', ')')]]","hi everyone , recently personal research data structure algorithm , one thing want look memory stack . already write stack data structure work c # ( , operation example ) also need talk memory stack . would anyone able explain simple term memory stack different stack c # memory stack also use implement function call computer ? everything found online either complicate tell push pop like c # stack understand difference . thanks : )",1_memory_byte_data_alignment,3
406,r4xo16,Liskovs Substitution Principle Question,,5,0.86,computerscience,https://www.reddit.com/r/computerscience/comments/r4xo16/liskovs_substitution_principle_question/,10,"my question is about why lsp requires contravariance in the parameters of the subtype's inherited methods.

and more to that, if following lsp means that i can pass in a subtype wherever a parent type is expected, then why could not the inherited methods of the subtype be covariant in the parameters?

does the fact that you cannot be more specific when passing parameters to a subtype's inherited methods itself violate lsp?

edit: thanks to you/probablynotabadguy i think i understand this.

if you have a type t and a subtype s, then for all intents and purposes, s is a t.

and so of course the substitution portion holds that if you have a function `foo(t)` that you should be able to pass in an s - because we just said an s is a t, right?

that part i understood. however, because anything provable of type t should be provable for type s, that includes it is methods. and so the contravariance of the subtypes methods is precisely because it is trying to preserve the provability of the subtype relationship.


my apologies, i know that is probably a lot of the same words.

[code](+184%2c+195%2c+1%29&t=vscode&wt=none&l=text%2fx-php&ds=true&dsyoff=42px&dsblur=68px&wc=true&wa=true&pv=56px&ph=56px&ln=false&fl=1&fm=hack&fs=14px&lh=133%25&si=false&es=2x&wm=false&code=class%2520speaker%2520%257b%250a%2509public%2520function%2520speak%28string%2520%2524word%29%2520%257b%250a%2509%2509return%2520%2524word%253b%250a%2509%257d%250a%257d%250a%250aclass%2520loudspeaker%2520extends%2520speaker%2520%257b%250a%2520%2509public%2520function%2520speak%28string%2520%2524word%29%2520%257b%250a%2509%2509return%2520strtoupper%28%2524word%29%253b%250a%2509%257d%250a%257d%250a%250aclass%2520screamingspeaker%2520extends%2520loudspeaker%2520%257b%250a%2520%2509public%2520function%2520speak%28string%2520%2524word%29%2520%257b%250a%2509%2509return%2520strtoupper%28%2524word%29%2520.%2520%27%21%21%21%27%253b%250a%2509%257d%250a%257d%250a%250aclass%2520animal%2520%257b%250a%2520%2520%2520%2520public%2520function%2520speak%28loudspeaker%2520%2524speaker%29%253a%2520string%2520%257b%250a%2520%2520%2520%2520%2520%2520%2520%2520return%2520%2524speaker-%253espeak%28self%253a%253aclass%29%253b%250a%2520%2520%2520%2520%257d%250a%257d%250a%250aclass%2520cat%2520extends%2520animal%2520%257b%250a%2520%2520%2520%2520%250a%2520%2520%2520%2520%252f%252f%2520why%2520am%2520i%2520not%2520allowed%2520to%2520accept%2520screamingspeaker%2520here%253f%250a%2520%2520%2520%2520%252f%252f%2520according%2520to%2520lsp%2520i%2520can%2520only%2520accept%2520either%2520loudspeaker%2520or%250a%2520%2520%2520%2520%252f%252f%2520it%27s%2520parent%2520class%2520speaker.%250a%2520%2520%2520%2520public%2520function%2520speak%28loudspeaker%2520%2524speaker%29%253a%2520string%2520%257b%250a%2520%2520%2520%2520%2520%2520%2520%2520return%2520%2524speaker-%253espeak%28self%253a%253aclass%29%253b%250a%2520%2520%2520%2520%257d%250a%257d%250a%250afunction%2520makeanimalspeak%28animal%2520%2524animal%29%2520%257b%250a%250a%2520%2520%2520%2520%252f%252f%2520according%2520to%2520lsp%2520i%2520shouldn%27t%2520pass%2520in%2520loudspeaker%2520here%253f%250a%2509return%2520%2524animal-%253espeak%28new%2520speaker%29%253b%250a%257d%250a%250amakeanimalspeak%28new%2520cat%29)",1638198036.0,"['question', 'lsp', 'require', 'contravariance', 'parameter', 'subtype', ""'s"", 'inherit', 'method', '.', ',', 'follow', 'lsp', 'mean', 'pas', 'subtype', 'wherever', 'parent', 'type', 'expect', ',', 'could', 'inherit', 'method', 'subtype', 'covariant', 'parameter', '?', 'fact', 'specific', 'passing', 'parameter', 'subtype', ""'s"", 'inherit', 'method', 'violate', 'lsp', '?', 'edit', ':', 'thanks', 'you/probablynotabadguy', 'think', 'understand', '.', 'type', 'subtype', ',', 'intent', 'purpose', ',', 't.', 'course', 'substitution', 'portion', 'hold', 'function', '`', 'foo', '(', ')', '`', 'able', 'pas', '-', 'say', ',', 'right', '?', 'part', 'understood', '.', 'however', ',', 'anything', 'provable', 'type', 'provable', 'type', ',', 'include', 'method', '.', 'contravariance', 'subtypes', 'method', 'precisely', 'try', 'preserve', 'provability', 'subtype', 'relationship', '.', 'apology', ',', 'know', 'probably', 'lot', 'word', '.', '[', 'code', ']', '(', '+184', '%', '2c+195', '%', '2c+1', '%', '29', '&', 't=vscode', '&', 'wt=none', '&', 'l=text', '%', '2fx-php', '&', 'ds=true', '&', 'dsyoff=42px', '&', 'dsblur=68px', '&', 'wc=true', '&', 'wa=true', '&', 'pv=56px', '&', 'ph=56px', '&', 'ln=false', '&', 'fl=1', '&', 'fm=hack', '&', 'fs=14px', '&', 'lh=133', '%', '25', '&', 'si=false', '&', 'es=2x', '&', 'wm=false', '&', 'code=class', '%', '2520speaker', '%', '2520', '%', '257b', '%', '250a', '%', '2509public', '%', '2520function', '%', '2520speak', '%', '28string', '%', '2520', '%', '2524word', '%', '29', '%', '2520', '%', '257b', '%', '250a', '%', '2509', '%', '2509return', '%', '2520', '%', '2524word', '%', '253b', '%', '250a', '%', '2509', '%', '257d', '%', '250a', '%', '257d', '%', '250a', '%', '250aclass', '%', '2520loudspeaker', '%', '2520extends', '%', '2520speaker', '%', '2520', '%', '257b', '%', '250a', '%', '2520', '%', '2509public', '%', '2520function', '%', '2520speak', '%', '28string', '%', '2520', '%', '2524word', '%', '29', '%', '2520', '%', '257b', '%', '250a', '%', '2509', '%', '2509return', '%', '2520strtoupper', '%', '28', '%', '2524word', '%', '29', '%', '253b', '%', '250a', '%', '2509', '%', '257d', '%', '250a', '%', '257d', '%', '250a', '%', '250aclass', '%', '2520screamingspeaker', '%', '2520extends', '%', '2520loudspeaker', '%', '2520', '%', '257b', '%', '250a', '%', '2520', '%', '2509public', '%', '2520function', '%', '2520speak', '%', '28string', '%', '2520', '%', '2524word', '%', '29', '%', '2520', '%', '257b', '%', '250a', '%', '2509', '%', '2509return', '%', '2520strtoupper', '%', '28', '%', '2524word', '%', '29', '%', '2520.', '%', '2520', '%', '27', '%', '21', '%', '21', '%', '21', '%', '27', '%', '253b', '%', '250a', '%', '2509', '%', '257d', '%', '250a', '%', '257d', '%', '250a', '%', '250aclass', '%', '2520animal', '%', '2520', '%', '257b', '%', '250a', '%', '2520', '%', '2520', '%', '2520', '%', '2520public', '%', '2520function', '%', '2520speak', '%', '28loudspeaker', '%', '2520', '%', '2524speaker', '%', '29', '%', '253a', '%', '2520string', '%', '2520', '%', '257b', '%', '250a', '%', '2520', '%', '2520', '%', '2520', '%', '2520', '%', '2520', '%', '2520', '%', '2520', '%', '2520return', '%', '2520', '%', '2524speaker-', '%', '253espeak', '%', '28self', '%', '253a', '%', '253aclass', '%', '29', '%', '253b', '%', '250a', '%', '2520', '%', '2520', '%', '2520', '%', '2520', '%', '257d', '%', '250a', '%', '257d', '%', '250a', '%', '250aclass', '%', '2520cat', '%', '2520extends', '%', '2520animal', '%', '2520', '%', '257b', '%', '250a', '%', '2520', '%', '2520', '%', '2520', '%', '2520', '%', '250a', '%', '2520', '%', '2520', '%', '2520', '%', '2520', '%', '252f', '%', '252f', '%', '2520why', '%', '2520am', '%', '2520i', '%', '2520not', '%', '2520allowed', '%', '2520to', '%', '2520accept', '%', '2520screamingspeaker', '%', '2520here', '%', '253f', '%', '250a', '%', '2520', '%', '2520', '%', '2520', '%', '2520', '%', '252f', '%', '252f', '%', '2520according', '%', '2520to', '%', '2520lsp', '%', '2520i', '%', '2520can', '%', '2520only', '%', '2520accept', '%', '2520either', '%', '2520loudspeaker', '%', '2520or', '%', '250a', '%', '2520', '%', '2520', '%', '2520', '%', '2520', '%', '252f', '%', '252f', '%', '2520it', '%', '27', '%', '2520parent', '%', '2520class', '%', '2520speaker.', '%', '250a', '%', '2520', '%', '2520', '%', '2520', '%', '2520public', '%', '2520function', '%', '2520speak', '%', '28loudspeaker', '%', '2520', '%', '2524speaker', '%', '29', '%', '253a', '%', '2520string', '%', '2520', '%', '257b', '%', '250a', '%', '2520', '%', '2520', '%', '2520', '%', '2520', '%', '2520', '%', '2520', '%', '2520', '%', '2520return', '%', '2520', '%', '2524speaker-', '%', '253espeak', '%', '28self', '%', '253a', '%', '253aclass', '%', '29', '%', '253b', '%', '250a', '%', '2520', '%', '2520', '%', '2520', '%', '2520', '%', '257d', '%', '250a', '%', '257d', '%', '250a', '%', '250afunction', '%', '2520makeanimalspeak', '%', '28animal', '%', '2520', '%', '2524animal', '%', '29', '%', '2520', '%', '257b', '%', '250a', '%', '250a', '%', '2520', '%', '2520', '%', '2520', '%', '2520', '%', '252f', '%', '252f', '%', '2520according', '%', '2520to', '%', '2520lsp', '%', '2520i', '%', '2520shouldn', '%', '27t', '%', '2520pass', '%', '2520in', '%', '2520loudspeaker', '%', '2520here', '%', '253f', '%', '250a', '%', '2509return', '%', '2520', '%', '2524animal-', '%', '253espeak', '%', '28new', '%', '2520speaker', '%', '29', '%', '253b', '%', '250a', '%', '257d', '%', '250a', '%', '250amakeanimalspeak', '%', '28new', '%', '2520cat', '%', '29', ')']","[[('question', 'NN')], [('lsp', 'NN')], [('requires', 'VBZ')], [('contravariance', 'NN')], [('parameters', 'NNS')], [('subtype', 'NN')], [(""'s"", 'POS')], [('inherited', 'VBN')], [('methods', 'NNS')], [('.', '.')], [(',', ',')], [('following', 'VBG')], [('lsp', 'NN')], [('means', 'NNS')], [('pass', 'NN')], [('subtype', 'NN')], [('wherever', 'NN')], [('parent', 'NN')], [('type', 'NN')], [('expected', 'VBN')], [(',', ',')], [('could', 'MD')], [('inherited', 'VBN')], [('methods', 'NNS')], [('subtype', 'NN')], [('covariant', 'NN')], [('parameters', 'NNS')], [('?', '.')], [('fact', 'NN')], [('specific', 'JJ')], [('passing', 'NN')], [('parameters', 'NNS')], [('subtype', 'NN')], [(""'s"", 'POS')], [('inherited', 'VBN')], [('methods', 'NNS')], [('violate', 'NN')], [('lsp', 'NN')], [('?', '.')], [('edit', 'NN')], [(':', ':')], [('thanks', 'NNS')], [('you/probablynotabadguy', 'NN')], [('think', 'NN')], [('understand', 'NN')], [('.', '.')], [('type', 'NN')], [('subtype', 'NN')], [(',', ',')], [('intents', 'NNS')], [('purposes', 'NNS')], [(',', ',')], [('t.', 'NN')], [('course', 'NN')], [('substitution', 'NN')], [('portion', 'NN')], [('holds', 'VBZ')], [('function', 'NN')], [('`', '``')], [('foo', 'NN')], [('(', '(')], [(')', ')')], [('`', '``')], [('able', 'JJ')], [('pass', 'NN')], [('-', ':')], [('said', 'VBD')], [(',', ',')], [('right', 'NN')], [('?', '.')], [('part', 'NN')], [('understood', 'NN')], [('.', '.')], [('however', 'RB')], [(',', ',')], [('anything', 'NN')], [('provable', 'JJ')], [('type', 'NN')], [('provable', 'JJ')], [('type', 'NN')], [(',', ',')], [('includes', 'VBZ')], [('methods', 'NNS')], [('.', '.')], [('contravariance', 'NN')], [('subtypes', 'NNS')], [('methods', 'NNS')], [('precisely', 'RB')], [('trying', 'VBG')], [('preserve', 'NN')], [('provability', 'NN')], [('subtype', 'NN')], [('relationship', 'NN')], [('.', '.')], [('apologies', 'NNS')], [(',', ',')], [('know', 'VB')], [('probably', 'RB')], [('lot', 'NN')], [('words', 'NNS')], [('.', '.')], [('[', 'NN')], [('code', 'NN')], [(']', 'NN')], [('(', '(')], [('+184', 'NN')], [('%', 'NN')], [('2c+195', 'CD')], [('%', 'NN')], [('2c+1', 'CD')], [('%', 'NN')], [('29', 'CD')], [('&', 'CC')], [('t=vscode', 'NN')], [('&', 'CC')], [('wt=none', 'NN')], [('&', 'CC')], [('l=text', 'NN')], [('%', 'NN')], [('2fx-php', 'JJ')], [('&', 'CC')], [('ds=true', 'NN')], [('&', 'CC')], [('dsyoff=42px', 'NN')], [('&', 'CC')], [('dsblur=68px', 'NN')], [('&', 'CC')], [('wc=true', 'NN')], [('&', 'CC')], [('wa=true', 'NN')], [('&', 'CC')], [('pv=56px', 'NN')], [('&', 'CC')], [('ph=56px', 'NN')], [('&', 'CC')], [('ln=false', 'NN')], [('&', 'CC')], [('fl=1', 'NN')], [('&', 'CC')], [('fm=hack', 'NN')], [('&', 'CC')], [('fs=14px', 'NN')], [('&', 'CC')], [('lh=133', 'NN')], [('%', 'NN')], [('25', 'CD')], [('&', 'CC')], [('si=false', 'NN')], [('&', 'CC')], [('es=2x', 'NN')], [('&', 'CC')], [('wm=false', 'NN')], [('&', 'CC')], [('code=class', 'NN')], [('%', 'NN')], [('2520speaker', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('257b', 'CD')], [('%', 'NN')], [('250a', 'CD')], [('%', 'NN')], [('2509public', 'CD')], [('%', 'NN')], [('2520function', 'CD')], [('%', 'NN')], [('2520speak', 'CD')], [('%', 'NN')], [('28string', 'VBG')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2524word', 'CD')], [('%', 'NN')], [('29', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('257b', 'CD')], [('%', 'NN')], [('250a', 'CD')], [('%', 'NN')], [('2509', 'CD')], [('%', 'NN')], [('2509return', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2524word', 'CD')], [('%', 'NN')], [('253b', 'CD')], [('%', 'NN')], [('250a', 'CD')], [('%', 'NN')], [('2509', 'CD')], [('%', 'NN')], [('257d', 'CD')], [('%', 'NN')], [('250a', 'CD')], [('%', 'NN')], [('257d', 'CD')], [('%', 'NN')], [('250a', 'CD')], [('%', 'NN')], [('250aclass', 'CD')], [('%', 'NN')], [('2520loudspeaker', 'CD')], [('%', 'NN')], [('2520extends', 'NNS')], [('%', 'NN')], [('2520speaker', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('257b', 'CD')], [('%', 'NN')], [('250a', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2509public', 'CD')], [('%', 'NN')], [('2520function', 'CD')], [('%', 'NN')], [('2520speak', 'CD')], [('%', 'NN')], [('28string', 'VBG')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2524word', 'CD')], [('%', 'NN')], [('29', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('257b', 'CD')], [('%', 'NN')], [('250a', 'CD')], [('%', 'NN')], [('2509', 'CD')], [('%', 'NN')], [('2509return', 'CD')], [('%', 'NN')], [('2520strtoupper', 'CD')], [('%', 'NN')], [('28', 'CD')], [('%', 'NN')], [('2524word', 'CD')], [('%', 'NN')], [('29', 'CD')], [('%', 'NN')], [('253b', 'CD')], [('%', 'NN')], [('250a', 'CD')], [('%', 'NN')], [('2509', 'CD')], [('%', 'NN')], [('257d', 'CD')], [('%', 'NN')], [('250a', 'CD')], [('%', 'NN')], [('257d', 'CD')], [('%', 'NN')], [('250a', 'CD')], [('%', 'NN')], [('250aclass', 'CD')], [('%', 'NN')], [('2520screamingspeaker', 'CD')], [('%', 'NN')], [('2520extends', 'NNS')], [('%', 'NN')], [('2520loudspeaker', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('257b', 'CD')], [('%', 'NN')], [('250a', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2509public', 'CD')], [('%', 'NN')], [('2520function', 'CD')], [('%', 'NN')], [('2520speak', 'CD')], [('%', 'NN')], [('28string', 'VBG')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2524word', 'CD')], [('%', 'NN')], [('29', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('257b', 'CD')], [('%', 'NN')], [('250a', 'CD')], [('%', 'NN')], [('2509', 'CD')], [('%', 'NN')], [('2509return', 'CD')], [('%', 'NN')], [('2520strtoupper', 'CD')], [('%', 'NN')], [('28', 'CD')], [('%', 'NN')], [('2524word', 'CD')], [('%', 'NN')], [('29', 'CD')], [('%', 'NN')], [('2520.', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('27', 'CD')], [('%', 'NN')], [('21', 'CD')], [('%', 'NN')], [('21', 'CD')], [('%', 'NN')], [('21', 'CD')], [('%', 'NN')], [('27', 'CD')], [('%', 'NN')], [('253b', 'CD')], [('%', 'NN')], [('250a', 'CD')], [('%', 'NN')], [('2509', 'CD')], [('%', 'NN')], [('257d', 'CD')], [('%', 'NN')], [('250a', 'CD')], [('%', 'NN')], [('257d', 'CD')], [('%', 'NN')], [('250a', 'CD')], [('%', 'NN')], [('250aclass', 'CD')], [('%', 'NN')], [('2520animal', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('257b', 'CD')], [('%', 'NN')], [('250a', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2520public', 'CD')], [('%', 'NN')], [('2520function', 'CD')], [('%', 'NN')], [('2520speak', 'CD')], [('%', 'NN')], [('28loudspeaker', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2524speaker', 'CD')], [('%', 'NN')], [('29', 'CD')], [('%', 'NN')], [('253a', 'CD')], [('%', 'NN')], [('2520string', 'VBG')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('257b', 'CD')], [('%', 'NN')], [('250a', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2520return', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2524speaker-', 'JJ')], [('%', 'NN')], [('253espeak', 'CD')], [('%', 'NN')], [('28self', 'CD')], [('%', 'NN')], [('253a', 'CD')], [('%', 'NN')], [('253aclass', 'CD')], [('%', 'NN')], [('29', 'CD')], [('%', 'NN')], [('253b', 'CD')], [('%', 'NN')], [('250a', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('257d', 'CD')], [('%', 'NN')], [('250a', 'CD')], [('%', 'NN')], [('257d', 'CD')], [('%', 'NN')], [('250a', 'CD')], [('%', 'NN')], [('250aclass', 'CD')], [('%', 'NN')], [('2520cat', 'CD')], [('%', 'NN')], [('2520extends', 'NNS')], [('%', 'NN')], [('2520animal', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('257b', 'CD')], [('%', 'NN')], [('250a', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('250a', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('252f', 'CD')], [('%', 'NN')], [('252f', 'CD')], [('%', 'NN')], [('2520why', 'CD')], [('%', 'NN')], [('2520am', 'CD')], [('%', 'NN')], [('2520i', 'CD')], [('%', 'NN')], [('2520not', 'CD')], [('%', 'NN')], [('2520allowed', 'CD')], [('%', 'NN')], [('2520to', 'CD')], [('%', 'NN')], [('2520accept', 'CD')], [('%', 'NN')], [('2520screamingspeaker', 'CD')], [('%', 'NN')], [('2520here', 'CD')], [('%', 'NN')], [('253f', 'CD')], [('%', 'NN')], [('250a', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('252f', 'CD')], [('%', 'NN')], [('252f', 'CD')], [('%', 'NN')], [('2520according', 'VBG')], [('%', 'NN')], [('2520to', 'CD')], [('%', 'NN')], [('2520lsp', 'CD')], [('%', 'NN')], [('2520i', 'CD')], [('%', 'NN')], [('2520can', 'CD')], [('%', 'NN')], [('2520only', 'CD')], [('%', 'NN')], [('2520accept', 'CD')], [('%', 'NN')], [('2520either', 'CD')], [('%', 'NN')], [('2520loudspeaker', 'CD')], [('%', 'NN')], [('2520or', 'CD')], [('%', 'NN')], [('250a', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('252f', 'CD')], [('%', 'NN')], [('252f', 'CD')], [('%', 'NN')], [('2520it', 'CD')], [('%', 'NN')], [('27s', 'CD')], [('%', 'NN')], [('2520parent', 'CD')], [('%', 'NN')], [('2520class', 'CD')], [('%', 'NN')], [('2520speaker.', 'CD')], [('%', 'NN')], [('250a', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2520public', 'CD')], [('%', 'NN')], [('2520function', 'CD')], [('%', 'NN')], [('2520speak', 'CD')], [('%', 'NN')], [('28loudspeaker', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2524speaker', 'CD')], [('%', 'NN')], [('29', 'CD')], [('%', 'NN')], [('253a', 'CD')], [('%', 'NN')], [('2520string', 'VBG')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('257b', 'CD')], [('%', 'NN')], [('250a', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2520return', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2524speaker-', 'JJ')], [('%', 'NN')], [('253espeak', 'CD')], [('%', 'NN')], [('28self', 'CD')], [('%', 'NN')], [('253a', 'CD')], [('%', 'NN')], [('253aclass', 'CD')], [('%', 'NN')], [('29', 'CD')], [('%', 'NN')], [('253b', 'CD')], [('%', 'NN')], [('250a', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('257d', 'CD')], [('%', 'NN')], [('250a', 'CD')], [('%', 'NN')], [('257d', 'CD')], [('%', 'NN')], [('250a', 'CD')], [('%', 'NN')], [('250afunction', 'CD')], [('%', 'NN')], [('2520makeanimalspeak', 'CD')], [('%', 'NN')], [('28animal', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2524animal', 'CD')], [('%', 'NN')], [('29', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('257b', 'CD')], [('%', 'NN')], [('250a', 'CD')], [('%', 'NN')], [('250a', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('252f', 'CD')], [('%', 'NN')], [('252f', 'CD')], [('%', 'NN')], [('2520according', 'VBG')], [('%', 'NN')], [('2520to', 'CD')], [('%', 'NN')], [('2520lsp', 'CD')], [('%', 'NN')], [('2520i', 'CD')], [('%', 'NN')], [('2520shouldn', 'CD')], [('%', 'NN')], [('27t', 'CD')], [('%', 'NN')], [('2520pass', 'CD')], [('%', 'NN')], [('2520in', 'CD')], [('%', 'NN')], [('2520loudspeaker', 'CD')], [('%', 'NN')], [('2520here', 'CD')], [('%', 'NN')], [('253f', 'CD')], [('%', 'NN')], [('250a', 'CD')], [('%', 'NN')], [('2509return', 'CD')], [('%', 'NN')], [('2520', 'CD')], [('%', 'NN')], [('2524animal-', 'JJ')], [('%', 'NN')], [('253espeak', 'CD')], [('%', 'NN')], [('28new', 'CD')], [('%', 'NN')], [('2520speaker', 'CD')], [('%', 'NN')], [('29', 'CD')], [('%', 'NN')], [('253b', 'CD')], [('%', 'NN')], [('250a', 'CD')], [('%', 'NN')], [('257d', 'CD')], [('%', 'NN')], [('250a', 'CD')], [('%', 'NN')], [('250amakeanimalspeak', 'CD')], [('%', 'NN')], [('28new', 'CD')], [('%', 'NN')], [('2520cat', 'CD')], [('%', 'NN')], [('29', 'CD')], [(')', ')')]]","question lsp require contravariance parameter subtype 's inherit method . , follow lsp mean pas subtype wherever parent type expect , could inherit method subtype covariant parameter ? fact specific passing parameter subtype 's inherit method violate lsp ? edit : thanks you/probablynotabadguy think understand . type subtype , intent purpose , t. course substitution portion hold function ` foo ( ) ` able pas - say , right ? part understood . however , anything provable type provable type , include method . contravariance subtypes method precisely try preserve provability subtype relationship . apology , know probably lot word . [ code ] ( +184 % 2c+195 % 2c+1 % 29 & t=vscode & wt=none & l=text % 2fx-php & ds=true & dsyoff=42px & dsblur=68px & wc=true & wa=true & pv=56px & ph=56px & ln=false & fl=1 & fm=hack & fs=14px & lh=133 % 25 & si=false & es=2x & wm=false & code=class % 2520speaker % 2520 % 257b % 250a % 2509public % 2520function % 2520speak % 28string % 2520 % 2524word % 29 % 2520 % 257b % 250a % 2509 % 2509return % 2520 % 2524word % 253b % 250a % 2509 % 257d % 250a % 257d % 250a % 250aclass % 2520loudspeaker % 2520extends % 2520speaker % 2520 % 257b % 250a % 2520 % 2509public % 2520function % 2520speak % 28string % 2520 % 2524word % 29 % 2520 % 257b % 250a % 2509 % 2509return % 2520strtoupper % 28 % 2524word % 29 % 253b % 250a % 2509 % 257d % 250a % 257d % 250a % 250aclass % 2520screamingspeaker % 2520extends % 2520loudspeaker % 2520 % 257b % 250a % 2520 % 2509public % 2520function % 2520speak % 28string % 2520 % 2524word % 29 % 2520 % 257b % 250a % 2509 % 2509return % 2520strtoupper % 28 % 2524word % 29 % 2520. % 2520 % 27 % 21 % 21 % 21 % 27 % 253b % 250a % 2509 % 257d % 250a % 257d % 250a % 250aclass % 2520animal % 2520 % 257b % 250a % 2520 % 2520 % 2520 % 2520public % 2520function % 2520speak % 28loudspeaker % 2520 % 2524speaker % 29 % 253a % 2520string % 2520 % 257b % 250a % 2520 % 2520 % 2520 % 2520 % 2520 % 2520 % 2520 % 2520return % 2520 % 2524speaker- % 253espeak % 28self % 253a % 253aclass % 29 % 253b % 250a % 2520 % 2520 % 2520 % 2520 % 257d % 250a % 257d % 250a % 250aclass % 2520cat % 2520extends % 2520animal % 2520 % 257b % 250a % 2520 % 2520 % 2520 % 2520 % 250a % 2520 % 2520 % 2520 % 2520 % 252f % 252f % 2520why % 2520am % 2520i % 2520not % 2520allowed % 2520to % 2520accept % 2520screamingspeaker % 2520here % 253f % 250a % 2520 % 2520 % 2520 % 2520 % 252f % 252f % 2520according % 2520to % 2520lsp % 2520i % 2520can % 2520only % 2520accept % 2520either % 2520loudspeaker % 2520or % 250a % 2520 % 2520 % 2520 % 2520 % 252f % 252f % 2520it % 27 % 2520parent % 2520class % 2520speaker. % 250a % 2520 % 2520 % 2520 % 2520public % 2520function % 2520speak % 28loudspeaker % 2520 % 2524speaker % 29 % 253a % 2520string % 2520 % 257b % 250a % 2520 % 2520 % 2520 % 2520 % 2520 % 2520 % 2520 % 2520return % 2520 % 2524speaker- % 253espeak % 28self % 253a % 253aclass % 29 % 253b % 250a % 2520 % 2520 % 2520 % 2520 % 257d % 250a % 257d % 250a % 250afunction % 2520makeanimalspeak % 28animal % 2520 % 2524animal % 29 % 2520 % 257b % 250a % 250a % 2520 % 2520 % 2520 % 2520 % 252f % 252f % 2520according % 2520to % 2520lsp % 2520i % 2520shouldn % 27t % 2520pass % 2520in % 2520loudspeaker % 2520here % 253f % 250a % 2509return % 2520 % 2524animal- % 253espeak % 28new % 2520speaker % 29 % 253b % 250a % 257d % 250a % 250amakeanimalspeak % 28new % 2520cat % 29 )",-1_abazbz2abz_2520_problem_use,3
408,r3rold,Creating hash based verification of links.,,18,0.91,computerscience,https://www.reddit.com/r/computerscience/comments/r3rold/creating_hash_based_verification_of_links/,6,"hi geeks,

how do we verify whether a link or a github profile that was provided in resume belongs to the same person as the resume? i am thinking of having a hash based addressing to solve such problem. any leads? 

&#x200b;

for detailed explanation: let us say in my resume i put []() and no one knows if i am the random user and github user names are strange most times. what can be a possible solution to the problem?",1638060862.0,"['hi', 'geek', ',', 'verify', 'whether', 'link', 'github', 'profile', 'provide', 'resume', 'belongs', 'person', 'resume', '?', 'think', 'hash', 'base', 'address', 'solve', 'problem', '.', 'lead', '?', '&', '#', 'x200b', ';', 'detailed', 'explanation', ':', 'let', 'u', 'say', 'resume', 'put', '[', ']', '(', ')', 'one', 'know', 'random', 'user', 'github', 'user', 'name', 'strange', 'time', '.', 'possible', 'solution', 'problem', '?']","[[('hi', 'NN')], [('geeks', 'NNS')], [(',', ',')], [('verify', 'NN')], [('whether', 'IN')], [('link', 'NN')], [('github', 'NN')], [('profile', 'NN')], [('provided', 'VBN')], [('resume', 'NN')], [('belongs', 'NNS')], [('person', 'NN')], [('resume', 'NN')], [('?', '.')], [('thinking', 'VBG')], [('hash', 'NN')], [('based', 'VBN')], [('addressing', 'VBG')], [('solve', 'NN')], [('problem', 'NN')], [('.', '.')], [('leads', 'NNS')], [('?', '.')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('detailed', 'JJ')], [('explanation', 'NN')], [(':', ':')], [('let', 'VB')], [('us', 'PRP')], [('say', 'VB')], [('resume', 'NN')], [('put', 'NN')], [('[', 'NN')], [(']', 'NN')], [('(', '(')], [(')', ')')], [('one', 'CD')], [('knows', 'NNS')], [('random', 'NN')], [('user', 'NN')], [('github', 'NN')], [('user', 'NN')], [('names', 'NNS')], [('strange', 'NN')], [('times', 'NNS')], [('.', '.')], [('possible', 'JJ')], [('solution', 'NN')], [('problem', 'NN')], [('?', '.')]]","hi geek , verify whether link github profile provide resume belongs person resume ? think hash base address solve problem . lead ? & # x200b ; detailed explanation : let u say resume put [ ] ( ) one know random user github user name strange time . possible solution problem ?",-1_abazbz2abz_2520_problem_use,1
409,r3cbfk,Can you recommend any free courses/lecutres on fluid simulation?,Advice,24,0.91,computerscience,https://www.reddit.com/r/computerscience/comments/r3cbfk/can_you_recommend_any_free_courseslecutres_on/,5,"basically, question is in the title  
upd: found a great book on the topic:  fluid simulation for computer graphics by  robert bridson ",1638014898.0,"['basically', ',', 'question', 'title', 'upd', ':', 'found', 'great', 'book', 'topic', ':', 'fluid', 'simulation', 'computer', 'graphic', 'robert', 'bridson']","[[('basically', 'RB')], [(',', ',')], [('question', 'NN')], [('title', 'NN')], [('upd', 'NN')], [(':', ':')], [('found', 'NN')], [('great', 'JJ')], [('book', 'NN')], [('topic', 'NN')], [(':', ':')], [('fluid', 'NN')], [('simulation', 'NN')], [('computer', 'NN')], [('graphics', 'NNS')], [('robert', 'NN')], [('bridson', 'NN')]]","basically , question title upd : found great book topic : fluid simulation computer graphic robert bridson",4_book_learn_computer_good,3
410,r3exb5,LC-3 memory size question,,13,0.93,computerscience,https://www.reddit.com/r/computerscience/comments/r3exb5/lc3_memory_size_question/,10,"-vm/index.html#1:3

> the lc-3 has 65,536 memory locations (the maximum that is addressable by a 16-bit unsigned integer 2^16), each of which stores a 16-bit value. this means it can store a total of only 128kb, which is a lot smaller than you may be used to! in our program, this memory will be stored in a simple array

can someone help me to understand why and how the size of the memory is 128kb (kilobits)? i really might be this dense, but i do not get it.

sorry in advance if not correct sub, i thought this would be the closest one. this is not my home-work, i am old dude just doing this on my freetime.",1638024227.0,"['-vm/index.html', '#', '1:3', '>', 'lc-3', '65,536', 'memory', 'location', '(', 'maximum', 'addressable', '16-bit', 'unsigned', 'integer', '2^16', ')', ',', 'store', '16-bit', 'value', '.', 'mean', 'store', 'total', '128kb', ',', 'lot', 'small', 'may', 'use', '!', 'program', ',', 'memory', 'store', 'simple', 'array', 'someone', 'help', 'understand', 'size', 'memory', '128kb', '(', 'kilobit', ')', '?', 'really', 'might', 'dense', ',', 'get', '.', 'sorry', 'advance', 'correct', 'sub', ',', 'thought', 'would', 'closest', 'one', '.', 'home-work', ',', 'old', 'dude', 'freetime', '.']","[[('-vm/index.html', 'NN')], [('#', '#')], [('1:3', 'CD')], [('>', 'NN')], [('lc-3', 'NN')], [('65,536', 'CD')], [('memory', 'NN')], [('locations', 'NNS')], [('(', '(')], [('maximum', 'NN')], [('addressable', 'JJ')], [('16-bit', 'JJ')], [('unsigned', 'JJ')], [('integer', 'NN')], [('2^16', 'CD')], [(')', ')')], [(',', ',')], [('stores', 'NNS')], [('16-bit', 'JJ')], [('value', 'NN')], [('.', '.')], [('means', 'NNS')], [('store', 'NN')], [('total', 'JJ')], [('128kb', 'CD')], [(',', ',')], [('lot', 'NN')], [('smaller', 'JJR')], [('may', 'MD')], [('used', 'VBN')], [('!', '.')], [('program', 'NN')], [(',', ',')], [('memory', 'NN')], [('stored', 'VBN')], [('simple', 'NN')], [('array', 'NN')], [('someone', 'NN')], [('help', 'NN')], [('understand', 'NN')], [('size', 'NN')], [('memory', 'NN')], [('128kb', 'CD')], [('(', '(')], [('kilobits', 'NNS')], [(')', ')')], [('?', '.')], [('really', 'RB')], [('might', 'MD')], [('dense', 'NN')], [(',', ',')], [('get', 'VB')], [('.', '.')], [('sorry', 'NN')], [('advance', 'NN')], [('correct', 'NN')], [('sub', 'NN')], [(',', ',')], [('thought', 'NN')], [('would', 'MD')], [('closest', 'NN')], [('one', 'CD')], [('.', '.')], [('home-work', 'NN')], [(',', ',')], [('old', 'JJ')], [('dude', 'NN')], [('freetime', 'NN')], [('.', '.')]]","-vm/index.html # 1:3 > lc-3 65,536 memory location ( maximum addressable 16-bit unsigned integer 2^16 ) , store 16-bit value . mean store total 128kb , lot small may use ! program , memory store simple array someone help understand size memory 128kb ( kilobit ) ? really might dense , get . sorry advance correct sub , thought would closest one . home-work , old dude freetime .",1_memory_byte_data_alignment,2
411,r39ah9,Why do we use texture atlases?,,4,0.7,computerscience,https://www.reddit.com/r/computerscience/comments/r39ah9/why_do_we_use_texture_atlases/,4,"if it is all in ram already then it should not add any additional time to skip around for textures, right? and even if it is some buffer shit then is not that opengls job?",1638002216.0,"['ram', 'already', 'add', 'additional', 'time', 'skip', 'around', 'texture', ',', 'right', '?', 'even', 'buffer', 'shit', 'opengls', 'job', '?']","[[('ram', 'NN')], [('already', 'RB')], [('add', 'VB')], [('additional', 'JJ')], [('time', 'NN')], [('skip', 'NN')], [('around', 'IN')], [('textures', 'NNS')], [(',', ',')], [('right', 'NN')], [('?', '.')], [('even', 'RB')], [('buffer', 'NN')], [('shit', 'NN')], [('opengls', 'NN')], [('job', 'NN')], [('?', '.')]]","ram already add additional time skip around texture , right ? even buffer shit opengls job ?",1_memory_byte_data_alignment,2
412,r2ye5m,Most Used Software Engineering Stack,Discussion,23,0.78,computerscience,https://www.reddit.com/r/computerscience/comments/r2ye5m/most_used_software_engineering_stack/,33,in your opinion what is the most widesbread stack used in software development feild today? i am cs student and am trying to get an idea of how people build software in the real world.,1637965523.0,"['opinion', 'widesbread', 'stack', 'use', 'software', 'development', 'feild', 'today', '?', 'c', 'student', 'try', 'get', 'idea', 'people', 'build', 'software', 'real', 'world', '.']","[[('opinion', 'NN')], [('widesbread', 'NN')], [('stack', 'NN')], [('used', 'VBN')], [('software', 'NN')], [('development', 'NN')], [('feild', 'NN')], [('today', 'NN')], [('?', '.')], [('cs', 'NN')], [('student', 'NN')], [('trying', 'VBG')], [('get', 'VB')], [('idea', 'NN')], [('people', 'NNS')], [('build', 'NN')], [('software', 'NN')], [('real', 'JJ')], [('world', 'NN')], [('.', '.')]]",opinion widesbread stack use software development feild today ? c student try get idea people build software real world .,-1_abazbz2abz_2520_problem_use,2
413,r2sjef,How a video player plays the video file instantly but not a video editor?,,21,0.81,computerscience,https://www.reddit.com/r/computerscience/comments/r2sjef/how_a_video_player_plays_the_video_file_instantly/,7,"when we open a video in any video player, it opens it almost instantly and plays in full resolution with 30fps. we can also skip to a particular section (time) and player instantly jumps both frame and audio to that section.

but when we open it in video editor, it does operation like caching frames or drop frame rate while playing inside editor. also when we zoom a particular length inside editor it takes time to make thumbnails for that section while in video player it resizes to resolution of windows in real time.

it seems video player can decode the video file instantly but not video editor.

so what is different between how a video player handles a file and how a video editor handles a file. also why it takes 5 minutes to export (write) the video while it can read it instantly.

i am not a computer science student. sorry if question is poorly phased.

thanks.",1637948259.0,"['open', 'video', 'video', 'player', ',', 'open', 'almost', 'instantly', 'play', 'full', 'resolution', '30fps', '.', 'also', 'skip', 'particular', 'section', '(', 'time', ')', 'player', 'instantly', 'jump', 'frame', 'audio', 'section', '.', 'open', 'video', 'editor', ',', 'operation', 'like', 'cache', 'frame', 'drop', 'frame', 'rate', 'play', 'inside', 'editor', '.', 'also', 'zoom', 'particular', 'length', 'inside', 'editor', 'take', 'time', 'make', 'thumbnail', 'section', 'video', 'player', 'resizes', 'resolution', 'window', 'real', 'time', '.', 'seem', 'video', 'player', 'decode', 'video', 'file', 'instantly', 'video', 'editor', '.', 'different', 'video', 'player', 'handle', 'file', 'video', 'editor', 'handle', 'file', '.', 'also', 'take', '5', 'minute', 'export', '(', 'write', ')', 'video', 'read', 'instantly', '.', 'computer', 'science', 'student', '.', 'sorry', 'question', 'poorly', 'phase', '.', 'thanks', '.']","[[('open', 'JJ')], [('video', 'NN')], [('video', 'NN')], [('player', 'NN')], [(',', ',')], [('opens', 'NNS')], [('almost', 'RB')], [('instantly', 'RB')], [('plays', 'NNS')], [('full', 'JJ')], [('resolution', 'NN')], [('30fps', 'CD')], [('.', '.')], [('also', 'RB')], [('skip', 'NN')], [('particular', 'JJ')], [('section', 'NN')], [('(', '(')], [('time', 'NN')], [(')', ')')], [('player', 'NN')], [('instantly', 'RB')], [('jumps', 'NNS')], [('frame', 'NN')], [('audio', 'NN')], [('section', 'NN')], [('.', '.')], [('open', 'JJ')], [('video', 'NN')], [('editor', 'NN')], [(',', ',')], [('operation', 'NN')], [('like', 'IN')], [('caching', 'VBG')], [('frames', 'NNS')], [('drop', 'NN')], [('frame', 'NN')], [('rate', 'NN')], [('playing', 'VBG')], [('inside', 'IN')], [('editor', 'NN')], [('.', '.')], [('also', 'RB')], [('zoom', 'NN')], [('particular', 'JJ')], [('length', 'NN')], [('inside', 'IN')], [('editor', 'NN')], [('takes', 'VBZ')], [('time', 'NN')], [('make', 'VB')], [('thumbnails', 'NNS')], [('section', 'NN')], [('video', 'NN')], [('player', 'NN')], [('resizes', 'NNS')], [('resolution', 'NN')], [('windows', 'NNS')], [('real', 'JJ')], [('time', 'NN')], [('.', '.')], [('seems', 'VBZ')], [('video', 'NN')], [('player', 'NN')], [('decode', 'NN')], [('video', 'NN')], [('file', 'NN')], [('instantly', 'RB')], [('video', 'NN')], [('editor', 'NN')], [('.', '.')], [('different', 'JJ')], [('video', 'NN')], [('player', 'NN')], [('handles', 'NNS')], [('file', 'NN')], [('video', 'NN')], [('editor', 'NN')], [('handles', 'NNS')], [('file', 'NN')], [('.', '.')], [('also', 'RB')], [('takes', 'VBZ')], [('5', 'CD')], [('minutes', 'NNS')], [('export', 'NN')], [('(', '(')], [('write', 'NN')], [(')', ')')], [('video', 'NN')], [('read', 'NN')], [('instantly', 'RB')], [('.', '.')], [('computer', 'NN')], [('science', 'NN')], [('student', 'NN')], [('.', '.')], [('sorry', 'NN')], [('question', 'NN')], [('poorly', 'RB')], [('phased', 'VBD')], [('.', '.')], [('thanks', 'NNS')], [('.', '.')]]","open video video player , open almost instantly play full resolution 30fps . also skip particular section ( time ) player instantly jump frame audio section . open video editor , operation like cache frame drop frame rate play inside editor . also zoom particular length inside editor take time make thumbnail section video player resizes resolution window real time . seem video player decode video file instantly video editor . different video player handle file video editor handle file . also take 5 minute export ( write ) video read instantly . computer science student . sorry question poorly phase . thanks .",1_memory_byte_data_alignment,4
414,r2a6yz,How do operating systems get loaded onto computers?,,76,0.92,computerscience,https://www.reddit.com/r/computerscience/comments/r2a6yz/how_do_operating_systems_get_loaded_onto_computers/,20,"when there are the components of a computer assembled into an otherwise perfectly functional pc, how is the operating system loaded onto the computer? it is not like they can code the computer by just typing on it because with no software it cannot interpret the text and it would not even know how to make the text because unicode is software too.",1637885515.0,"['component', 'computer', 'assemble', 'otherwise', 'perfectly', 'functional', 'pc', ',', 'operating', 'system', 'load', 'onto', 'computer', '?', 'like', 'code', 'computer', 'type', 'software', 'interpret', 'text', 'would', 'even', 'know', 'make', 'text', 'unicode', 'software', '.']","[[('components', 'NNS')], [('computer', 'NN')], [('assembled', 'VBN')], [('otherwise', 'RB')], [('perfectly', 'RB')], [('functional', 'JJ')], [('pc', 'NN')], [(',', ',')], [('operating', 'NN')], [('system', 'NN')], [('loaded', 'VBN')], [('onto', 'IN')], [('computer', 'NN')], [('?', '.')], [('like', 'IN')], [('code', 'NN')], [('computer', 'NN')], [('typing', 'VBG')], [('software', 'NN')], [('interpret', 'NN')], [('text', 'NN')], [('would', 'MD')], [('even', 'RB')], [('know', 'VB')], [('make', 'VB')], [('text', 'NN')], [('unicode', 'NN')], [('software', 'NN')], [('.', '.')]]","component computer assemble otherwise perfectly functional pc , operating system load onto computer ? like code computer type software interpret text would even know make text unicode software .",-1_abazbz2abz_2520_problem_use,2
415,r2e13s,"If an NP-complete problem X reduces to Y, is Y also NP-complete?",Help,24,0.96,computerscience,https://www.reddit.com/r/computerscience/comments/r2e13s/if_an_npcomplete_problem_x_reduces_to_y_is_y_also/,7,"my only exposure to np is a very well written stack overflow answer and i want to see if i understand it. if x is in np-complete (so all np problems reduce to x), and x reduces to y, then y is also np-complete right? or is it not transitive?",1637898299.0,"['exposure', 'np', 'well', 'write', 'stack', 'overflow', 'answer', 'want', 'see', 'understand', '.', 'x', 'np-complete', '(', 'np', 'problem', 'reduce', 'x', ')', ',', 'x', 'reduces', ',', 'also', 'np-complete', 'right', '?', 'transitive', '?']","[[('exposure', 'NN')], [('np', 'NN')], [('well', 'RB')], [('written', 'VBN')], [('stack', 'NN')], [('overflow', 'NN')], [('answer', 'NN')], [('want', 'NN')], [('see', 'VB')], [('understand', 'NN')], [('.', '.')], [('x', 'NN')], [('np-complete', 'JJ')], [('(', '(')], [('np', 'NN')], [('problems', 'NNS')], [('reduce', 'VB')], [('x', 'NN')], [(')', ')')], [(',', ',')], [('x', 'NN')], [('reduces', 'NNS')], [(',', ',')], [('also', 'RB')], [('np-complete', 'JJ')], [('right', 'NN')], [('?', '.')], [('transitive', 'NN')], [('?', '.')]]","exposure np well write stack overflow answer want see understand . x np-complete ( np problem reduce x ) , x reduces , also np-complete right ? transitive ?",0_algorithm_time_node_bill,2
416,r27cn1,Mathematical Logic Gates,Discussion,58,0.94,computerscience,https://www.reddit.com/r/computerscience/comments/r27cn1/mathematical_logic_gates/,26,"any letter here is used to represent a binary input (1 or 0) and then you just follow the basic of principles of maths, oh and work in **denary.** the idea is that you could punch one these formula into a standard school calculator without changing any settings and have it working.

here is the basic ones:

1. not = 1-x
2. and = xy
3. nand 1-xy
4. or x+y-xy
5. nor 1-x-y+xy
6. xor x+y-2xy
7. xnor 1-x-y+2xy

here is an adder that takes a carry and 2 bits and outputs the binary in:

* x+y+z+8xy+8xz+8yz-16xyz

sorry i did not create a half adder as my main source for logic gates was a video series by sebastian lague so i just followed that along .

anyway just for fun and to prove how utterly useless this whole thing is here is an untested 4 bit adder:

z+a+b-2ab-2az-2bz+4abz+10((ab+az+bz-2abz)+c+d-2c(ab+az+bz-2abz)-2d(ab+az+bz-2abz)-2cd+4cd(ab+az+bz-2abz))+100(e+f+(cd+c(ab+az+bz-2abz)+d(ab+az+bz-2abz)-2cd(ab+az+bz-2abz))-2ef-2e(cd+c(ab+az+bz-2abz)+d(ab+az+bz-2abz)-2cd(ab+az+bz-2abz)-2f(cd+c(ab+az+bz-2abz)+d(ab+az+bz-2abz)-2cd(ab+az+bz-2abz)+4ef(cd+c(ab+az+bz-2abz)+d(ab+az+bz-2abz)-2cd(ab+az+bz-2abz))+1000(g+h+(ef+e(cd+c(ab+az+bz-2abz)+d(ab+az+bz-2abz)-2cd(ab+az+bz-2abz))+f(cd+c(ab+az+bz-2abz)+d(ab+az+bz-2abz)-2cd(ab+az+bz-2abz))-2ef(cd+c(ab+az+bz-2abz)+d(ab+az+bz-2abz)-2cd(ab+az+bz-2abz))-2gh-2g(ef+e(cd+c(ab+az+bz-2abz)+d(ab+az+bz-2abz)-2cd(ab+az+bz-2abz))+f(cd+c(ab+az+bz-2abz)+d(ab+az+bz-2abz)-2cd(ab+az+bz-2abz))-2ef(cd+c(ab+az+bz-2abz)+d(ab+az+bz-2abz)-2cd(ab+az+bz-2abz))-2h(ef+e(cd+c(ab+az+bz-2abz)+d(ab+az+bz-2abz)-2cd(ab+az+bz-2abz))+f(cd+c(ab+az+bz-2abz)+d(ab+az+bz-2abz)-2cd(ab+az+bz-2abz))-2ef(cd+c(ab+az+bz-2abz)+d(ab+az+bz-2abz)-2cd(ab+az+bz-2abz))+4gh(ef+e(cd+c(ab+az+bz-2abz)+d(ab+az+bz-2abz)-2cd(ab+az+bz-2abz))+f(cd+c(ab+az+bz-2abz)+d(ab+az+bz-2abz)-2cd(ab+az+bz-2abz))-2ef(cd+c(ab+az+bz-2abz)+d(ab+az+bz-2abz)-2cd(ab+az+bz-2abz)))+10000(gh+g(ef+e(cd+c(ab+az+bz-2abz)+d(ab+az+bz-2abz)-2cd(ab+az+bz-2abz))+f(cd+c(ab+az+bz-2abz)+d(ab+az+bz-2abz)-2cd(ab+az+bz-2abz))-2ef(cd+c(ab+az+bz-2abz)+d(ab+az+bz-2abz)-2cd(ab+az+bz-2abz))+h(ef+e(cd+c(ab+az+bz-2abz)+d(ab+az+bz-2abz)-2cd(ab+az+bz-2abz))+f(cd+c(ab+az+bz-2abz)+d(ab+az+bz-2abz)-2cd(ab+az+bz-2abz))-2ef(cd+c(ab+az+bz-2abz)+d(ab+az+bz-2abz)-2cd(ab+az+bz-2abz))-2gh(ef+e(cd+c(ab+az+bz-2abz)+d(ab+az+bz-2abz)-2cd(ab+az+bz-2abz))+f(cd+c(ab+az+bz-2abz)+d(ab+az+bz-2abz)-2cd(ab+az+bz-2abz))-2ef(cd+c(ab+az+bz-2abz)+d(ab+az+bz-2abz)-2cd(ab+az+bz-2abz)))

z is a carry value (if you want to string together multiple adders) and a adds to b c adds to d etc

here is an interesting question, how far can we take this? could we write a turing machine like this?

mistakes have now been corrected thanks everyone who pointed them out and suggested solutions",1637876920.0,"['letter', 'use', 'represent', 'binary', 'input', '(', '1', '0', ')', 'follow', 'basic', 'principle', 'math', ',', 'oh', 'work', '*', '*', 'denary', '.', '*', '*', 'idea', 'could', 'punch', 'one', 'formula', 'standard', 'school', 'calculator', 'without', 'change', 'setting', 'work', '.', 'basic', 'one', ':', '1.', '=', '1-x', '2.', '=', 'xy', '3.', 'nand', '1-xy', '4.', 'x+y-xy', '5.', '1-x-y+xy', '6.', 'xor', 'x+y-2xy', '7.', 'xnor', '1-x-y+2xy', 'adder', 'take', 'carry', '2', 'bit', 'output', 'binary', ':', '*', 'x+y+z+8xy+8xz+8yz-16xyz', 'sorry', 'create', 'half', 'adder', 'main', 'source', 'logic', 'gate', 'video', 'series', 'sebastian', 'lague', 'follow', 'along', '.', 'anyway', 'fun', 'prove', 'utterly', 'useless', 'whole', 'thing', 'untested', '4', 'bit', 'adder', ':', 'z+a+b-2ab-2az-2bz+4abz+10', '(', '(', 'ab+az+bz-2abz', ')', '+c+d-2c', '(', 'ab+az+bz-2abz', ')', '-2d', '(', 'ab+az+bz-2abz', ')', '-2cd+4cd', '(', 'ab+az+bz-2abz', ')', ')', '+100', '(', 'e+f+', '(', 'cd+c', '(', 'ab+az+bz-2abz', ')', '+d', '(', 'ab+az+bz-2abz', ')', '-2cd', '(', 'ab+az+bz-2abz', ')', ')', '-2ef-2e', '(', 'cd+c', '(', 'ab+az+bz-2abz', ')', '+d', '(', 'ab+az+bz-2abz', ')', '-2cd', '(', 'ab+az+bz-2abz', ')', '-2f', '(', 'cd+c', '(', 'ab+az+bz-2abz', ')', '+d', '(', 'ab+az+bz-2abz', ')', '-2cd', '(', 'ab+az+bz-2abz', ')', '+4ef', '(', 'cd+c', '(', 'ab+az+bz-2abz', ')', '+d', '(', 'ab+az+bz-2abz', ')', '-2cd', '(', 'ab+az+bz-2abz', ')', ')', '+1000', '(', 'g+h+', '(', 'ef+e', '(', 'cd+c', '(', 'ab+az+bz-2abz', ')', '+d', '(', 'ab+az+bz-2abz', ')', '-2cd', '(', 'ab+az+bz-2abz', ')', ')', '+f', '(', 'cd+c', '(', 'ab+az+bz-2abz', ')', '+d', '(', 'ab+az+bz-2abz', ')', '-2cd', '(', 'ab+az+bz-2abz', ')', ')', '-2ef', '(', 'cd+c', '(', 'ab+az+bz-2abz', ')', '+d', '(', 'ab+az+bz-2abz', ')', '-2cd', '(', 'ab+az+bz-2abz', ')', ')', '-2gh-2g', '(', 'ef+e', '(', 'cd+c', '(', 'ab+az+bz-2abz', ')', '+d', '(', 'ab+az+bz-2abz', ')', '-2cd', '(', 'ab+az+bz-2abz', ')', ')', '+f', '(', 'cd+c', '(', 'ab+az+bz-2abz', ')', '+d', '(', 'ab+az+bz-2abz', ')', '-2cd', '(', 'ab+az+bz-2abz', ')', ')', '-2ef', '(', 'cd+c', '(', 'ab+az+bz-2abz', ')', '+d', '(', 'ab+az+bz-2abz', ')', '-2cd', '(', 'ab+az+bz-2abz', ')', ')', '-2h', '(', 'ef+e', '(', 'cd+c', '(', 'ab+az+bz-2abz', ')', '+d', '(', 'ab+az+bz-2abz', ')', '-2cd', '(', 'ab+az+bz-2abz', ')', ')', '+f', '(', 'cd+c', '(', 'ab+az+bz-2abz', ')', '+d', '(', 'ab+az+bz-2abz', ')', '-2cd', '(', 'ab+az+bz-2abz', ')', ')', '-2ef', '(', 'cd+c', '(', 'ab+az+bz-2abz', ')', '+d', '(', 'ab+az+bz-2abz', ')', '-2cd', '(', 'ab+az+bz-2abz', ')', ')', '+4gh', '(', 'ef+e', '(', 'cd+c', '(', 'ab+az+bz-2abz', ')', '+d', '(', 'ab+az+bz-2abz', ')', '-2cd', '(', 'ab+az+bz-2abz', ')', ')', '+f', '(', 'cd+c', '(', 'ab+az+bz-2abz', ')', '+d', '(', 'ab+az+bz-2abz', ')', '-2cd', '(', 'ab+az+bz-2abz', ')', ')', '-2ef', '(', 'cd+c', '(', 'ab+az+bz-2abz', ')', '+d', '(', 'ab+az+bz-2abz', ')', '-2cd', '(', 'ab+az+bz-2abz', ')', ')', ')', '+10000', '(', 'gh+g', '(', 'ef+e', '(', 'cd+c', '(', 'ab+az+bz-2abz', ')', '+d', '(', 'ab+az+bz-2abz', ')', '-2cd', '(', 'ab+az+bz-2abz', ')', ')', '+f', '(', 'cd+c', '(', 'ab+az+bz-2abz', ')', '+d', '(', 'ab+az+bz-2abz', ')', '-2cd', '(', 'ab+az+bz-2abz', ')', ')', '-2ef', '(', 'cd+c', '(', 'ab+az+bz-2abz', ')', '+d', '(', 'ab+az+bz-2abz', ')', '-2cd', '(', 'ab+az+bz-2abz', ')', ')', '+h', '(', 'ef+e', '(', 'cd+c', '(', 'ab+az+bz-2abz', ')', '+d', '(', 'ab+az+bz-2abz', ')', '-2cd', '(', 'ab+az+bz-2abz', ')', ')', '+f', '(', 'cd+c', '(', 'ab+az+bz-2abz', ')', '+d', '(', 'ab+az+bz-2abz', ')', '-2cd', '(', 'ab+az+bz-2abz', ')', ')', '-2ef', '(', 'cd+c', '(', 'ab+az+bz-2abz', ')', '+d', '(', 'ab+az+bz-2abz', ')', '-2cd', '(', 'ab+az+bz-2abz', ')', ')', '-2gh', '(', 'ef+e', '(', 'cd+c', '(', 'ab+az+bz-2abz', ')', '+d', '(', 'ab+az+bz-2abz', ')', '-2cd', '(', 'ab+az+bz-2abz', ')', ')', '+f', '(', 'cd+c', '(', 'ab+az+bz-2abz', ')', '+d', '(', 'ab+az+bz-2abz', ')', '-2cd', '(', 'ab+az+bz-2abz', ')', ')', '-2ef', '(', 'cd+c', '(', 'ab+az+bz-2abz', ')', '+d', '(', 'ab+az+bz-2abz', ')', '-2cd', '(', 'ab+az+bz-2abz', ')', ')', ')', 'z', 'carry', 'value', '(', 'want', 'string', 'together', 'multiple', 'adder', ')', 'add', 'b', 'c', 'add', 'etc', 'interest', 'question', ',', 'far', 'take', '?', 'could', 'write', 'turing', 'machine', 'like', '?', 'mistake', 'correct', 'thanks', 'everyone', 'point', 'suggest', 'solution']","[[('letter', 'NN')], [('used', 'VBN')], [('represent', 'NN')], [('binary', 'NN')], [('input', 'NN')], [('(', '(')], [('1', 'CD')], [('0', 'CD')], [(')', ')')], [('follow', 'VB')], [('basic', 'JJ')], [('principles', 'NNS')], [('maths', 'NNS')], [(',', ',')], [('oh', 'NN')], [('work', 'NN')], [('*', 'NN')], [('*', 'NN')], [('denary', 'JJ')], [('.', '.')], [('*', 'NN')], [('*', 'NN')], [('idea', 'NN')], [('could', 'MD')], [('punch', 'NN')], [('one', 'CD')], [('formula', 'NN')], [('standard', 'NN')], [('school', 'NN')], [('calculator', 'NN')], [('without', 'IN')], [('changing', 'VBG')], [('settings', 'NNS')], [('working', 'VBG')], [('.', '.')], [('basic', 'JJ')], [('ones', 'NNS')], [(':', ':')], [('1.', 'CD')], [('=', 'NN')], [('1-x', 'JJ')], [('2.', 'CD')], [('=', 'NN')], [('xy', 'NN')], [('3.', 'CD')], [('nand', 'NN')], [('1-xy', 'JJ')], [('4.', 'CD')], [('x+y-xy', 'NN')], [('5.', 'CD')], [('1-x-y+xy', 'JJ')], [('6.', 'CD')], [('xor', 'NN')], [('x+y-2xy', 'NN')], [('7.', 'CD')], [('xnor', 'NN')], [('1-x-y+2xy', 'JJ')], [('adder', 'NN')], [('takes', 'VBZ')], [('carry', 'NN')], [('2', 'CD')], [('bits', 'NNS')], [('outputs', 'NNS')], [('binary', 'NN')], [(':', ':')], [('*', 'NN')], [('x+y+z+8xy+8xz+8yz-16xyz', 'NN')], [('sorry', 'NN')], [('create', 'NN')], [('half', 'NN')], [('adder', 'NN')], [('main', 'JJ')], [('source', 'NN')], [('logic', 'NN')], [('gates', 'NNS')], [('video', 'NN')], [('series', 'NN')], [('sebastian', 'JJ')], [('lague', 'NN')], [('followed', 'VBD')], [('along', 'IN')], [('.', '.')], [('anyway', 'RB')], [('fun', 'NN')], [('prove', 'NN')], [('utterly', 'RB')], [('useless', 'NN')], [('whole', 'JJ')], [('thing', 'NN')], [('untested', 'JJ')], [('4', 'CD')], [('bit', 'NN')], [('adder', 'NN')], [(':', ':')], [('z+a+b-2ab-2az-2bz+4abz+10', 'NN')], [('(', '(')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('+c+d-2c', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('-2d', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('-2cd+4cd', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [(')', ')')], [('+100', 'NN')], [('(', '(')], [('e+f+', 'NN')], [('(', '(')], [('cd+c', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('+d', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('-2cd', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [(')', ')')], [('-2ef-2e', 'NN')], [('(', '(')], [('cd+c', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('+d', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('-2cd', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('-2f', 'NN')], [('(', '(')], [('cd+c', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('+d', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('-2cd', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('+4ef', 'NN')], [('(', '(')], [('cd+c', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('+d', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('-2cd', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [(')', ')')], [('+1000', 'NN')], [('(', '(')], [('g+h+', 'NN')], [('(', '(')], [('ef+e', 'NN')], [('(', '(')], [('cd+c', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('+d', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('-2cd', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [(')', ')')], [('+f', 'NN')], [('(', '(')], [('cd+c', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('+d', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('-2cd', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [(')', ')')], [('-2ef', 'NN')], [('(', '(')], [('cd+c', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('+d', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('-2cd', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [(')', ')')], [('-2gh-2g', 'NN')], [('(', '(')], [('ef+e', 'NN')], [('(', '(')], [('cd+c', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('+d', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('-2cd', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [(')', ')')], [('+f', 'NN')], [('(', '(')], [('cd+c', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('+d', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('-2cd', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [(')', ')')], [('-2ef', 'NN')], [('(', '(')], [('cd+c', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('+d', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('-2cd', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [(')', ')')], [('-2h', 'NN')], [('(', '(')], [('ef+e', 'NN')], [('(', '(')], [('cd+c', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('+d', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('-2cd', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [(')', ')')], [('+f', 'NN')], [('(', '(')], [('cd+c', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('+d', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('-2cd', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [(')', ')')], [('-2ef', 'NN')], [('(', '(')], [('cd+c', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('+d', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('-2cd', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [(')', ')')], [('+4gh', 'NN')], [('(', '(')], [('ef+e', 'NN')], [('(', '(')], [('cd+c', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('+d', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('-2cd', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [(')', ')')], [('+f', 'NN')], [('(', '(')], [('cd+c', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('+d', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('-2cd', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [(')', ')')], [('-2ef', 'NN')], [('(', '(')], [('cd+c', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('+d', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('-2cd', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [(')', ')')], [(')', ')')], [('+10000', 'NN')], [('(', '(')], [('gh+g', 'NN')], [('(', '(')], [('ef+e', 'NN')], [('(', '(')], [('cd+c', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('+d', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('-2cd', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [(')', ')')], [('+f', 'NN')], [('(', '(')], [('cd+c', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('+d', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('-2cd', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [(')', ')')], [('-2ef', 'NN')], [('(', '(')], [('cd+c', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('+d', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('-2cd', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [(')', ')')], [('+h', 'NN')], [('(', '(')], [('ef+e', 'NN')], [('(', '(')], [('cd+c', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('+d', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('-2cd', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [(')', ')')], [('+f', 'NN')], [('(', '(')], [('cd+c', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('+d', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('-2cd', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [(')', ')')], [('-2ef', 'NN')], [('(', '(')], [('cd+c', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('+d', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('-2cd', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [(')', ')')], [('-2gh', 'NN')], [('(', '(')], [('ef+e', 'NN')], [('(', '(')], [('cd+c', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('+d', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('-2cd', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [(')', ')')], [('+f', 'NN')], [('(', '(')], [('cd+c', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('+d', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('-2cd', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [(')', ')')], [('-2ef', 'NN')], [('(', '(')], [('cd+c', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('+d', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [('-2cd', 'NN')], [('(', '(')], [('ab+az+bz-2abz', 'NN')], [(')', ')')], [(')', ')')], [(')', ')')], [('z', 'NN')], [('carry', 'NN')], [('value', 'NN')], [('(', '(')], [('want', 'NN')], [('string', 'NN')], [('together', 'RB')], [('multiple', 'NN')], [('adders', 'NNS')], [(')', ')')], [('adds', 'VBZ')], [('b', 'NN')], [('c', 'NNS')], [('adds', 'VBZ')], [('etc', 'NN')], [('interesting', 'VBG')], [('question', 'NN')], [(',', ',')], [('far', 'RB')], [('take', 'VB')], [('?', '.')], [('could', 'MD')], [('write', 'NN')], [('turing', 'VBG')], [('machine', 'NN')], [('like', 'IN')], [('?', '.')], [('mistakes', 'NNS')], [('corrected', 'VBN')], [('thanks', 'NNS')], [('everyone', 'NN')], [('pointed', 'VBN')], [('suggested', 'VBN')], [('solutions', 'NNS')]]","letter use represent binary input ( 1 0 ) follow basic principle math , oh work * * denary . * * idea could punch one formula standard school calculator without change setting work . basic one : 1. = 1-x 2. = xy 3. nand 1-xy 4. x+y-xy 5. 1-x-y+xy 6. xor x+y-2xy 7. xnor 1-x-y+2xy adder take carry 2 bit output binary : * x+y+z+8xy+8xz+8yz-16xyz sorry create half adder main source logic gate video series sebastian lague follow along . anyway fun prove utterly useless whole thing untested 4 bit adder : z+a+b-2ab-2az-2bz+4abz+10 ( ( ab+az+bz-2abz ) +c+d-2c ( ab+az+bz-2abz ) -2d ( ab+az+bz-2abz ) -2cd+4cd ( ab+az+bz-2abz ) ) +100 ( e+f+ ( cd+c ( ab+az+bz-2abz ) +d ( ab+az+bz-2abz ) -2cd ( ab+az+bz-2abz ) ) -2ef-2e ( cd+c ( ab+az+bz-2abz ) +d ( ab+az+bz-2abz ) -2cd ( ab+az+bz-2abz ) -2f ( cd+c ( ab+az+bz-2abz ) +d ( ab+az+bz-2abz ) -2cd ( ab+az+bz-2abz ) +4ef ( cd+c ( ab+az+bz-2abz ) +d ( ab+az+bz-2abz ) -2cd ( ab+az+bz-2abz ) ) +1000 ( g+h+ ( ef+e ( cd+c ( ab+az+bz-2abz ) +d ( ab+az+bz-2abz ) -2cd ( ab+az+bz-2abz ) ) +f ( cd+c ( ab+az+bz-2abz ) +d ( ab+az+bz-2abz ) -2cd ( ab+az+bz-2abz ) ) -2ef ( cd+c ( ab+az+bz-2abz ) +d ( ab+az+bz-2abz ) -2cd ( ab+az+bz-2abz ) ) -2gh-2g ( ef+e ( cd+c ( ab+az+bz-2abz ) +d ( ab+az+bz-2abz ) -2cd ( ab+az+bz-2abz ) ) +f ( cd+c ( ab+az+bz-2abz ) +d ( ab+az+bz-2abz ) -2cd ( ab+az+bz-2abz ) ) -2ef ( cd+c ( ab+az+bz-2abz ) +d ( ab+az+bz-2abz ) -2cd ( ab+az+bz-2abz ) ) -2h ( ef+e ( cd+c ( ab+az+bz-2abz ) +d ( ab+az+bz-2abz ) -2cd ( ab+az+bz-2abz ) ) +f ( cd+c ( ab+az+bz-2abz ) +d ( ab+az+bz-2abz ) -2cd ( ab+az+bz-2abz ) ) -2ef ( cd+c ( ab+az+bz-2abz ) +d ( ab+az+bz-2abz ) -2cd ( ab+az+bz-2abz ) ) +4gh ( ef+e ( cd+c ( ab+az+bz-2abz ) +d ( ab+az+bz-2abz ) -2cd ( ab+az+bz-2abz ) ) +f ( cd+c ( ab+az+bz-2abz ) +d ( ab+az+bz-2abz ) -2cd ( ab+az+bz-2abz ) ) -2ef ( cd+c ( ab+az+bz-2abz ) +d ( ab+az+bz-2abz ) -2cd ( ab+az+bz-2abz ) ) ) +10000 ( gh+g ( ef+e ( cd+c ( ab+az+bz-2abz ) +d ( ab+az+bz-2abz ) -2cd ( ab+az+bz-2abz ) ) +f ( cd+c ( ab+az+bz-2abz ) +d ( ab+az+bz-2abz ) -2cd ( ab+az+bz-2abz ) ) -2ef ( cd+c ( ab+az+bz-2abz ) +d ( ab+az+bz-2abz ) -2cd ( ab+az+bz-2abz ) ) +h ( ef+e ( cd+c ( ab+az+bz-2abz ) +d ( ab+az+bz-2abz ) -2cd ( ab+az+bz-2abz ) ) +f ( cd+c ( ab+az+bz-2abz ) +d ( ab+az+bz-2abz ) -2cd ( ab+az+bz-2abz ) ) -2ef ( cd+c ( ab+az+bz-2abz ) +d ( ab+az+bz-2abz ) -2cd ( ab+az+bz-2abz ) ) -2gh ( ef+e ( cd+c ( ab+az+bz-2abz ) +d ( ab+az+bz-2abz ) -2cd ( ab+az+bz-2abz ) ) +f ( cd+c ( ab+az+bz-2abz ) +d ( ab+az+bz-2abz ) -2cd ( ab+az+bz-2abz ) ) -2ef ( cd+c ( ab+az+bz-2abz ) +d ( ab+az+bz-2abz ) -2cd ( ab+az+bz-2abz ) ) ) z carry value ( want string together multiple adder ) add b c add etc interest question , far take ? could write turing machine like ? mistake correct thanks everyone point suggest solution",-1_abazbz2abz_2520_problem_use,1
417,r2rbee,book recommendation,Advice,0,0.43,computerscience,https://www.reddit.com/r/computerscience/comments/r2rbee/book_recommendation/,1,"hi
i studied computer science and worked in security for 20 years, but now i have changed and work in communications ( datacenters architecture, ironport, bluecoat, cisco, f5, infoblock, dns, firewalls, mpls, wan, etc) does anybody know of a good book to refresh my knowledge in communications in general. not too basic as i have good background but a good digest. 
thanks",1637944740.0,"['hi', 'study', 'computer', 'science', 'work', 'security', '20', 'year', ',', 'change', 'work', 'communication', '(', 'datacenters', 'architecture', ',', 'ironport', ',', 'bluecoat', ',', 'cisco', ',', 'f5', ',', 'infoblock', ',', 'dns', ',', 'firewall', ',', 'mpls', ',', 'wan', ',', 'etc', ')', 'anybody', 'know', 'good', 'book', 'refresh', 'knowledge', 'communication', 'general', '.', 'basic', 'good', 'background', 'good', 'digest', '.', 'thanks']","[[('hi', 'NN')], [('studied', 'VBN')], [('computer', 'NN')], [('science', 'NN')], [('worked', 'VBN')], [('security', 'NN')], [('20', 'CD')], [('years', 'NNS')], [(',', ',')], [('changed', 'VBN')], [('work', 'NN')], [('communications', 'NNS')], [('(', '(')], [('datacenters', 'NNS')], [('architecture', 'NN')], [(',', ',')], [('ironport', 'NN')], [(',', ',')], [('bluecoat', 'NN')], [(',', ',')], [('cisco', 'NN')], [(',', ',')], [('f5', 'NN')], [(',', ',')], [('infoblock', 'NN')], [(',', ',')], [('dns', 'NN')], [(',', ',')], [('firewalls', 'NNS')], [(',', ',')], [('mpls', 'NN')], [(',', ',')], [('wan', 'NN')], [(',', ',')], [('etc', 'NN')], [(')', ')')], [('anybody', 'NN')], [('know', 'VB')], [('good', 'JJ')], [('book', 'NN')], [('refresh', 'NN')], [('knowledge', 'NN')], [('communications', 'NNS')], [('general', 'JJ')], [('.', '.')], [('basic', 'JJ')], [('good', 'JJ')], [('background', 'NN')], [('good', 'JJ')], [('digest', 'NN')], [('.', '.')], [('thanks', 'NNS')]]","hi study computer science work security 20 year , change work communication ( datacenters architecture , ironport , bluecoat , cisco , f5 , infoblock , dns , firewall , mpls , wan , etc ) anybody know good book refresh knowledge communication general . basic good background good digest . thanks",4_book_learn_computer_good,4
418,r1xcw9,Artificial super intelligence (ASI),Help,47,0.74,computerscience,https://www.reddit.com/r/computerscience/comments/r1xcw9/artificial_super_intelligence_asi/,22,"good day everybody,insight here (worried)

1.the supercomputer aurora21 is nearly finished and been used to map the human brain/connectome, they say it could only take three years to map it

source:-mapping-supercomputer/

2. i am also worried about artificial super intelligence and artificial general intelligence already been used


my delusions are now furthered thinking aurora21 and asi already exists and are been used to read/implant thoughts (and making people hear voices)

can someone in the know tell me this is not possible or the details on how it works/or does not

i do not know anything about computers so i am turning to you for insight again

again,on meds,in therapy. just want to know your insights which i struggle with due to schizophrenia",1637849376.0,"['good', 'day', 'everybody', ',', 'insight', '(', 'worried', ')', '1.the', 'supercomputer', 'aurora21', 'nearly', 'finish', 'use', 'map', 'human', 'brain/connectome', ',', 'say', 'could', 'take', 'three', 'year', 'map', 'source', ':', '-mapping-supercomputer/', '2.', 'also', 'worried', 'artificial', 'super', 'intelligence', 'artificial', 'general', 'intelligence', 'already', 'use', 'delusion', 'further', 'think', 'aurora21', 'asi', 'already', 'exists', 'use', 'read/implant', 'thought', '(', 'make', 'people', 'hear', 'voice', ')', 'someone', 'know', 'tell', 'possible', 'detail', 'works/or', 'know', 'anything', 'computer', 'turn', 'insight', ',', 'med', ',', 'therapy', '.', 'want', 'know', 'insight', 'struggle', 'due', 'schizophrenia']","[[('good', 'JJ')], [('day', 'NN')], [('everybody', 'NN')], [(',', ',')], [('insight', 'NN')], [('(', '(')], [('worried', 'JJ')], [(')', ')')], [('1.the', 'CD')], [('supercomputer', 'NN')], [('aurora21', 'NN')], [('nearly', 'RB')], [('finished', 'VBN')], [('used', 'VBN')], [('map', 'NN')], [('human', 'NN')], [('brain/connectome', 'NN')], [(',', ',')], [('say', 'VB')], [('could', 'MD')], [('take', 'VB')], [('three', 'CD')], [('years', 'NNS')], [('map', 'NN')], [('source', 'NN')], [(':', ':')], [('-mapping-supercomputer/', 'NN')], [('2.', 'CD')], [('also', 'RB')], [('worried', 'JJ')], [('artificial', 'JJ')], [('super', 'NN')], [('intelligence', 'NN')], [('artificial', 'JJ')], [('general', 'JJ')], [('intelligence', 'NN')], [('already', 'RB')], [('used', 'VBN')], [('delusions', 'NNS')], [('furthered', 'VBN')], [('thinking', 'VBG')], [('aurora21', 'NN')], [('asi', 'NN')], [('already', 'RB')], [('exists', 'NNS')], [('used', 'VBN')], [('read/implant', 'NN')], [('thoughts', 'NNS')], [('(', '(')], [('making', 'VBG')], [('people', 'NNS')], [('hear', 'NN')], [('voices', 'NNS')], [(')', ')')], [('someone', 'NN')], [('know', 'VB')], [('tell', 'NN')], [('possible', 'JJ')], [('details', 'NNS')], [('works/or', 'NN')], [('know', 'VB')], [('anything', 'NN')], [('computers', 'NNS')], [('turning', 'VBG')], [('insight', 'NN')], [(',', ',')], [('meds', 'NNS')], [(',', ',')], [('therapy', 'NN')], [('.', '.')], [('want', 'NN')], [('know', 'VB')], [('insights', 'NNS')], [('struggle', 'NN')], [('due', 'JJ')], [('schizophrenia', 'NN')]]","good day everybody , insight ( worried ) 1.the supercomputer aurora21 nearly finish use map human brain/connectome , say could take three year map source : -mapping-supercomputer/ 2. also worried artificial super intelligence artificial general intelligence already use delusion further think aurora21 asi already exists use read/implant thought ( make people hear voice ) someone know tell possible detail works/or know anything computer turn insight , med , therapy . want know insight struggle due schizophrenia",3_search_ai_think_google,3
419,r27hds,Lowest wattage to read text file,Discussion,9,0.85,computerscience,https://www.reddit.com/r/computerscience/comments/r27hds/lowest_wattage_to_read_text_file/,7,"there is work being done on a diamond nuclear battery that can last hundreds of years, but it is only 100 microwatts. how many of these would you need to read a basic text file? it could be as simple as having an led light up above a set of printed alphanumerical stickers, but the easier it is to read, the better. the idea here is to be able to download wikipedia and access it at any time without recharging.",1637877306.0,"['work', 'do', 'diamond', 'nuclear', 'battery', 'last', 'hundred', 'year', ',', '100', 'microwatts', '.', 'many', 'would', 'need', 'read', 'basic', 'text', 'file', '?', 'could', 'simple', 'lead', 'light', 'set', 'print', 'alphanumerical', 'sticker', ',', 'easy', 'read', ',', 'well', '.', 'idea', 'able', 'download', 'wikipedia', 'access', 'time', 'without', 'recharge', '.']","[[('work', 'NN')], [('done', 'VBN')], [('diamond', 'NN')], [('nuclear', 'JJ')], [('battery', 'NN')], [('last', 'JJ')], [('hundreds', 'NNS')], [('years', 'NNS')], [(',', ',')], [('100', 'CD')], [('microwatts', 'NN')], [('.', '.')], [('many', 'JJ')], [('would', 'MD')], [('need', 'NN')], [('read', 'NN')], [('basic', 'JJ')], [('text', 'NN')], [('file', 'NN')], [('?', '.')], [('could', 'MD')], [('simple', 'NN')], [('led', 'VBN')], [('light', 'NN')], [('set', 'NN')], [('printed', 'VBN')], [('alphanumerical', 'JJ')], [('stickers', 'NNS')], [(',', ',')], [('easier', 'JJR')], [('read', 'NN')], [(',', ',')], [('better', 'RBR')], [('.', '.')], [('idea', 'NN')], [('able', 'JJ')], [('download', 'NN')], [('wikipedia', 'NN')], [('access', 'NN')], [('time', 'NN')], [('without', 'IN')], [('recharging', 'VBG')], [('.', '.')]]","work do diamond nuclear battery last hundred year , 100 microwatts . many would need read basic text file ? could simple lead light set print alphanumerical sticker , easy read , well . idea able download wikipedia access time without recharge .",-1_abazbz2abz_2520_problem_use,2
420,r2cwfc,Quick Vocabulary Clarification,Help,1,1.0,computerscience,https://www.reddit.com/r/computerscience/comments/r2cwfc/quick_vocabulary_clarification/,2,"are ""data width"" and ""bandwidth"" interchangeable phrases? this assignment i have been tasked with uses the term ""data *width*"" in the context of data transmission and i do not think that it is really commonplace. i am just curious if it has any other probable/possible meanings. thanks.",1637894489.0,"['``', 'data', 'width', ""''"", '``', 'bandwidth', ""''"", 'interchangeable', 'phrase', '?', 'assignment', 'tasked', 'us', 'term', '``', 'data', '*', 'width', '*', ""''"", 'context', 'data', 'transmission', 'think', 'really', 'commonplace', '.', 'curious', 'probable/possible', 'meaning', '.', 'thanks', '.']","[[('``', '``')], [('data', 'NNS')], [('width', 'NN')], [(""''"", ""''"")], [('``', '``')], [('bandwidth', 'NN')], [(""''"", ""''"")], [('interchangeable', 'JJ')], [('phrases', 'NNS')], [('?', '.')], [('assignment', 'NN')], [('tasked', 'NNS')], [('uses', 'NNS')], [('term', 'NN')], [('``', '``')], [('data', 'NNS')], [('*', 'NN')], [('width', 'NN')], [('*', 'NN')], [(""''"", ""''"")], [('context', 'NN')], [('data', 'NNS')], [('transmission', 'NN')], [('think', 'NN')], [('really', 'RB')], [('commonplace', 'NN')], [('.', '.')], [('curious', 'JJ')], [('probable/possible', 'JJ')], [('meanings', 'NNS')], [('.', '.')], [('thanks', 'NNS')], [('.', '.')]]",`` data width '' `` bandwidth '' interchangeable phrase ? assignment tasked us term `` data * width * '' context data transmission think really commonplace . curious probable/possible meaning . thanks .,1_memory_byte_data_alignment,3
421,r20mys,Where to start as a dev who wants to adapt a CS paper to code?,Advice,2,1.0,computerscience,https://www.reddit.com/r/computerscience/comments/r20mys/where_to_start_as_a_dev_who_wants_to_adapt_a_cs/,3,"as the title says, i want to find out if i can implement an algorithm described in a research paper, or one research paper out of a specific family of research. i think a great achievement would be to understand a more basic paper in this family of research, implement a basic working form of the algorithms presented, and have them working together.

the parts of any of these papers i am unfamiliar with is the more complex math and symbols, and how these different described algorithms should fit together. most of my relevant experience is as a software engineer, if that matters at all.

what are the steps i can take to move towards this goal, as someone unfamiliar with the research and language. who can i reach out to?",1637858536.0,"['title', 'say', ',', 'want', 'find', 'implement', 'algorithm', 'described', 'research', 'paper', ',', 'one', 'research', 'paper', 'specific', 'family', 'research', '.', 'think', 'great', 'achievement', 'would', 'understand', 'basic', 'paper', 'family', 'research', ',', 'implement', 'basic', 'work', 'form', 'algorithm', 'present', ',', 'work', 'together', '.', 'part', 'paper', 'unfamiliar', 'complex', 'math', 'symbol', ',', 'different', 'described', 'algorithm', 'fit', 'together', '.', 'relevant', 'experience', 'software', 'engineer', ',', 'matter', '.', 'step', 'take', 'move', 'towards', 'goal', ',', 'someone', 'unfamiliar', 'research', 'language', '.', 'reach', '?']","[[('title', 'NN')], [('says', 'VBZ')], [(',', ',')], [('want', 'NN')], [('find', 'VB')], [('implement', 'NN')], [('algorithm', 'NN')], [('described', 'NN')], [('research', 'NN')], [('paper', 'NN')], [(',', ',')], [('one', 'CD')], [('research', 'NN')], [('paper', 'NN')], [('specific', 'JJ')], [('family', 'NN')], [('research', 'NN')], [('.', '.')], [('think', 'NN')], [('great', 'JJ')], [('achievement', 'NN')], [('would', 'MD')], [('understand', 'NN')], [('basic', 'JJ')], [('paper', 'NN')], [('family', 'NN')], [('research', 'NN')], [(',', ',')], [('implement', 'NN')], [('basic', 'JJ')], [('working', 'VBG')], [('form', 'NN')], [('algorithms', 'NN')], [('presented', 'VBN')], [(',', ',')], [('working', 'VBG')], [('together', 'RB')], [('.', '.')], [('parts', 'NNS')], [('papers', 'NNS')], [('unfamiliar', 'JJ')], [('complex', 'JJ')], [('math', 'NN')], [('symbols', 'NNS')], [(',', ',')], [('different', 'JJ')], [('described', 'NN')], [('algorithms', 'NN')], [('fit', 'NN')], [('together', 'RB')], [('.', '.')], [('relevant', 'NN')], [('experience', 'NN')], [('software', 'NN')], [('engineer', 'NN')], [(',', ',')], [('matters', 'NNS')], [('.', '.')], [('steps', 'NNS')], [('take', 'VB')], [('move', 'NN')], [('towards', 'NNS')], [('goal', 'NN')], [(',', ',')], [('someone', 'NN')], [('unfamiliar', 'JJ')], [('research', 'NN')], [('language', 'NN')], [('.', '.')], [('reach', 'NN')], [('?', '.')]]","title say , want find implement algorithm described research paper , one research paper specific family research . think great achievement would understand basic paper family research , implement basic work form algorithm present , work together . part paper unfamiliar complex math symbol , different described algorithm fit together . relevant experience software engineer , matter . step take move towards goal , someone unfamiliar research language . reach ?",-1_abazbz2abz_2520_problem_use,4
422,r1lsow,Analyze Algorithm Complexity which has Distinct Scenarios,,13,0.94,computerscience,https://www.reddit.com/r/computerscience/comments/r1lsow/analyze_algorithm_complexity_which_has_distinct/,3,"i have an algorithm which will check if any given number is prime. i have included it at the bottom of the post. it makes use of a few optimizations, mainly the 6n+-1 optimization, where numbers which are not modulus of 6 + 1 or 5 are not considered prime.

i can analyze the complexity of the algorithm to be ``o(sqrt(n))`` if n % 6 === (1 or 5) and ``o(1)`` otherwise, but i am not quite sure how to assess the 'overall' complexity.

my first though is to average them out, such as: ``(4 * o(1) + 2 * o(sqrt(n)))/6``, but i believe that would still equal ``o(sqrt(n))``. is that correct, or have i taken the wrong approach?


```javascript
/**
 * check if a number is prime
 * 1. check if number is a base case
 * 2. if not, check if num is of the form 6n +- 1
 * 3. if it is, then call helper method
 */
function isprime(num) {
    //handle special base cases
    switch (num) {
        case 1:
            return false;
        case 2:
        case 3:
            return true;
    }

    //primes are never even (except for 2)
    if (num % 2 === 0) {
        return false;
    }

    //determine if num is of the form 6n - 1 or 6n + 1
    const sixmod = num % 6;
    if (sixmod !== 1 && sixmod !== 5) {
        return false;
    }

    return _determineisprime(num);
}

/**
 * helper method to determine if a number is prime
 * if the ""isprime"" method is inconclusive, this will be called
 */
function _determineisprime(num) {
    //optimize by only searching up to sqrt of num
    const limit = math.sqrt(num);

    //iterate over numbers
    //return false if any divides
    for (let i=3; i<=limit; i+=2) {
        if (num % i === 0) {
            return false;
        }
    }

    //if nothing was divisible, return true
    return true;
}
```",1637807749.0,"['algorithm', 'check', 'give', 'number', 'prime', '.', 'include', 'bottom', 'post', '.', 'make', 'use', 'optimization', ',', 'mainly', '6n+-1', 'optimization', ',', 'number', 'modulus', '6', '+', '1', '5', 'consider', 'prime', '.', 'analyze', 'complexity', 'algorithm', '``', '(', 'sqrt', '(', 'n', ')', ')', '``', 'n', '%', '6', '===', '(', '1', '5', ')', '``', '(', '1', ')', '``', 'otherwise', ',', 'quite', 'sure', 'ass', ""'overall"", ""'"", 'complexity', '.', 'first', 'though', 'average', ',', ':', '``', '(', '4', '*', '(', '1', ')', '+', '2', '*', '(', 'sqrt', '(', 'n', ')', ')', ')', '/6', '``', ',', 'believe', 'would', 'still', 'equal', '``', '(', 'sqrt', '(', 'n', ')', ')', '``', '.', 'correct', ',', 'take', 'wrong', 'approach', '?', '``', '`', 'javascript', '/', '*', '*', '*', 'check', 'number', 'prime', '*', '1.', 'check', 'number', 'base', 'case', '*', '2.', ',', 'check', 'num', 'form', '6n', '+-', '1', '*', '3.', ',', 'call', 'helper', 'method', '*', '/', 'function', 'isprime', '(', 'num', ')', '{', '//handle', 'special', 'base', 'case', 'switch', '(', 'num', ')', '{', 'case', '1', ':', 'return', 'false', ';', 'case', '2', ':', 'case', '3', ':', 'return', 'true', ';', '}', '//primes', 'never', 'even', '(', 'except', '2', ')', '(', 'num', '%', '2', '===', '0', ')', '{', 'return', 'false', ';', '}', '//determine', 'num', 'form', '6n', '-', '1', '6n', '+', '1', 'const', 'sixmod', '=', 'num', '%', '6', ';', '(', 'sixmod', '!', '==', '1', '&', '&', 'sixmod', '!', '==', '5', ')', '{', 'return', 'false', ';', '}', 'return', '_determineisprime', '(', 'num', ')', ';', '}', '/', '*', '*', '*', 'helper', 'method', 'determine', 'number', 'prime', '*', '``', 'isprime', ""''"", 'method', 'inconclusive', ',', 'call', '*', '/', 'function', '_determineisprime', '(', 'num', ')', '{', '//optimize', 'search', 'sqrt', 'num', 'const', 'limit', '=', 'math.sqrt', '(', 'num', ')', ';', '//iterate', 'number', '//return', 'false', 'divide', '(', 'let', 'i=3', ';', '<', '=limit', ';', 'i+=2', ')', '{', '(', 'num', '%', '===', '0', ')', '{', 'return', 'false', ';', '}', '}', '//if', 'nothing', 'divisible', ',', 'return', 'true', 'return', 'true', ';', '}', '``', '`']","[[('algorithm', 'NN')], [('check', 'NN')], [('given', 'VBN')], [('number', 'NN')], [('prime', 'NN')], [('.', '.')], [('included', 'VBD')], [('bottom', 'NN')], [('post', 'NN')], [('.', '.')], [('makes', 'VBZ')], [('use', 'NN')], [('optimizations', 'NNS')], [(',', ',')], [('mainly', 'RB')], [('6n+-1', 'JJ')], [('optimization', 'NN')], [(',', ',')], [('numbers', 'NNS')], [('modulus', 'NN')], [('6', 'CD')], [('+', 'NN')], [('1', 'CD')], [('5', 'CD')], [('considered', 'VBN')], [('prime', 'NN')], [('.', '.')], [('analyze', 'NN')], [('complexity', 'NN')], [('algorithm', 'NN')], [('``', '``')], [('(', '(')], [('sqrt', 'NN')], [('(', '(')], [('n', 'NN')], [(')', ')')], [(')', ')')], [('``', '``')], [('n', 'NN')], [('%', 'NN')], [('6', 'CD')], [('===', 'NN')], [('(', '(')], [('1', 'CD')], [('5', 'CD')], [(')', ')')], [('``', '``')], [('(', '(')], [('1', 'CD')], [(')', ')')], [('``', '``')], [('otherwise', 'RB')], [(',', ',')], [('quite', 'RB')], [('sure', 'NN')], [('assess', 'NN')], [(""'overall"", 'NN')], [(""'"", ""''"")], [('complexity', 'NN')], [('.', '.')], [('first', 'RB')], [('though', 'IN')], [('average', 'JJ')], [(',', ',')], [(':', ':')], [('``', '``')], [('(', '(')], [('4', 'CD')], [('*', 'NN')], [('(', '(')], [('1', 'CD')], [(')', ')')], [('+', 'NN')], [('2', 'CD')], [('*', 'NN')], [('(', '(')], [('sqrt', 'NN')], [('(', '(')], [('n', 'NN')], [(')', ')')], [(')', ')')], [(')', ')')], [('/6', 'NN')], [('``', '``')], [(',', ',')], [('believe', 'VB')], [('would', 'MD')], [('still', 'RB')], [('equal', 'JJ')], [('``', '``')], [('(', '(')], [('sqrt', 'NN')], [('(', '(')], [('n', 'NN')], [(')', ')')], [(')', ')')], [('``', '``')], [('.', '.')], [('correct', 'NN')], [(',', ',')], [('taken', 'VBN')], [('wrong', 'JJ')], [('approach', 'NN')], [('?', '.')], [('``', '``')], [('`', '``')], [('javascript', 'NN')], [('/', 'NN')], [('*', 'NN')], [('*', 'NN')], [('*', 'NN')], [('check', 'NN')], [('number', 'NN')], [('prime', 'NN')], [('*', 'NN')], [('1.', 'CD')], [('check', 'NN')], [('number', 'NN')], [('base', 'NN')], [('case', 'NN')], [('*', 'NN')], [('2.', 'CD')], [(',', ',')], [('check', 'NN')], [('num', 'NN')], [('form', 'NN')], [('6n', 'CD')], [('+-', 'NN')], [('1', 'CD')], [('*', 'NN')], [('3.', 'CD')], [(',', ',')], [('call', 'NN')], [('helper', 'NN')], [('method', 'NN')], [('*', 'NN')], [('/', 'NN')], [('function', 'NN')], [('isprime', 'NN')], [('(', '(')], [('num', 'NN')], [(')', ')')], [('{', '(')], [('//handle', 'NN')], [('special', 'JJ')], [('base', 'NN')], [('cases', 'NNS')], [('switch', 'NN')], [('(', '(')], [('num', 'NN')], [(')', ')')], [('{', '(')], [('case', 'NN')], [('1', 'CD')], [(':', ':')], [('return', 'NN')], [('false', 'JJ')], [(';', ':')], [('case', 'NN')], [('2', 'CD')], [(':', ':')], [('case', 'NN')], [('3', 'CD')], [(':', ':')], [('return', 'NN')], [('true', 'JJ')], [(';', ':')], [('}', ')')], [('//primes', 'NNS')], [('never', 'RB')], [('even', 'RB')], [('(', '(')], [('except', 'IN')], [('2', 'CD')], [(')', ')')], [('(', '(')], [('num', 'NN')], [('%', 'NN')], [('2', 'CD')], [('===', 'NN')], [('0', 'CD')], [(')', ')')], [('{', '(')], [('return', 'NN')], [('false', 'JJ')], [(';', ':')], [('}', ')')], [('//determine', 'NN')], [('num', 'NN')], [('form', 'NN')], [('6n', 'CD')], [('-', ':')], [('1', 'CD')], [('6n', 'CD')], [('+', 'NN')], [('1', 'CD')], [('const', 'NN')], [('sixmod', 'NN')], [('=', 'NN')], [('num', 'NN')], [('%', 'NN')], [('6', 'CD')], [(';', ':')], [('(', '(')], [('sixmod', 'NN')], [('!', '.')], [('==', 'NN')], [('1', 'CD')], [('&', 'CC')], [('&', 'CC')], [('sixmod', 'NN')], [('!', '.')], [('==', 'NN')], [('5', 'CD')], [(')', ')')], [('{', '(')], [('return', 'NN')], [('false', 'JJ')], [(';', ':')], [('}', ')')], [('return', 'NN')], [('_determineisprime', 'NN')], [('(', '(')], [('num', 'NN')], [(')', ')')], [(';', ':')], [('}', ')')], [('/', 'NN')], [('*', 'NN')], [('*', 'NN')], [('*', 'NN')], [('helper', 'NN')], [('method', 'NN')], [('determine', 'NN')], [('number', 'NN')], [('prime', 'NN')], [('*', 'NN')], [('``', '``')], [('isprime', 'NN')], [(""''"", ""''"")], [('method', 'NN')], [('inconclusive', 'JJ')], [(',', ',')], [('called', 'VBN')], [('*', 'NN')], [('/', 'NN')], [('function', 'NN')], [('_determineisprime', 'NN')], [('(', '(')], [('num', 'NN')], [(')', ')')], [('{', '(')], [('//optimize', 'VB')], [('searching', 'VBG')], [('sqrt', 'NN')], [('num', 'NN')], [('const', 'NN')], [('limit', 'NN')], [('=', 'NN')], [('math.sqrt', 'NN')], [('(', '(')], [('num', 'NN')], [(')', ')')], [(';', ':')], [('//iterate', 'NN')], [('numbers', 'NNS')], [('//return', 'NN')], [('false', 'JJ')], [('divides', 'NNS')], [('(', '(')], [('let', 'VB')], [('i=3', 'NN')], [(';', ':')], [('<', 'NN')], [('=limit', 'NN')], [(';', ':')], [('i+=2', 'NN')], [(')', ')')], [('{', '(')], [('(', '(')], [('num', 'NN')], [('%', 'NN')], [('===', 'NN')], [('0', 'CD')], [(')', ')')], [('{', '(')], [('return', 'NN')], [('false', 'JJ')], [(';', ':')], [('}', ')')], [('}', ')')], [('//if', 'NN')], [('nothing', 'NN')], [('divisible', 'JJ')], [(',', ',')], [('return', 'NN')], [('true', 'JJ')], [('return', 'NN')], [('true', 'JJ')], [(';', ':')], [('}', ')')], [('``', '``')], [('`', '``')]]","algorithm check give number prime . include bottom post . make use optimization , mainly 6n+-1 optimization , number modulus 6 + 1 5 consider prime . analyze complexity algorithm `` ( sqrt ( n ) ) `` n % 6 === ( 1 5 ) `` ( 1 ) `` otherwise , quite sure ass 'overall ' complexity . first though average , : `` ( 4 * ( 1 ) + 2 * ( sqrt ( n ) ) ) /6 `` , believe would still equal `` ( sqrt ( n ) ) `` . correct , take wrong approach ? `` ` javascript / * * * check number prime * 1. check number base case * 2. , check num form 6n +- 1 * 3. , call helper method * / function isprime ( num ) { //handle special base case switch ( num ) { case 1 : return false ; case 2 : case 3 : return true ; } //primes never even ( except 2 ) ( num % 2 === 0 ) { return false ; } //determine num form 6n - 1 6n + 1 const sixmod = num % 6 ; ( sixmod ! == 1 & & sixmod ! == 5 ) { return false ; } return _determineisprime ( num ) ; } / * * * helper method determine number prime * `` isprime '' method inconclusive , call * / function _determineisprime ( num ) { //optimize search sqrt num const limit = math.sqrt ( num ) ; //iterate number //return false divide ( let i=3 ; < =limit ; i+=2 ) { ( num % === 0 ) { return false ; } } //if nothing divisible , return true return true ; } `` `",0_algorithm_time_node_bill,3
424,r189ka,Do you know any good pop-sci books on the topic of NSA backdoors in Encryption Algorithms?,,23,0.97,computerscience,https://www.reddit.com/r/computerscience/comments/r189ka/do_you_know_any_good_popsci_books_on_the_topic_of/,2,"i have seen mention of the supposedly backdoored  dual\_ec\_drbg  a few times.

i am interested in reading more about the background and known facts, any other relevant cloak and dagger shenanigans would be appreciated also.

i am not a mathematician, so i am looking for a pop-sci book, or something digestible for someone technologically literate but non-expert.

books are preferred, but good quality articles also appreciated.

thanks

&#x200b;

edit: any good books on encryption and randomness would be great actually, too.",1637769198.0,"['see', 'mention', 'supposedly', 'backdoored', 'dual\\_ec\\_drbg', 'time', '.', 'interested', 'reading', 'background', 'know', 'fact', ',', 'relevant', 'cloak', 'dagger', 'shenanigan', 'would', 'appreciate', 'also', '.', 'mathematician', ',', 'look', 'pop-sci', 'book', ',', 'something', 'digestible', 'someone', 'technologically', 'literate', 'non-expert', '.', 'book', 'prefer', ',', 'good', 'quality', 'article', 'also', 'appreciate', '.', 'thanks', '&', '#', 'x200b', ';', 'edit', ':', 'good', 'book', 'encryption', 'randomness', 'would', 'great', 'actually', ',', '.']","[[('seen', 'VBN')], [('mention', 'NN')], [('supposedly', 'RB')], [('backdoored', 'VBN')], [('dual\\_ec\\_drbg', 'NN')], [('times', 'NNS')], [('.', '.')], [('interested', 'JJ')], [('reading', 'NN')], [('background', 'NN')], [('known', 'VBN')], [('facts', 'NNS')], [(',', ',')], [('relevant', 'NN')], [('cloak', 'NN')], [('dagger', 'NN')], [('shenanigans', 'NNS')], [('would', 'MD')], [('appreciated', 'VBN')], [('also', 'RB')], [('.', '.')], [('mathematician', 'NN')], [(',', ',')], [('looking', 'VBG')], [('pop-sci', 'NN')], [('book', 'NN')], [(',', ',')], [('something', 'NN')], [('digestible', 'JJ')], [('someone', 'NN')], [('technologically', 'RB')], [('literate', 'NN')], [('non-expert', 'JJ')], [('.', '.')], [('books', 'NNS')], [('preferred', 'VBN')], [(',', ',')], [('good', 'JJ')], [('quality', 'NN')], [('articles', 'NNS')], [('also', 'RB')], [('appreciated', 'VBN')], [('.', '.')], [('thanks', 'NNS')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('edit', 'NN')], [(':', ':')], [('good', 'JJ')], [('books', 'NNS')], [('encryption', 'NN')], [('randomness', 'NN')], [('would', 'MD')], [('great', 'JJ')], [('actually', 'RB')], [(',', ',')], [('.', '.')]]","see mention supposedly backdoored dual\_ec\_drbg time . interested reading background know fact , relevant cloak dagger shenanigan would appreciate also . mathematician , look pop-sci book , something digestible someone technologically literate non-expert . book prefer , good quality article also appreciate . thanks & # x200b ; edit : good book encryption randomness would great actually , .",6_server_packet_key_hash,3
425,r19gul,Tree/Graph Diagram program,,6,0.73,computerscience,https://www.reddit.com/r/computerscience/comments/r19gul/treegraph_diagram_program/,1,"friend is asking me if i know any program where you can drag and drop nodes in order to visualize trees/graphs.  
additionally, is there any program that could diagram your code ? ( like graphviz, but for algorithms instead of structures  )",1637772506.0,"['friend', 'ask', 'know', 'program', 'drag', 'drop', 'node', 'order', 'visualize', 'trees/graphs', '.', 'additionally', ',', 'program', 'could', 'diagram', 'code', '?', '(', 'like', 'graphviz', ',', 'algorithm', 'instead', 'structure', ')']","[[('friend', 'NN')], [('asking', 'VBG')], [('know', 'VB')], [('program', 'NN')], [('drag', 'NN')], [('drop', 'NN')], [('nodes', 'NNS')], [('order', 'NN')], [('visualize', 'NN')], [('trees/graphs', 'NN')], [('.', '.')], [('additionally', 'RB')], [(',', ',')], [('program', 'NN')], [('could', 'MD')], [('diagram', 'NN')], [('code', 'NN')], [('?', '.')], [('(', '(')], [('like', 'IN')], [('graphviz', 'NN')], [(',', ',')], [('algorithms', 'NN')], [('instead', 'RB')], [('structures', 'NNS')], [(')', ')')]]","friend ask know program drag drop node order visualize trees/graphs . additionally , program could diagram code ? ( like graphviz , algorithm instead structure )",-1_abazbz2abz_2520_problem_use,3
426,r0ss7l,"Why does Rosetta run x84 apps at basically native speed, but running Linux on an M1 is borked as hell?",Discussion,55,0.87,computerscience,https://www.reddit.com/r/computerscience/comments/r0ss7l/why_does_rosetta_run_x84_apps_at_basically_native/,15,"why? is not rosetta essentially a cpu emulator? how can it run apps at normal speed, but running windows or linux (the real versions, not the ""m1"" versions) is unusable? do not even know if this is the correct sub to ask.",1637717136.0,"['?', 'rosetta', 'essentially', 'cpu', 'emulator', '?', 'run', 'apps', 'normal', 'speed', ',', 'run', 'window', 'linux', '(', 'real', 'version', ',', '``', 'm1', ""''"", 'version', ')', 'unusable', '?', 'even', 'know', 'correct', 'sub', 'ask', '.']","[[('?', '.')], [('rosetta', 'NN')], [('essentially', 'RB')], [('cpu', 'NN')], [('emulator', 'NN')], [('?', '.')], [('run', 'VB')], [('apps', 'NN')], [('normal', 'JJ')], [('speed', 'NN')], [(',', ',')], [('running', 'VBG')], [('windows', 'NNS')], [('linux', 'NN')], [('(', '(')], [('real', 'JJ')], [('versions', 'NNS')], [(',', ',')], [('``', '``')], [('m1', 'NN')], [(""''"", ""''"")], [('versions', 'NNS')], [(')', ')')], [('unusable', 'JJ')], [('?', '.')], [('even', 'RB')], [('know', 'VB')], [('correct', 'NN')], [('sub', 'NN')], [('ask', 'NN')], [('.', '.')]]","? rosetta essentially cpu emulator ? run apps normal speed , run window linux ( real version , `` m1 '' version ) unusable ? even know correct sub ask .",5_cpu_computer_run_process,1
427,r199w0,"Publishing, The Choice and The Luck",Article,3,1.0,computerscience,https://www.reddit.com/r/computerscience/comments/r199w0/publishing_the_choice_and_the_luck/,0,publishing research results is computer science is a process with no simple solutions. in this blog post i try to present some common strategies and learn from recent insights into the random effects that are present in the review process. [-cacm/256994-publishing-the-choice-and-the-luck/fulltext](-cacm/256994-publishing-the-choice-and-the-luck/fulltext),1637771971.0,"['publishing', 'research', 'result', 'computer', 'science', 'process', 'simple', 'solution', '.', 'blog', 'post', 'try', 'present', 'common', 'strategy', 'learn', 'recent', 'insight', 'random', 'effect', 'present', 'review', 'process', '.', '[', '-cacm/256994-publishing-the-choice-and-the-luck/fulltext', ']', '(', '-cacm/256994-publishing-the-choice-and-the-luck/fulltext', ')']","[[('publishing', 'NN')], [('research', 'NN')], [('results', 'NNS')], [('computer', 'NN')], [('science', 'NN')], [('process', 'NN')], [('simple', 'NN')], [('solutions', 'NNS')], [('.', '.')], [('blog', 'NN')], [('post', 'NN')], [('try', 'NN')], [('present', 'NN')], [('common', 'JJ')], [('strategies', 'NNS')], [('learn', 'NN')], [('recent', 'JJ')], [('insights', 'NNS')], [('random', 'NN')], [('effects', 'NNS')], [('present', 'NN')], [('review', 'NN')], [('process', 'NN')], [('.', '.')], [('[', 'NN')], [('-cacm/256994-publishing-the-choice-and-the-luck/fulltext', 'NN')], [(']', 'NN')], [('(', '(')], [('-cacm/256994-publishing-the-choice-and-the-luck/fulltext', 'NN')], [(')', ')')]]",publishing research result computer science process simple solution . blog post try present common strategy learn recent insight random effect present review process . [ -cacm/256994-publishing-the-choice-and-the-luck/fulltext ] ( -cacm/256994-publishing-the-choice-and-the-luck/fulltext ),-1_abazbz2abz_2520_problem_use,4
429,qzwb8e,Any advice on building a search engine?,Help,71,0.95,computerscience,https://www.reddit.com/r/computerscience/comments/qzwb8e/any_advice_on_building_a_search_engine/,37,"so i have a ds course and they want a project that deals with big data. i am fascinated by google and want to know how it works so i thought it would be a good idea to build a toy version of google to learn more.

any resources or advice would be appreciated as my google search mostly yields stuff that relies heavily on libraries or talks about the front end only.

let us get a few things out of the way:
1) i am not trying to drive google out of business. do not bother explaining how they have large team or billions of dollars so my search engine would not be as good. it is not meant to be.
2) i have not chosen this project yet so let me know if you think it would be too difficult; considering i have a month to do it. 
3) i have not been asked me to do this, so you would not be doing my homework if you give some advice.",1637616378.0,"['d', 'course', 'want', 'project', 'deal', 'big', 'data', '.', 'fascinate', 'google', 'want', 'know', 'work', 'thought', 'would', 'good', 'idea', 'build', 'toy', 'version', 'google', 'learn', '.', 'resource', 'advice', 'would', 'appreciate', 'google', 'search', 'mostly', 'yield', 'stuff', 'relies', 'heavily', 'library', 'talk', 'front', 'end', '.', 'let', 'u', 'get', 'thing', 'way', ':', '1', ')', 'try', 'drive', 'google', 'business', '.', 'bother', 'explain', 'large', 'team', 'billion', 'dollar', 'search', 'engine', 'would', 'good', '.', 'meant', '.', '2', ')', 'chosen', 'project', 'yet', 'let', 'know', 'think', 'would', 'difficult', ';', 'consider', 'month', '.', '3', ')', 'ask', ',', 'would', 'homework', 'give', 'advice', '.']","[[('ds', 'NN')], [('course', 'NN')], [('want', 'NN')], [('project', 'NN')], [('deals', 'NNS')], [('big', 'JJ')], [('data', 'NNS')], [('.', '.')], [('fascinated', 'VBN')], [('google', 'NN')], [('want', 'NN')], [('know', 'VB')], [('works', 'NNS')], [('thought', 'NN')], [('would', 'MD')], [('good', 'JJ')], [('idea', 'NN')], [('build', 'NN')], [('toy', 'NN')], [('version', 'NN')], [('google', 'NN')], [('learn', 'NN')], [('.', '.')], [('resources', 'NNS')], [('advice', 'NN')], [('would', 'MD')], [('appreciated', 'VBN')], [('google', 'NN')], [('search', 'NN')], [('mostly', 'RB')], [('yields', 'NNS')], [('stuff', 'NN')], [('relies', 'NNS')], [('heavily', 'RB')], [('libraries', 'NNS')], [('talks', 'NNS')], [('front', 'NN')], [('end', 'NN')], [('.', '.')], [('let', 'VB')], [('us', 'PRP')], [('get', 'VB')], [('things', 'NNS')], [('way', 'NN')], [(':', ':')], [('1', 'CD')], [(')', ')')], [('trying', 'VBG')], [('drive', 'NN')], [('google', 'NN')], [('business', 'NN')], [('.', '.')], [('bother', 'NN')], [('explaining', 'VBG')], [('large', 'JJ')], [('team', 'NN')], [('billions', 'NNS')], [('dollars', 'NNS')], [('search', 'NN')], [('engine', 'NN')], [('would', 'MD')], [('good', 'JJ')], [('.', '.')], [('meant', 'NN')], [('.', '.')], [('2', 'CD')], [(')', ')')], [('chosen', 'NN')], [('project', 'NN')], [('yet', 'RB')], [('let', 'VB')], [('know', 'VB')], [('think', 'NN')], [('would', 'MD')], [('difficult', 'JJ')], [(';', ':')], [('considering', 'VBG')], [('month', 'NN')], [('.', '.')], [('3', 'CD')], [(')', ')')], [('asked', 'VBN')], [(',', ',')], [('would', 'MD')], [('homework', 'NN')], [('give', 'VB')], [('advice', 'NN')], [('.', '.')]]","d course want project deal big data . fascinate google want know work thought would good idea build toy version google learn . resource advice would appreciate google search mostly yield stuff relies heavily library talk front end . let u get thing way : 1 ) try drive google business . bother explain large team billion dollar search engine would good . meant . 2 ) chosen project yet let know think would difficult ; consider month . 3 ) ask , would homework give advice .",3_search_ai_think_google,2
430,qzwduc,How do I practice my DS Algo concepts?,General,24,0.91,computerscience,https://www.reddit.com/r/computerscience/comments/qzwduc/how_do_i_practice_my_ds_algo_concepts/,10,"before you ask me to create project, i am asking for questions to practice the individual concepts like linked lists, stacks, sorting algos etc. so i can get comfortable with their implementation and the various problems they can solve, before moving on to building projects and integrating them together.",1637616562.0,"['ask', 'create', 'project', ',', 'ask', 'question', 'practice', 'individual', 'concept', 'like', 'link', 'list', ',', 'stack', ',', 'sort', 'algos', 'etc', '.', 'get', 'comfortable', 'implementation', 'various', 'problem', 'solve', ',', 'move', 'building', 'project', 'integrate', 'together', '.']","[[('ask', 'NN')], [('create', 'NN')], [('project', 'NN')], [(',', ',')], [('asking', 'VBG')], [('questions', 'NNS')], [('practice', 'NN')], [('individual', 'JJ')], [('concepts', 'NNS')], [('like', 'IN')], [('linked', 'VBN')], [('lists', 'NNS')], [(',', ',')], [('stacks', 'NNS')], [(',', ',')], [('sorting', 'VBG')], [('algos', 'NNS')], [('etc', 'NN')], [('.', '.')], [('get', 'VB')], [('comfortable', 'JJ')], [('implementation', 'NN')], [('various', 'JJ')], [('problems', 'NNS')], [('solve', 'NN')], [(',', ',')], [('moving', 'VBG')], [('building', 'NN')], [('projects', 'NNS')], [('integrating', 'VBG')], [('together', 'RB')], [('.', '.')]]","ask create project , ask question practice individual concept like link list , stack , sort algos etc . get comfortable implementation various problem solve , move building project integrate together .",-1_abazbz2abz_2520_problem_use,4
431,r02lfl,Resource for practicing algorithms without programming? (migraine sufferer),Help,6,0.75,computerscience,https://www.reddit.com/r/computerscience/comments/r02lfl/resource_for_practicing_algorithms_without/,2,"does there exist a resource for exercises of the form ""design a program with the following specifications in time/space o(f(n))""?

i am aware of competitive programming websites but i cannot currently program due to migraines. i cannot practice off these websites because often the best solution is some exponential time algorithm which i will have no way of knowing whether it will work without implementing it.

clrs is a good resource for problems but there are not enough to regularly practice on. i would like a resource preferably of the computer contest flavor but where i can practice on pen and paper rather than programming it.

edit: why is this getting downvoted",1637634523.0,"['exist', 'resource', 'exercise', 'form', '``', 'design', 'program', 'follow', 'specification', 'time/space', '(', 'f', '(', 'n', ')', ')', ""''"", '?', 'aware', 'competitive', 'program', 'website', 'currently', 'program', 'due', 'migraine', '.', 'practice', 'website', 'often', 'best', 'solution', 'exponential', 'time', 'algorithm', 'way', 'know', 'whether', 'work', 'without', 'implement', '.', 'clrs', 'good', 'resource', 'problem', 'enough', 'regularly', 'practice', '.', 'would', 'like', 'resource', 'preferably', 'computer', 'contest', 'flavor', 'practice', 'pen', 'paper', 'rather', 'program', '.', 'edit', ':', 'get', 'downvoted']","[[('exist', 'NN')], [('resource', 'NN')], [('exercises', 'NNS')], [('form', 'NN')], [('``', '``')], [('design', 'NN')], [('program', 'NN')], [('following', 'VBG')], [('specifications', 'NNS')], [('time/space', 'NN')], [('(', '(')], [('f', 'NN')], [('(', '(')], [('n', 'NN')], [(')', ')')], [(')', ')')], [(""''"", ""''"")], [('?', '.')], [('aware', 'JJ')], [('competitive', 'JJ')], [('programming', 'VBG')], [('websites', 'NNS')], [('currently', 'RB')], [('program', 'NN')], [('due', 'JJ')], [('migraines', 'NNS')], [('.', '.')], [('practice', 'NN')], [('websites', 'NNS')], [('often', 'RB')], [('best', 'JJS')], [('solution', 'NN')], [('exponential', 'JJ')], [('time', 'NN')], [('algorithm', 'NN')], [('way', 'NN')], [('knowing', 'VBG')], [('whether', 'IN')], [('work', 'NN')], [('without', 'IN')], [('implementing', 'VBG')], [('.', '.')], [('clrs', 'NN')], [('good', 'JJ')], [('resource', 'NN')], [('problems', 'NNS')], [('enough', 'RB')], [('regularly', 'RB')], [('practice', 'NN')], [('.', '.')], [('would', 'MD')], [('like', 'IN')], [('resource', 'NN')], [('preferably', 'RB')], [('computer', 'NN')], [('contest', 'NN')], [('flavor', 'NN')], [('practice', 'NN')], [('pen', 'VB')], [('paper', 'NN')], [('rather', 'RB')], [('programming', 'VBG')], [('.', '.')], [('edit', 'NN')], [(':', ':')], [('getting', 'VBG')], [('downvoted', 'VBN')]]",exist resource exercise form `` design program follow specification time/space ( f ( n ) ) '' ? aware competitive program website currently program due migraine . practice website often best solution exponential time algorithm way know whether work without implement . clrs good resource problem enough regularly practice . would like resource preferably computer contest flavor practice pen paper rather program . edit : get downvoted,-1_abazbz2abz_2520_problem_use,2
432,qzo8bt,Resources or practice problems for software architecture or design patterns,Advice,25,0.96,computerscience,https://www.reddit.com/r/computerscience/comments/qzo8bt/resources_or_practice_problems_for_software/,2,"i am not sure if software architecture or design patterns are the right terms. but i am looking for resources to read up on or practice problems for ways to approach coding problems and implement solutions in an optimal way. like how to break down a problem in smaller chunks and modularize it. or even when you should use procedural vs functional vs oop approach.

the reason is that for smaller projects i tend to just do what works, which is manageable, but as it gets bigger i quickly get spaghetti code. then i start to have analysis paralysis on how to solve certain problems, because it feels like there are so many different ways. i want to practice scalability so that i can keep my projects manageable. likewise, something that bothers me is that a lot of basic online examples (particularly in oop) give very trivial problems (e.g. squares being a type of shape, or cats being animals), which is easy to visualize, but the problems i am dealing the objects are very ambiguous (for my feeling). to the point where it is even the question if objects are relevant, with the exception of being able to separate code/data from each other.",1637595660.0,"['sure', 'software', 'architecture', 'design', 'pattern', 'right', 'term', '.', 'look', 'resource', 'read', 'practice', 'problem', 'way', 'approach', 'cod', 'problem', 'implement', 'solution', 'optimal', 'way', '.', 'like', 'break', 'problem', 'small', 'chunk', 'modularize', '.', 'even', 'use', 'procedural', 'v', 'functional', 'v', 'oop', 'approach', '.', 'reason', 'small', 'project', 'tend', 'work', ',', 'manageable', ',', 'get', 'big', 'quickly', 'get', 'spaghetti', 'code', '.', 'start', 'analysis', 'paralysis', 'solve', 'certain', 'problem', ',', 'feel', 'like', 'many', 'different', 'way', '.', 'want', 'practice', 'scalability', 'keep', 'project', 'manageable', '.', 'likewise', ',', 'something', 'bother', 'lot', 'basic', 'online', 'example', '(', 'particularly', 'oop', ')', 'give', 'trivial', 'problem', '(', 'e.g', '.', 'square', 'type', 'shape', ',', 'cat', 'animal', ')', ',', 'easy', 'visualize', ',', 'problem', 'deal', 'object', 'ambiguous', '(', 'feel', ')', '.', 'point', 'even', 'question', 'object', 'relevant', ',', 'exception', 'able', 'separate', 'code/data', '.']","[[('sure', 'NN')], [('software', 'NN')], [('architecture', 'NN')], [('design', 'NN')], [('patterns', 'NNS')], [('right', 'NN')], [('terms', 'NNS')], [('.', '.')], [('looking', 'VBG')], [('resources', 'NNS')], [('read', 'NN')], [('practice', 'NN')], [('problems', 'NNS')], [('ways', 'NNS')], [('approach', 'NN')], [('coding', 'VBG')], [('problems', 'NNS')], [('implement', 'NN')], [('solutions', 'NNS')], [('optimal', 'JJ')], [('way', 'NN')], [('.', '.')], [('like', 'IN')], [('break', 'NN')], [('problem', 'NN')], [('smaller', 'JJR')], [('chunks', 'NNS')], [('modularize', 'NN')], [('.', '.')], [('even', 'RB')], [('use', 'NN')], [('procedural', 'JJ')], [('vs', 'NN')], [('functional', 'JJ')], [('vs', 'NN')], [('oop', 'NN')], [('approach', 'NN')], [('.', '.')], [('reason', 'NN')], [('smaller', 'JJR')], [('projects', 'NNS')], [('tend', 'NN')], [('works', 'NNS')], [(',', ',')], [('manageable', 'JJ')], [(',', ',')], [('gets', 'VBZ')], [('bigger', 'JJR')], [('quickly', 'RB')], [('get', 'VB')], [('spaghetti', 'NNS')], [('code', 'NN')], [('.', '.')], [('start', 'NN')], [('analysis', 'NN')], [('paralysis', 'NN')], [('solve', 'NN')], [('certain', 'JJ')], [('problems', 'NNS')], [(',', ',')], [('feels', 'NNS')], [('like', 'IN')], [('many', 'JJ')], [('different', 'JJ')], [('ways', 'NNS')], [('.', '.')], [('want', 'NN')], [('practice', 'NN')], [('scalability', 'NN')], [('keep', 'VB')], [('projects', 'NNS')], [('manageable', 'JJ')], [('.', '.')], [('likewise', 'RB')], [(',', ',')], [('something', 'NN')], [('bothers', 'NNS')], [('lot', 'NN')], [('basic', 'JJ')], [('online', 'NN')], [('examples', 'NNS')], [('(', '(')], [('particularly', 'RB')], [('oop', 'NN')], [(')', ')')], [('give', 'VB')], [('trivial', 'JJ')], [('problems', 'NNS')], [('(', '(')], [('e.g', 'NN')], [('.', '.')], [('squares', 'NNS')], [('type', 'NN')], [('shape', 'NN')], [(',', ',')], [('cats', 'NNS')], [('animals', 'NNS')], [(')', ')')], [(',', ',')], [('easy', 'JJ')], [('visualize', 'NN')], [(',', ',')], [('problems', 'NNS')], [('dealing', 'VBG')], [('objects', 'NNS')], [('ambiguous', 'JJ')], [('(', '(')], [('feeling', 'VBG')], [(')', ')')], [('.', '.')], [('point', 'NN')], [('even', 'RB')], [('question', 'NN')], [('objects', 'NNS')], [('relevant', 'NN')], [(',', ',')], [('exception', 'NN')], [('able', 'JJ')], [('separate', 'JJ')], [('code/data', 'NNS')], [('.', '.')]]","sure software architecture design pattern right term . look resource read practice problem way approach cod problem implement solution optimal way . like break problem small chunk modularize . even use procedural v functional v oop approach . reason small project tend work , manageable , get big quickly get spaghetti code . start analysis paralysis solve certain problem , feel like many different way . want practice scalability keep project manageable . likewise , something bother lot basic online example ( particularly oop ) give trivial problem ( e.g . square type shape , cat animal ) , easy visualize , problem deal object ambiguous ( feel ) . point even question object relevant , exception able separate code/data .",-1_abazbz2abz_2520_problem_use,3
433,r07asz,How do data cables index files for large hard drives?,,0,0.5,computerscience,https://www.reddit.com/r/computerscience/comments/r07asz/how_do_data_cables_index_files_for_large_hard/,2,"specifically with pata data cables, i have been looking through their specifications and noticed they have 16 data lines but only 3 address lines. hard drives that support pata seem to be able to support hundreds of gigabytes, but directly addressing even just 4 gb would require 4 bytes. how does a computer send data to the hard drive about which data it wants read/written?

my hypothesis would be that either it has something to do with paging and lookup tables, or the data lines are repurposed to tell the microcontroller within the hard drive the area in memory to be accessed, or the computer tells the hard drive which block to start at and it copies over the entire block, one word at a time, or the 3 address lines control the read/write head directly and reading the correct block is timing based, similar to how dvi does not use coordinates for pixels.",1637650582.0,"['specifically', 'pata', 'data', 'cable', ',', 'look', 'specification', 'notice', '16', 'data', 'line', '3', 'address', 'line', '.', 'hard', 'drive', 'support', 'pata', 'seem', 'able', 'support', 'hundred', 'gigabyte', ',', 'directly', 'address', 'even', '4', 'gb', 'would', 'require', '4', 'byte', '.', 'computer', 'send', 'data', 'hard', 'drive', 'data', 'want', 'read/written', '?', 'hypothesis', 'would', 'either', 'something', 'page', 'lookup', 'table', ',', 'data', 'line', 'repurposed', 'tell', 'microcontroller', 'within', 'hard', 'drive', 'area', 'memory', 'access', ',', 'computer', 'tell', 'hard', 'drive', 'block', 'start', 'copy', 'entire', 'block', ',', 'one', 'word', 'time', ',', '3', 'address', 'line', 'control', 'read/write', 'head', 'directly', 'reading', 'correct', 'block', 'timing', 'base', ',', 'similar', 'dvi', 'use', 'coordinate', 'pixel', '.']","[[('specifically', 'RB')], [('pata', 'NN')], [('data', 'NNS')], [('cables', 'NNS')], [(',', ',')], [('looking', 'VBG')], [('specifications', 'NNS')], [('noticed', 'VBN')], [('16', 'CD')], [('data', 'NNS')], [('lines', 'NNS')], [('3', 'CD')], [('address', 'NN')], [('lines', 'NNS')], [('.', '.')], [('hard', 'JJ')], [('drives', 'NNS')], [('support', 'NN')], [('pata', 'NN')], [('seem', 'NN')], [('able', 'JJ')], [('support', 'NN')], [('hundreds', 'NNS')], [('gigabytes', 'NNS')], [(',', ',')], [('directly', 'RB')], [('addressing', 'VBG')], [('even', 'RB')], [('4', 'CD')], [('gb', 'NN')], [('would', 'MD')], [('require', 'NN')], [('4', 'CD')], [('bytes', 'NNS')], [('.', '.')], [('computer', 'NN')], [('send', 'NN')], [('data', 'NNS')], [('hard', 'JJ')], [('drive', 'NN')], [('data', 'NNS')], [('wants', 'VBZ')], [('read/written', 'VB')], [('?', '.')], [('hypothesis', 'NN')], [('would', 'MD')], [('either', 'DT')], [('something', 'NN')], [('paging', 'VBG')], [('lookup', 'NN')], [('tables', 'NNS')], [(',', ',')], [('data', 'NNS')], [('lines', 'NNS')], [('repurposed', 'VBN')], [('tell', 'NN')], [('microcontroller', 'NN')], [('within', 'IN')], [('hard', 'JJ')], [('drive', 'NN')], [('area', 'NN')], [('memory', 'NN')], [('accessed', 'VBN')], [(',', ',')], [('computer', 'NN')], [('tells', 'NNS')], [('hard', 'JJ')], [('drive', 'NN')], [('block', 'NN')], [('start', 'NN')], [('copies', 'NNS')], [('entire', 'JJ')], [('block', 'NN')], [(',', ',')], [('one', 'CD')], [('word', 'NN')], [('time', 'NN')], [(',', ',')], [('3', 'CD')], [('address', 'NN')], [('lines', 'NNS')], [('control', 'NN')], [('read/write', 'NN')], [('head', 'NN')], [('directly', 'RB')], [('reading', 'NN')], [('correct', 'NN')], [('block', 'NN')], [('timing', 'NN')], [('based', 'VBN')], [(',', ',')], [('similar', 'JJ')], [('dvi', 'NN')], [('use', 'NN')], [('coordinates', 'NNS')], [('pixels', 'NNS')], [('.', '.')]]","specifically pata data cable , look specification notice 16 data line 3 address line . hard drive support pata seem able support hundred gigabyte , directly address even 4 gb would require 4 byte . computer send data hard drive data want read/written ? hypothesis would either something page lookup table , data line repurposed tell microcontroller within hard drive area memory access , computer tell hard drive block start copy entire block , one word time , 3 address line control read/write head directly reading correct block timing base , similar dvi use coordinate pixel .",1_memory_byte_data_alignment,2
434,qzkegn,Books on IOT,Advice,19,0.91,computerscience,https://www.reddit.com/r/computerscience/comments/qzkegn/books_on_iot/,5,"i recently got interested in iot. my background is computer software and programming. my interest has always been on the different mediums for  communication between human and computers. 
i would appreciate if you can suggest books that covers the basic concepts of iot and their application on communication and collecting data.",1637584284.0,"['recently', 'get', 'interested', 'iot', '.', 'background', 'computer', 'software', 'program', '.', 'interest', 'always', 'different', 'medium', 'communication', 'human', 'computer', '.', 'would', 'appreciate', 'suggest', 'book', 'cover', 'basic', 'concept', 'iot', 'application', 'communication', 'collect', 'data', '.']","[[('recently', 'RB')], [('got', 'VBD')], [('interested', 'JJ')], [('iot', 'NN')], [('.', '.')], [('background', 'NN')], [('computer', 'NN')], [('software', 'NN')], [('programming', 'VBG')], [('.', '.')], [('interest', 'NN')], [('always', 'RB')], [('different', 'JJ')], [('mediums', 'NNS')], [('communication', 'NN')], [('human', 'NN')], [('computers', 'NNS')], [('.', '.')], [('would', 'MD')], [('appreciate', 'NN')], [('suggest', 'NN')], [('books', 'NNS')], [('covers', 'NNS')], [('basic', 'JJ')], [('concepts', 'NNS')], [('iot', 'NN')], [('application', 'NN')], [('communication', 'NN')], [('collecting', 'VBG')], [('data', 'NNS')], [('.', '.')]]",recently get interested iot . background computer software program . interest always different medium communication human computer . would appreciate suggest book cover basic concept iot application communication collect data .,4_book_learn_computer_good,4
435,qzkz6g,"2nd to Last member of the ""Traitorous Eight"" passed away. Rest in peace Dr. Last.",,2,1.0,computerscience,https://www.reddit.com/r/computerscience/comments/qzkz6g/2nd_to_last_member_of_the_traitorous_eight_passed/,0,"the new york times: jay last, one of the rebels who founded silicon valley, dies at 92.
-last-dead.html",1637586259.0,"['new', 'york', 'time', ':', 'jay', 'last', ',', 'one', 'rebel', 'found', 'silicon', 'valley', ',', 'dy', '92', '.', '-last-dead.html']","[[('new', 'JJ')], [('york', 'NN')], [('times', 'NNS')], [(':', ':')], [('jay', 'NN')], [('last', 'JJ')], [(',', ',')], [('one', 'CD')], [('rebels', 'NNS')], [('founded', 'VBN')], [('silicon', 'NN')], [('valley', 'NN')], [(',', ',')], [('dies', 'NNS')], [('92', 'CD')], [('.', '.')], [('-last-dead.html', 'NN')]]","new york time : jay last , one rebel found silicon valley , dy 92 . -last-dead.html",3_search_ai_think_google,1
436,qz9jwv,"Why are errors ""close"" to the kernel so irreparable?",General,7,0.77,computerscience,https://www.reddit.com/r/computerscience/comments/qz9jwv/why_are_errors_close_to_the_kernel_so_irreparable/,1,i have so many questions to ask about kernels and this is one of them.,1637544058.0,"['many', 'question', 'ask', 'kernel', 'one', '.']","[[('many', 'JJ')], [('questions', 'NNS')], [('ask', 'NN')], [('kernels', 'NNS')], [('one', 'CD')], [('.', '.')]]",many question ask kernel one .,5_cpu_computer_run_process,5
437,qz023c,Genetic Algorithms| Bayesian Optimization | Reinforcement Learning,Help,29,0.88,computerscience,https://www.reddit.com/r/computerscience/comments/qz023c/genetic_algorithms_bayesian_optimization/,7,"hello all,

i am interested in learning more about genetic algorithms and bayesian optimization in the context of hyperparameter tuning in machine learning and operations research. not interested in medium articles, i want to dive and understand the math. i am also intested to get a good introduction to reinforcement learning.

could you suggest good books/ pedagogical articles about these three subjects?",1637516416.0,"['hello', ',', 'interested', 'learn', 'genetic', 'algorithm', 'bayesian', 'optimization', 'context', 'hyperparameter', 'tune', 'machine', 'learn', 'operation', 'research', '.', 'interested', 'medium', 'article', ',', 'want', 'dive', 'understand', 'math', '.', 'also', 'intested', 'get', 'good', 'introduction', 'reinforcement', 'learn', '.', 'could', 'suggest', 'good', 'books/', 'pedagogical', 'article', 'three', 'subject', '?']","[[('hello', 'NN')], [(',', ',')], [('interested', 'JJ')], [('learning', 'VBG')], [('genetic', 'JJ')], [('algorithms', 'NN')], [('bayesian', 'NN')], [('optimization', 'NN')], [('context', 'NN')], [('hyperparameter', 'NN')], [('tuning', 'VBG')], [('machine', 'NN')], [('learning', 'VBG')], [('operations', 'NNS')], [('research', 'NN')], [('.', '.')], [('interested', 'JJ')], [('medium', 'NN')], [('articles', 'NNS')], [(',', ',')], [('want', 'NN')], [('dive', 'NN')], [('understand', 'NN')], [('math', 'NN')], [('.', '.')], [('also', 'RB')], [('intested', 'VBN')], [('get', 'VB')], [('good', 'JJ')], [('introduction', 'NN')], [('reinforcement', 'NN')], [('learning', 'VBG')], [('.', '.')], [('could', 'MD')], [('suggest', 'NN')], [('good', 'JJ')], [('books/', 'NN')], [('pedagogical', 'JJ')], [('articles', 'NNS')], [('three', 'CD')], [('subjects', 'NNS')], [('?', '.')]]","hello , interested learn genetic algorithm bayesian optimization context hyperparameter tune machine learn operation research . interested medium article , want dive understand math . also intested get good introduction reinforcement learn . could suggest good books/ pedagogical article three subject ?",4_book_learn_computer_good,2
438,qyv2sd,Good introductory book on formal specifications?,Help,22,0.91,computerscience,https://www.reddit.com/r/computerscience/comments/qyv2sd/good_introductory_book_on_formal_specifications/,3,"i am looking for a good introductory book on formal specifications. this is a new field for me so i have not the slightest clue where to begin. any help is greatly appreciated.

thanks",1637501642.0,"['look', 'good', 'introductory', 'book', 'formal', 'specification', '.', 'new', 'field', 'slightest', 'clue', 'begin', '.', 'help', 'greatly', 'appreciate', '.', 'thanks']","[[('looking', 'VBG')], [('good', 'JJ')], [('introductory', 'NN')], [('book', 'NN')], [('formal', 'JJ')], [('specifications', 'NNS')], [('.', '.')], [('new', 'JJ')], [('field', 'NN')], [('slightest', 'NN')], [('clue', 'NN')], [('begin', 'NN')], [('.', '.')], [('help', 'NN')], [('greatly', 'RB')], [('appreciated', 'VBN')], [('.', '.')], [('thanks', 'NNS')]]",look good introductory book formal specification . new field slightest clue begin . help greatly appreciate . thanks,-1_abazbz2abz_2520_problem_use,5
439,qz4cwb,Genetic programming: tree GP vs. linear GP,,6,0.8,computerscience,https://www.reddit.com/r/computerscience/comments/qz4cwb/genetic_programming_tree_gp_vs_linear_gp/,0,"i am writing an algorithm to predict global average temperatures. i read an academic paper that used tree gp to solve the same problem. i already have a linear gp algorithm i wrote for something else that i would like to recycle, but i would also like to get the best performance possible out of the temperature algorithm.

is there an advantage to using tree gp vs. linear gp and vise versa? are there certain types of problems that are better suited to one representation over the other?",1637528545.0,"['write', 'algorithm', 'predict', 'global', 'average', 'temperature', '.', 'read', 'academic', 'paper', 'use', 'tree', 'gp', 'solve', 'problem', '.', 'already', 'linear', 'gp', 'algorithm', 'write', 'something', 'else', 'would', 'like', 'recycle', ',', 'would', 'also', 'like', 'get', 'best', 'performance', 'possible', 'temperature', 'algorithm', '.', 'advantage', 'use', 'tree', 'gp', 'vs.', 'linear', 'gp', 'vise', 'versa', '?', 'certain', 'type', 'problem', 'well', 'suit', 'one', 'representation', '?']","[[('writing', 'VBG')], [('algorithm', 'NN')], [('predict', 'NN')], [('global', 'JJ')], [('average', 'JJ')], [('temperatures', 'NNS')], [('.', '.')], [('read', 'NN')], [('academic', 'JJ')], [('paper', 'NN')], [('used', 'VBN')], [('tree', 'NN')], [('gp', 'NN')], [('solve', 'NN')], [('problem', 'NN')], [('.', '.')], [('already', 'RB')], [('linear', 'NN')], [('gp', 'NN')], [('algorithm', 'NN')], [('wrote', 'VBD')], [('something', 'NN')], [('else', 'RB')], [('would', 'MD')], [('like', 'IN')], [('recycle', 'NN')], [(',', ',')], [('would', 'MD')], [('also', 'RB')], [('like', 'IN')], [('get', 'VB')], [('best', 'JJS')], [('performance', 'NN')], [('possible', 'JJ')], [('temperature', 'NN')], [('algorithm', 'NN')], [('.', '.')], [('advantage', 'NN')], [('using', 'VBG')], [('tree', 'NN')], [('gp', 'NN')], [('vs.', 'NN')], [('linear', 'NN')], [('gp', 'NN')], [('vise', 'NN')], [('versa', 'NN')], [('?', '.')], [('certain', 'JJ')], [('types', 'NNS')], [('problems', 'NNS')], [('better', 'RBR')], [('suited', 'VBN')], [('one', 'CD')], [('representation', 'NN')], [('?', '.')]]","write algorithm predict global average temperature . read academic paper use tree gp solve problem . already linear gp algorithm write something else would like recycle , would also like get best performance possible temperature algorithm . advantage use tree gp vs. linear gp vise versa ? certain type problem well suit one representation ?",0_algorithm_time_node_bill,3
440,qyo107,How does a computer know how full memory is? (Should have asked in my previous post),Discussion,58,0.94,computerscience,https://www.reddit.com/r/computerscience/comments/qyo107/how_does_a_computer_know_how_full_memory_is/,13,"okay, another memory related question, i wish i thought of this with my previous post to save a bit of time, but anyway. another thing i have thought of is how does a computer calculate how full memory is? is it fully software based, or does hardware handle it? if its hardware based is it in the cpu memory controller, or the ram sticks themselves?",1637472565.0,"['okay', ',', 'another', 'memory', 'related', 'question', ',', 'wish', 'thought', 'previous', 'post', 'save', 'bit', 'time', ',', 'anyway', '.', 'another', 'thing', 'thought', 'computer', 'calculate', 'full', 'memory', '?', 'fully', 'software', 'base', ',', 'hardware', 'handle', '?', 'hardware', 'base', 'cpu', 'memory', 'controller', ',', 'ram', 'stick', '?']","[[('okay', 'NN')], [(',', ',')], [('another', 'DT')], [('memory', 'NN')], [('related', 'JJ')], [('question', 'NN')], [(',', ',')], [('wish', 'NN')], [('thought', 'NN')], [('previous', 'JJ')], [('post', 'NN')], [('save', 'VB')], [('bit', 'NN')], [('time', 'NN')], [(',', ',')], [('anyway', 'RB')], [('.', '.')], [('another', 'DT')], [('thing', 'NN')], [('thought', 'NN')], [('computer', 'NN')], [('calculate', 'NN')], [('full', 'JJ')], [('memory', 'NN')], [('?', '.')], [('fully', 'RB')], [('software', 'NN')], [('based', 'VBN')], [(',', ',')], [('hardware', 'NN')], [('handle', 'NN')], [('?', '.')], [('hardware', 'NN')], [('based', 'VBN')], [('cpu', 'NN')], [('memory', 'NN')], [('controller', 'NN')], [(',', ',')], [('ram', 'NN')], [('sticks', 'NNS')], [('?', '.')]]","okay , another memory related question , wish thought previous post save bit time , anyway . another thing thought computer calculate full memory ? fully software base , hardware handle ? hardware base cpu memory controller , ram stick ?",1_memory_byte_data_alignment,3
441,qyaklu,Does anyone know of any good podcasts that cover computer science or programming topics?,General,119,1.0,computerscience,https://www.reddit.com/r/computerscience/comments/qyaklu/does_anyone_know_of_any_good_podcasts_that_cover/,13,"basically what the title says. there are podcasts about space that aerospace engineers can listen to, for example, so i was wondering if anyone knows of any comp sci podcasts",1637429966.0,"['basically', 'title', 'say', '.', 'podcasts', 'space', 'aerospace', 'engineer', 'listen', ',', 'example', ',', 'wonder', 'anyone', 'know', 'comp', 'sci', 'podcasts']","[[('basically', 'RB')], [('title', 'NN')], [('says', 'VBZ')], [('.', '.')], [('podcasts', 'NNS')], [('space', 'NN')], [('aerospace', 'NN')], [('engineers', 'NNS')], [('listen', 'NN')], [(',', ',')], [('example', 'NN')], [(',', ',')], [('wondering', 'VBG')], [('anyone', 'NN')], [('knows', 'NNS')], [('comp', 'NN')], [('sci', 'NN')], [('podcasts', 'NNS')]]","basically title say . podcasts space aerospace engineer listen , example , wonder anyone know comp sci podcasts",4_book_learn_computer_good,3
442,qyyi89,Is computer vision is a part of engineering or computer science,Discussion,0,0.47,computerscience,https://www.reddit.com/r/computerscience/comments/qyyi89/is_computer_vision_is_a_part_of_engineering_or/,3,"i wonder if computer vision consider for computer science or engineering or both
as my knowledge that computer vision is  an ai but many ppl tell mostly for engineering than science",1637512069.0,"['wonder', 'computer', 'vision', 'consider', 'computer', 'science', 'engineering', 'knowledge', 'computer', 'vision', 'ai', 'many', 'ppl', 'tell', 'mostly', 'engineering', 'science']","[[('wonder', 'NN')], [('computer', 'NN')], [('vision', 'NN')], [('consider', 'VB')], [('computer', 'NN')], [('science', 'NN')], [('engineering', 'NN')], [('knowledge', 'NN')], [('computer', 'NN')], [('vision', 'NN')], [('ai', 'NN')], [('many', 'JJ')], [('ppl', 'NN')], [('tell', 'NN')], [('mostly', 'RB')], [('engineering', 'NN')], [('science', 'NN')]]",wonder computer vision consider computer science engineering knowledge computer vision ai many ppl tell mostly engineering science,3_search_ai_think_google,3
443,qys9kx,Exam question format: Consider an x-stage pipelined CPU. How much time does it take to execute n CPU instructions where each stage is y nanoseconds.,,2,0.63,computerscience,https://www.reddit.com/r/computerscience/comments/qys9kx/exam_question_format_consider_an_xstage_pipelined/,3,"so i have been doing some past papers recently and this format or something amounting to the same thing keeps cropping up.

the only problem is, if your stages do not divide neatly into your instructions and leaves a remainder.

for example a 3 stage piplined cpu with 8 instructions, will initilise as such:

you subtract the triangular number of 3 from the instructions: 8 - 6 = 2

and that is how many instructions will be carried out while the program is operating at full efficiency, so you can divide the 2 by the number of stages you are operating at any given time so 2 / 3 = ...

oh... rem. 2?

trying to visualise what happens this is my best guess at the answer:

 []()

as you can see you would just have a wind down stage which last 1 cycle? but that does not make sense, because on the x axis the third stage of one of the instructions does not get carried out?

i think i just fundamentally do not understand.

thanks a million in advance for any assistance c:",1637490467.0,"['past', 'paper', 'recently', 'format', 'something', 'amount', 'thing', 'keep', 'crop', '.', 'problem', ',', 'stage', 'divide', 'neatly', 'instruction', 'leaf', 'remainder', '.', 'example', '3', 'stage', 'piplined', 'cpu', '8', 'instruction', ',', 'initilise', ':', 'subtract', 'triangular', 'number', '3', 'instruction', ':', '8', '-', '6', '=', '2', 'many', 'instruction', 'carry', 'program', 'operating', 'full', 'efficiency', ',', 'divide', '2', 'number', 'stage', 'operating', 'give', 'time', '2', '/', '3', '=', '...', 'oh', '...', 'rem', '.', '2', '?', 'try', 'visualise', 'happens', 'best', 'guess', 'answer', ':', '[', ']', '(', ')', 'see', 'would', 'wind', 'stage', 'last', '1', 'cycle', '?', 'make', 'sense', ',', 'x', 'axis', 'third', 'stage', 'one', 'instruction', 'get', 'carry', '?', 'think', 'fundamentally', 'understand', '.', 'thanks', 'million', 'advance', 'assistance', 'c', ':']","[[('past', 'NN')], [('papers', 'NNS')], [('recently', 'RB')], [('format', 'NN')], [('something', 'NN')], [('amounting', 'VBG')], [('thing', 'NN')], [('keeps', 'NNS')], [('cropping', 'VBG')], [('.', '.')], [('problem', 'NN')], [(',', ',')], [('stages', 'NNS')], [('divide', 'NN')], [('neatly', 'RB')], [('instructions', 'NNS')], [('leaves', 'NNS')], [('remainder', 'NN')], [('.', '.')], [('example', 'NN')], [('3', 'CD')], [('stage', 'NN')], [('piplined', 'VBN')], [('cpu', 'NN')], [('8', 'CD')], [('instructions', 'NNS')], [(',', ',')], [('initilise', 'NN')], [(':', ':')], [('subtract', 'NN')], [('triangular', 'NN')], [('number', 'NN')], [('3', 'CD')], [('instructions', 'NNS')], [(':', ':')], [('8', 'CD')], [('-', ':')], [('6', 'CD')], [('=', 'NN')], [('2', 'CD')], [('many', 'JJ')], [('instructions', 'NNS')], [('carried', 'VBN')], [('program', 'NN')], [('operating', 'NN')], [('full', 'JJ')], [('efficiency', 'NN')], [(',', ',')], [('divide', 'NN')], [('2', 'CD')], [('number', 'NN')], [('stages', 'NNS')], [('operating', 'NN')], [('given', 'VBN')], [('time', 'NN')], [('2', 'CD')], [('/', 'NN')], [('3', 'CD')], [('=', 'NN')], [('...', ':')], [('oh', 'NN')], [('...', ':')], [('rem', 'NN')], [('.', '.')], [('2', 'CD')], [('?', '.')], [('trying', 'VBG')], [('visualise', 'NN')], [('happens', 'NNS')], [('best', 'JJS')], [('guess', 'NN')], [('answer', 'NN')], [(':', ':')], [('[', 'NN')], [(']', 'NN')], [('(', '(')], [(')', ')')], [('see', 'VB')], [('would', 'MD')], [('wind', 'NN')], [('stage', 'NN')], [('last', 'JJ')], [('1', 'CD')], [('cycle', 'NN')], [('?', '.')], [('make', 'VB')], [('sense', 'NN')], [(',', ',')], [('x', 'NN')], [('axis', 'NN')], [('third', 'JJ')], [('stage', 'NN')], [('one', 'CD')], [('instructions', 'NNS')], [('get', 'VB')], [('carried', 'VBN')], [('?', '.')], [('think', 'NN')], [('fundamentally', 'RB')], [('understand', 'NN')], [('.', '.')], [('thanks', 'NNS')], [('million', 'CD')], [('advance', 'NN')], [('assistance', 'NN')], [('c', 'NNS')], [(':', ':')]]","past paper recently format something amount thing keep crop . problem , stage divide neatly instruction leaf remainder . example 3 stage piplined cpu 8 instruction , initilise : subtract triangular number 3 instruction : 8 - 6 = 2 many instruction carry program operating full efficiency , divide 2 number stage operating give time 2 / 3 = ... oh ... rem . 2 ? try visualise happens best guess answer : [ ] ( ) see would wind stage last 1 cycle ? make sense , x axis third stage one instruction get carry ? think fundamentally understand . thanks million advance assistance c :",0_algorithm_time_node_bill,4
444,qytazd,Where to find practical exercises about IPv4 addresses?,,0,0.4,computerscience,https://www.reddit.com/r/computerscience/comments/qytazd/where_to_find_practical_exercises_about_ipv4/,1,"i would like to train/practice on ipv4 tasks, such as:

\- what number of addresses there in this address and mask?

\- which range does this address belong to?

\- calculate this, find out that

where to find such? thanks!",1637494991.0,"['would', 'like', 'train/practice', 'ipv4', 'task', ',', ':', '\\-', 'number', 'address', 'address', 'mask', '?', '\\-', 'range', 'address', 'belong', '?', '\\-', 'calculate', ',', 'find', 'find', '?', 'thanks', '!']","[[('would', 'MD')], [('like', 'IN')], [('train/practice', 'NN')], [('ipv4', 'NN')], [('tasks', 'NNS')], [(',', ',')], [(':', ':')], [('\\-', 'JJ')], [('number', 'NN')], [('addresses', 'NNS')], [('address', 'NN')], [('mask', 'NN')], [('?', '.')], [('\\-', 'JJ')], [('range', 'NN')], [('address', 'NN')], [('belong', 'NN')], [('?', '.')], [('\\-', 'JJ')], [('calculate', 'NN')], [(',', ',')], [('find', 'VB')], [('find', 'VB')], [('?', '.')], [('thanks', 'NNS')], [('!', '.')]]","would like train/practice ipv4 task , : \- number address address mask ? \- range address belong ? \- calculate , find find ? thanks !",6_server_packet_key_hash,4
447,qykxoh,How would a computer calculate how much RAM it has to work with?,Discussion,1,0.55,computerscience,https://www.reddit.com/r/computerscience/comments/qykxoh/how_would_a_computer_calculate_how_much_ram_it/,7,"hi! i am designing a computer just for fun, i learned the basics and what not, and i am building one in logisim (i know, not the best software, but works for now) and it is a decently complicated cpu and stuff. (still trying to work out how the stack works, and a couple of other things before it can technically be deemed a proper computer) and this thought crossed my mind: ""how do computers calculate how many bytes of memory it has?"" i have a working prototype of the whole computer and am working on a simple bios for it. and while i was making a prototype of the bios i thought of ways the computer detects memory and how much there is, but cannot think of any. i tried looking it up but cannot find any good explanations. anyone know how this is done? and my apologies if i picked the wrong flair and if this breaks any rules, i have read them and it does not seem to break any. any help is appreciated!

edit: thanks to raedr7n and namelessvegetable for the help! found out how it works",1637461704.0,"['hi', '!', 'design', 'computer', 'fun', ',', 'learn', 'basic', ',', 'building', 'one', 'logisim', '(', 'know', ',', 'best', 'software', ',', 'work', ')', 'decently', 'complicate', 'cpu', 'stuff', '.', '(', 'still', 'try', 'work', 'stack', 'work', ',', 'couple', 'thing', 'technically', 'deem', 'proper', 'computer', ')', 'thought', 'cross', 'mind', ':', '``', 'computer', 'calculate', 'many', 'byte', 'memory', '?', ""''"", 'work', 'prototype', 'whole', 'computer', 'work', 'simple', 'bios', '.', 'make', 'prototype', 'bios', 'thought', 'way', 'computer', 'detects', 'memory', 'much', ',', 'think', '.', 'try', 'look', 'find', 'good', 'explanation', '.', 'anyone', 'know', 'do', '?', 'apology', 'picked', 'wrong', 'flair', 'break', 'rule', ',', 'read', 'seem', 'break', '.', 'help', 'appreciate', '!', 'edit', ':', 'thanks', 'raedr7n', 'namelessvegetable', 'help', '!', 'found', 'work']","[[('hi', 'NN')], [('!', '.')], [('designing', 'VBG')], [('computer', 'NN')], [('fun', 'NN')], [(',', ',')], [('learned', 'VBN')], [('basics', 'NNS')], [(',', ',')], [('building', 'NN')], [('one', 'CD')], [('logisim', 'NN')], [('(', '(')], [('know', 'VB')], [(',', ',')], [('best', 'JJS')], [('software', 'NN')], [(',', ',')], [('works', 'NNS')], [(')', ')')], [('decently', 'RB')], [('complicated', 'VBN')], [('cpu', 'NN')], [('stuff', 'NN')], [('.', '.')], [('(', '(')], [('still', 'RB')], [('trying', 'VBG')], [('work', 'NN')], [('stack', 'NN')], [('works', 'NNS')], [(',', ',')], [('couple', 'NN')], [('things', 'NNS')], [('technically', 'RB')], [('deemed', 'VBN')], [('proper', 'NN')], [('computer', 'NN')], [(')', ')')], [('thought', 'NN')], [('crossed', 'VBN')], [('mind', 'NN')], [(':', ':')], [('``', '``')], [('computers', 'NNS')], [('calculate', 'NN')], [('many', 'JJ')], [('bytes', 'NNS')], [('memory', 'NN')], [('?', '.')], [(""''"", ""''"")], [('working', 'VBG')], [('prototype', 'NN')], [('whole', 'JJ')], [('computer', 'NN')], [('working', 'VBG')], [('simple', 'NN')], [('bios', 'NNS')], [('.', '.')], [('making', 'VBG')], [('prototype', 'NN')], [('bios', 'NNS')], [('thought', 'NN')], [('ways', 'NNS')], [('computer', 'NN')], [('detects', 'NNS')], [('memory', 'NN')], [('much', 'JJ')], [(',', ',')], [('think', 'NN')], [('.', '.')], [('tried', 'VBN')], [('looking', 'VBG')], [('find', 'VB')], [('good', 'JJ')], [('explanations', 'NNS')], [('.', '.')], [('anyone', 'NN')], [('know', 'VB')], [('done', 'VBN')], [('?', '.')], [('apologies', 'NNS')], [('picked', 'NNS')], [('wrong', 'JJ')], [('flair', 'NN')], [('breaks', 'NNS')], [('rules', 'NNS')], [(',', ',')], [('read', 'NN')], [('seem', 'NN')], [('break', 'NN')], [('.', '.')], [('help', 'NN')], [('appreciated', 'VBN')], [('!', '.')], [('edit', 'NN')], [(':', ':')], [('thanks', 'NNS')], [('raedr7n', 'NN')], [('namelessvegetable', 'JJ')], [('help', 'NN')], [('!', '.')], [('found', 'NN')], [('works', 'NNS')]]","hi ! design computer fun , learn basic , building one logisim ( know , best software , work ) decently complicate cpu stuff . ( still try work stack work , couple thing technically deem proper computer ) thought cross mind : `` computer calculate many byte memory ? '' work prototype whole computer work simple bios . make prototype bios thought way computer detects memory much , think . try look find good explanation . anyone know do ? apology picked wrong flair break rule , read seem break . help appreciate ! edit : thanks raedr7n namelessvegetable help ! found work",5_cpu_computer_run_process,2
450,qylubl,"Build a simple ad hoc network, with small computers.",,0,0.5,computerscience,https://www.reddit.com/r/computerscience/comments/qylubl/build_a_simple_ad_hoc_network_with_small_computers/,0,"hi, i programmed a small computer based on von neumann architecture with a few set of instructions on binary and now i am asking to design and implement an ad hoc network with some of this emulated computers, so, do you have any advice or documentation for this purpose? thanks",1637464746.0,"['hi', ',', 'programmed', 'small', 'computer', 'base', 'von', 'neumann', 'architecture', 'set', 'instruction', 'binary', 'ask', 'design', 'implement', 'ad', 'hoc', 'network', 'emulate', 'computer', ',', ',', 'advice', 'documentation', 'purpose', '?', 'thanks']","[[('hi', 'NN')], [(',', ',')], [('programmed', 'NN')], [('small', 'JJ')], [('computer', 'NN')], [('based', 'VBN')], [('von', 'NN')], [('neumann', 'NN')], [('architecture', 'NN')], [('set', 'NN')], [('instructions', 'NNS')], [('binary', 'NN')], [('asking', 'VBG')], [('design', 'NN')], [('implement', 'NN')], [('ad', 'NN')], [('hoc', 'NN')], [('network', 'NN')], [('emulated', 'VBN')], [('computers', 'NNS')], [(',', ',')], [(',', ',')], [('advice', 'NN')], [('documentation', 'NN')], [('purpose', 'NN')], [('?', '.')], [('thanks', 'NNS')]]","hi , programmed small computer base von neumann architecture set instruction binary ask design implement ad hoc network emulate computer , , advice documentation purpose ? thanks",-1_abazbz2abz_2520_problem_use,3
451,qys6ai,"To get passed binary input, do we need to drop conventional sourcing? Fibre optic?",Discussion,0,0.3,computerscience,https://www.reddit.com/r/computerscience/comments/qys6ai/to_get_passed_binary_input_do_we_need_to_drop/,6,"so i am very new to coding, so apologies if this is completely impossible or even incorrect.

but i do believe that current systems run off cpus measuring the amount of 0s and 1s through voltage.

however if we were to change this process to fibre optic where the process is still assigned to an on or off process.

however if we introduced colour into fibre optics we could expand the possibilities. for example if white was 0-1 blue 1-2 yellow 2-3 and so on so forth we could expand the possibilities.

we cannot expand so far, on the 0 being off and 1 being on, so to introduce colours into fibre optic we could essentially assign colours a number to achieve different out comes.

we know fibre is faster than conventional powered connections. so this could increase performance also.",1637490058.0,"['new', 'cod', ',', 'apology', 'completely', 'impossible', 'even', 'incorrect', '.', 'believe', 'current', 'system', 'run', 'cpu', 'measure', 'amount', '0', '1', 'voltage', '.', 'however', 'change', 'process', 'fibre', 'optic', 'process', 'still', 'assign', 'process', '.', 'however', 'introduce', 'colour', 'fibre', 'optic', 'could', 'expand', 'possibility', '.', 'example', 'white', '0-1', 'blue', '1-2', 'yellow', '2-3', 'forth', 'could', 'expand', 'possibility', '.', 'expand', 'far', ',', '0', '1', ',', 'introduce', 'colour', 'fibre', 'optic', 'could', 'essentially', 'assign', 'colour', 'number', 'achieve', 'different', 'come', '.', 'know', 'fibre', 'faster', 'conventional', 'power', 'connection', '.', 'could', 'increase', 'performance', 'also', '.']","[[('new', 'JJ')], [('coding', 'VBG')], [(',', ',')], [('apologies', 'NNS')], [('completely', 'RB')], [('impossible', 'JJ')], [('even', 'RB')], [('incorrect', 'NN')], [('.', '.')], [('believe', 'VB')], [('current', 'JJ')], [('systems', 'NNS')], [('run', 'VB')], [('cpus', 'NN')], [('measuring', 'VBG')], [('amount', 'NN')], [('0s', 'CD')], [('1s', 'CD')], [('voltage', 'NN')], [('.', '.')], [('however', 'RB')], [('change', 'NN')], [('process', 'NN')], [('fibre', 'NN')], [('optic', 'JJ')], [('process', 'NN')], [('still', 'RB')], [('assigned', 'VBN')], [('process', 'NN')], [('.', '.')], [('however', 'RB')], [('introduced', 'VBN')], [('colour', 'NN')], [('fibre', 'NN')], [('optics', 'NNS')], [('could', 'MD')], [('expand', 'NN')], [('possibilities', 'NNS')], [('.', '.')], [('example', 'NN')], [('white', 'JJ')], [('0-1', 'NN')], [('blue', 'NN')], [('1-2', 'JJ')], [('yellow', 'NN')], [('2-3', 'JJ')], [('forth', 'NN')], [('could', 'MD')], [('expand', 'NN')], [('possibilities', 'NNS')], [('.', '.')], [('expand', 'NN')], [('far', 'RB')], [(',', ',')], [('0', 'CD')], [('1', 'CD')], [(',', ',')], [('introduce', 'NN')], [('colours', 'NNS')], [('fibre', 'NN')], [('optic', 'JJ')], [('could', 'MD')], [('essentially', 'RB')], [('assign', 'NN')], [('colours', 'NNS')], [('number', 'NN')], [('achieve', 'NN')], [('different', 'JJ')], [('comes', 'VBZ')], [('.', '.')], [('know', 'VB')], [('fibre', 'NN')], [('faster', 'NN')], [('conventional', 'JJ')], [('powered', 'VBN')], [('connections', 'NNS')], [('.', '.')], [('could', 'MD')], [('increase', 'NN')], [('performance', 'NN')], [('also', 'RB')], [('.', '.')]]","new cod , apology completely impossible even incorrect . believe current system run cpu measure amount 0 1 voltage . however change process fibre optic process still assign process . however introduce colour fibre optic could expand possibility . example white 0-1 blue 1-2 yellow 2-3 forth could expand possibility . expand far , 0 1 , introduce colour fibre optic could essentially assign colour number achieve different come . know fibre faster conventional power connection . could increase performance also .",5_cpu_computer_run_process,3
452,qyeqvw,Recommendations for a basic high-level language encryption / obfuscation algorithm?,,2,0.75,computerscience,https://www.reddit.com/r/computerscience/comments/qyeqvw/recommendations_for_a_basic_highlevel_language/,7,"hi i am making a game with a high-level scripting language that has pretty minimal support for bitwise-manipulation (if any). think something like lua. and i am making a game where the game has a secret message that is defined as a string literal, ""secret message"". this script can be scraped by data miners, string literals are not obfuscated at all, so if they got a hold of of the sourcecode, they would be able to read ""secret message"". what is a basic obfuscation algorithm i can use here to store the string literal in a scrambled-up format so that dataminers will have a harder time interpreting this message? i am sort of looking for something one step above a caesar cipher. any algorithms come to mind?",1637442185.0,"['hi', 'make', 'game', 'high-level', 'script', 'language', 'pretty', 'minimal', 'support', 'bitwise-manipulation', '(', ')', '.', 'think', 'something', 'like', 'lua', '.', 'make', 'game', 'game', 'secret', 'message', 'define', 'string', 'literal', ',', '``', 'secret', 'message', ""''"", '.', 'script', 'scrap', 'data', 'miner', ',', 'string', 'literal', 'obfuscate', ',', 'get', 'hold', 'sourcecode', ',', 'would', 'able', 'read', '``', 'secret', 'message', ""''"", '.', 'basic', 'obfuscation', 'algorithm', 'use', 'store', 'string', 'literal', 'scrambled-up', 'format', 'dataminers', 'harder', 'time', 'interpret', 'message', '?', 'sort', 'look', 'something', 'one', 'step', 'caesar', 'cipher', '.', 'algorithm', 'come', 'mind', '?']","[[('hi', 'NN')], [('making', 'VBG')], [('game', 'NN')], [('high-level', 'NN')], [('scripting', 'VBG')], [('language', 'NN')], [('pretty', 'RB')], [('minimal', 'NN')], [('support', 'NN')], [('bitwise-manipulation', 'NN')], [('(', '(')], [(')', ')')], [('.', '.')], [('think', 'NN')], [('something', 'NN')], [('like', 'IN')], [('lua', 'NN')], [('.', '.')], [('making', 'VBG')], [('game', 'NN')], [('game', 'NN')], [('secret', 'NN')], [('message', 'NN')], [('defined', 'VBN')], [('string', 'NN')], [('literal', 'JJ')], [(',', ',')], [('``', '``')], [('secret', 'NN')], [('message', 'NN')], [(""''"", ""''"")], [('.', '.')], [('script', 'NN')], [('scraped', 'VBD')], [('data', 'NNS')], [('miners', 'NNS')], [(',', ',')], [('string', 'NN')], [('literals', 'NNS')], [('obfuscated', 'VBN')], [(',', ',')], [('got', 'VBD')], [('hold', 'NN')], [('sourcecode', 'NN')], [(',', ',')], [('would', 'MD')], [('able', 'JJ')], [('read', 'NN')], [('``', '``')], [('secret', 'NN')], [('message', 'NN')], [(""''"", ""''"")], [('.', '.')], [('basic', 'JJ')], [('obfuscation', 'NN')], [('algorithm', 'NN')], [('use', 'NN')], [('store', 'NN')], [('string', 'NN')], [('literal', 'JJ')], [('scrambled-up', 'NN')], [('format', 'NN')], [('dataminers', 'NNS')], [('harder', 'NN')], [('time', 'NN')], [('interpreting', 'VBG')], [('message', 'NN')], [('?', '.')], [('sort', 'NN')], [('looking', 'VBG')], [('something', 'NN')], [('one', 'CD')], [('step', 'NN')], [('caesar', 'NN')], [('cipher', 'NN')], [('.', '.')], [('algorithms', 'NN')], [('come', 'VB')], [('mind', 'NN')], [('?', '.')]]","hi make game high-level script language pretty minimal support bitwise-manipulation ( ) . think something like lua . make game game secret message define string literal , `` secret message '' . script scrap data miner , string literal obfuscate , get hold sourcecode , would able read `` secret message '' . basic obfuscation algorithm use store string literal scrambled-up format dataminers harder time interpret message ? sort look something one step caesar cipher . algorithm come mind ?",8_language_one_program_write,2
454,qy34w1,Does Encryption work both ways?,Discussion,7,0.73,computerscience,https://www.reddit.com/r/computerscience/comments/qy34w1/does_encryption_work_both_ways/,19,"here is an example. if a folder is encrypted, it is obviously protected from outsiders trying to get in. but let us say there was a virus inside of an encrypted container, would it be able to escape this container or does the encryption keep it ""imprisoned""? my understanding is that encryption garbles all of the data so surely protection does work both ways?",1637405141.0,"['example', '.', 'folder', 'encrypt', ',', 'obviously', 'protect', 'outsider', 'try', 'get', '.', 'let', 'u', 'say', 'virus', 'inside', 'encrypt', 'container', ',', 'would', 'able', 'escape', 'container', 'encryption', 'keep', '``', 'imprison', ""''"", '?', 'understand', 'encryption', 'garbles', 'data', 'surely', 'protection', 'work', 'way', '?']","[[('example', 'NN')], [('.', '.')], [('folder', 'NN')], [('encrypted', 'VBN')], [(',', ',')], [('obviously', 'RB')], [('protected', 'VBN')], [('outsiders', 'NNS')], [('trying', 'VBG')], [('get', 'VB')], [('.', '.')], [('let', 'VB')], [('us', 'PRP')], [('say', 'VB')], [('virus', 'NN')], [('inside', 'IN')], [('encrypted', 'VBN')], [('container', 'NN')], [(',', ',')], [('would', 'MD')], [('able', 'JJ')], [('escape', 'NN')], [('container', 'NN')], [('encryption', 'NN')], [('keep', 'VB')], [('``', '``')], [('imprisoned', 'VBN')], [(""''"", ""''"")], [('?', '.')], [('understanding', 'VBG')], [('encryption', 'NN')], [('garbles', 'NNS')], [('data', 'NNS')], [('surely', 'RB')], [('protection', 'NN')], [('work', 'NN')], [('ways', 'NNS')], [('?', '.')]]","example . folder encrypt , obviously protect outsider try get . let u say virus inside encrypt container , would able escape container encryption keep `` imprison '' ? understand encryption garbles data surely protection work way ?",6_server_packet_key_hash,2
455,qxixkk,Why are some people so excited about functional programming?,Discussion,60,0.87,computerscience,https://www.reddit.com/r/computerscience/comments/qxixkk/why_are_some_people_so_excited_about_functional/,59,"it seems like fp can be good at certain things, but i do not understand how it could work for more complex systems. the languages that fp is generally used in are annoying to write software in, as well. 

why do some people like it so much and act like it is the greatest?",1637336708.0,"['seem', 'like', 'fp', 'good', 'certain', 'thing', ',', 'understand', 'could', 'work', 'complex', 'system', '.', 'language', 'fp', 'generally', 'use', 'annoy', 'write', 'software', ',', 'well', '.', 'people', 'like', 'much', 'act', 'like', 'great', '?']","[[('seems', 'VBZ')], [('like', 'IN')], [('fp', 'NN')], [('good', 'JJ')], [('certain', 'JJ')], [('things', 'NNS')], [(',', ',')], [('understand', 'NN')], [('could', 'MD')], [('work', 'NN')], [('complex', 'JJ')], [('systems', 'NNS')], [('.', '.')], [('languages', 'NNS')], [('fp', 'NN')], [('generally', 'RB')], [('used', 'VBN')], [('annoying', 'VBG')], [('write', 'NN')], [('software', 'NN')], [(',', ',')], [('well', 'RB')], [('.', '.')], [('people', 'NNS')], [('like', 'IN')], [('much', 'JJ')], [('act', 'NN')], [('like', 'IN')], [('greatest', 'JJS')], [('?', '.')]]","seem like fp good certain thing , understand could work complex system . language fp generally use annoy write software , well . people like much act like great ?",8_language_one_program_write,3
456,qxv7ln,"Why cant a RAID 1 (mirroring) have twice the write speed of a single drive, the way it has twice the read speed?",Discussion,5,0.67,computerscience,https://www.reddit.com/r/computerscience/comments/qxv7ln/why_cant_a_raid_1_mirroring_have_twice_the_write/,7,"i understand how it currently works, and subsequently why it cannot write twice the speed. my question more specifically, is why does not it work a different way where that is possible. for example, if there is a 100mb file, instead of writing the 100mb to both drives simultaneously, why does not it write 50mb (different halves of the data) at the same time, and then virtually treat it as one complete file as it then continues to write the full file on both drives in the background after done? does writing 1 bit take up 1 bit of potential reading or something? even then, the background writing can resume after reading is done at a later time if that is the reason. the only downside i see to this is that you risk losing that particular file if one drive fails before the completed write takes place, but that seems like a minor sacrifice for the improved performance.",1637373882.0,"['understand', 'currently', 'work', ',', 'subsequently', 'write', 'twice', 'speed', '.', 'question', 'specifically', ',', 'work', 'different', 'way', 'possible', '.', 'example', ',', '100mb', 'file', ',', 'instead', 'write', '100mb', 'drive', 'simultaneously', ',', 'write', '50mb', '(', 'different', 'half', 'data', ')', 'time', ',', 'virtually', 'treat', 'one', 'complete', 'file', 'continue', 'write', 'full', 'file', 'drive', 'background', 'do', '?', 'write', '1', 'bit', 'take', '1', 'bit', 'potential', 'reading', 'something', '?', 'even', ',', 'background', 'write', 'resume', 'reading', 'do', 'later', 'time', 'reason', '.', 'downside', 'see', 'risk', 'lose', 'particular', 'file', 'one', 'drive', 'fails', 'complete', 'write', 'take', 'place', ',', 'seem', 'like', 'minor', 'sacrifice', 'improve', 'performance', '.']","[[('understand', 'NN')], [('currently', 'RB')], [('works', 'NNS')], [(',', ',')], [('subsequently', 'RB')], [('write', 'NN')], [('twice', 'RB')], [('speed', 'NN')], [('.', '.')], [('question', 'NN')], [('specifically', 'RB')], [(',', ',')], [('work', 'NN')], [('different', 'JJ')], [('way', 'NN')], [('possible', 'JJ')], [('.', '.')], [('example', 'NN')], [(',', ',')], [('100mb', 'CD')], [('file', 'NN')], [(',', ',')], [('instead', 'RB')], [('writing', 'VBG')], [('100mb', 'CD')], [('drives', 'NNS')], [('simultaneously', 'RB')], [(',', ',')], [('write', 'NN')], [('50mb', 'CD')], [('(', '(')], [('different', 'JJ')], [('halves', 'NNS')], [('data', 'NNS')], [(')', ')')], [('time', 'NN')], [(',', ',')], [('virtually', 'RB')], [('treat', 'NN')], [('one', 'CD')], [('complete', 'JJ')], [('file', 'NN')], [('continues', 'VBZ')], [('write', 'NN')], [('full', 'JJ')], [('file', 'NN')], [('drives', 'NNS')], [('background', 'NN')], [('done', 'VBN')], [('?', '.')], [('writing', 'VBG')], [('1', 'CD')], [('bit', 'NN')], [('take', 'VB')], [('1', 'CD')], [('bit', 'NN')], [('potential', 'JJ')], [('reading', 'NN')], [('something', 'NN')], [('?', '.')], [('even', 'RB')], [(',', ',')], [('background', 'NN')], [('writing', 'VBG')], [('resume', 'NN')], [('reading', 'NN')], [('done', 'VBN')], [('later', 'RB')], [('time', 'NN')], [('reason', 'NN')], [('.', '.')], [('downside', 'NN')], [('see', 'VB')], [('risk', 'NN')], [('losing', 'VBG')], [('particular', 'JJ')], [('file', 'NN')], [('one', 'CD')], [('drive', 'NN')], [('fails', 'NNS')], [('completed', 'VBN')], [('write', 'NN')], [('takes', 'VBZ')], [('place', 'NN')], [(',', ',')], [('seems', 'VBZ')], [('like', 'IN')], [('minor', 'NN')], [('sacrifice', 'NN')], [('improved', 'VBN')], [('performance', 'NN')], [('.', '.')]]","understand currently work , subsequently write twice speed . question specifically , work different way possible . example , 100mb file , instead write 100mb drive simultaneously , write 50mb ( different half data ) time , virtually treat one complete file continue write full file drive background do ? write 1 bit take 1 bit potential reading something ? even , background write resume reading do later time reason . downside see risk lose particular file one drive fails complete write take place , seem like minor sacrifice improve performance .",-1_abazbz2abz_2520_problem_use,2
457,qy32gm,Why does the routing table system work?,,0,0.5,computerscience,https://www.reddit.com/r/computerscience/comments/qy32gm/why_does_the_routing_table_system_work/,1,"hi all, i have recently been looking a bit into networking and trying to understand it a bit more but routing tables have me a bit stuck. i think that i understand how they work by i do not have the faintest idea why.

so as i understand it, a packet comes into a router and the destination ip address is and’ed with each of the subnet masks in the table and the result of each of these is compared with the destination ip address of each entry in the table. if there are any matches between the result of this and calculation and destination ip addresses then the packet is forwarded to this destination. if there are no matches the packet goes to the default destination and if there is more than one matches then the packet goes to the destination with the highest subnet mask.

my question is, why does this work? how does this form of selecting destinations make sure packets make it to their destination. how does this stop data packets going round in circles and taking ages to make it to their destination.

i hope that i have been clear, but please let me know if i should clarify anything.

thank you so much for any help here :)",1637404847.0,"['hi', ',', 'recently', 'look', 'bit', 'networking', 'try', 'understand', 'bit', 'rout', 'table', 'bit', 'stuck', '.', 'think', 'understand', 'work', 'faintest', 'idea', '.', 'understand', ',', 'packet', 'come', 'router', 'destination', 'ip', 'address', '’', 'ed', 'subnet', 'mask', 'table', 'result', 'compare', 'destination', 'ip', 'address', 'entry', 'table', '.', 'match', 'result', 'calculation', 'destination', 'ip', 'address', 'packet', 'forward', 'destination', '.', 'match', 'packet', 'go', 'default', 'destination', 'one', 'match', 'packet', 'go', 'destination', 'high', 'subnet', 'mask', '.', 'question', ',', 'work', '?', 'form', 'select', 'destination', 'make', 'sure', 'packet', 'make', 'destination', '.', 'stop', 'data', 'packet', 'go', 'round', 'circle', 'take', 'age', 'make', 'destination', '.', 'hope', 'clear', ',', 'please', 'let', 'know', 'clarify', 'anything', '.', 'thank', 'much', 'help', ':', ')']","[[('hi', 'NN')], [(',', ',')], [('recently', 'RB')], [('looking', 'VBG')], [('bit', 'NN')], [('networking', 'NN')], [('trying', 'VBG')], [('understand', 'NN')], [('bit', 'NN')], [('routing', 'VBG')], [('tables', 'NNS')], [('bit', 'NN')], [('stuck', 'NN')], [('.', '.')], [('think', 'NN')], [('understand', 'NN')], [('work', 'NN')], [('faintest', 'NN')], [('idea', 'NN')], [('.', '.')], [('understand', 'NN')], [(',', ',')], [('packet', 'NN')], [('comes', 'VBZ')], [('router', 'NN')], [('destination', 'NN')], [('ip', 'NN')], [('address', 'NN')], [('’', 'NN')], [('ed', 'NN')], [('subnet', 'NN')], [('masks', 'NNS')], [('table', 'NN')], [('result', 'NN')], [('compared', 'VBN')], [('destination', 'NN')], [('ip', 'NN')], [('address', 'NN')], [('entry', 'NN')], [('table', 'NN')], [('.', '.')], [('matches', 'NNS')], [('result', 'NN')], [('calculation', 'NN')], [('destination', 'NN')], [('ip', 'NN')], [('addresses', 'NNS')], [('packet', 'NN')], [('forwarded', 'VBN')], [('destination', 'NN')], [('.', '.')], [('matches', 'NNS')], [('packet', 'NN')], [('goes', 'VBZ')], [('default', 'NN')], [('destination', 'NN')], [('one', 'CD')], [('matches', 'NNS')], [('packet', 'NN')], [('goes', 'VBZ')], [('destination', 'NN')], [('highest', 'JJS')], [('subnet', 'NN')], [('mask', 'NN')], [('.', '.')], [('question', 'NN')], [(',', ',')], [('work', 'NN')], [('?', '.')], [('form', 'NN')], [('selecting', 'VBG')], [('destinations', 'NNS')], [('make', 'VB')], [('sure', 'NN')], [('packets', 'NNS')], [('make', 'VB')], [('destination', 'NN')], [('.', '.')], [('stop', 'NN')], [('data', 'NNS')], [('packets', 'NNS')], [('going', 'VBG')], [('round', 'NN')], [('circles', 'NNS')], [('taking', 'VBG')], [('ages', 'NNS')], [('make', 'VB')], [('destination', 'NN')], [('.', '.')], [('hope', 'NN')], [('clear', 'JJ')], [(',', ',')], [('please', 'NN')], [('let', 'VB')], [('know', 'VB')], [('clarify', 'NN')], [('anything', 'NN')], [('.', '.')], [('thank', 'NN')], [('much', 'JJ')], [('help', 'NN')], [(':', ':')], [(')', ')')]]","hi , recently look bit networking try understand bit rout table bit stuck . think understand work faintest idea . understand , packet come router destination ip address ’ ed subnet mask table result compare destination ip address entry table . match result calculation destination ip address packet forward destination . match packet go default destination one match packet go destination high subnet mask . question , work ? form select destination make sure packet make destination . stop data packet go round circle take age make destination . hope clear , please let know clarify anything . thank much help : )",6_server_packet_key_hash,3
458,qxh10d,Learning C again,,12,0.76,computerscience,https://www.reddit.com/r/computerscience/comments/qxh10d/learning_c_again/,11,i have learned c previously from dennis ritchie book. but as now i have learned the concepts of compiler design  ( and other theoretical cs subjects ) i again want to learn c but with some compiler design concepts( and or other cs concepts ). like when i am doing something i want to know whole thing behind it relating to compiler design concepts. i do not know whether i have asked clearly or not. but if you get it please tell the resources for it. i want to know whole process that follows running a code.,1637331102.0,"['learn', 'c', 'previously', 'dennis', 'ritchie', 'book', '.', 'learn', 'concept', 'compiler', 'design', '(', 'theoretical', 'c', 'subject', ')', 'want', 'learn', 'c', 'compiler', 'design', 'concept', '(', 'c', 'concept', ')', '.', 'like', 'something', 'want', 'know', 'whole', 'thing', 'behind', 'relate', 'compiler', 'design', 'concept', '.', 'know', 'whether', 'ask', 'clearly', '.', 'get', 'please', 'tell', 'resource', '.', 'want', 'know', 'whole', 'process', 'follow', 'run', 'code', '.']","[[('learned', 'VBN')], [('c', 'NNS')], [('previously', 'RB')], [('dennis', 'NN')], [('ritchie', 'NN')], [('book', 'NN')], [('.', '.')], [('learned', 'VBN')], [('concepts', 'NNS')], [('compiler', 'NN')], [('design', 'NN')], [('(', '(')], [('theoretical', 'JJ')], [('cs', 'NN')], [('subjects', 'NNS')], [(')', ')')], [('want', 'NN')], [('learn', 'NN')], [('c', 'NNS')], [('compiler', 'NN')], [('design', 'NN')], [('concepts', 'NNS')], [('(', '(')], [('cs', 'NN')], [('concepts', 'NNS')], [(')', ')')], [('.', '.')], [('like', 'IN')], [('something', 'NN')], [('want', 'NN')], [('know', 'VB')], [('whole', 'JJ')], [('thing', 'NN')], [('behind', 'IN')], [('relating', 'VBG')], [('compiler', 'NN')], [('design', 'NN')], [('concepts', 'NNS')], [('.', '.')], [('know', 'VB')], [('whether', 'IN')], [('asked', 'VBN')], [('clearly', 'RB')], [('.', '.')], [('get', 'VB')], [('please', 'NN')], [('tell', 'NN')], [('resources', 'NNS')], [('.', '.')], [('want', 'NN')], [('know', 'VB')], [('whole', 'JJ')], [('process', 'NN')], [('follows', 'VBZ')], [('running', 'VBG')], [('code', 'NN')], [('.', '.')]]",learn c previously dennis ritchie book . learn concept compiler design ( theoretical c subject ) want learn c compiler design concept ( c concept ) . like something want know whole thing behind relate compiler design concept . know whether ask clearly . get please tell resource . want know whole process follow run code .,-1_abazbz2abz_2520_problem_use,4
460,qxl1o1,How is data stored in a DHT?,Help,1,1.0,computerscience,https://www.reddit.com/r/computerscience/comments/qxl1o1/how_is_data_stored_in_a_dht/,3,"i have been learning about dhts (distributed hash tables), and i understand that data is distributed across many nodes (or peers in p2p networks). i cannot seem to find any information on how data is stored in each node though. is data stored in blob stores in each node? or sql databases? am i understanding this correctly?",1637342787.0,"['learn', 'dhts', '(', 'distribute', 'hash', 'table', ')', ',', 'understand', 'data', 'distribute', 'across', 'many', 'node', '(', 'peer', 'p2p', 'network', ')', '.', 'seem', 'find', 'information', 'data', 'store', 'node', 'though', '.', 'data', 'store', 'blob', 'store', 'node', '?', 'sql', 'database', '?', 'understand', 'correctly', '?']","[[('learning', 'VBG')], [('dhts', 'NNS')], [('(', '(')], [('distributed', 'VBN')], [('hash', 'NN')], [('tables', 'NNS')], [(')', ')')], [(',', ',')], [('understand', 'NN')], [('data', 'NNS')], [('distributed', 'VBN')], [('across', 'IN')], [('many', 'JJ')], [('nodes', 'NNS')], [('(', '(')], [('peers', 'NNS')], [('p2p', 'NN')], [('networks', 'NNS')], [(')', ')')], [('.', '.')], [('seem', 'NN')], [('find', 'VB')], [('information', 'NN')], [('data', 'NNS')], [('stored', 'VBN')], [('node', 'NN')], [('though', 'IN')], [('.', '.')], [('data', 'NNS')], [('stored', 'VBN')], [('blob', 'NN')], [('stores', 'NNS')], [('node', 'NN')], [('?', '.')], [('sql', 'NN')], [('databases', 'NNS')], [('?', '.')], [('understanding', 'VBG')], [('correctly', 'RB')], [('?', '.')]]","learn dhts ( distribute hash table ) , understand data distribute across many node ( peer p2p network ) . seem find information data store node though . data store blob store node ? sql database ? understand correctly ?",6_server_packet_key_hash,3
461,qx22or,Are LeetCode questions poorly grouped in their difficulty tiers?,Discussion,2,0.75,computerscience,https://www.reddit.com/r/computerscience/comments/qx22or/are_leetcode_questions_poorly_grouped_in_their/,3,"i have done my fair share of leetcode and cannot help but notice that ""easy"" questions are sometimes quite difficult. medium questions are generally more difficult but many of them just use slightly more advanced data structures and the actual concept behind the question is very straightforward. 

i had never even attempted a hard question since many mediums rack my brain for an hour or two, most of the time i need to look solutions up because there is a new approach to learn. i tried my first ""hard"" question the other day and i swear it was mis-labeled and could definitely be placed in ""easy""

i just solved this graph-ish question and it was labeled as easy but i had to use an iterative breadth-first search approach? that seems slightly more advanced than inverting a binary tree or reversing a string.

the hard question i am referencing is [median of two sorted arrays](-of-two-sorted-arrays/).

this was my solution for the ""easy"" question, i am going to far more complex than the median of two arrays.

    class solution {
        public int[][] floodfill(int[][] image, int sr, int sc, int newcolor) {
            int row = image.length, col = image[0].length; // store graph bounds
            int target = image[sr][sc];                    // store value we are after
            queue<int[]> traverse = new linkedlist<>();
            boolean[][] visited = new boolean[row][col];   // visited nodes
            int[][] directions = new int[][]{
                {0,1},{1,0},{0,-1},{-1,0}                  // traversal directions
            };       
            int[] tmp = {sr,sc};
            traverse.offer(tmp);                           // put start node in traversal queue
            
            while(traverse.size()>0){
                int[] node = traverse.poll();              // grab next node
                int m = node[0], n = node[1];
                visited[m][n] = true;                      // visited = true
                image[m][n] = -1;                          // set value to change color
                
                for(int[] dir : directions){
                    int a=m+dir[0]; int b=n+dir[1];
                    
                    if(   a<0 || a>=row
                       || b<0 || b>=col
                       || visited[a][b]==true
                       || image[a][b] != target )          // disqualify node for traversal
                        continue;
                    else{
                        int[] add = {a,b};
                        traverse.offer(add);              // satisfies conditions put in traverse queue
                    }
                }
            }
            
            for(int i = 0; i < image.length; i++){
                for(int j = 0; j < image[0].length; j++){
                    if(image[i][j]==-1)
                        image[i][j]=newcolor;
                }
            }
            
            return image;
        }
    }",1637276565.0,"['do', 'fair', 'share', 'leetcode', 'help', 'notice', '``', 'easy', ""''"", 'question', 'sometimes', 'quite', 'difficult', '.', 'medium', 'question', 'generally', 'difficult', 'many', 'use', 'slightly', 'advanced', 'data', 'structure', 'actual', 'concept', 'behind', 'question', 'straightforward', '.', 'never', 'even', 'attempt', 'hard', 'question', 'since', 'many', 'medium', 'rack', 'brain', 'hour', 'two', ',', 'time', 'need', 'look', 'solution', 'new', 'approach', 'learn', '.', 'try', 'first', '``', 'hard', ""''"", 'question', 'day', 'swear', 'mis-labeled', 'could', 'definitely', 'place', '``', 'easy', ""''"", 'solve', 'graph-ish', 'question', 'label', 'easy', 'use', 'iterative', 'breadth-first', 'search', 'approach', '?', 'seem', 'slightly', 'advanced', 'invert', 'binary', 'tree', 'reverse', 'string', '.', 'hard', 'question', 'reference', '[', 'median', 'two', 'sort', 'array', ']', '(', '-of-two-sorted-arrays/', ')', '.', 'solution', '``', 'easy', ""''"", 'question', ',', 'go', 'far', 'complex', 'median', 'two', 'array', '.', 'class', 'solution', '{', 'public', 'int', '[', ']', '[', ']', 'floodfill', '(', 'int', '[', ']', '[', ']', 'image', ',', 'int', 'sr', ',', 'int', 'sc', ',', 'int', 'newcolor', ')', '{', 'int', 'row', '=', 'image.length', ',', 'col', '=', 'image', '[', '0', ']', '.length', ';', '//', 'store', 'graph', 'bound', 'int', 'target', '=', 'image', '[', 'sr', ']', '[', 'sc', ']', ';', '//', 'store', 'value', 'queue', '<', 'int', '[', ']', '>', 'traverse', '=', 'new', 'linkedlist', '<', '>', '(', ')', ';', 'boolean', '[', ']', '[', ']', 'visit', '=', 'new', 'boolean', '[', 'row', ']', '[', 'col', ']', ';', '//', 'visit', 'node', 'int', '[', ']', '[', ']', 'direction', '=', 'new', 'int', '[', ']', '[', ']', '{', '{', '0,1', '}', ',', '{', '1,0', '}', ',', '{', '0', ',', '-1', '}', ',', '{', '-1,0', '}', '//', 'traversal', 'direction', '}', ';', 'int', '[', ']', 'tmp', '=', '{', 'sr', ',', 'sc', '}', ';', 'traverse.offer', '(', 'tmp', ')', ';', '//', 'put', 'start', 'node', 'traversal', 'queue', '(', 'traverse.size', '(', ')', '>', '0', ')', '{', 'int', '[', ']', 'node', '=', 'traverse.poll', '(', ')', ';', '//', 'grab', 'next', 'node', 'int', '=', 'node', '[', '0', ']', ',', 'n', '=', 'node', '[', '1', ']', ';', 'visit', '[', ']', '[', 'n', ']', '=', 'true', ';', '//', 'visit', '=', 'true', 'image', '[', ']', '[', 'n', ']', '=', '-1', ';', '//', 'set', 'value', 'change', 'color', '(', 'int', '[', ']', 'dir', ':', 'direction', ')', '{', 'int', 'a=m+dir', '[', '0', ']', ';', 'int', 'b=n+dir', '[', '1', ']', ';', '(', '<', '0', '||', '>', '=row', '||', 'b', '<', '0', '||', 'b', '>', '=col', '||', 'visit', '[', ']', '[', 'b', ']', '==true', '||', 'image', '[', ']', '[', 'b', ']', '!', '=', 'target', ')', '//', 'disqualify', 'node', 'traversal', 'continue', ';', 'else', '{', 'int', '[', ']', 'add', '=', '{', ',', 'b', '}', ';', 'traverse.offer', '(', 'add', ')', ';', '//', 'satisfies', 'condition', 'put', 'traverse', 'queue', '}', '}', '}', '(', 'int', '=', '0', ';', '<', 'image.length', ';', 'i++', ')', '{', '(', 'int', 'j', '=', '0', ';', 'j', '<', 'image', '[', '0', ']', '.length', ';', 'j++', ')', '{', '(', 'image', '[', ']', '[', 'j', ']', '==-1', ')', 'image', '[', ']', '[', 'j', ']', '=newcolor', ';', '}', '}', 'return', 'image', ';', '}', '}']","[[('done', 'VBN')], [('fair', 'NN')], [('share', 'NN')], [('leetcode', 'NN')], [('help', 'NN')], [('notice', 'NN')], [('``', '``')], [('easy', 'JJ')], [(""''"", ""''"")], [('questions', 'NNS')], [('sometimes', 'RB')], [('quite', 'RB')], [('difficult', 'JJ')], [('.', '.')], [('medium', 'NN')], [('questions', 'NNS')], [('generally', 'RB')], [('difficult', 'JJ')], [('many', 'JJ')], [('use', 'NN')], [('slightly', 'RB')], [('advanced', 'JJ')], [('data', 'NNS')], [('structures', 'NNS')], [('actual', 'JJ')], [('concept', 'NN')], [('behind', 'IN')], [('question', 'NN')], [('straightforward', 'NN')], [('.', '.')], [('never', 'RB')], [('even', 'RB')], [('attempted', 'VBN')], [('hard', 'JJ')], [('question', 'NN')], [('since', 'IN')], [('many', 'JJ')], [('mediums', 'NNS')], [('rack', 'NN')], [('brain', 'NN')], [('hour', 'NN')], [('two', 'CD')], [(',', ',')], [('time', 'NN')], [('need', 'NN')], [('look', 'NN')], [('solutions', 'NNS')], [('new', 'JJ')], [('approach', 'NN')], [('learn', 'NN')], [('.', '.')], [('tried', 'VBN')], [('first', 'RB')], [('``', '``')], [('hard', 'JJ')], [(""''"", ""''"")], [('question', 'NN')], [('day', 'NN')], [('swear', 'NN')], [('mis-labeled', 'JJ')], [('could', 'MD')], [('definitely', 'RB')], [('placed', 'VBN')], [('``', '``')], [('easy', 'JJ')], [(""''"", ""''"")], [('solved', 'VBN')], [('graph-ish', 'JJ')], [('question', 'NN')], [('labeled', 'VBN')], [('easy', 'JJ')], [('use', 'NN')], [('iterative', 'JJ')], [('breadth-first', 'JJ')], [('search', 'NN')], [('approach', 'NN')], [('?', '.')], [('seems', 'VBZ')], [('slightly', 'RB')], [('advanced', 'JJ')], [('inverting', 'VBG')], [('binary', 'NN')], [('tree', 'NN')], [('reversing', 'VBG')], [('string', 'NN')], [('.', '.')], [('hard', 'JJ')], [('question', 'NN')], [('referencing', 'VBG')], [('[', 'NN')], [('median', 'NN')], [('two', 'CD')], [('sorted', 'VBN')], [('arrays', 'NNS')], [(']', 'NN')], [('(', '(')], [('-of-two-sorted-arrays/', 'NN')], [(')', ')')], [('.', '.')], [('solution', 'NN')], [('``', '``')], [('easy', 'JJ')], [(""''"", ""''"")], [('question', 'NN')], [(',', ',')], [('going', 'VBG')], [('far', 'RB')], [('complex', 'JJ')], [('median', 'NN')], [('two', 'CD')], [('arrays', 'NNS')], [('.', '.')], [('class', 'NN')], [('solution', 'NN')], [('{', '(')], [('public', 'NN')], [('int', 'NN')], [('[', 'NN')], [(']', 'NN')], [('[', 'NN')], [(']', 'NN')], [('floodfill', 'NN')], [('(', '(')], [('int', 'NN')], [('[', 'NN')], [(']', 'NN')], [('[', 'NN')], [(']', 'NN')], [('image', 'NN')], [(',', ',')], [('int', 'NN')], [('sr', 'NN')], [(',', ',')], [('int', 'NN')], [('sc', 'NN')], [(',', ',')], [('int', 'NN')], [('newcolor', 'NN')], [(')', ')')], [('{', '(')], [('int', 'NN')], [('row', 'NN')], [('=', 'NN')], [('image.length', 'NN')], [(',', ',')], [('col', 'NN')], [('=', 'NN')], [('image', 'NN')], [('[', 'NN')], [('0', 'CD')], [(']', 'NN')], [('.length', 'NN')], [(';', ':')], [('//', 'NN')], [('store', 'NN')], [('graph', 'NN')], [('bounds', 'NNS')], [('int', 'NN')], [('target', 'NN')], [('=', 'NN')], [('image', 'NN')], [('[', 'NN')], [('sr', 'NN')], [(']', 'NN')], [('[', 'NN')], [('sc', 'NN')], [(']', 'NN')], [(';', ':')], [('//', 'NN')], [('store', 'NN')], [('value', 'NN')], [('queue', 'NN')], [('<', 'NN')], [('int', 'NN')], [('[', 'NN')], [(']', 'NN')], [('>', 'NN')], [('traverse', 'NN')], [('=', 'NN')], [('new', 'JJ')], [('linkedlist', 'NN')], [('<', 'NN')], [('>', 'NN')], [('(', '(')], [(')', ')')], [(';', ':')], [('boolean', 'NN')], [('[', 'NN')], [(']', 'NN')], [('[', 'NN')], [(']', 'NN')], [('visited', 'VBN')], [('=', 'NN')], [('new', 'JJ')], [('boolean', 'NN')], [('[', 'NN')], [('row', 'NN')], [(']', 'NN')], [('[', 'NN')], [('col', 'NN')], [(']', 'NN')], [(';', ':')], [('//', 'NN')], [('visited', 'VBN')], [('nodes', 'NNS')], [('int', 'NN')], [('[', 'NN')], [(']', 'NN')], [('[', 'NN')], [(']', 'NN')], [('directions', 'NNS')], [('=', 'NN')], [('new', 'JJ')], [('int', 'NN')], [('[', 'NN')], [(']', 'NN')], [('[', 'NN')], [(']', 'NN')], [('{', '(')], [('{', '(')], [('0,1', 'CD')], [('}', ')')], [(',', ',')], [('{', '(')], [('1,0', 'CD')], [('}', ')')], [(',', ',')], [('{', '(')], [('0', 'CD')], [(',', ',')], [('-1', 'NN')], [('}', ')')], [(',', ',')], [('{', '(')], [('-1,0', 'NN')], [('}', ')')], [('//', 'NN')], [('traversal', 'NN')], [('directions', 'NNS')], [('}', ')')], [(';', ':')], [('int', 'NN')], [('[', 'NN')], [(']', 'NN')], [('tmp', 'NN')], [('=', 'NN')], [('{', '(')], [('sr', 'NN')], [(',', ',')], [('sc', 'NN')], [('}', ')')], [(';', ':')], [('traverse.offer', 'NN')], [('(', '(')], [('tmp', 'NN')], [(')', ')')], [(';', ':')], [('//', 'NN')], [('put', 'NN')], [('start', 'NN')], [('node', 'NN')], [('traversal', 'NN')], [('queue', 'NN')], [('(', '(')], [('traverse.size', 'VB')], [('(', '(')], [(')', ')')], [('>', 'NN')], [('0', 'CD')], [(')', ')')], [('{', '(')], [('int', 'NN')], [('[', 'NN')], [(']', 'NN')], [('node', 'NN')], [('=', 'NN')], [('traverse.poll', 'NN')], [('(', '(')], [(')', ')')], [(';', ':')], [('//', 'NN')], [('grab', 'NN')], [('next', 'JJ')], [('node', 'NN')], [('int', 'NN')], [('=', 'NN')], [('node', 'NN')], [('[', 'NN')], [('0', 'CD')], [(']', 'NN')], [(',', ',')], [('n', 'NN')], [('=', 'NN')], [('node', 'NN')], [('[', 'NN')], [('1', 'CD')], [(']', 'NN')], [(';', ':')], [('visited', 'VBN')], [('[', 'NN')], [(']', 'NN')], [('[', 'NN')], [('n', 'NN')], [(']', 'NN')], [('=', 'NN')], [('true', 'JJ')], [(';', ':')], [('//', 'NN')], [('visited', 'VBN')], [('=', 'NN')], [('true', 'JJ')], [('image', 'NN')], [('[', 'NN')], [(']', 'NN')], [('[', 'NN')], [('n', 'NN')], [(']', 'NN')], [('=', 'NN')], [('-1', 'NN')], [(';', ':')], [('//', 'NN')], [('set', 'NN')], [('value', 'NN')], [('change', 'NN')], [('color', 'NN')], [('(', '(')], [('int', 'NN')], [('[', 'NN')], [(']', 'NN')], [('dir', 'NN')], [(':', ':')], [('directions', 'NNS')], [(')', ')')], [('{', '(')], [('int', 'NN')], [('a=m+dir', 'NN')], [('[', 'NN')], [('0', 'CD')], [(']', 'NN')], [(';', ':')], [('int', 'NN')], [('b=n+dir', 'NN')], [('[', 'NN')], [('1', 'CD')], [(']', 'NN')], [(';', ':')], [('(', '(')], [('<', 'NN')], [('0', 'CD')], [('||', 'NN')], [('>', 'NN')], [('=row', 'NN')], [('||', 'NN')], [('b', 'NN')], [('<', 'NN')], [('0', 'CD')], [('||', 'NN')], [('b', 'NN')], [('>', 'NN')], [('=col', 'NN')], [('||', 'NN')], [('visited', 'VBN')], [('[', 'NN')], [(']', 'NN')], [('[', 'NN')], [('b', 'NN')], [(']', 'NN')], [('==true', 'NN')], [('||', 'NN')], [('image', 'NN')], [('[', 'NN')], [(']', 'NN')], [('[', 'NN')], [('b', 'NN')], [(']', 'NN')], [('!', '.')], [('=', 'NN')], [('target', 'NN')], [(')', ')')], [('//', 'NN')], [('disqualify', 'NN')], [('node', 'NN')], [('traversal', 'NN')], [('continue', 'NN')], [(';', ':')], [('else', 'RB')], [('{', '(')], [('int', 'NN')], [('[', 'NN')], [(']', 'NN')], [('add', 'VB')], [('=', 'NN')], [('{', '(')], [(',', ',')], [('b', 'NN')], [('}', ')')], [(';', ':')], [('traverse.offer', 'NN')], [('(', '(')], [('add', 'VB')], [(')', ')')], [(';', ':')], [('//', 'NN')], [('satisfies', 'NNS')], [('conditions', 'NNS')], [('put', 'NN')], [('traverse', 'NN')], [('queue', 'NN')], [('}', ')')], [('}', ')')], [('}', ')')], [('(', '(')], [('int', 'NN')], [('=', 'NN')], [('0', 'CD')], [(';', ':')], [('<', 'NN')], [('image.length', 'NN')], [(';', ':')], [('i++', 'NN')], [(')', ')')], [('{', '(')], [('(', '(')], [('int', 'NN')], [('j', 'NN')], [('=', 'NN')], [('0', 'CD')], [(';', ':')], [('j', 'NN')], [('<', 'NN')], [('image', 'NN')], [('[', 'NN')], [('0', 'CD')], [(']', 'NN')], [('.length', 'NN')], [(';', ':')], [('j++', 'NN')], [(')', ')')], [('{', '(')], [('(', '(')], [('image', 'NN')], [('[', 'NN')], [(']', 'NN')], [('[', 'NN')], [('j', 'NN')], [(']', 'NN')], [('==-1', 'NN')], [(')', ')')], [('image', 'NN')], [('[', 'NN')], [(']', 'NN')], [('[', 'NN')], [('j', 'NN')], [(']', 'NN')], [('=newcolor', 'NN')], [(';', ':')], [('}', ')')], [('}', ')')], [('return', 'NN')], [('image', 'NN')], [(';', ':')], [('}', ')')], [('}', ')')]]","do fair share leetcode help notice `` easy '' question sometimes quite difficult . medium question generally difficult many use slightly advanced data structure actual concept behind question straightforward . never even attempt hard question since many medium rack brain hour two , time need look solution new approach learn . try first `` hard '' question day swear mis-labeled could definitely place `` easy '' solve graph-ish question label easy use iterative breadth-first search approach ? seem slightly advanced invert binary tree reverse string . hard question reference [ median two sort array ] ( -of-two-sorted-arrays/ ) . solution `` easy '' question , go far complex median two array . class solution { public int [ ] [ ] floodfill ( int [ ] [ ] image , int sr , int sc , int newcolor ) { int row = image.length , col = image [ 0 ] .length ; // store graph bound int target = image [ sr ] [ sc ] ; // store value queue < int [ ] > traverse = new linkedlist < > ( ) ; boolean [ ] [ ] visit = new boolean [ row ] [ col ] ; // visit node int [ ] [ ] direction = new int [ ] [ ] { { 0,1 } , { 1,0 } , { 0 , -1 } , { -1,0 } // traversal direction } ; int [ ] tmp = { sr , sc } ; traverse.offer ( tmp ) ; // put start node traversal queue ( traverse.size ( ) > 0 ) { int [ ] node = traverse.poll ( ) ; // grab next node int = node [ 0 ] , n = node [ 1 ] ; visit [ ] [ n ] = true ; // visit = true image [ ] [ n ] = -1 ; // set value change color ( int [ ] dir : direction ) { int a=m+dir [ 0 ] ; int b=n+dir [ 1 ] ; ( < 0 || > =row || b < 0 || b > =col || visit [ ] [ b ] ==true || image [ ] [ b ] ! = target ) // disqualify node traversal continue ; else { int [ ] add = { , b } ; traverse.offer ( add ) ; // satisfies condition put traverse queue } } } ( int = 0 ; < image.length ; i++ ) { ( int j = 0 ; j < image [ 0 ] .length ; j++ ) { ( image [ ] [ j ] ==-1 ) image [ ] [ j ] =newcolor ; } } return image ; } }",0_algorithm_time_node_bill,3
462,qwqv67,Can someone help me understand the computer science of what exactly is a database?,Help,5,0.67,computerscience,https://www.reddit.com/r/computerscience/comments/qwqv67/can_someone_help_me_understand_the_computer/,9,"so this topic that might be a little closer to computer science, but could someone explain to me what happens on a computer/server when a database is created? like a high-level overview of the computer science behind the creation of a database and it is properties(how to interact with it)? 

secondly, if you could also briefly talk about the computer science of database management systems?

please, also let me know if i am thinking about this incorrectly. i am a self taught person with a lot of black boxes.",1637245557.0,"['topic', 'might', 'little', 'closer', 'computer', 'science', ',', 'could', 'someone', 'explain', 'happens', 'computer/server', 'database', 'create', '?', 'like', 'high-level', 'overview', 'computer', 'science', 'behind', 'creation', 'database', 'property', '(', 'interact', ')', '?', 'secondly', ',', 'could', 'also', 'briefly', 'talk', 'computer', 'science', 'database', 'management', 'system', '?', 'please', ',', 'also', 'let', 'know', 'think', 'incorrectly', '.', 'self', 'taught', 'person', 'lot', 'black', 'box', '.']","[[('topic', 'NN')], [('might', 'MD')], [('little', 'JJ')], [('closer', 'NN')], [('computer', 'NN')], [('science', 'NN')], [(',', ',')], [('could', 'MD')], [('someone', 'NN')], [('explain', 'NN')], [('happens', 'NNS')], [('computer/server', 'NN')], [('database', 'NN')], [('created', 'VBN')], [('?', '.')], [('like', 'IN')], [('high-level', 'NN')], [('overview', 'NN')], [('computer', 'NN')], [('science', 'NN')], [('behind', 'IN')], [('creation', 'NN')], [('database', 'NN')], [('properties', 'NNS')], [('(', '(')], [('interact', 'NN')], [(')', ')')], [('?', '.')], [('secondly', 'RB')], [(',', ',')], [('could', 'MD')], [('also', 'RB')], [('briefly', 'NN')], [('talk', 'NN')], [('computer', 'NN')], [('science', 'NN')], [('database', 'NN')], [('management', 'NN')], [('systems', 'NNS')], [('?', '.')], [('please', 'NN')], [(',', ',')], [('also', 'RB')], [('let', 'VB')], [('know', 'VB')], [('thinking', 'VBG')], [('incorrectly', 'RB')], [('.', '.')], [('self', 'NN')], [('taught', 'NN')], [('person', 'NN')], [('lot', 'NN')], [('black', 'JJ')], [('boxes', 'NNS')], [('.', '.')]]","topic might little closer computer science , could someone explain happens computer/server database create ? like high-level overview computer science behind creation database property ( interact ) ? secondly , could also briefly talk computer science database management system ? please , also let know think incorrectly . self taught person lot black box .",-1_abazbz2abz_2520_problem_use,3
464,qwnv1m,Deadlock vs Deadly Embrace,,3,0.72,computerscience,https://www.reddit.com/r/computerscience/comments/qwnv1m/deadlock_vs_deadly_embrace/,8,what is the difference between a deadlock and deadly embrace in concurrent programming?,1637235350.0,"['difference', 'deadlock', 'deadly', 'embrace', 'concurrent', 'program', '?']","[[('difference', 'NN')], [('deadlock', 'NN')], [('deadly', 'RB')], [('embrace', 'NN')], [('concurrent', 'NN')], [('programming', 'VBG')], [('?', '.')]]",difference deadlock deadly embrace concurrent program ?,5_cpu_computer_run_process,1
465,qw5g3c,Are there any good websites with quizzes where you can check your knowledge on a certain topic and see if you are ready for exams?,Help,87,0.97,computerscience,https://www.reddit.com/r/computerscience/comments/qw5g3c/are_there_any_good_websites_with_quizzes_where/,10,"currently studying object oriented programming which is a course of the 3rd semester in my uni. i am pretty sure i have a good understanding of the concepts but i would like to confirm that somewhere somehow. there are many times where i wish i had something like that in courses like data bases, networks, data structures. any help is appreciated!",1637173180.0,"['currently', 'study', 'object', 'orient', 'program', 'course', '3rd', 'semester', 'uni', '.', 'pretty', 'sure', 'good', 'understand', 'concept', 'would', 'like', 'confirm', 'somewhere', 'somehow', '.', 'many', 'time', 'wish', 'something', 'like', 'course', 'like', 'data', 'base', ',', 'network', ',', 'data', 'structure', '.', 'help', 'appreciate', '!']","[[('currently', 'RB')], [('studying', 'VBG')], [('object', 'NN')], [('oriented', 'VBN')], [('programming', 'VBG')], [('course', 'NN')], [('3rd', 'CD')], [('semester', 'NN')], [('uni', 'JJ')], [('.', '.')], [('pretty', 'RB')], [('sure', 'NN')], [('good', 'JJ')], [('understanding', 'VBG')], [('concepts', 'NNS')], [('would', 'MD')], [('like', 'IN')], [('confirm', 'NN')], [('somewhere', 'RB')], [('somehow', 'NN')], [('.', '.')], [('many', 'JJ')], [('times', 'NNS')], [('wish', 'NN')], [('something', 'NN')], [('like', 'IN')], [('courses', 'NNS')], [('like', 'IN')], [('data', 'NNS')], [('bases', 'NNS')], [(',', ',')], [('networks', 'NNS')], [(',', ',')], [('data', 'NNS')], [('structures', 'NNS')], [('.', '.')], [('help', 'NN')], [('appreciated', 'VBN')], [('!', '.')]]","currently study object orient program course 3rd semester uni . pretty sure good understand concept would like confirm somewhere somehow . many time wish something like course like data base , network , data structure . help appreciate !",-1_abazbz2abz_2520_problem_use,4
466,qwtqeb,RNG algorithm that just flips bits randomly,Discussion,0,0.25,computerscience,https://www.reddit.com/r/computerscience/comments/qwtqeb/rng_algorithm_that_just_flips_bits_randomly/,8,"i was thinking about rng algorithms. and most of them are pretty complicated, using math. middle-square, mersenne twister, etc.

but has anybody come up with an algorithm that just randomly flips binary bits of a variable you want to randomize? what would be the advantages and drawbacks of this method? i guess it would depend on the implementation. 

anyway, i just wanted to get opinions of people smarter than me.",1637253610.0,"['think', 'rng', 'algorithm', '.', 'pretty', 'complicate', ',', 'use', 'math', '.', 'middle-square', ',', 'mersenne', 'twister', ',', 'etc', '.', 'anybody', 'come', 'algorithm', 'randomly', 'flip', 'binary', 'bit', 'variable', 'want', 'randomize', '?', 'would', 'advantage', 'drawback', 'method', '?', 'guess', 'would', 'depend', 'implementation', '.', 'anyway', ',', 'want', 'get', 'opinion', 'people', 'smarter', '.']","[[('thinking', 'VBG')], [('rng', 'NN')], [('algorithms', 'NN')], [('.', '.')], [('pretty', 'RB')], [('complicated', 'VBN')], [(',', ',')], [('using', 'VBG')], [('math', 'NN')], [('.', '.')], [('middle-square', 'NN')], [(',', ',')], [('mersenne', 'NN')], [('twister', 'NN')], [(',', ',')], [('etc', 'NN')], [('.', '.')], [('anybody', 'NN')], [('come', 'VB')], [('algorithm', 'NN')], [('randomly', 'RB')], [('flips', 'NNS')], [('binary', 'NN')], [('bits', 'NNS')], [('variable', 'JJ')], [('want', 'NN')], [('randomize', 'VB')], [('?', '.')], [('would', 'MD')], [('advantages', 'NNS')], [('drawbacks', 'NNS')], [('method', 'NN')], [('?', '.')], [('guess', 'NN')], [('would', 'MD')], [('depend', 'NN')], [('implementation', 'NN')], [('.', '.')], [('anyway', 'RB')], [(',', ',')], [('wanted', 'VBD')], [('get', 'VB')], [('opinions', 'NNS')], [('people', 'NNS')], [('smarter', 'NN')], [('.', '.')]]","think rng algorithm . pretty complicate , use math . middle-square , mersenne twister , etc . anybody come algorithm randomly flip binary bit variable want randomize ? would advantage drawback method ? guess would depend implementation . anyway , want get opinion people smarter .",-1_abazbz2abz_2520_problem_use,3
467,qwegv6,IDE Features - Statically vs. Dynamically Typed Languages,,2,0.75,computerscience,https://www.reddit.com/r/computerscience/comments/qwegv6/ide_features_statically_vs_dynamically_typed/,4,"i am trying to find what additional features ides provide for statically typed languages that it does not for dynamically typed ones for a project. i have tried researching it online, but could not come up with anything clear. so, i would appreciate if someone could help with this.",1637199526.0,"['try', 'find', 'additional', 'feature', 'ides', 'provide', 'statically', 'typed', 'language', 'dynamically', 'typed', 'one', 'project', '.', 'try', 'research', 'online', ',', 'could', 'come', 'anything', 'clear', '.', ',', 'would', 'appreciate', 'someone', 'could', 'help', '.']","[[('trying', 'VBG')], [('find', 'VB')], [('additional', 'JJ')], [('features', 'NNS')], [('ides', 'NNS')], [('provide', 'NN')], [('statically', 'RB')], [('typed', 'NNS')], [('languages', 'NNS')], [('dynamically', 'RB')], [('typed', 'NNS')], [('ones', 'NNS')], [('project', 'NN')], [('.', '.')], [('tried', 'VBN')], [('researching', 'VBG')], [('online', 'NN')], [(',', ',')], [('could', 'MD')], [('come', 'VB')], [('anything', 'NN')], [('clear', 'JJ')], [('.', '.')], [(',', ',')], [('would', 'MD')], [('appreciate', 'NN')], [('someone', 'NN')], [('could', 'MD')], [('help', 'NN')], [('.', '.')]]","try find additional feature ides provide statically typed language dynamically typed one project . try research online , could come anything clear . , would appreciate someone could help .",8_language_one_program_write,3
468,qw5zd4,How to read the optimal makespan,,2,1.0,computerscience,https://www.reddit.com/r/computerscience/comments/qw5zd4/how_to_read_the_optimal_makespan/,2,"hello i am having trouble reading the optimal makespan of job scheduling algorithm. in particular, what does it mean for max to have index i here?

",1637174685.0,"['hello', 'trouble', 'reading', 'optimal', 'makespan', 'job', 'schedule', 'algorithm', '.', 'particular', ',', 'mean', 'max', 'index', '?']","[[('hello', 'NN')], [('trouble', 'NN')], [('reading', 'NN')], [('optimal', 'JJ')], [('makespan', 'NN')], [('job', 'NN')], [('scheduling', 'VBG')], [('algorithm', 'NN')], [('.', '.')], [('particular', 'JJ')], [(',', ',')], [('mean', 'NN')], [('max', 'NN')], [('index', 'NN')], [('?', '.')]]","hello trouble reading optimal makespan job schedule algorithm . particular , mean max index ?",0_algorithm_time_node_bill,3
469,qw8tom,"Is possible too have static typed, interpreted languea",,0,0.5,computerscience,https://www.reddit.com/r/computerscience/comments/qw8tom/is_possible_too_have_static_typed_interpreted/,2,"type checking insted of hints, and force you to use types",1637182707.0,"['type', 'check', 'insted', 'hint', ',', 'force', 'use', 'type']","[[('type', 'NN')], [('checking', 'VBG')], [('insted', 'VBN')], [('hints', 'NNS')], [(',', ',')], [('force', 'NN')], [('use', 'NN')], [('types', 'NNS')]]","type check insted hint , force use type",-1_abazbz2abz_2520_problem_use,1
470,qvgwfj,What's the most difficult part of writing documentation for you guys?,Discussion,78,0.95,computerscience,https://www.reddit.com/r/computerscience/comments/qvgwfj/whats_the_most_difficult_part_of_writing/,23,"recently started working on a large project which requires i document my code.

feel free to share which part about writing documentation (writing comments, official documentation, things like that) you find the most annoying or difficult.",1637093532.0,"['recently', 'start', 'work', 'large', 'project', 'require', 'document', 'code', '.', 'feel', 'free', 'share', 'part', 'write', 'documentation', '(', 'write', 'comment', ',', 'official', 'documentation', ',', 'thing', 'like', ')', 'find', 'annoy', 'difficult', '.']","[[('recently', 'RB')], [('started', 'VBN')], [('working', 'VBG')], [('large', 'JJ')], [('project', 'NN')], [('requires', 'VBZ')], [('document', 'NN')], [('code', 'NN')], [('.', '.')], [('feel', 'NN')], [('free', 'JJ')], [('share', 'NN')], [('part', 'NN')], [('writing', 'VBG')], [('documentation', 'NN')], [('(', '(')], [('writing', 'VBG')], [('comments', 'NNS')], [(',', ',')], [('official', 'NN')], [('documentation', 'NN')], [(',', ',')], [('things', 'NNS')], [('like', 'IN')], [(')', ')')], [('find', 'VB')], [('annoying', 'VBG')], [('difficult', 'JJ')], [('.', '.')]]","recently start work large project require document code . feel free share part write documentation ( write comment , official documentation , thing like ) find annoy difficult .",3_search_ai_think_google,4
471,qvi861,What is the different between multi-tasking and parallel processing?,Help,30,0.89,computerscience,https://www.reddit.com/r/computerscience/comments/qvi861/what_is_the_different_between_multitasking_and/,8,"hi,

while revising for my mock, i have unexpectedly became confused about the difference between multi-tasking and parallel processing.

at first, i though multi-tasking is the simultaneous processing of multiple tasks, while parallel processing is the simultaneous processing of the same task but broken down in chunks.

however, after reading about simd and mimd, i realised that parallel processing could also process multiple task at the same time, just like multi-tasking.

thanks in advance :)",1637097069.0,"['hi', ',', 'revise', 'mock', ',', 'unexpectedly', 'become', 'confuse', 'difference', 'multi-tasking', 'parallel', 'processing', '.', 'first', ',', 'though', 'multi-tasking', 'simultaneous', 'processing', 'multiple', 'task', ',', 'parallel', 'processing', 'simultaneous', 'processing', 'task', 'broken', 'chunk', '.', 'however', ',', 'reading', 'simd', 'mimd', ',', 'realise', 'parallel', 'processing', 'could', 'also', 'process', 'multiple', 'task', 'time', ',', 'like', 'multi-tasking', '.', 'thanks', 'advance', ':', ')']","[[('hi', 'NN')], [(',', ',')], [('revising', 'VBG')], [('mock', 'NN')], [(',', ',')], [('unexpectedly', 'RB')], [('became', 'VBD')], [('confused', 'VBN')], [('difference', 'NN')], [('multi-tasking', 'NN')], [('parallel', 'NN')], [('processing', 'NN')], [('.', '.')], [('first', 'RB')], [(',', ',')], [('though', 'IN')], [('multi-tasking', 'NN')], [('simultaneous', 'JJ')], [('processing', 'NN')], [('multiple', 'NN')], [('tasks', 'NNS')], [(',', ',')], [('parallel', 'NN')], [('processing', 'NN')], [('simultaneous', 'JJ')], [('processing', 'NN')], [('task', 'NN')], [('broken', 'NN')], [('chunks', 'NNS')], [('.', '.')], [('however', 'RB')], [(',', ',')], [('reading', 'NN')], [('simd', 'NN')], [('mimd', 'NN')], [(',', ',')], [('realised', 'VBN')], [('parallel', 'NN')], [('processing', 'NN')], [('could', 'MD')], [('also', 'RB')], [('process', 'NN')], [('multiple', 'NN')], [('task', 'NN')], [('time', 'NN')], [(',', ',')], [('like', 'IN')], [('multi-tasking', 'NN')], [('.', '.')], [('thanks', 'NNS')], [('advance', 'NN')], [(':', ':')], [(')', ')')]]","hi , revise mock , unexpectedly become confuse difference multi-tasking parallel processing . first , though multi-tasking simultaneous processing multiple task , parallel processing simultaneous processing task broken chunk . however , reading simd mimd , realise parallel processing could also process multiple task time , like multi-tasking . thanks advance : )",5_cpu_computer_run_process,4
472,qvcvqa,"Books on bios, uefi, smbios and acpi?",Help,18,0.95,computerscience,https://www.reddit.com/r/computerscience/comments/qvcvqa/books_on_bios_uefi_smbios_and_acpi/,4,"i would like to learn a bit more about firmwares and their interactions with operating systems, especially on everyday computers.

after reading, i would like to have a good overview of what types of firmwares are common on the market, how they interact with with the os and how they are structured. ideally without reading all the specs, i just want go get an overview at first :) 

any recommendations?",1637083224.0,"['would', 'like', 'learn', 'bit', 'firmware', 'interaction', 'operating', 'system', ',', 'especially', 'everyday', 'computer', '.', 'reading', ',', 'would', 'like', 'good', 'overview', 'type', 'firmware', 'common', 'market', ',', 'interact', 'o', 'structure', '.', 'ideally', 'without', 'reading', 'spec', ',', 'want', 'go', 'get', 'overview', 'first', ':', ')', 'recommendation', '?']","[[('would', 'MD')], [('like', 'IN')], [('learn', 'NN')], [('bit', 'NN')], [('firmwares', 'NNS')], [('interactions', 'NNS')], [('operating', 'NN')], [('systems', 'NNS')], [(',', ',')], [('especially', 'RB')], [('everyday', 'NN')], [('computers', 'NNS')], [('.', '.')], [('reading', 'NN')], [(',', ',')], [('would', 'MD')], [('like', 'IN')], [('good', 'JJ')], [('overview', 'NN')], [('types', 'NNS')], [('firmwares', 'NNS')], [('common', 'JJ')], [('market', 'NN')], [(',', ',')], [('interact', 'NN')], [('os', 'NN')], [('structured', 'VBN')], [('.', '.')], [('ideally', 'RB')], [('without', 'IN')], [('reading', 'NN')], [('specs', 'NN')], [(',', ',')], [('want', 'NN')], [('go', 'VB')], [('get', 'VB')], [('overview', 'NN')], [('first', 'RB')], [(':', ':')], [(')', ')')], [('recommendations', 'NNS')], [('?', '.')]]","would like learn bit firmware interaction operating system , especially everyday computer . reading , would like good overview type firmware common market , interact o structure . ideally without reading spec , want go get overview first : ) recommendation ?",-1_abazbz2abz_2520_problem_use,4
474,qv9yun,Does anyone have tips for understanding code?,Help,16,0.9,computerscience,https://www.reddit.com/r/computerscience/comments/qv9yun/does_anyone_have_tips_for_understanding_code/,11,i just started studying computer science and have trouble understanding code. we have started with java and python and even though i have some experience with java i still have a hard time reading and understanding the code. every time i look for tutorials they always go directly into coding and creating an algorithm (which is understandable - learning by doing) but i would like to understand how to learn how to read and understand an algorithm first. does anyone know a good platform on how to learn exactly that?,1637075641.0,"['start', 'study', 'computer', 'science', 'trouble', 'understand', 'code', '.', 'start', 'java', 'python', 'even', 'though', 'experience', 'java', 'still', 'hard', 'time', 'reading', 'understand', 'code', '.', 'every', 'time', 'look', 'tutorial', 'always', 'go', 'directly', 'cod', 'create', 'algorithm', '(', 'understandable', '-', 'learn', ')', 'would', 'like', 'understand', 'learn', 'read', 'understand', 'algorithm', 'first', '.', 'anyone', 'know', 'good', 'platform', 'learn', 'exactly', '?']","[[('started', 'VBN')], [('studying', 'VBG')], [('computer', 'NN')], [('science', 'NN')], [('trouble', 'NN')], [('understanding', 'VBG')], [('code', 'NN')], [('.', '.')], [('started', 'VBN')], [('java', 'NN')], [('python', 'NN')], [('even', 'RB')], [('though', 'IN')], [('experience', 'NN')], [('java', 'NN')], [('still', 'RB')], [('hard', 'JJ')], [('time', 'NN')], [('reading', 'NN')], [('understanding', 'VBG')], [('code', 'NN')], [('.', '.')], [('every', 'DT')], [('time', 'NN')], [('look', 'NN')], [('tutorials', 'NNS')], [('always', 'RB')], [('go', 'VB')], [('directly', 'RB')], [('coding', 'VBG')], [('creating', 'VBG')], [('algorithm', 'NN')], [('(', '(')], [('understandable', 'JJ')], [('-', ':')], [('learning', 'VBG')], [(')', ')')], [('would', 'MD')], [('like', 'IN')], [('understand', 'NN')], [('learn', 'NN')], [('read', 'NN')], [('understand', 'NN')], [('algorithm', 'NN')], [('first', 'RB')], [('.', '.')], [('anyone', 'NN')], [('know', 'VB')], [('good', 'JJ')], [('platform', 'NN')], [('learn', 'NN')], [('exactly', 'RB')], [('?', '.')]]",start study computer science trouble understand code . start java python even though experience java still hard time reading understand code . every time look tutorial always go directly cod create algorithm ( understandable - learn ) would like understand learn read understand algorithm first . anyone know good platform learn exactly ?,-1_abazbz2abz_2520_problem_use,3
475,qvhov8,Bit Manipulations You Like,,4,0.75,computerscience,https://www.reddit.com/r/computerscience/comments/qvhov8/bit_manipulations_you_like/,8,"bit manipulations is one of the most interesting subjects i ever studied. it really blows my mind.

i am wondering if you use those occasionally, and if so what are your favorite tricks?",1637095647.0,"['bit', 'manipulation', 'one', 'interest', 'subject', 'ever', 'study', '.', 'really', 'blow', 'mind', '.', 'wonder', 'use', 'occasionally', ',', 'favorite', 'trick', '?']","[[('bit', 'NN')], [('manipulations', 'NNS')], [('one', 'CD')], [('interesting', 'VBG')], [('subjects', 'NNS')], [('ever', 'RB')], [('studied', 'VBN')], [('.', '.')], [('really', 'RB')], [('blows', 'NNS')], [('mind', 'NN')], [('.', '.')], [('wondering', 'VBG')], [('use', 'NN')], [('occasionally', 'RB')], [(',', ',')], [('favorite', 'NN')], [('tricks', 'NNS')], [('?', '.')]]","bit manipulation one interest subject ever study . really blow mind . wonder use occasionally , favorite trick ?",-1_abazbz2abz_2520_problem_use,5
476,qvrimr,What is a DAG (Directed Acyclic Graph) and how are they represented in memory,,0,0.43,computerscience,https://www.reddit.com/r/computerscience/comments/qvrimr/what_is_a_dag_directed_acyclic_graph_and_how_are/,8,"i have an interview tomorrow. 

this question was recently asked to one of my friend who interviewed at the same company. 

i searched really hard but could not find the answer to the latter part of the question. 


even for the first part, i need a simple answer and not a wiki kind of definition. 

any help is appreciated.",1637125263.0,"['interview', 'tomorrow', '.', 'question', 'recently', 'ask', 'one', 'friend', 'interviewed', 'company', '.', 'search', 'really', 'hard', 'could', 'find', 'answer', 'latter', 'part', 'question', '.', 'even', 'first', 'part', ',', 'need', 'simple', 'answer', 'wiki', 'kind', 'definition', '.', 'help', 'appreciate', '.']","[[('interview', 'NN')], [('tomorrow', 'NN')], [('.', '.')], [('question', 'NN')], [('recently', 'RB')], [('asked', 'VBN')], [('one', 'CD')], [('friend', 'NN')], [('interviewed', 'NN')], [('company', 'NN')], [('.', '.')], [('searched', 'VBN')], [('really', 'RB')], [('hard', 'JJ')], [('could', 'MD')], [('find', 'VB')], [('answer', 'NN')], [('latter', 'NN')], [('part', 'NN')], [('question', 'NN')], [('.', '.')], [('even', 'RB')], [('first', 'RB')], [('part', 'NN')], [(',', ',')], [('need', 'NN')], [('simple', 'NN')], [('answer', 'NN')], [('wiki', 'NN')], [('kind', 'NN')], [('definition', 'NN')], [('.', '.')], [('help', 'NN')], [('appreciated', 'VBN')], [('.', '.')]]","interview tomorrow . question recently ask one friend interviewed company . search really hard could find answer latter part question . even first part , need simple answer wiki kind definition . help appreciate .",-1_abazbz2abz_2520_problem_use,4
477,qvgo6i,How does the communication between devices with cables work?,Help,1,0.67,computerscience,https://www.reddit.com/r/computerscience/comments/qvgo6i/how_does_the_communication_between_devices_with/,2,"i would like to get a raspberry pi in the near future and a receiver and transmitter for electromagnetic waves. i have to connect the receiver and the transmitter to the raspberry pi with cables, but now i am wondering how exactly this works, for example how the transmitter knows what data i want to send?",1637092938.0,"['would', 'like', 'get', 'raspberry', 'pi', 'near', 'future', 'receiver', 'transmitter', 'electromagnetic', 'wave', '.', 'connect', 'receiver', 'transmitter', 'raspberry', 'pi', 'cable', ',', 'wonder', 'exactly', 'work', ',', 'example', 'transmitter', 'know', 'data', 'want', 'send', '?']","[[('would', 'MD')], [('like', 'IN')], [('get', 'VB')], [('raspberry', 'NN')], [('pi', 'NN')], [('near', 'IN')], [('future', 'NN')], [('receiver', 'NN')], [('transmitter', 'NN')], [('electromagnetic', 'JJ')], [('waves', 'NNS')], [('.', '.')], [('connect', 'NN')], [('receiver', 'NN')], [('transmitter', 'NN')], [('raspberry', 'NN')], [('pi', 'NN')], [('cables', 'NNS')], [(',', ',')], [('wondering', 'VBG')], [('exactly', 'RB')], [('works', 'NNS')], [(',', ',')], [('example', 'NN')], [('transmitter', 'NN')], [('knows', 'NNS')], [('data', 'NNS')], [('want', 'NN')], [('send', 'NN')], [('?', '.')]]","would like get raspberry pi near future receiver transmitter electromagnetic wave . connect receiver transmitter raspberry pi cable , wonder exactly work , example transmitter know data want send ?",6_server_packet_key_hash,3
478,qv9g3m,Can't find recent research paper over data structure,,0,0.5,computerscience,https://www.reddit.com/r/computerscience/comments/qv9g3m/cant_find_recent_research_paper_over_data/,2,"hi everybody, for my enflish class, i need to read 7 articles over data structure (it was imposed to me) with a restriction of 500/600 words and  should be published after may 2021. i do not know where to search, the most part of articles that i found on internet is over neural structure in the brain or is too old or too long (+-4500 words). thank you for reading.",1637074201.0,"['hi', 'everybody', ',', 'enflish', 'class', ',', 'need', 'read', '7', 'article', 'data', 'structure', '(', 'impose', ')', 'restriction', '500/600', 'word', 'publish', 'may', '2021.', 'know', 'search', ',', 'part', 'article', 'found', 'internet', 'neural', 'structure', 'brain', 'old', 'long', '(', '+-4500', 'word', ')', '.', 'thank', 'reading', '.']","[[('hi', 'NN')], [('everybody', 'NN')], [(',', ',')], [('enflish', 'JJ')], [('class', 'NN')], [(',', ',')], [('need', 'NN')], [('read', 'NN')], [('7', 'CD')], [('articles', 'NNS')], [('data', 'NNS')], [('structure', 'NN')], [('(', '(')], [('imposed', 'VBN')], [(')', ')')], [('restriction', 'NN')], [('500/600', 'CD')], [('words', 'NNS')], [('published', 'VBN')], [('may', 'MD')], [('2021.', 'CD')], [('know', 'VB')], [('search', 'NN')], [(',', ',')], [('part', 'NN')], [('articles', 'NNS')], [('found', 'NN')], [('internet', 'NN')], [('neural', 'JJ')], [('structure', 'NN')], [('brain', 'NN')], [('old', 'JJ')], [('long', 'RB')], [('(', '(')], [('+-4500', 'NN')], [('words', 'NNS')], [(')', ')')], [('.', '.')], [('thank', 'NN')], [('reading', 'NN')], [('.', '.')]]","hi everybody , enflish class , need read 7 article data structure ( impose ) restriction 500/600 word publish may 2021. know search , part article found internet neural structure brain old long ( +-4500 word ) . thank reading .",-1_abazbz2abz_2520_problem_use,1
479,qv3ej2,quantum computing,,1,0.6,computerscience,https://www.reddit.com/r/computerscience/comments/qv3ej2/quantum_computing/,0,"watching the xponential rise of technological development, i have not heard about quantum computing for quite a while. what is the progress atm? and are just the big companies working on it? wondering if there are small startups as well?",1637052222.0,"['watch', 'xponential', 'rise', 'technological', 'development', ',', 'heard', 'quantum', 'compute', 'quite', '.', 'progress', 'atm', '?', 'big', 'company', 'work', '?', 'wonder', 'small', 'startup', 'well', '?']","[[('watching', 'VBG')], [('xponential', 'JJ')], [('rise', 'NN')], [('technological', 'JJ')], [('development', 'NN')], [(',', ',')], [('heard', 'NN')], [('quantum', 'NN')], [('computing', 'VBG')], [('quite', 'RB')], [('.', '.')], [('progress', 'NN')], [('atm', 'NN')], [('?', '.')], [('big', 'JJ')], [('companies', 'NNS')], [('working', 'VBG')], [('?', '.')], [('wondering', 'VBG')], [('small', 'JJ')], [('startups', 'NNS')], [('well', 'RB')], [('?', '.')]]","watch xponential rise technological development , heard quantum compute quite . progress atm ? big company work ? wonder small startup well ?",-1_abazbz2abz_2520_problem_use,2
482,qtrrml,My Programming prof is an absolute Chad,,517,0.94,computerscience,https://www.reddit.com/r/computerscience/comments/qtrrml/my_programming_prof_is_an_absolute_chad/,96,"he programs everything using the text editor and he does not even prepare the code before the lectures. he just quickly programs it all on the spot in front of us. and not just a few lines but often around 20 for each example. and even if a student asks him to show a very specific example that guy just immediately knows what to do and starts typing without mistakes. he also opens every document and application over the terminal instead of clicking on it. 

&#x200b;

he honestly inspires me to actually take my assignments seriously. it seems like he always immediately knows the solution to any coding task in his head. that guy must be a genius.",1636902666.0,"['program', 'everything', 'use', 'text', 'editor', 'even', 'prepare', 'code', 'lecture', '.', 'quickly', 'program', 'spot', 'front', 'u', '.', 'line', 'often', 'around', '20', 'example', '.', 'even', 'student', 'asks', 'show', 'specific', 'example', 'guy', 'immediately', 'know', 'start', 'type', 'without', 'mistake', '.', 'also', 'open', 'every', 'document', 'application', 'terminal', 'instead', 'click', '.', '&', '#', 'x200b', ';', 'honestly', 'inspires', 'actually', 'take', 'assignment', 'seriously', '.', 'seem', 'like', 'always', 'immediately', 'know', 'solution', 'cod', 'task', 'head', '.', 'guy', 'must', 'genius', '.']","[[('programs', 'NNS')], [('everything', 'NN')], [('using', 'VBG')], [('text', 'NN')], [('editor', 'NN')], [('even', 'RB')], [('prepare', 'NN')], [('code', 'NN')], [('lectures', 'NNS')], [('.', '.')], [('quickly', 'RB')], [('programs', 'NNS')], [('spot', 'NN')], [('front', 'NN')], [('us', 'PRP')], [('.', '.')], [('lines', 'NNS')], [('often', 'RB')], [('around', 'IN')], [('20', 'CD')], [('example', 'NN')], [('.', '.')], [('even', 'RB')], [('student', 'NN')], [('asks', 'NNS')], [('show', 'NN')], [('specific', 'JJ')], [('example', 'NN')], [('guy', 'NN')], [('immediately', 'RB')], [('knows', 'NNS')], [('starts', 'NNS')], [('typing', 'VBG')], [('without', 'IN')], [('mistakes', 'NNS')], [('.', '.')], [('also', 'RB')], [('opens', 'NNS')], [('every', 'DT')], [('document', 'NN')], [('application', 'NN')], [('terminal', 'NN')], [('instead', 'RB')], [('clicking', 'VBG')], [('.', '.')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('honestly', 'RB')], [('inspires', 'NNS')], [('actually', 'RB')], [('take', 'VB')], [('assignments', 'NNS')], [('seriously', 'RB')], [('.', '.')], [('seems', 'VBZ')], [('like', 'IN')], [('always', 'RB')], [('immediately', 'RB')], [('knows', 'NNS')], [('solution', 'NN')], [('coding', 'VBG')], [('task', 'NN')], [('head', 'NN')], [('.', '.')], [('guy', 'NN')], [('must', 'MD')], [('genius', 'NN')], [('.', '.')]]",program everything use text editor even prepare code lecture . quickly program spot front u . line often around 20 example . even student asks show specific example guy immediately know start type without mistake . also open every document application terminal instead click . & # x200b ; honestly inspires actually take assignment seriously . seem like always immediately know solution cod task head . guy must genius .,-1_abazbz2abz_2520_problem_use,5
483,qttk9c,Early programmers were reluctant to switch from binary programming to an assembly language,,70,1.0,computerscience,https://www.reddit.com/r/computerscience/comments/qttk9c/early_programmers_were_reluctant_to_switch_from/,14,"i am currently reading ""the art of doing science and engineering: learning to learn"" by richard hamming. it is a great book about computer history and programming in general.

one thing that strikes me is the omnipresent status quo bias.  early programmers were reluctant to switch from binary programming to an assembly language:



the same happened during the transition from assembly to fortran, one of the first high-level, compiled programming languages:



have you experienced a similar thing when new frameworks, tools, or languages were introduced?

&#x200b;

>source: [\_adrian/status/1459909375427059715]()

&#x200b;",1636907791.0,"['currently', 'reading', '``', 'art', 'science', 'engineering', ':', 'learn', 'learn', ""''"", 'richard', 'ham', '.', 'great', 'book', 'computer', 'history', 'program', 'general', '.', 'one', 'thing', 'strike', 'omnipresent', 'status', 'quo', 'bias', '.', 'early', 'programmer', 'reluctant', 'switch', 'binary', 'program', 'assembly', 'language', ':', 'happen', 'transition', 'assembly', 'fortran', ',', 'one', 'first', 'high-level', ',', 'compile', 'program', 'language', ':', 'experienced', 'similar', 'thing', 'new', 'framework', ',', 'tool', ',', 'language', 'introduce', '?', '&', '#', 'x200b', ';', '>', 'source', ':', '[', '\\_adrian/status/1459909375427059715', ']', '(', ')', '&', '#', 'x200b', ';']","[[('currently', 'RB')], [('reading', 'NN')], [('``', '``')], [('art', 'NN')], [('science', 'NN')], [('engineering', 'NN')], [(':', ':')], [('learning', 'VBG')], [('learn', 'NN')], [(""''"", ""''"")], [('richard', 'NN')], [('hamming', 'VBG')], [('.', '.')], [('great', 'JJ')], [('book', 'NN')], [('computer', 'NN')], [('history', 'NN')], [('programming', 'VBG')], [('general', 'JJ')], [('.', '.')], [('one', 'CD')], [('thing', 'NN')], [('strikes', 'NNS')], [('omnipresent', 'NN')], [('status', 'NN')], [('quo', 'NN')], [('bias', 'NN')], [('.', '.')], [('early', 'RB')], [('programmers', 'NNS')], [('reluctant', 'NN')], [('switch', 'NN')], [('binary', 'NN')], [('programming', 'VBG')], [('assembly', 'RB')], [('language', 'NN')], [(':', ':')], [('happened', 'VBD')], [('transition', 'NN')], [('assembly', 'RB')], [('fortran', 'NN')], [(',', ',')], [('one', 'CD')], [('first', 'RB')], [('high-level', 'NN')], [(',', ',')], [('compiled', 'VBN')], [('programming', 'VBG')], [('languages', 'NNS')], [(':', ':')], [('experienced', 'JJ')], [('similar', 'JJ')], [('thing', 'NN')], [('new', 'JJ')], [('frameworks', 'NNS')], [(',', ',')], [('tools', 'NNS')], [(',', ',')], [('languages', 'NNS')], [('introduced', 'VBN')], [('?', '.')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('>', 'NN')], [('source', 'NN')], [(':', ':')], [('[', 'NN')], [('\\_adrian/status/1459909375427059715', 'NN')], [(']', 'NN')], [('(', '(')], [(')', ')')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')]]","currently reading `` art science engineering : learn learn '' richard ham . great book computer history program general . one thing strike omnipresent status quo bias . early programmer reluctant switch binary program assembly language : happen transition assembly fortran , one first high-level , compile program language : experienced similar thing new framework , tool , language introduce ? & # x200b ; > source : [ \_adrian/status/1459909375427059715 ] ( ) & # x200b ;",8_language_one_program_write,4
484,qu8lzi,Good resources to learn about time complexity?,Help,5,0.86,computerscience,https://www.reddit.com/r/computerscience/comments/qu8lzi/good_resources_to_learn_about_time_complexity/,2,does anyone have a good resource to learn about time complexity? i am struggling with the material and cannot wrap my hear around anything besides o(1) and o(n).,1636952514.0,"['anyone', 'good', 'resource', 'learn', 'time', 'complexity', '?', 'struggle', 'material', 'wrap', 'hear', 'around', 'anything', 'besides', '(', '1', ')', '(', 'n', ')', '.']","[[('anyone', 'NN')], [('good', 'JJ')], [('resource', 'NN')], [('learn', 'NN')], [('time', 'NN')], [('complexity', 'NN')], [('?', '.')], [('struggling', 'VBG')], [('material', 'NN')], [('wrap', 'NN')], [('hear', 'NN')], [('around', 'IN')], [('anything', 'NN')], [('besides', 'IN')], [('(', '(')], [('1', 'CD')], [(')', ')')], [('(', '(')], [('n', 'NN')], [(')', ')')], [('.', '.')]]",anyone good resource learn time complexity ? struggle material wrap hear around anything besides ( 1 ) ( n ) .,0_algorithm_time_node_bill,2
485,qu4c71,I've always loved the concept of instant learning and I want to study it more.,General,8,0.78,computerscience,https://www.reddit.com/r/computerscience/comments/qu4c71/ive_always_loved_the_concept_of_instant_learning/,8,"one of the things that fascinated me the most in the cyberpunk genre, was the ability to have instant learning, such as when neo learns how to fight in matrix, or when in neuromancer you had those chips in the back of your ear, that made you a instant fluent chinese speaker. knowing the existence of biocomputing, and those biomechanical arms that responds to brain impulses, i started asking myself if there would not be any papers that could help me grasp an idea of real life applications between computing, the human body and the learning process... is there any book or paper recommendation where i could follow?",1636938467.0,"['one', 'thing', 'fascinate', 'cyberpunk', 'genre', ',', 'ability', 'instant', 'learn', ',', 'neo', 'learns', 'fight', 'matrix', ',', 'neuromancer', 'chip', 'back', 'ear', ',', 'make', 'instant', 'fluent', 'chinese', 'speaker', '.', 'know', 'existence', 'biocomputing', ',', 'biomechanical', 'arm', 'responds', 'brain', 'impulse', ',', 'start', 'ask', 'would', 'paper', 'could', 'help', 'grasp', 'idea', 'real', 'life', 'application', 'compute', ',', 'human', 'body', 'learn', 'process', '...', 'book', 'paper', 'recommendation', 'could', 'follow', '?']","[[('one', 'CD')], [('things', 'NNS')], [('fascinated', 'VBN')], [('cyberpunk', 'NN')], [('genre', 'NN')], [(',', ',')], [('ability', 'NN')], [('instant', 'NN')], [('learning', 'VBG')], [(',', ',')], [('neo', 'NN')], [('learns', 'NNS')], [('fight', 'NN')], [('matrix', 'NN')], [(',', ',')], [('neuromancer', 'NN')], [('chips', 'NNS')], [('back', 'RB')], [('ear', 'NN')], [(',', ',')], [('made', 'VBN')], [('instant', 'NN')], [('fluent', 'NN')], [('chinese', 'JJ')], [('speaker', 'NN')], [('.', '.')], [('knowing', 'VBG')], [('existence', 'NN')], [('biocomputing', 'NN')], [(',', ',')], [('biomechanical', 'JJ')], [('arms', 'NNS')], [('responds', 'NNS')], [('brain', 'NN')], [('impulses', 'NNS')], [(',', ',')], [('started', 'VBN')], [('asking', 'VBG')], [('would', 'MD')], [('papers', 'NNS')], [('could', 'MD')], [('help', 'NN')], [('grasp', 'NN')], [('idea', 'NN')], [('real', 'JJ')], [('life', 'NN')], [('applications', 'NNS')], [('computing', 'VBG')], [(',', ',')], [('human', 'NN')], [('body', 'NN')], [('learning', 'VBG')], [('process', 'NN')], [('...', ':')], [('book', 'NN')], [('paper', 'NN')], [('recommendation', 'NN')], [('could', 'MD')], [('follow', 'VB')], [('?', '.')]]","one thing fascinate cyberpunk genre , ability instant learn , neo learns fight matrix , neuromancer chip back ear , make instant fluent chinese speaker . know existence biocomputing , biomechanical arm responds brain impulse , start ask would paper could help grasp idea real life application compute , human body learn process ... book paper recommendation could follow ?",-1_abazbz2abz_2520_problem_use,5
486,quec2x,Can you recomend papers about reinforcement learning applied to games?,,1,1.0,computerscience,https://www.reddit.com/r/computerscience/comments/quec2x/can_you_recomend_papers_about_reinforcement/,1,can you recomend papers about reinforcement learning applied to games?,1636975603.0,"['recomend', 'paper', 'reinforcement', 'learn', 'apply', 'game', '?']","[[('recomend', 'NN')], [('papers', 'NNS')], [('reinforcement', 'NN')], [('learning', 'VBG')], [('applied', 'VBN')], [('games', 'NNS')], [('?', '.')]]",recomend paper reinforcement learn apply game ?,-1_abazbz2abz_2520_problem_use,5
487,quk6my,what’s the difference?,Help,0,0.29,computerscience,https://www.reddit.com/r/computerscience/comments/quk6my/whats_the_difference/,3,"are there any differences between computer science, programming, software engineering, and software developing? i have been using google and doing my own research, but each website i look at gives me a different answer and leaves me more confused",1636993510.0,"['difference', 'computer', 'science', ',', 'program', ',', 'software', 'engineering', ',', 'software', 'develop', '?', 'use', 'google', 'research', ',', 'website', 'look', 'give', 'different', 'answer', 'leaf', 'confuse']","[[('differences', 'NNS')], [('computer', 'NN')], [('science', 'NN')], [(',', ',')], [('programming', 'VBG')], [(',', ',')], [('software', 'NN')], [('engineering', 'NN')], [(',', ',')], [('software', 'NN')], [('developing', 'VBG')], [('?', '.')], [('using', 'VBG')], [('google', 'NN')], [('research', 'NN')], [(',', ',')], [('website', 'NN')], [('look', 'NN')], [('gives', 'VBZ')], [('different', 'JJ')], [('answer', 'NN')], [('leaves', 'NNS')], [('confused', 'VBN')]]","difference computer science , program , software engineering , software develop ? use google research , website look give different answer leaf confuse",2_computer_learn_science_study,2
488,qu426c,Why is LaTeX still used academically?,Discussion,2,0.75,computerscience,https://www.reddit.com/r/computerscience/comments/qu426c/why_is_latex_still_used_academically/,15,"i can understand the usage of it for the time it was created, but surely in recent years with the introduction of many other word processors ie word and gdocs, it would be made redundant? the inclusion of both equation and formatting tools in gdocs is really good, so why do academics still use latex?",1636937585.0,"['understand', 'usage', 'time', 'create', ',', 'surely', 'recent', 'year', 'introduction', 'many', 'word', 'processor', 'ie', 'word', 'gdocs', ',', 'would', 'make', 'redundant', '?', 'inclusion', 'equation', 'format', 'tool', 'gdocs', 'really', 'good', ',', 'academic', 'still', 'use', 'latex', '?']","[[('understand', 'NN')], [('usage', 'NN')], [('time', 'NN')], [('created', 'VBN')], [(',', ',')], [('surely', 'RB')], [('recent', 'JJ')], [('years', 'NNS')], [('introduction', 'NN')], [('many', 'JJ')], [('word', 'NN')], [('processors', 'NNS')], [('ie', 'NN')], [('word', 'NN')], [('gdocs', 'NN')], [(',', ',')], [('would', 'MD')], [('made', 'VBN')], [('redundant', 'NN')], [('?', '.')], [('inclusion', 'NN')], [('equation', 'NN')], [('formatting', 'VBG')], [('tools', 'NNS')], [('gdocs', 'NN')], [('really', 'RB')], [('good', 'JJ')], [(',', ',')], [('academics', 'NNS')], [('still', 'RB')], [('use', 'NN')], [('latex', 'NN')], [('?', '.')]]","understand usage time create , surely recent year introduction many word processor ie word gdocs , would make redundant ? inclusion equation format tool gdocs really good , academic still use latex ?",-1_abazbz2abz_2520_problem_use,3
490,qtl1ir,Approximating T(n-2) and T(n-1),Help,2,0.75,computerscience,https://www.reddit.com/r/computerscience/comments/qtl1ir/approximating_tn2_and_tn1/,1,"based on what i have read to get the closed form of the recursive fibonacci algorithm, you have to approximate `t(n-2)` to `t(n-1)` from `t(n) = t(n-2) + t(n-1) + c` and vice versa to eventually reach o(2^(n)).

the thing that is confusing me is **why** we should approximate it. the only thing i know so far is that t(n-2) will take lesser time than t(n-1), but i am just not sure of the mathematical explanation behind approximating both times to make them somewhat equal.",1636876550.0,"['base', 'read', 'get', 'close', 'form', 'recursive', 'fibonacci', 'algorithm', ',', 'approximate', '`', '(', 'n-2', ')', '`', '`', '(', 'n-1', ')', '`', '`', '(', 'n', ')', '=', '(', 'n-2', ')', '+', '(', 'n-1', ')', '+', 'c', '`', 'vice', 'versa', 'eventually', 'reach', '(', '2^', '(', 'n', ')', ')', '.', 'thing', 'confuse', '*', '*', '*', '*', 'approximate', '.', 'thing', 'know', 'far', '(', 'n-2', ')', 'take', 'lesser', 'time', '(', 'n-1', ')', ',', 'sure', 'mathematical', 'explanation', 'behind', 'approximate', 'time', 'make', 'somewhat', 'equal', '.']","[[('based', 'VBN')], [('read', 'NN')], [('get', 'VB')], [('closed', 'VBD')], [('form', 'NN')], [('recursive', 'NN')], [('fibonacci', 'NN')], [('algorithm', 'NN')], [(',', ',')], [('approximate', 'NN')], [('`', '``')], [('(', '(')], [('n-2', 'NN')], [(')', ')')], [('`', '``')], [('`', '``')], [('(', '(')], [('n-1', 'JJ')], [(')', ')')], [('`', '``')], [('`', '``')], [('(', '(')], [('n', 'NN')], [(')', ')')], [('=', 'NN')], [('(', '(')], [('n-2', 'NN')], [(')', ')')], [('+', 'NN')], [('(', '(')], [('n-1', 'JJ')], [(')', ')')], [('+', 'NN')], [('c', 'NNS')], [('`', '``')], [('vice', 'NN')], [('versa', 'NN')], [('eventually', 'RB')], [('reach', 'NN')], [('(', '(')], [('2^', 'CD')], [('(', '(')], [('n', 'NN')], [(')', ')')], [(')', ')')], [('.', '.')], [('thing', 'NN')], [('confusing', 'VBG')], [('*', 'NN')], [('*', 'NN')], [('*', 'NN')], [('*', 'NN')], [('approximate', 'NN')], [('.', '.')], [('thing', 'NN')], [('know', 'VB')], [('far', 'RB')], [('(', '(')], [('n-2', 'NN')], [(')', ')')], [('take', 'VB')], [('lesser', 'NN')], [('time', 'NN')], [('(', '(')], [('n-1', 'JJ')], [(')', ')')], [(',', ',')], [('sure', 'NN')], [('mathematical', 'JJ')], [('explanation', 'NN')], [('behind', 'IN')], [('approximating', 'VBG')], [('times', 'NNS')], [('make', 'VB')], [('somewhat', 'RB')], [('equal', 'JJ')], [('.', '.')]]","base read get close form recursive fibonacci algorithm , approximate ` ( n-2 ) ` ` ( n-1 ) ` ` ( n ) = ( n-2 ) + ( n-1 ) + c ` vice versa eventually reach ( 2^ ( n ) ) . thing confuse * * * * approximate . thing know far ( n-2 ) take lesser time ( n-1 ) , sure mathematical explanation behind approximate time make somewhat equal .",0_algorithm_time_node_bill,4
491,qtkimi,"Best books to understand Computer Architecture, threads, concurrency, processes and everything else that goes under the hood",,2,1.0,computerscience,https://www.reddit.com/r/computerscience/comments/qtkimi/best_books_to_understand_computer_architecture/,5,"hi!   
i am looking get a strong grip on the inner workings of cpus, threading, concurrency, instructions , simds and etc..  


right now i have a shallow understanding of the matter, i am looking for a new intro book into the whole thing, nothing very very technical - as i am starting to program with rust and get to grips with assembly language.  


basically, how does programming gets executed on the physical level, and how it all comes together to create these fascinating machines. thank you!",1636874256.0,"['hi', '!', 'look', 'get', 'strong', 'grip', 'inner', 'working', 'cpu', ',', 'thread', ',', 'concurrency', ',', 'instruction', ',', 'simds', 'etc', '..', 'right', 'shallow', 'understand', 'matter', ',', 'look', 'new', 'intro', 'book', 'whole', 'thing', ',', 'nothing', 'technical', '-', 'start', 'program', 'rust', 'get', 'grip', 'assembly', 'language', '.', 'basically', ',', 'program', 'get', 'execute', 'physical', 'level', ',', 'come', 'together', 'create', 'fascinate', 'machine', '.', 'thank', '!']","[[('hi', 'NN')], [('!', '.')], [('looking', 'VBG')], [('get', 'VB')], [('strong', 'JJ')], [('grip', 'NN')], [('inner', 'NN')], [('workings', 'NNS')], [('cpus', 'NN')], [(',', ',')], [('threading', 'VBG')], [(',', ',')], [('concurrency', 'NN')], [(',', ',')], [('instructions', 'NNS')], [(',', ',')], [('simds', 'NN')], [('etc', 'NN')], [('..', 'NN')], [('right', 'NN')], [('shallow', 'NN')], [('understanding', 'VBG')], [('matter', 'NN')], [(',', ',')], [('looking', 'VBG')], [('new', 'JJ')], [('intro', 'NN')], [('book', 'NN')], [('whole', 'JJ')], [('thing', 'NN')], [(',', ',')], [('nothing', 'NN')], [('technical', 'JJ')], [('-', ':')], [('starting', 'VBG')], [('program', 'NN')], [('rust', 'NN')], [('get', 'VB')], [('grips', 'NNS')], [('assembly', 'RB')], [('language', 'NN')], [('.', '.')], [('basically', 'RB')], [(',', ',')], [('programming', 'VBG')], [('gets', 'VBZ')], [('executed', 'VBN')], [('physical', 'JJ')], [('level', 'NN')], [(',', ',')], [('comes', 'VBZ')], [('together', 'RB')], [('create', 'NN')], [('fascinating', 'VBG')], [('machines', 'NNS')], [('.', '.')], [('thank', 'NN')], [('!', '.')]]","hi ! look get strong grip inner working cpu , thread , concurrency , instruction , simds etc .. right shallow understand matter , look new intro book whole thing , nothing technical - start program rust get grip assembly language . basically , program get execute physical level , come together create fascinate machine . thank !",5_cpu_computer_run_process,5
492,qtg8ok,Is there a formula to calculate the magnitude of precision loss with respect to the magnitude of a number presented by a float?,,0,0.5,computerscience,https://www.reddit.com/r/computerscience/comments/qtg8ok/is_there_a_formula_to_calculate_the_magnitude_of/,0,"we know that a float will lose precision as it is value increases. but is there a way to calculate when floats will be come, for example, at least one whole unit off? 

for example this algorithm would tell me that numbers of magnitude of 10\^9 will likely be off by a magnitude of 10\^-2.",1636857763.0,"['know', 'float', 'lose', 'precision', 'value', 'increase', '.', 'way', 'calculate', 'float', 'come', ',', 'example', ',', 'least', 'one', 'whole', 'unit', '?', 'example', 'algorithm', 'would', 'tell', 'number', 'magnitude', '10\\^9', 'likely', 'magnitude', '10\\^-2', '.']","[[('know', 'VB')], [('float', 'NN')], [('lose', 'VB')], [('precision', 'NN')], [('value', 'NN')], [('increases', 'NNS')], [('.', '.')], [('way', 'NN')], [('calculate', 'NN')], [('floats', 'NNS')], [('come', 'VB')], [(',', ',')], [('example', 'NN')], [(',', ',')], [('least', 'JJS')], [('one', 'CD')], [('whole', 'JJ')], [('unit', 'NN')], [('?', '.')], [('example', 'NN')], [('algorithm', 'NN')], [('would', 'MD')], [('tell', 'NN')], [('numbers', 'NNS')], [('magnitude', 'NN')], [('10\\^9', 'CD')], [('likely', 'JJ')], [('magnitude', 'NN')], [('10\\^-2', 'JJ')], [('.', '.')]]","know float lose precision value increase . way calculate float come , example , least one whole unit ? example algorithm would tell number magnitude 10\^9 likely magnitude 10\^-2 .",-1_abazbz2abz_2520_problem_use,3
494,qtet0i,What does K mean in O(nk) or O(n+k),Discussion,1,1.0,computerscience,https://www.reddit.com/r/computerscience/comments/qtet0i/what_does_k_mean_in_onk_or_onk/,2,"**so for the context:**

if i am assuming right the ""n"" stands for input or size of the array and when one says o(n) it means the statment will take ""**n""** number of times to complete it....

but what does ""**k""** mean?

[here]() op said this ⬇️

&#x200b;

[https:\/\/stackoverflow.com\/q\/27301287\/5630533]()

does that mean ""**k""** is just an another (secondary) notation for ""**n""**

&#x200b;

&#x200b;

[sorry, could not find the original link]()

&#x200b;

referencing the above table, how much would be the difference between cubic and polynomial if n is 10 and k is 0(can we even assume 0 for ""**k**"" value)?",1636852787.0,"['*', '*', 'context', ':', '*', '*', 'assume', 'right', '``', 'n', ""''"", 'stand', 'input', 'size', 'array', 'one', 'say', '(', 'n', ')', 'mean', 'statment', 'take', '``', '*', '*', 'n', ""''"", '*', '*', 'number', 'time', 'complete', '....', '``', '*', '*', 'k', ""''"", '*', '*', 'mean', '?', '[', ']', '(', ')', 'op', 'say', '⬇️', '&', '#', 'x200b', ';', '[', 'http', ':', '\\/\\/stackoverflow.com\\/q\\/27301287\\/5630533', ']', '(', ')', 'mean', '``', '*', '*', 'k', ""''"", '*', '*', 'another', '(', 'secondary', ')', 'notation', '``', '*', '*', 'n', ""''"", '*', '*', '&', '#', 'x200b', ';', '&', '#', 'x200b', ';', '[', 'sorry', ',', 'could', 'find', 'original', 'link', ']', '(', ')', '&', '#', 'x200b', ';', 'reference', 'table', ',', 'much', 'would', 'difference', 'cubic', 'polynomial', 'n', '10', 'k', '0', '(', 'even', 'assume', '0', '``', '*', '*', 'k', '*', '*', ""''"", 'value', ')', '?']","[[('*', 'NN')], [('*', 'NN')], [('context', 'NN')], [(':', ':')], [('*', 'NN')], [('*', 'NN')], [('assuming', 'VBG')], [('right', 'NN')], [('``', '``')], [('n', 'NN')], [(""''"", ""''"")], [('stands', 'NNS')], [('input', 'NN')], [('size', 'NN')], [('array', 'NN')], [('one', 'CD')], [('says', 'VBZ')], [('(', '(')], [('n', 'NN')], [(')', ')')], [('means', 'NNS')], [('statment', 'NN')], [('take', 'VB')], [('``', '``')], [('*', 'NN')], [('*', 'NN')], [('n', 'NN')], [(""''"", ""''"")], [('*', 'NN')], [('*', 'NN')], [('number', 'NN')], [('times', 'NNS')], [('complete', 'JJ')], [('....', 'NN')], [('``', '``')], [('*', 'NN')], [('*', 'NN')], [('k', 'NN')], [(""''"", ""''"")], [('*', 'NN')], [('*', 'NN')], [('mean', 'NN')], [('?', '.')], [('[', 'NN')], [(']', 'NN')], [('(', '(')], [(')', ')')], [('op', 'NN')], [('said', 'VBD')], [('⬇️', 'NN')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('[', 'NN')], [('https', 'NN')], [(':', ':')], [('\\/\\/stackoverflow.com\\/q\\/27301287\\/5630533', 'NN')], [(']', 'NN')], [('(', '(')], [(')', ')')], [('mean', 'NN')], [('``', '``')], [('*', 'NN')], [('*', 'NN')], [('k', 'NN')], [(""''"", ""''"")], [('*', 'NN')], [('*', 'NN')], [('another', 'DT')], [('(', '(')], [('secondary', 'JJ')], [(')', ')')], [('notation', 'NN')], [('``', '``')], [('*', 'NN')], [('*', 'NN')], [('n', 'NN')], [(""''"", ""''"")], [('*', 'NN')], [('*', 'NN')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('[', 'NN')], [('sorry', 'NN')], [(',', ',')], [('could', 'MD')], [('find', 'VB')], [('original', 'JJ')], [('link', 'NN')], [(']', 'NN')], [('(', '(')], [(')', ')')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('referencing', 'VBG')], [('table', 'NN')], [(',', ',')], [('much', 'JJ')], [('would', 'MD')], [('difference', 'NN')], [('cubic', 'NN')], [('polynomial', 'NN')], [('n', 'NN')], [('10', 'CD')], [('k', 'NN')], [('0', 'CD')], [('(', '(')], [('even', 'RB')], [('assume', 'VB')], [('0', 'CD')], [('``', '``')], [('*', 'NN')], [('*', 'NN')], [('k', 'NN')], [('*', 'NN')], [('*', 'NN')], [(""''"", ""''"")], [('value', 'NN')], [(')', ')')], [('?', '.')]]","* * context : * * assume right `` n '' stand input size array one say ( n ) mean statment take `` * * n '' * * number time complete .... `` * * k '' * * mean ? [ ] ( ) op say ⬇️ & # x200b ; [ http : \/\/stackoverflow.com\/q\/27301287\/5630533 ] ( ) mean `` * * k '' * * another ( secondary ) notation `` * * n '' * * & # x200b ; & # x200b ; [ sorry , could find original link ] ( ) & # x200b ; reference table , much would difference cubic polynomial n 10 k 0 ( even assume 0 `` * * k * * '' value ) ?",0_algorithm_time_node_bill,3
495,qtapfy,Any goods websites/newsletters for IT/CS news and research papers?,Article,1,1.0,computerscience,https://www.reddit.com/r/computerscience/comments/qtapfy/any_goods_websitesnewsletters_for_itcs_news_and/,1,"as the title suggests, as an undergraduate cs student, i would like to really improve my knowledge on the ongoing research, hardware improvement, linux news, security, etc. by reading more articles. i was wondering if some fellow redditors had anything to share?

i may also consider creating an rss stream.",1636839302.0,"['title', 'suggests', ',', 'undergraduate', 'c', 'student', ',', 'would', 'like', 'really', 'improve', 'knowledge', 'ongoing', 'research', ',', 'hardware', 'improvement', ',', 'linux', 'news', ',', 'security', ',', 'etc', '.', 'reading', 'article', '.', 'wonder', 'fellow', 'redditors', 'anything', 'share', '?', 'may', 'also', 'consider', 'create', 'r', 'stream', '.']","[[('title', 'NN')], [('suggests', 'NNS')], [(',', ',')], [('undergraduate', 'NN')], [('cs', 'NN')], [('student', 'NN')], [(',', ',')], [('would', 'MD')], [('like', 'IN')], [('really', 'RB')], [('improve', 'VB')], [('knowledge', 'NN')], [('ongoing', 'VBG')], [('research', 'NN')], [(',', ',')], [('hardware', 'NN')], [('improvement', 'NN')], [(',', ',')], [('linux', 'NN')], [('news', 'NN')], [(',', ',')], [('security', 'NN')], [(',', ',')], [('etc', 'NN')], [('.', '.')], [('reading', 'NN')], [('articles', 'NNS')], [('.', '.')], [('wondering', 'VBG')], [('fellow', 'NN')], [('redditors', 'NNS')], [('anything', 'NN')], [('share', 'NN')], [('?', '.')], [('may', 'MD')], [('also', 'RB')], [('consider', 'VB')], [('creating', 'VBG')], [('rss', 'NN')], [('stream', 'NN')], [('.', '.')]]","title suggests , undergraduate c student , would like really improve knowledge ongoing research , hardware improvement , linux news , security , etc . reading article . wonder fellow redditors anything share ? may also consider create r stream .",4_book_learn_computer_good,4
496,qt3e8y,How do computers know which binary values represent which numbers?,,2,0.67,computerscience,https://www.reddit.com/r/computerscience/comments/qt3e8y/how_do_computers_know_which_binary_values/,11,"in computer science, we learn that computers only understand base 2, essentially binary. but how do computers actually know which numbers are which? for example, the number 00000011. how does the computer know the the 1st '1'(from the right to left) represents 1(in denary), and the second '1' represents 2, which adds up to 3? i am hoping for a low level explanation. thank you!",1636816896.0,"['computer', 'science', ',', 'learn', 'computer', 'understand', 'base', '2', ',', 'essentially', 'binary', '.', 'computer', 'actually', 'know', 'number', '?', 'example', ',', 'number', '00000011.', 'computer', 'know', '1st', ""'"", '1', ""'"", '(', 'right', 'left', ')', 'represent', '1', '(', 'denary', ')', ',', 'second', ""'"", '1', ""'"", 'represent', '2', ',', 'add', '3', '?', 'hop', 'low', 'level', 'explanation', '.', 'thank', '!']","[[('computer', 'NN')], [('science', 'NN')], [(',', ',')], [('learn', 'NN')], [('computers', 'NNS')], [('understand', 'NN')], [('base', 'NN')], [('2', 'CD')], [(',', ',')], [('essentially', 'RB')], [('binary', 'NN')], [('.', '.')], [('computers', 'NNS')], [('actually', 'RB')], [('know', 'VB')], [('numbers', 'NNS')], [('?', '.')], [('example', 'NN')], [(',', ',')], [('number', 'NN')], [('00000011.', 'CD')], [('computer', 'NN')], [('know', 'VB')], [('1st', 'CD')], [(""'"", ""''"")], [('1', 'CD')], [(""'"", ""''"")], [('(', '(')], [('right', 'NN')], [('left', 'NN')], [(')', ')')], [('represents', 'VBZ')], [('1', 'CD')], [('(', '(')], [('denary', 'JJ')], [(')', ')')], [(',', ',')], [('second', 'JJ')], [(""'"", ""''"")], [('1', 'CD')], [(""'"", ""''"")], [('represents', 'VBZ')], [('2', 'CD')], [(',', ',')], [('adds', 'VBZ')], [('3', 'CD')], [('?', '.')], [('hoping', 'VBG')], [('low', 'JJ')], [('level', 'NN')], [('explanation', 'NN')], [('.', '.')], [('thank', 'NN')], [('!', '.')]]","computer science , learn computer understand base 2 , essentially binary . computer actually know number ? example , number 00000011. computer know 1st ' 1 ' ( right left ) represent 1 ( denary ) , second ' 1 ' represent 2 , add 3 ? hop low level explanation . thank !",1_memory_byte_data_alignment,3
497,qsn40p,What is the difference between synchronous and asynchronous sequential circuits?,Help,27,0.82,computerscience,https://www.reddit.com/r/computerscience/comments/qsn40p/what_is_the_difference_between_synchronous_and/,3,"hi everyone! first of all, i am sorry if this post can be a little bit confusing, i am trying to gather all i have understood so far to make it as clear as possible.

so, i am attending a logical networks class, and we started some days ago talking about sequential circuits. today, our professor introduced us to synchronous and asynchronous circuits, but not in the same way i found online.

he introduced them by saying this:
basically an asynchronous circuit is a circuit that whatever the state and the input (q1,i) you consider, will always end up in a steady state (qn, i), where if you keep i as an input you will keep staying in the qn state.

and, contrary to this, he told us that synchronous circuits are circuits where not all states and inputs have this property.

so what does that specifically mean? i struggle to understand the concept, as some of the example he gave us for synchronous circuits (one of them was a machine that was able to recognise if there was a 101 sequence in the input) seemed to have the steady state property i talked about before, so i think i might be missing something.

that said, he then explained us that for that reason (not every state with an input i will end up in a steady state) we need an external synching (a clock) and a memory to make a state steady. why is that? and why do not we need that for asynchronous circuits?

lastly, he talked about how some of these machines need just an impulse or a longer signal to work (and for example an asynchronous machine cannot recognise a '00' input as it operates when an input changes, so it can only tell that the last input was a (for example) 1 and this one is a 0). how do you tell that? 

hope this was clear, thank you for everyone who chooses to spend their time to help me understand :)

oh and, do not take my words for something so accurate of what our professor told us, since i am trying to rephrase these things from what i have understood.",1636757693.0,"['hi', 'everyone', '!', 'first', ',', 'sorry', 'post', 'little', 'bit', 'confuse', ',', 'try', 'gather', 'understood', 'far', 'make', 'clear', 'possible', '.', ',', 'attend', 'logical', 'network', 'class', ',', 'start', 'day', 'ago', 'talk', 'sequential', 'circuit', '.', 'today', ',', 'professor', 'introduce', 'u', 'synchronous', 'asynchronous', 'circuit', ',', 'way', 'found', 'online', '.', 'introduce', 'say', ':', 'basically', 'asynchronous', 'circuit', 'circuit', 'whatever', 'state', 'input', '(', 'q1', ',', ')', 'consider', ',', 'always', 'end', 'steady', 'state', '(', 'qn', ',', ')', ',', 'keep', 'input', 'keep', 'stay', 'qn', 'state', '.', ',', 'contrary', ',', 'told', 'u', 'synchronous', 'circuit', 'circuit', 'state', 'input', 'property', '.', 'specifically', 'mean', '?', 'struggle', 'understand', 'concept', ',', 'example', 'give', 'u', 'synchronous', 'circuit', '(', 'one', 'machine', 'able', 'recognise', '101', 'sequence', 'input', ')', 'seem', 'steady', 'state', 'property', 'talk', ',', 'think', 'might', 'miss', 'something', '.', 'say', ',', 'explain', 'u', 'reason', '(', 'every', 'state', 'input', 'end', 'steady', 'state', ')', 'need', 'external', 'synching', '(', 'clock', ')', 'memory', 'make', 'state', 'steady', '.', '?', 'need', 'asynchronous', 'circuit', '?', 'lastly', ',', 'talk', 'machine', 'need', 'impulse', 'longer', 'signal', 'work', '(', 'example', 'asynchronous', 'machine', 'recognise', ""'00"", ""'"", 'input', 'operates', 'input', 'change', ',', 'tell', 'last', 'input', '(', 'example', ')', '1', 'one', '0', ')', '.', 'tell', '?', 'hope', 'clear', ',', 'thank', 'everyone', 'chooses', 'spend', 'time', 'help', 'understand', ':', ')', 'oh', ',', 'take', 'word', 'something', 'accurate', 'professor', 'told', 'u', ',', 'since', 'try', 'rephrase', 'thing', 'understood', '.']","[[('hi', 'NN')], [('everyone', 'NN')], [('!', '.')], [('first', 'RB')], [(',', ',')], [('sorry', 'NN')], [('post', 'NN')], [('little', 'JJ')], [('bit', 'NN')], [('confusing', 'VBG')], [(',', ',')], [('trying', 'VBG')], [('gather', 'NN')], [('understood', 'NN')], [('far', 'RB')], [('make', 'VB')], [('clear', 'JJ')], [('possible', 'JJ')], [('.', '.')], [(',', ',')], [('attending', 'VBG')], [('logical', 'JJ')], [('networks', 'NNS')], [('class', 'NN')], [(',', ',')], [('started', 'VBN')], [('days', 'NNS')], [('ago', 'RB')], [('talking', 'VBG')], [('sequential', 'JJ')], [('circuits', 'NNS')], [('.', '.')], [('today', 'NN')], [(',', ',')], [('professor', 'NN')], [('introduced', 'VBN')], [('us', 'PRP')], [('synchronous', 'JJ')], [('asynchronous', 'JJ')], [('circuits', 'NNS')], [(',', ',')], [('way', 'NN')], [('found', 'NN')], [('online', 'NN')], [('.', '.')], [('introduced', 'VBN')], [('saying', 'VBG')], [(':', ':')], [('basically', 'RB')], [('asynchronous', 'JJ')], [('circuit', 'NN')], [('circuit', 'NN')], [('whatever', 'WDT')], [('state', 'NN')], [('input', 'NN')], [('(', '(')], [('q1', 'NN')], [(',', ',')], [(')', ')')], [('consider', 'VB')], [(',', ',')], [('always', 'RB')], [('end', 'NN')], [('steady', 'JJ')], [('state', 'NN')], [('(', '(')], [('qn', 'NN')], [(',', ',')], [(')', ')')], [(',', ',')], [('keep', 'VB')], [('input', 'NN')], [('keep', 'VB')], [('staying', 'VBG')], [('qn', 'NN')], [('state', 'NN')], [('.', '.')], [(',', ',')], [('contrary', 'JJ')], [(',', ',')], [('told', 'NN')], [('us', 'PRP')], [('synchronous', 'JJ')], [('circuits', 'NNS')], [('circuits', 'NNS')], [('states', 'NNS')], [('inputs', 'NNS')], [('property', 'NN')], [('.', '.')], [('specifically', 'RB')], [('mean', 'NN')], [('?', '.')], [('struggle', 'NN')], [('understand', 'NN')], [('concept', 'NN')], [(',', ',')], [('example', 'NN')], [('gave', 'VBD')], [('us', 'PRP')], [('synchronous', 'JJ')], [('circuits', 'NNS')], [('(', '(')], [('one', 'CD')], [('machine', 'NN')], [('able', 'JJ')], [('recognise', 'NN')], [('101', 'CD')], [('sequence', 'NN')], [('input', 'NN')], [(')', ')')], [('seemed', 'VBD')], [('steady', 'JJ')], [('state', 'NN')], [('property', 'NN')], [('talked', 'VBD')], [(',', ',')], [('think', 'NN')], [('might', 'MD')], [('missing', 'VBG')], [('something', 'NN')], [('.', '.')], [('said', 'VBD')], [(',', ',')], [('explained', 'VBD')], [('us', 'PRP')], [('reason', 'NN')], [('(', '(')], [('every', 'DT')], [('state', 'NN')], [('input', 'NN')], [('end', 'NN')], [('steady', 'JJ')], [('state', 'NN')], [(')', ')')], [('need', 'NN')], [('external', 'JJ')], [('synching', 'VBG')], [('(', '(')], [('clock', 'NN')], [(')', ')')], [('memory', 'NN')], [('make', 'VB')], [('state', 'NN')], [('steady', 'JJ')], [('.', '.')], [('?', '.')], [('need', 'NN')], [('asynchronous', 'JJ')], [('circuits', 'NNS')], [('?', '.')], [('lastly', 'RB')], [(',', ',')], [('talked', 'VBD')], [('machines', 'NNS')], [('need', 'NN')], [('impulse', 'NN')], [('longer', 'NN')], [('signal', 'NN')], [('work', 'NN')], [('(', '(')], [('example', 'NN')], [('asynchronous', 'JJ')], [('machine', 'NN')], [('recognise', 'NN')], [(""'00"", 'NNS')], [(""'"", ""''"")], [('input', 'NN')], [('operates', 'NNS')], [('input', 'NN')], [('changes', 'NNS')], [(',', ',')], [('tell', 'NN')], [('last', 'JJ')], [('input', 'NN')], [('(', '(')], [('example', 'NN')], [(')', ')')], [('1', 'CD')], [('one', 'CD')], [('0', 'CD')], [(')', ')')], [('.', '.')], [('tell', 'NN')], [('?', '.')], [('hope', 'NN')], [('clear', 'JJ')], [(',', ',')], [('thank', 'NN')], [('everyone', 'NN')], [('chooses', 'NNS')], [('spend', 'NN')], [('time', 'NN')], [('help', 'NN')], [('understand', 'NN')], [(':', ':')], [(')', ')')], [('oh', 'NN')], [(',', ',')], [('take', 'VB')], [('words', 'NNS')], [('something', 'NN')], [('accurate', 'NN')], [('professor', 'NN')], [('told', 'NN')], [('us', 'PRP')], [(',', ',')], [('since', 'IN')], [('trying', 'VBG')], [('rephrase', 'NN')], [('things', 'NNS')], [('understood', 'NN')], [('.', '.')]]","hi everyone ! first , sorry post little bit confuse , try gather understood far make clear possible . , attend logical network class , start day ago talk sequential circuit . today , professor introduce u synchronous asynchronous circuit , way found online . introduce say : basically asynchronous circuit circuit whatever state input ( q1 , ) consider , always end steady state ( qn , ) , keep input keep stay qn state . , contrary , told u synchronous circuit circuit state input property . specifically mean ? struggle understand concept , example give u synchronous circuit ( one machine able recognise 101 sequence input ) seem steady state property talk , think might miss something . say , explain u reason ( every state input end steady state ) need external synching ( clock ) memory make state steady . ? need asynchronous circuit ? lastly , talk machine need impulse longer signal work ( example asynchronous machine recognise '00 ' input operates input change , tell last input ( example ) 1 one 0 ) . tell ? hope clear , thank everyone chooses spend time help understand : ) oh , take word something accurate professor told u , since try rephrase thing understood .",-1_abazbz2abz_2520_problem_use,4
498,qs8dso,What’s the difference between programming and computer science?,Help,85,0.9,computerscience,https://www.reddit.com/r/computerscience/comments/qs8dso/whats_the_difference_between_programming_and/,38,i am going to take introductory classes at my uni and there is two diff options,1636712906.0,"['go', 'take', 'introductory', 'class', 'uni', 'two', 'diff', 'option']","[[('going', 'VBG')], [('take', 'VB')], [('introductory', 'NN')], [('classes', 'NNS')], [('uni', 'JJ')], [('two', 'CD')], [('diff', 'NN')], [('options', 'NNS')]]",go take introductory class uni two diff option,2_computer_learn_science_study,4
499,qsis3v,"How are supercomputers utilized and how does one present a usecase for the machine(not that I want to, just curious)?",,17,0.95,computerscience,https://www.reddit.com/r/computerscience/comments/qsis3v/how_are_supercomputers_utilized_and_how_does_one/,4,"i have been in a development capacity at my job for about 4 years. i work on the bulk of the sql and c# interactions on our flagship products. so i have a pretty good understanding of what a supercomputer is and what they are good at. (not saying my job gives me that knowledge, just saying i work in the industry and pay pretty close attention to these topics for fun) so, what i am most curious about are the nvidia, intel, ibm, etc companies that build these things and how they decide what application the machine is used for. like radio telescopes, for example, i know universities, companies, really any organization can apply for dedicated time with the telescopes. is it similar to that? can someone submit a proof of concept to these corporations and then get approved or denied? or do all projects that use the computers just come from their internal teams? i recently saw a future growth model of earth coming out nvidia's supercomputer. it showed weather patterns, climate shifts, all sorts of really cool things. so i just kind of got to thinking about the origins of these projects and the process. i checked the rules out and i think this is an okay question for this sub, if not, i can post it elsewhere. thanks!",1636745237.0,"['development', 'capacity', 'job', '4', 'year', '.', 'work', 'bulk', 'sql', 'c', '#', 'interaction', 'flagship', 'product', '.', 'pretty', 'good', 'understand', 'supercomputer', 'good', '.', '(', 'say', 'job', 'give', 'knowledge', ',', 'say', 'work', 'industry', 'pay', 'pretty', 'close', 'attention', 'topic', 'fun', ')', ',', 'curious', 'nvidia', ',', 'intel', ',', 'ibm', ',', 'etc', 'company', 'build', 'thing', 'decide', 'application', 'machine', 'use', '.', 'like', 'radio', 'telescope', ',', 'example', ',', 'know', 'university', ',', 'company', ',', 'really', 'organization', 'apply', 'dedicate', 'time', 'telescope', '.', 'similar', '?', 'someone', 'submit', 'proof', 'concept', 'corporation', 'get', 'approve', 'deny', '?', 'project', 'use', 'computer', 'come', 'internal', 'team', '?', 'recently', 'saw', 'future', 'growth', 'model', 'earth', 'come', 'nvidia', ""'s"", 'supercomputer', '.', 'show', 'weather', 'pattern', ',', 'climate', 'shift', ',', 'sort', 'really', 'cool', 'thing', '.', 'kind', 'get', 'think', 'origin', 'project', 'process', '.', 'checked', 'rule', 'think', 'okay', 'question', 'sub', ',', ',', 'post', 'elsewhere', '.', 'thanks', '!']","[[('development', 'NN')], [('capacity', 'NN')], [('job', 'NN')], [('4', 'CD')], [('years', 'NNS')], [('.', '.')], [('work', 'NN')], [('bulk', 'NN')], [('sql', 'NN')], [('c', 'NNS')], [('#', '#')], [('interactions', 'NNS')], [('flagship', 'NN')], [('products', 'NNS')], [('.', '.')], [('pretty', 'RB')], [('good', 'JJ')], [('understanding', 'VBG')], [('supercomputer', 'NN')], [('good', 'JJ')], [('.', '.')], [('(', '(')], [('saying', 'VBG')], [('job', 'NN')], [('gives', 'VBZ')], [('knowledge', 'NN')], [(',', ',')], [('saying', 'VBG')], [('work', 'NN')], [('industry', 'NN')], [('pay', 'NN')], [('pretty', 'RB')], [('close', 'RB')], [('attention', 'NN')], [('topics', 'NNS')], [('fun', 'NN')], [(')', ')')], [(',', ',')], [('curious', 'JJ')], [('nvidia', 'NN')], [(',', ',')], [('intel', 'NN')], [(',', ',')], [('ibm', 'NN')], [(',', ',')], [('etc', 'NN')], [('companies', 'NNS')], [('build', 'NN')], [('things', 'NNS')], [('decide', 'NN')], [('application', 'NN')], [('machine', 'NN')], [('used', 'VBN')], [('.', '.')], [('like', 'IN')], [('radio', 'NN')], [('telescopes', 'NNS')], [(',', ',')], [('example', 'NN')], [(',', ',')], [('know', 'VB')], [('universities', 'NNS')], [(',', ',')], [('companies', 'NNS')], [(',', ',')], [('really', 'RB')], [('organization', 'NN')], [('apply', 'VB')], [('dedicated', 'VBN')], [('time', 'NN')], [('telescopes', 'NNS')], [('.', '.')], [('similar', 'JJ')], [('?', '.')], [('someone', 'NN')], [('submit', 'NN')], [('proof', 'NN')], [('concept', 'NN')], [('corporations', 'NNS')], [('get', 'VB')], [('approved', 'VBN')], [('denied', 'VBD')], [('?', '.')], [('projects', 'NNS')], [('use', 'NN')], [('computers', 'NNS')], [('come', 'VB')], [('internal', 'JJ')], [('teams', 'NNS')], [('?', '.')], [('recently', 'RB')], [('saw', 'NN')], [('future', 'NN')], [('growth', 'NN')], [('model', 'NN')], [('earth', 'NN')], [('coming', 'VBG')], [('nvidia', 'NN')], [(""'s"", 'POS')], [('supercomputer', 'NN')], [('.', '.')], [('showed', 'VBD')], [('weather', 'NN')], [('patterns', 'NNS')], [(',', ',')], [('climate', 'NN')], [('shifts', 'NNS')], [(',', ',')], [('sorts', 'NNS')], [('really', 'RB')], [('cool', 'NN')], [('things', 'NNS')], [('.', '.')], [('kind', 'NN')], [('got', 'VBD')], [('thinking', 'VBG')], [('origins', 'NNS')], [('projects', 'NNS')], [('process', 'NN')], [('.', '.')], [('checked', 'NNS')], [('rules', 'NNS')], [('think', 'NN')], [('okay', 'NN')], [('question', 'NN')], [('sub', 'NN')], [(',', ',')], [(',', ',')], [('post', 'NN')], [('elsewhere', 'RB')], [('.', '.')], [('thanks', 'NNS')], [('!', '.')]]","development capacity job 4 year . work bulk sql c # interaction flagship product . pretty good understand supercomputer good . ( say job give knowledge , say work industry pay pretty close attention topic fun ) , curious nvidia , intel , ibm , etc company build thing decide application machine use . like radio telescope , example , know university , company , really organization apply dedicate time telescope . similar ? someone submit proof concept corporation get approve deny ? project use computer come internal team ? recently saw future growth model earth come nvidia 's supercomputer . show weather pattern , climate shift , sort really cool thing . kind get think origin project process . checked rule think okay question sub , , post elsewhere . thanks !",3_search_ai_think_google,3
500,qs8gkb,How do you read your books?,,13,1.0,computerscience,https://www.reddit.com/r/computerscience/comments/qs8gkb/how_do_you_read_your_books/,12,"cs has a lot of great material, so i thought of figuring out a strategy to learn it better, do you read a book like a novel for the first time, and then take notes? how often do you repeat your material etc",1636713262.0,"['c', 'lot', 'great', 'material', ',', 'thought', 'figure', 'strategy', 'learn', 'well', ',', 'read', 'book', 'like', 'novel', 'first', 'time', ',', 'take', 'note', '?', 'often', 'repeat', 'material', 'etc']","[[('cs', 'NN')], [('lot', 'NN')], [('great', 'JJ')], [('material', 'NN')], [(',', ',')], [('thought', 'NN')], [('figuring', 'VBG')], [('strategy', 'NN')], [('learn', 'NN')], [('better', 'RBR')], [(',', ',')], [('read', 'NN')], [('book', 'NN')], [('like', 'IN')], [('novel', 'NN')], [('first', 'RB')], [('time', 'NN')], [(',', ',')], [('take', 'VB')], [('notes', 'NNS')], [('?', '.')], [('often', 'RB')], [('repeat', 'NN')], [('material', 'NN')], [('etc', 'NN')]]","c lot great material , thought figure strategy learn well , read book like novel first time , take note ? often repeat material etc",2_computer_learn_science_study,3
501,qsg140,Are personal IP addresses stored on DNS?,,0,0.5,computerscience,https://www.reddit.com/r/computerscience/comments/qsg140/are_personal_ip_addresses_stored_on_dns/,4,"i have a very superficial understanding of how dns works. if you type ""[google.com]()"" into the browser input, the computer asks a server in the dns for google's ip address, the server either answers or asks another server for help, and eventually tells your computer where to go. 

so in my mind, these servers have a sort of ledger like ""[google.com]() : [216.58.223.255]() "" 

but what about my own public ip, for example? is that stored in there as well? if so, what information is associated with it? in other words, how the server be asked to look it up?",1636737568.0,"['superficial', 'understand', 'dns', 'work', '.', 'type', '``', '[', 'google.com', ']', '(', ')', ""''"", 'browser', 'input', ',', 'computer', 'asks', 'server', 'dns', 'google', ""'s"", 'ip', 'address', ',', 'server', 'either', 'answer', 'asks', 'another', 'server', 'help', ',', 'eventually', 'tell', 'computer', 'go', '.', 'mind', ',', 'server', 'sort', 'ledger', 'like', '``', '[', 'google.com', ']', '(', ')', ':', '[', '216.58.223.255', ']', '(', ')', '``', 'public', 'ip', ',', 'example', '?', 'store', 'well', '?', ',', 'information', 'associate', '?', 'word', ',', 'server', 'ask', 'look', '?']","[[('superficial', 'JJ')], [('understanding', 'VBG')], [('dns', 'NN')], [('works', 'NNS')], [('.', '.')], [('type', 'NN')], [('``', '``')], [('[', 'NN')], [('google.com', 'NN')], [(']', 'NN')], [('(', '(')], [(')', ')')], [(""''"", ""''"")], [('browser', 'NN')], [('input', 'NN')], [(',', ',')], [('computer', 'NN')], [('asks', 'NNS')], [('server', 'NN')], [('dns', 'NN')], [('google', 'NN')], [(""'s"", 'POS')], [('ip', 'NN')], [('address', 'NN')], [(',', ',')], [('server', 'NN')], [('either', 'DT')], [('answers', 'NNS')], [('asks', 'NNS')], [('another', 'DT')], [('server', 'NN')], [('help', 'NN')], [(',', ',')], [('eventually', 'RB')], [('tells', 'NNS')], [('computer', 'NN')], [('go', 'VB')], [('.', '.')], [('mind', 'NN')], [(',', ',')], [('servers', 'NNS')], [('sort', 'NN')], [('ledger', 'NN')], [('like', 'IN')], [('``', '``')], [('[', 'NN')], [('google.com', 'NN')], [(']', 'NN')], [('(', '(')], [(')', ')')], [(':', ':')], [('[', 'NN')], [('216.58.223.255', 'CD')], [(']', 'NN')], [('(', '(')], [(')', ')')], [('``', '``')], [('public', 'NN')], [('ip', 'NN')], [(',', ',')], [('example', 'NN')], [('?', '.')], [('stored', 'VBN')], [('well', 'RB')], [('?', '.')], [(',', ',')], [('information', 'NN')], [('associated', 'VBN')], [('?', '.')], [('words', 'NNS')], [(',', ',')], [('server', 'NN')], [('asked', 'VBN')], [('look', 'NN')], [('?', '.')]]","superficial understand dns work . type `` [ google.com ] ( ) '' browser input , computer asks server dns google 's ip address , server either answer asks another server help , eventually tell computer go . mind , server sort ledger like `` [ google.com ] ( ) : [ 216.58.223.255 ] ( ) `` public ip , example ? store well ? , information associate ? word , server ask look ?",6_server_packet_key_hash,2
502,qqpf3o,What field of CS deals with cutting-edge research in creating better document formats like pdf?,,59,0.94,computerscience,https://www.reddit.com/r/computerscience/comments/qqpf3o/what_field_of_cs_deals_with_cuttingedge_research/,19,"in particular, is there a journal analogous to acm transactions on graphics (which publishes cutting-edge discoveries in the field of computer graphics), which publishes articles related to more portable, robust, efficient file formats for viewable documents like pdfs? 

is there any chance new discoveries are made (e.g. more efficient algorithms to compress documents), or is this only a purview of companies like adobe? i hope i am making sense.",1636531399.0,"['particular', ',', 'journal', 'analogous', 'acm', 'transaction', 'graphic', '(', 'publishes', 'cutting-edge', 'discovery', 'field', 'computer', 'graphic', ')', ',', 'publishes', 'article', 'related', 'portable', ',', 'robust', ',', 'efficient', 'file', 'format', 'viewable', 'document', 'like', 'pdfs', '?', 'chance', 'new', 'discovery', 'make', '(', 'e.g', '.', 'efficient', 'algorithm', 'compress', 'document', ')', ',', 'purview', 'company', 'like', 'adobe', '?', 'hope', 'make', 'sense', '.']","[[('particular', 'JJ')], [(',', ',')], [('journal', 'NN')], [('analogous', 'JJ')], [('acm', 'NN')], [('transactions', 'NNS')], [('graphics', 'NNS')], [('(', '(')], [('publishes', 'NNS')], [('cutting-edge', 'NN')], [('discoveries', 'NNS')], [('field', 'NN')], [('computer', 'NN')], [('graphics', 'NNS')], [(')', ')')], [(',', ',')], [('publishes', 'NNS')], [('articles', 'NNS')], [('related', 'JJ')], [('portable', 'JJ')], [(',', ',')], [('robust', 'NN')], [(',', ',')], [('efficient', 'NN')], [('file', 'NN')], [('formats', 'NNS')], [('viewable', 'JJ')], [('documents', 'NNS')], [('like', 'IN')], [('pdfs', 'NN')], [('?', '.')], [('chance', 'NN')], [('new', 'JJ')], [('discoveries', 'NNS')], [('made', 'VBN')], [('(', '(')], [('e.g', 'NN')], [('.', '.')], [('efficient', 'NN')], [('algorithms', 'NN')], [('compress', 'NN')], [('documents', 'NNS')], [(')', ')')], [(',', ',')], [('purview', 'NN')], [('companies', 'NNS')], [('like', 'IN')], [('adobe', 'NN')], [('?', '.')], [('hope', 'NN')], [('making', 'VBG')], [('sense', 'NN')], [('.', '.')]]","particular , journal analogous acm transaction graphic ( publishes cutting-edge discovery field computer graphic ) , publishes article related portable , robust , efficient file format viewable document like pdfs ? chance new discovery make ( e.g . efficient algorithm compress document ) , purview company like adobe ? hope make sense .",4_book_learn_computer_good,3
503,qqxc02,Can someone point me in the direction of some sort of algorithm that converts noisy analog data into binary,Help,10,1.0,computerscience,https://www.reddit.com/r/computerscience/comments/qqxc02/can_someone_point_me_in_the_direction_of_some/,10,"i am working with a cheap eeg sensor that outputs attention levels. this data has some noise (fluctuations). i want to turn a led on and off using this data. i am currently considering taking a mean of x values and if the mean is higher than a threshold, it is a 1 else 0. this is kind of naive and i was wondering if there are better algorithms out there for such problems?",1636559365.0,"['work', 'cheap', 'eeg', 'sensor', 'output', 'attention', 'level', '.', 'data', 'noise', '(', 'fluctuation', ')', '.', 'want', 'turn', 'lead', 'use', 'data', '.', 'currently', 'consider', 'take', 'mean', 'x', 'value', 'mean', 'high', 'threshold', ',', '1', 'else', '0.', 'kind', 'naive', 'wonder', 'well', 'algorithm', 'problem', '?']","[[('working', 'VBG')], [('cheap', 'NN')], [('eeg', 'NN')], [('sensor', 'NN')], [('outputs', 'NNS')], [('attention', 'NN')], [('levels', 'NNS')], [('.', '.')], [('data', 'NNS')], [('noise', 'NN')], [('(', '(')], [('fluctuations', 'NNS')], [(')', ')')], [('.', '.')], [('want', 'NN')], [('turn', 'NN')], [('led', 'VBN')], [('using', 'VBG')], [('data', 'NNS')], [('.', '.')], [('currently', 'RB')], [('considering', 'VBG')], [('taking', 'VBG')], [('mean', 'NN')], [('x', 'NN')], [('values', 'NNS')], [('mean', 'NN')], [('higher', 'JJR')], [('threshold', 'NN')], [(',', ',')], [('1', 'CD')], [('else', 'RB')], [('0.', 'CD')], [('kind', 'NN')], [('naive', 'JJ')], [('wondering', 'VBG')], [('better', 'RBR')], [('algorithms', 'NN')], [('problems', 'NNS')], [('?', '.')]]","work cheap eeg sensor output attention level . data noise ( fluctuation ) . want turn lead use data . currently consider take mean x value mean high threshold , 1 else 0. kind naive wonder well algorithm problem ?",-1_abazbz2abz_2520_problem_use,2
504,qqvz15,Information on a Conference,,4,1.0,computerscience,https://www.reddit.com/r/computerscience/comments/qqvz15/information_on_a_conference/,3,"does anyone know if the socpros conference is a respectable conference?
i know that the submitted papers are published by springer.",1636555474.0,"['anyone', 'know', 'socpros', 'conference', 'respectable', 'conference', '?', 'know', 'submit', 'paper', 'publish', 'springer', '.']","[[('anyone', 'NN')], [('know', 'VB')], [('socpros', 'NNS')], [('conference', 'NN')], [('respectable', 'JJ')], [('conference', 'NN')], [('?', '.')], [('know', 'VB')], [('submitted', 'VBN')], [('papers', 'NNS')], [('published', 'VBN')], [('springer', 'NN')], [('.', '.')]]",anyone know socpros conference respectable conference ? know submit paper publish springer .,4_book_learn_computer_good,3
505,qrlsrw,Everyone learning programming/computer science how do you deal with the fact that AI may be making you obsolete in a few years as you are busting your ass learning technologies and tools that may turn out to be almost useless?,,0,0.15,computerscience,https://www.reddit.com/r/computerscience/comments/qrlsrw/everyone_learning_programmingcomputer_science_how/,28,"i have been self teaching over a year, typical front end shit, but i do a lot or reading from programmers about ai tech replacing the future of coding jobs-makes me almost wish i chose a field that is not stable like plumbing or health.",1636638817.0,"['self', 'teach', 'year', ',', 'typical', 'front', 'end', 'shit', ',', 'lot', 'reading', 'programmer', 'ai', 'tech', 'replace', 'future', 'cod', 'jobs-makes', 'almost', 'wish', 'chose', 'field', 'stable', 'like', 'plumbing', 'health', '.']","[[('self', 'NN')], [('teaching', 'VBG')], [('year', 'NN')], [(',', ',')], [('typical', 'JJ')], [('front', 'NN')], [('end', 'NN')], [('shit', 'NN')], [(',', ',')], [('lot', 'NN')], [('reading', 'NN')], [('programmers', 'NNS')], [('ai', 'NN')], [('tech', 'NN')], [('replacing', 'VBG')], [('future', 'NN')], [('coding', 'VBG')], [('jobs-makes', 'NNS')], [('almost', 'RB')], [('wish', 'NN')], [('chose', 'NN')], [('field', 'NN')], [('stable', 'JJ')], [('like', 'IN')], [('plumbing', 'NN')], [('health', 'NN')], [('.', '.')]]","self teach year , typical front end shit , lot reading programmer ai tech replace future cod jobs-makes almost wish chose field stable like plumbing health .",2_computer_learn_science_study,3
506,qr8cpv,SWE influencers/pages you follow on social media?,General,0,0.23,computerscience,https://www.reddit.com/r/computerscience/comments/qr8cpv/swe_influencerspages_you_follow_on_social_media/,8,"who are the some social media influencers/pages (could be a meme page even) for swe? or maybe some of your favorite influencers for swe that you follow?

could be ig/tiktok/youtube/linkedin/etc.

thanks!",1636590290.0,"['social', 'medium', 'influencers/pages', '(', 'could', 'meme', 'page', 'even', ')', 'swe', '?', 'maybe', 'favorite', 'influencers', 'swe', 'follow', '?', 'could', 'ig/tiktok/youtube/linkedin/etc', '.', 'thanks', '!']","[[('social', 'JJ')], [('media', 'NNS')], [('influencers/pages', 'NNS')], [('(', '(')], [('could', 'MD')], [('meme', 'NN')], [('page', 'NN')], [('even', 'RB')], [(')', ')')], [('swe', 'NN')], [('?', '.')], [('maybe', 'RB')], [('favorite', 'NN')], [('influencers', 'NNS')], [('swe', 'NN')], [('follow', 'VB')], [('?', '.')], [('could', 'MD')], [('ig/tiktok/youtube/linkedin/etc', 'NN')], [('.', '.')], [('thanks', 'NNS')], [('!', '.')]]",social medium influencers/pages ( could meme page even ) swe ? maybe favorite influencers swe follow ? could ig/tiktok/youtube/linkedin/etc . thanks !,-1_abazbz2abz_2520_problem_use,1
508,qpu9g8,How do CPUs actually work ?,General,140,0.95,computerscience,https://www.reddit.com/r/computerscience/comments/qpu9g8/how_do_cpus_actually_work/,54,"i am curious as to how cpus actually communicate with the outside world.

i know it is electric currents flowing through transistors at the lowest level.

i know you can run compiled programs.

but where is the transition layer from one to the other ?

for example, intel creates a cpu and i write a program for it, let us say in assembly. i write the command: mov eax, \[ebx\] .

who translates 'mov' into what it actually does and who knows how to interpret that command ? is there a dictionary somewhere that says mov in binary is 0011010010011 (made up obv) and when you encounter that string of binary code you perform this function ?

even more, how can this be hardwired onto a cpu ? is mov a physical circuit that gets called whenever that command string is encountered ?

sorry for the avalanche of questions but this particular topic is very hazy to me. i cannot picture how a written command can direct electric current down in the cpu to do certain things.",1636426967.0,"['curious', 'cpu', 'actually', 'communicate', 'outside', 'world', '.', 'know', 'electric', 'current', 'flow', 'transistor', 'low', 'level', '.', 'know', 'run', 'compile', 'program', '.', 'transition', 'layer', 'one', '?', 'example', ',', 'intel', 'creates', 'cpu', 'write', 'program', ',', 'let', 'u', 'say', 'assembly', '.', 'write', 'command', ':', 'mov', 'eax', ',', '\\', '[', 'ebx\\', ']', '.', 'translates', ""'mov"", ""'"", 'actually', 'know', 'interpret', 'command', '?', 'dictionary', 'somewhere', 'say', 'mov', 'binary', '0011010010011', '(', 'make', 'obv', ')', 'encounter', 'string', 'binary', 'code', 'perform', 'function', '?', 'even', ',', 'hardwired', 'onto', 'cpu', '?', 'mov', 'physical', 'circuit', 'get', 'call', 'whenever', 'command', 'string', 'encounter', '?', 'sorry', 'avalanche', 'question', 'particular', 'topic', 'hazy', '.', 'picture', 'write', 'command', 'direct', 'electric', 'current', 'cpu', 'certain', 'thing', '.']","[[('curious', 'JJ')], [('cpus', 'NN')], [('actually', 'RB')], [('communicate', 'NN')], [('outside', 'IN')], [('world', 'NN')], [('.', '.')], [('know', 'VB')], [('electric', 'JJ')], [('currents', 'NNS')], [('flowing', 'VBG')], [('transistors', 'NNS')], [('lowest', 'JJS')], [('level', 'NN')], [('.', '.')], [('know', 'VB')], [('run', 'VB')], [('compiled', 'VBN')], [('programs', 'NNS')], [('.', '.')], [('transition', 'NN')], [('layer', 'NN')], [('one', 'CD')], [('?', '.')], [('example', 'NN')], [(',', ',')], [('intel', 'NN')], [('creates', 'NNS')], [('cpu', 'NN')], [('write', 'NN')], [('program', 'NN')], [(',', ',')], [('let', 'VB')], [('us', 'PRP')], [('say', 'VB')], [('assembly', 'RB')], [('.', '.')], [('write', 'NN')], [('command', 'NN')], [(':', ':')], [('mov', 'NN')], [('eax', 'NN')], [(',', ',')], [('\\', 'NN')], [('[', 'NN')], [('ebx\\', 'NN')], [(']', 'NN')], [('.', '.')], [('translates', 'NNS')], [(""'mov"", 'NNS')], [(""'"", ""''"")], [('actually', 'RB')], [('knows', 'NNS')], [('interpret', 'NN')], [('command', 'NN')], [('?', '.')], [('dictionary', 'JJ')], [('somewhere', 'RB')], [('says', 'VBZ')], [('mov', 'NN')], [('binary', 'NN')], [('0011010010011', 'CD')], [('(', '(')], [('made', 'VBN')], [('obv', 'NN')], [(')', ')')], [('encounter', 'NN')], [('string', 'NN')], [('binary', 'NN')], [('code', 'NN')], [('perform', 'NN')], [('function', 'NN')], [('?', '.')], [('even', 'RB')], [(',', ',')], [('hardwired', 'VBN')], [('onto', 'IN')], [('cpu', 'NN')], [('?', '.')], [('mov', 'NN')], [('physical', 'JJ')], [('circuit', 'NN')], [('gets', 'VBZ')], [('called', 'VBN')], [('whenever', 'NN')], [('command', 'NN')], [('string', 'NN')], [('encountered', 'VBN')], [('?', '.')], [('sorry', 'NN')], [('avalanche', 'NN')], [('questions', 'NNS')], [('particular', 'JJ')], [('topic', 'NN')], [('hazy', 'NN')], [('.', '.')], [('picture', 'NN')], [('written', 'VBN')], [('command', 'NN')], [('direct', 'JJ')], [('electric', 'JJ')], [('current', 'JJ')], [('cpu', 'NN')], [('certain', 'JJ')], [('things', 'NNS')], [('.', '.')]]","curious cpu actually communicate outside world . know electric current flow transistor low level . know run compile program . transition layer one ? example , intel creates cpu write program , let u say assembly . write command : mov eax , \ [ ebx\ ] . translates 'mov ' actually know interpret command ? dictionary somewhere say mov binary 0011010010011 ( make obv ) encounter string binary code perform function ? even , hardwired onto cpu ? mov physical circuit get call whenever command string encounter ? sorry avalanche question particular topic hazy . picture write command direct electric current cpu certain thing .",5_cpu_computer_run_process,3
509,qpl4wt,Impact of computational science in research?,,23,0.9,computerscience,https://www.reddit.com/r/computerscience/comments/qpl4wt/impact_of_computational_science_in_research/,13,can anyone provide me with some examples of the impact computational science has had on science and research? how many advancements have been made with direct help from cs in thr past decade?,1636399760.0,"['anyone', 'provide', 'example', 'impact', 'computational', 'science', 'science', 'research', '?', 'many', 'advancement', 'make', 'direct', 'help', 'c', 'thr', 'past', 'decade', '?']","[[('anyone', 'NN')], [('provide', 'NN')], [('examples', 'NNS')], [('impact', 'NN')], [('computational', 'NN')], [('science', 'NN')], [('science', 'NN')], [('research', 'NN')], [('?', '.')], [('many', 'JJ')], [('advancements', 'NNS')], [('made', 'VBN')], [('direct', 'JJ')], [('help', 'NN')], [('cs', 'NN')], [('thr', 'NN')], [('past', 'NN')], [('decade', 'NN')], [('?', '.')]]",anyone provide example impact computational science science research ? many advancement make direct help c thr past decade ?,-1_abazbz2abz_2520_problem_use,3
511,qpr8lq,Trying to read server memory bytes via postgresql vulnerability in Kali-Linux VM,,2,0.75,computerscience,https://www.reddit.com/r/computerscience/comments/qpr8lq/trying_to_read_server_memory_bytes_via_postgresql/,1,"
basically i found this vulnerability and i want to perform it on my system. i installed this virtual machine (64-bit for virtualbox):    -kali/#kali-virtual-machines      and here is the vulnerability: -debian11-postgresql13-1292197         i am really confused how is even do this, so far i know how to start postgresql and i can create a table in a database. if anyone could assist me in anyway i would really appreciate it.",1636417260.0,"['basically', 'found', 'vulnerability', 'want', 'perform', 'system', '.', 'instal', 'virtual', 'machine', '(', '64-bit', 'virtualbox', ')', ':', '-kali/', '#', 'kali-virtual-machines', 'vulnerability', ':', '-debian11-postgresql13-1292197', 'really', 'confuse', 'even', ',', 'far', 'know', 'start', 'postgresql', 'create', 'table', 'database', '.', 'anyone', 'could', 'assist', 'anyway', 'would', 'really', 'appreciate', '.']","[[('basically', 'RB')], [('found', 'NN')], [('vulnerability', 'NN')], [('want', 'NN')], [('perform', 'NN')], [('system', 'NN')], [('.', '.')], [('installed', 'VBN')], [('virtual', 'JJ')], [('machine', 'NN')], [('(', '(')], [('64-bit', 'NN')], [('virtualbox', 'NN')], [(')', ')')], [(':', ':')], [('-kali/', 'NN')], [('#', '#')], [('kali-virtual-machines', 'NNS')], [('vulnerability', 'NN')], [(':', ':')], [('-debian11-postgresql13-1292197', 'NN')], [('really', 'RB')], [('confused', 'VBN')], [('even', 'RB')], [(',', ',')], [('far', 'RB')], [('know', 'VB')], [('start', 'NN')], [('postgresql', 'NN')], [('create', 'NN')], [('table', 'NN')], [('database', 'NN')], [('.', '.')], [('anyone', 'NN')], [('could', 'MD')], [('assist', 'NN')], [('anyway', 'RB')], [('would', 'MD')], [('really', 'RB')], [('appreciate', 'NN')], [('.', '.')]]","basically found vulnerability want perform system . instal virtual machine ( 64-bit virtualbox ) : -kali/ # kali-virtual-machines vulnerability : -debian11-postgresql13-1292197 really confuse even , far know start postgresql create table database . anyone could assist anyway would really appreciate .",5_cpu_computer_run_process,2
512,qpjwrs,Question about the debate of how to end a string?,,1,0.6,computerscience,https://www.reddit.com/r/computerscience/comments/qpjwrs/question_about_the_debate_of_how_to_end_a_string/,5,"i am an it student, but [i am watching this video]() for fun and he explains the way developers can end a string (if that is the proper verbage). he explains a couple of different ways, the first being that the developer tells the computer how many characters they are looking for. he also explains that this is not efficient use of memory and then explains the second method, where developers would simply stick a \[null\] character at the end of the string. he also says that there are debates as to which method is better to use, but to someone with a pretty solid education with computers, i do not see why we do not just use a \[null\] character at the end of every string if it is so much more efficient than the alternative.",1636396422.0,"['student', ',', '[', 'watch', 'video', ']', '(', ')', 'fun', 'explains', 'way', 'developer', 'end', 'string', '(', 'proper', 'verbage', ')', '.', 'explains', 'couple', 'different', 'way', ',', 'first', 'developer', 'tell', 'computer', 'many', 'character', 'look', '.', 'also', 'explains', 'efficient', 'use', 'memory', 'explains', 'second', 'method', ',', 'developer', 'would', 'simply', 'stick', '\\', '[', 'null\\', ']', 'character', 'end', 'string', '.', 'also', 'say', 'debate', 'method', 'well', 'use', ',', 'someone', 'pretty', 'solid', 'education', 'computer', ',', 'see', 'use', '\\', '[', 'null\\', ']', 'character', 'end', 'every', 'string', 'much', 'efficient', 'alternative', '.']","[[('student', 'NN')], [(',', ',')], [('[', 'NN')], [('watching', 'VBG')], [('video', 'NN')], [(']', 'NN')], [('(', '(')], [(')', ')')], [('fun', 'NN')], [('explains', 'NNS')], [('way', 'NN')], [('developers', 'NNS')], [('end', 'NN')], [('string', 'NN')], [('(', '(')], [('proper', 'NN')], [('verbage', 'NN')], [(')', ')')], [('.', '.')], [('explains', 'NNS')], [('couple', 'NN')], [('different', 'JJ')], [('ways', 'NNS')], [(',', ',')], [('first', 'RB')], [('developer', 'NN')], [('tells', 'NNS')], [('computer', 'NN')], [('many', 'JJ')], [('characters', 'NNS')], [('looking', 'VBG')], [('.', '.')], [('also', 'RB')], [('explains', 'NNS')], [('efficient', 'NN')], [('use', 'NN')], [('memory', 'NN')], [('explains', 'NNS')], [('second', 'JJ')], [('method', 'NN')], [(',', ',')], [('developers', 'NNS')], [('would', 'MD')], [('simply', 'RB')], [('stick', 'NN')], [('\\', 'NN')], [('[', 'NN')], [('null\\', 'NN')], [(']', 'NN')], [('character', 'NN')], [('end', 'NN')], [('string', 'NN')], [('.', '.')], [('also', 'RB')], [('says', 'VBZ')], [('debates', 'NNS')], [('method', 'NN')], [('better', 'RBR')], [('use', 'NN')], [(',', ',')], [('someone', 'NN')], [('pretty', 'RB')], [('solid', 'JJ')], [('education', 'NN')], [('computers', 'NNS')], [(',', ',')], [('see', 'VB')], [('use', 'NN')], [('\\', 'NN')], [('[', 'NN')], [('null\\', 'NN')], [(']', 'NN')], [('character', 'NN')], [('end', 'NN')], [('every', 'DT')], [('string', 'NN')], [('much', 'JJ')], [('efficient', 'NN')], [('alternative', 'NN')], [('.', '.')]]","student , [ watch video ] ( ) fun explains way developer end string ( proper verbage ) . explains couple different way , first developer tell computer many character look . also explains efficient use memory explains second method , developer would simply stick \ [ null\ ] character end string . also say debate method well use , someone pretty solid education computer , see use \ [ null\ ] character end every string much efficient alternative .",-1_abazbz2abz_2520_problem_use,4
513,qosr3u,Standardized Methods for Monte Carlo Markov Chain (MCMC) Sampling Using Computer Language,,11,0.88,computerscience,https://www.reddit.com/r/computerscience/comments/qosr3u/standardized_methods_for_monte_carlo_markov_chain/,0,"hello!

i have been trying to research standard ways to perform sampling (mcmc) high density regions of multidimensional probability distributions using computer programs. as far as i can find, there do not seem to be any standardized ways of performing this sampling - and often requires the user to translate the mathematical algorithm into computer code.

i tried to attempt the implement this algorithm over : [-standard-method-for-mcmc-monte-carlo-markov-chain-sampling](-standard-method-for-mcmc-monte-carlo-markov-chain-sampling)

can someone please take a look at it and let me know if this is correct?

thanks!",1636304620.0,"['hello', '!', 'try', 'research', 'standard', 'way', 'perform', 'sample', '(', 'mcmc', ')', 'high', 'density', 'region', 'multidimensional', 'probability', 'distribution', 'use', 'computer', 'program', '.', 'far', 'find', ',', 'seem', 'standardize', 'way', 'perform', 'sample', '-', 'often', 'require', 'user', 'translate', 'mathematical', 'algorithm', 'computer', 'code', '.', 'try', 'attempt', 'implement', 'algorithm', ':', '[', '-standard-method-for-mcmc-monte-carlo-markov-chain-sampling', ']', '(', '-standard-method-for-mcmc-monte-carlo-markov-chain-sampling', ')', 'someone', 'please', 'take', 'look', 'let', 'know', 'correct', '?', 'thanks', '!']","[[('hello', 'NN')], [('!', '.')], [('trying', 'VBG')], [('research', 'NN')], [('standard', 'NN')], [('ways', 'NNS')], [('perform', 'NN')], [('sampling', 'VBG')], [('(', '(')], [('mcmc', 'NN')], [(')', ')')], [('high', 'JJ')], [('density', 'NN')], [('regions', 'NNS')], [('multidimensional', 'NN')], [('probability', 'NN')], [('distributions', 'NNS')], [('using', 'VBG')], [('computer', 'NN')], [('programs', 'NNS')], [('.', '.')], [('far', 'RB')], [('find', 'VB')], [(',', ',')], [('seem', 'NN')], [('standardized', 'VBN')], [('ways', 'NNS')], [('performing', 'VBG')], [('sampling', 'VBG')], [('-', ':')], [('often', 'RB')], [('requires', 'VBZ')], [('user', 'NN')], [('translate', 'NN')], [('mathematical', 'JJ')], [('algorithm', 'NN')], [('computer', 'NN')], [('code', 'NN')], [('.', '.')], [('tried', 'VBN')], [('attempt', 'NN')], [('implement', 'NN')], [('algorithm', 'NN')], [(':', ':')], [('[', 'NN')], [('-standard-method-for-mcmc-monte-carlo-markov-chain-sampling', 'VBG')], [(']', 'NN')], [('(', '(')], [('-standard-method-for-mcmc-monte-carlo-markov-chain-sampling', 'VBG')], [(')', ')')], [('someone', 'NN')], [('please', 'NN')], [('take', 'VB')], [('look', 'NN')], [('let', 'VB')], [('know', 'VB')], [('correct', 'NN')], [('?', '.')], [('thanks', 'NNS')], [('!', '.')]]","hello ! try research standard way perform sample ( mcmc ) high density region multidimensional probability distribution use computer program . far find , seem standardize way perform sample - often require user translate mathematical algorithm computer code . try attempt implement algorithm : [ -standard-method-for-mcmc-monte-carlo-markov-chain-sampling ] ( -standard-method-for-mcmc-monte-carlo-markov-chain-sampling ) someone please take look let know correct ? thanks !",0_algorithm_time_node_bill,2
514,qon555,Computer Science in pop culture,,22,0.82,computerscience,https://www.reddit.com/r/computerscience/comments/qon555/computer_science_in_pop_culture/,11,"hello, people. english is not my first language, so, sorry for any grammatical mistake.

&#x200b;

have you ever saw any tv show, or movie, or video game, with any direct reference to a subject from computer science?

&#x200b;

i see a lot of references to artificial intelligence and hacking, but few to other areas of cs. i am curious to see if there are references to other areas as well.",1636286480.0,"['hello', ',', 'people', '.', 'english', 'first', 'language', ',', ',', 'sorry', 'grammatical', 'mistake', '.', '&', '#', 'x200b', ';', 'ever', 'saw', 'tv', 'show', ',', 'movie', ',', 'video', 'game', ',', 'direct', 'reference', 'subject', 'computer', 'science', '?', '&', '#', 'x200b', ';', 'see', 'lot', 'reference', 'artificial', 'intelligence', 'hack', ',', 'area', 'c', '.', 'curious', 'see', 'reference', 'area', 'well', '.']","[[('hello', 'NN')], [(',', ',')], [('people', 'NNS')], [('.', '.')], [('english', 'JJ')], [('first', 'RB')], [('language', 'NN')], [(',', ',')], [(',', ',')], [('sorry', 'NN')], [('grammatical', 'JJ')], [('mistake', 'NN')], [('.', '.')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('ever', 'RB')], [('saw', 'NN')], [('tv', 'NN')], [('show', 'NN')], [(',', ',')], [('movie', 'NN')], [(',', ',')], [('video', 'NN')], [('game', 'NN')], [(',', ',')], [('direct', 'JJ')], [('reference', 'NN')], [('subject', 'NN')], [('computer', 'NN')], [('science', 'NN')], [('?', '.')], [('&', 'CC')], [('#', '#')], [('x200b', 'NN')], [(';', ':')], [('see', 'VB')], [('lot', 'NN')], [('references', 'NNS')], [('artificial', 'JJ')], [('intelligence', 'NN')], [('hacking', 'VBG')], [(',', ',')], [('areas', 'NNS')], [('cs', 'NN')], [('.', '.')], [('curious', 'JJ')], [('see', 'VB')], [('references', 'NNS')], [('areas', 'NNS')], [('well', 'RB')], [('.', '.')]]","hello , people . english first language , , sorry grammatical mistake . & # x200b ; ever saw tv show , movie , video game , direct reference subject computer science ? & # x200b ; see lot reference artificial intelligence hack , area c . curious see reference area well .",3_search_ai_think_google,1
515,qoyr6v,External version of RamDisk,Discussion,2,0.6,computerscience,https://www.reddit.com/r/computerscience/comments/qoyr6v/external_version_of_ramdisk/,6,"i have been thinking about starting a project to repurpose old ram from previously upgraded laptops and desktops. i would like to see if i can create an enclosure for holding multiple ram chips to be connected to a computer via usb or thunderbolt, and configuring them as an external disk. using software similar or even the very same as this below. []()

can anyone point out the burdens and obstacles that i may have to cope with and overcome in order to make a idea like this a reality. 

note: if your going to tell me this is not possible please do not bother, i need constructive ideas here only, the fact that this software exist is proof that a ram disk is possible, i just want to make it external.",1636321907.0,"['think', 'start', 'project', 'repurpose', 'old', 'ram', 'previously', 'upgraded', 'laptop', 'desktop', '.', 'would', 'like', 'see', 'create', 'enclosure', 'hold', 'multiple', 'ram', 'chip', 'connect', 'computer', 'via', 'usb', 'thunderbolt', ',', 'configure', 'external', 'disk', '.', 'use', 'software', 'similar', 'even', '.', '[', ']', '(', ')', 'anyone', 'point', 'burden', 'obstacle', 'may', 'cope', 'overcome', 'order', 'make', 'idea', 'like', 'reality', '.', 'note', ':', 'go', 'tell', 'possible', 'please', 'bother', ',', 'need', 'constructive', 'idea', ',', 'fact', 'software', 'exist', 'proof', 'ram', 'disk', 'possible', ',', 'want', 'make', 'external', '.']","[[('thinking', 'VBG')], [('starting', 'VBG')], [('project', 'NN')], [('repurpose', 'VB')], [('old', 'JJ')], [('ram', 'NN')], [('previously', 'RB')], [('upgraded', 'JJ')], [('laptops', 'NNS')], [('desktops', 'NNS')], [('.', '.')], [('would', 'MD')], [('like', 'IN')], [('see', 'VB')], [('create', 'NN')], [('enclosure', 'NN')], [('holding', 'VBG')], [('multiple', 'NN')], [('ram', 'NN')], [('chips', 'NNS')], [('connected', 'VBN')], [('computer', 'NN')], [('via', 'IN')], [('usb', 'NN')], [('thunderbolt', 'NN')], [(',', ',')], [('configuring', 'VBG')], [('external', 'JJ')], [('disk', 'NN')], [('.', '.')], [('using', 'VBG')], [('software', 'NN')], [('similar', 'JJ')], [('even', 'RB')], [('.', '.')], [('[', 'NN')], [(']', 'NN')], [('(', '(')], [(')', ')')], [('anyone', 'NN')], [('point', 'NN')], [('burdens', 'NNS')], [('obstacles', 'NNS')], [('may', 'MD')], [('cope', 'NN')], [('overcome', 'NN')], [('order', 'NN')], [('make', 'VB')], [('idea', 'NN')], [('like', 'IN')], [('reality', 'NN')], [('.', '.')], [('note', 'NN')], [(':', ':')], [('going', 'VBG')], [('tell', 'NN')], [('possible', 'JJ')], [('please', 'NN')], [('bother', 'NN')], [(',', ',')], [('need', 'NN')], [('constructive', 'NN')], [('ideas', 'NNS')], [(',', ',')], [('fact', 'NN')], [('software', 'NN')], [('exist', 'NN')], [('proof', 'NN')], [('ram', 'NN')], [('disk', 'NN')], [('possible', 'JJ')], [(',', ',')], [('want', 'NN')], [('make', 'VB')], [('external', 'JJ')], [('.', '.')]]","think start project repurpose old ram previously upgraded laptop desktop . would like see create enclosure hold multiple ram chip connect computer via usb thunderbolt , configure external disk . use software similar even . [ ] ( ) anyone point burden obstacle may cope overcome order make idea like reality . note : go tell possible please bother , need constructive idea , fact software exist proof ram disk possible , want make external .",5_cpu_computer_run_process,4
516,qoj0r4,Is it possible to encrypt an SSD/HDD/USB or even a whole PC based on geographical location?,,18,0.78,computerscience,https://www.reddit.com/r/computerscience/comments/qoj0r4/is_it_possible_to_encrypt_an_ssdhddusb_or_even_a/,10,"so for instance if i wanted to encrypt one of the above or multiple based on a specific location so it would only be unlocked if the password was entered while at a specific location such as let us say altitude, so the pc would have to be at a certain height to then be able to be unlocked with the password, is this possible?

because if it is, this would mean that essentially you can completely insure that even if they got the password right it still would not work, because they are not at the location which would be required. 

i have tried to find out by doing a quick internet search but no results show. 

any information would be helpful. 

(this is just for my personal curiosity.)",1636267434.0,"['instance', 'want', 'encrypt', 'one', 'multiple', 'base', 'specific', 'location', 'would', 'unlocked', 'password', 'enter', 'specific', 'location', 'let', 'u', 'say', 'altitude', ',', 'pc', 'would', 'certain', 'height', 'able', 'unlocked', 'password', ',', 'possible', '?', ',', 'would', 'mean', 'essentially', 'completely', 'insure', 'even', 'get', 'password', 'right', 'still', 'would', 'work', ',', 'location', 'would', 'require', '.', 'try', 'find', 'quick', 'internet', 'search', 'result', 'show', '.', 'information', 'would', 'helpful', '.', '(', 'personal', 'curiosity', '.', ')']","[[('instance', 'NN')], [('wanted', 'VBD')], [('encrypt', 'NN')], [('one', 'CD')], [('multiple', 'NN')], [('based', 'VBN')], [('specific', 'JJ')], [('location', 'NN')], [('would', 'MD')], [('unlocked', 'JJ')], [('password', 'NN')], [('entered', 'VBN')], [('specific', 'JJ')], [('location', 'NN')], [('let', 'VB')], [('us', 'PRP')], [('say', 'VB')], [('altitude', 'NN')], [(',', ',')], [('pc', 'NN')], [('would', 'MD')], [('certain', 'JJ')], [('height', 'NN')], [('able', 'JJ')], [('unlocked', 'JJ')], [('password', 'NN')], [(',', ',')], [('possible', 'JJ')], [('?', '.')], [(',', ',')], [('would', 'MD')], [('mean', 'NN')], [('essentially', 'RB')], [('completely', 'RB')], [('insure', 'NN')], [('even', 'RB')], [('got', 'VBD')], [('password', 'NN')], [('right', 'NN')], [('still', 'RB')], [('would', 'MD')], [('work', 'NN')], [(',', ',')], [('location', 'NN')], [('would', 'MD')], [('required', 'VBN')], [('.', '.')], [('tried', 'VBN')], [('find', 'VB')], [('quick', 'NN')], [('internet', 'NN')], [('search', 'NN')], [('results', 'NNS')], [('show', 'NN')], [('.', '.')], [('information', 'NN')], [('would', 'MD')], [('helpful', 'NN')], [('.', '.')], [('(', '(')], [('personal', 'JJ')], [('curiosity', 'NN')], [('.', '.')], [(')', ')')]]","instance want encrypt one multiple base specific location would unlocked password enter specific location let u say altitude , pc would certain height able unlocked password , possible ? , would mean essentially completely insure even get password right still would work , location would require . try find quick internet search result show . information would helpful . ( personal curiosity . )",6_server_packet_key_hash,2
517,qoqb6q,Non-computable processes or functions,,3,1.0,computerscience,https://www.reddit.com/r/computerscience/comments/qoqb6q/noncomputable_processes_or_functions/,3,"are there any resources on what are non-computable processes or functions and how do they look like. 

i am trying to search for them, but more often than not, something on the topic of consciousness or roger penrose comes up.

i want to understand what is not a computation and i am pretty sure there is a huge amount of research on such a topic.

thanks.",1636297414.0,"['resource', 'non-computable', 'process', 'function', 'look', 'like', '.', 'try', 'search', ',', 'often', ',', 'something', 'topic', 'consciousness', 'roger', 'penrose', 'come', '.', 'want', 'understand', 'computation', 'pretty', 'sure', 'huge', 'amount', 'research', 'topic', '.', 'thanks', '.']","[[('resources', 'NNS')], [('non-computable', 'JJ')], [('processes', 'NNS')], [('functions', 'NNS')], [('look', 'NN')], [('like', 'IN')], [('.', '.')], [('trying', 'VBG')], [('search', 'NN')], [(',', ',')], [('often', 'RB')], [(',', ',')], [('something', 'NN')], [('topic', 'NN')], [('consciousness', 'NN')], [('roger', 'NN')], [('penrose', 'NN')], [('comes', 'VBZ')], [('.', '.')], [('want', 'NN')], [('understand', 'NN')], [('computation', 'NN')], [('pretty', 'RB')], [('sure', 'NN')], [('huge', 'JJ')], [('amount', 'NN')], [('research', 'NN')], [('topic', 'NN')], [('.', '.')], [('thanks', 'NNS')], [('.', '.')]]","resource non-computable process function look like . try search , often , something topic consciousness roger penrose come . want understand computation pretty sure huge amount research topic . thanks .",-1_abazbz2abz_2520_problem_use,2
518,qo5xff,What algorithm could I use to find optimal selection of sets to maximize unique elements,,38,0.96,computerscience,https://www.reddit.com/r/computerscience/comments/qo5xff/what_algorithm_could_i_use_to_find_optimal/,31,"hello there!

could someone tell me which algorithm should i use in order to do the following:

i have x groups with different number of elements in them and i want to find the best combination of n chosen groups in order to maximize the number of unique elements (alternative version maybe even choosing which elements).

should i use some optimization algorithm or something or is it easier than that?

thanks in advance!

**edit (to add maybe a more accurate description of what i am searching for):**

parameters:

i) collection of sets

ii) n - size of group to consider

iii) (optional) - list of elements

output: which n sets from collection should be selected in order to maximize unique elements (if parameter iii is given, consider only elements from that list) considering all sets from collection.

**an interesting case i think worth mentioning** (made me wonder it might be optimization problem and not a brute force that would check for set with more unique elements and go next for  set with more unique elements disconsidering previous added):

set 1: {a,b,c,d,e,f}

set 2: {a,b,c,g,h}

set 3: {d,e,f,i,j}

for n = 2, optimal collection here would be sets 2 and 3.",1636222460.0,"['hello', '!', 'could', 'someone', 'tell', 'algorithm', 'use', 'order', 'follow', ':', 'x', 'group', 'different', 'number', 'element', 'want', 'find', 'best', 'combination', 'n', 'chosen', 'group', 'order', 'maximize', 'number', 'unique', 'element', '(', 'alternative', 'version', 'maybe', 'even', 'choose', 'element', ')', '.', 'use', 'optimization', 'algorithm', 'something', 'easy', '?', 'thanks', 'advance', '!', '*', '*', 'edit', '(', 'add', 'maybe', 'accurate', 'description', 'search', ')', ':', '*', '*', 'parameter', ':', ')', 'collection', 'set', 'ii', ')', 'n', '-', 'size', 'group', 'consider', 'iii', ')', '(', 'optional', ')', '-', 'list', 'element', 'output', ':', 'n', 'set', 'collection', 'select', 'order', 'maximize', 'unique', 'element', '(', 'parameter', 'iii', 'give', ',', 'consider', 'element', 'list', ')', 'consider', 'set', 'collection', '.', '*', '*', 'interest', 'case', 'think', 'worth', 'mention', '*', '*', '(', 'make', 'wonder', 'might', 'optimization', 'problem', 'brute', 'force', 'would', 'check', 'set', 'unique', 'element', 'go', 'next', 'set', 'unique', 'element', 'disconsidering', 'previous', 'add', ')', ':', 'set', '1', ':', '{', ',', 'b', ',', 'c', ',', ',', 'e', ',', 'f', '}', 'set', '2', ':', '{', ',', 'b', ',', 'c', ',', 'g', ',', 'h', '}', 'set', '3', ':', '{', ',', 'e', ',', 'f', ',', ',', 'j', '}', 'n', '=', '2', ',', 'optimal', 'collection', 'would', 'set', '2', '3', '.']","[[('hello', 'NN')], [('!', '.')], [('could', 'MD')], [('someone', 'NN')], [('tell', 'NN')], [('algorithm', 'NN')], [('use', 'NN')], [('order', 'NN')], [('following', 'VBG')], [(':', ':')], [('x', 'NN')], [('groups', 'NNS')], [('different', 'JJ')], [('number', 'NN')], [('elements', 'NNS')], [('want', 'NN')], [('find', 'VB')], [('best', 'JJS')], [('combination', 'NN')], [('n', 'NN')], [('chosen', 'NN')], [('groups', 'NNS')], [('order', 'NN')], [('maximize', 'VB')], [('number', 'NN')], [('unique', 'NN')], [('elements', 'NNS')], [('(', '(')], [('alternative', 'NN')], [('version', 'NN')], [('maybe', 'RB')], [('even', 'RB')], [('choosing', 'VBG')], [('elements', 'NNS')], [(')', ')')], [('.', '.')], [('use', 'NN')], [('optimization', 'NN')], [('algorithm', 'NN')], [('something', 'NN')], [('easier', 'JJR')], [('?', '.')], [('thanks', 'NNS')], [('advance', 'NN')], [('!', '.')], [('*', 'NN')], [('*', 'NN')], [('edit', 'NN')], [('(', '(')], [('add', 'VB')], [('maybe', 'RB')], [('accurate', 'NN')], [('description', 'NN')], [('searching', 'VBG')], [(')', ')')], [(':', ':')], [('*', 'NN')], [('*', 'NN')], [('parameters', 'NNS')], [(':', ':')], [(')', ')')], [('collection', 'NN')], [('sets', 'NNS')], [('ii', 'NN')], [(')', ')')], [('n', 'NN')], [('-', ':')], [('size', 'NN')], [('group', 'NN')], [('consider', 'VB')], [('iii', 'NN')], [(')', ')')], [('(', '(')], [('optional', 'JJ')], [(')', ')')], [('-', ':')], [('list', 'NN')], [('elements', 'NNS')], [('output', 'NN')], [(':', ':')], [('n', 'NN')], [('sets', 'NNS')], [('collection', 'NN')], [('selected', 'VBN')], [('order', 'NN')], [('maximize', 'VB')], [('unique', 'NN')], [('elements', 'NNS')], [('(', '(')], [('parameter', 'NN')], [('iii', 'NN')], [('given', 'VBN')], [(',', ',')], [('consider', 'VB')], [('elements', 'NNS')], [('list', 'NN')], [(')', ')')], [('considering', 'VBG')], [('sets', 'NNS')], [('collection', 'NN')], [('.', '.')], [('*', 'NN')], [('*', 'NN')], [('interesting', 'VBG')], [('case', 'NN')], [('think', 'NN')], [('worth', 'NN')], [('mentioning', 'VBG')], [('*', 'NN')], [('*', 'NN')], [('(', '(')], [('made', 'VBN')], [('wonder', 'NN')], [('might', 'MD')], [('optimization', 'NN')], [('problem', 'NN')], [('brute', 'NN')], [('force', 'NN')], [('would', 'MD')], [('check', 'NN')], [('set', 'NN')], [('unique', 'NN')], [('elements', 'NNS')], [('go', 'VB')], [('next', 'JJ')], [('set', 'NN')], [('unique', 'NN')], [('elements', 'NNS')], [('disconsidering', 'VBG')], [('previous', 'JJ')], [('added', 'VBD')], [(')', ')')], [(':', ':')], [('set', 'NN')], [('1', 'CD')], [(':', ':')], [('{', '(')], [(',', ',')], [('b', 'NN')], [(',', ',')], [('c', 'NNS')], [(',', ',')], [(',', ',')], [('e', 'NN')], [(',', ',')], [('f', 'NN')], [('}', ')')], [('set', 'NN')], [('2', 'CD')], [(':', ':')], [('{', '(')], [(',', ',')], [('b', 'NN')], [(',', ',')], [('c', 'NNS')], [(',', ',')], [('g', 'NN')], [(',', ',')], [('h', 'NN')], [('}', ')')], [('set', 'NN')], [('3', 'CD')], [(':', ':')], [('{', '(')], [(',', ',')], [('e', 'NN')], [(',', ',')], [('f', 'NN')], [(',', ',')], [(',', ',')], [('j', 'NN')], [('}', ')')], [('n', 'NN')], [('=', 'NN')], [('2', 'CD')], [(',', ',')], [('optimal', 'JJ')], [('collection', 'NN')], [('would', 'MD')], [('sets', 'NNS')], [('2', 'CD')], [('3', 'CD')], [('.', '.')]]","hello ! could someone tell algorithm use order follow : x group different number element want find best combination n chosen group order maximize number unique element ( alternative version maybe even choose element ) . use optimization algorithm something easy ? thanks advance ! * * edit ( add maybe accurate description search ) : * * parameter : ) collection set ii ) n - size group consider iii ) ( optional ) - list element output : n set collection select order maximize unique element ( parameter iii give , consider element list ) consider set collection . * * interest case think worth mention * * ( make wonder might optimization problem brute force would check set unique element go next set unique element disconsidering previous add ) : set 1 : { , b , c , , e , f } set 2 : { , b , c , g , h } set 3 : { , e , f , , j } n = 2 , optimal collection would set 2 3 .",0_algorithm_time_node_bill,4
520,qoh47t,Theoretical Proofs for Evolutionary Computing,,2,0.67,computerscience,https://www.reddit.com/r/computerscience/comments/qoh47t/theoretical_proofs_for_evolutionary_computing/,2,"has anyone ever heard of ""evolutionary computing"" and ""genetic algorithms""? they are computer algorithms used in optimization that were inspired by phenomena occurring in nature.

i posted a detailed question on stackoverflow relating to their theoretical justifications : [-the-following-computer-science-optimization-theorem-have-a-proof](-the-following-computer-science-optimization-theorem-have-a-proof)

can someone please take a look at it? 

thanks!",1636259294.0,"['anyone', 'ever', 'heard', '``', 'evolutionary', 'compute', ""''"", '``', 'genetic', 'algorithm', ""''"", '?', 'computer', 'algorithm', 'use', 'optimization', 'inspire', 'phenomenon', 'occur', 'nature', '.', 'post', 'detailed', 'question', 'stackoverflow', 'relate', 'theoretical', 'justification', ':', '[', '-the-following-computer-science-optimization-theorem-have-a-proof', ']', '(', '-the-following-computer-science-optimization-theorem-have-a-proof', ')', 'someone', 'please', 'take', 'look', '?', 'thanks', '!']","[[('anyone', 'NN')], [('ever', 'RB')], [('heard', 'NN')], [('``', '``')], [('evolutionary', 'JJ')], [('computing', 'VBG')], [(""''"", ""''"")], [('``', '``')], [('genetic', 'JJ')], [('algorithms', 'NN')], [(""''"", ""''"")], [('?', '.')], [('computer', 'NN')], [('algorithms', 'NN')], [('used', 'VBN')], [('optimization', 'NN')], [('inspired', 'VBN')], [('phenomena', 'NN')], [('occurring', 'VBG')], [('nature', 'NN')], [('.', '.')], [('posted', 'VBN')], [('detailed', 'JJ')], [('question', 'NN')], [('stackoverflow', 'NN')], [('relating', 'VBG')], [('theoretical', 'JJ')], [('justifications', 'NNS')], [(':', ':')], [('[', 'NN')], [('-the-following-computer-science-optimization-theorem-have-a-proof', 'NN')], [(']', 'NN')], [('(', '(')], [('-the-following-computer-science-optimization-theorem-have-a-proof', 'NN')], [(')', ')')], [('someone', 'NN')], [('please', 'NN')], [('take', 'VB')], [('look', 'NN')], [('?', '.')], [('thanks', 'NNS')], [('!', '.')]]",anyone ever heard `` evolutionary compute '' `` genetic algorithm '' ? computer algorithm use optimization inspire phenomenon occur nature . post detailed question stackoverflow relate theoretical justification : [ -the-following-computer-science-optimization-theorem-have-a-proof ] ( -the-following-computer-science-optimization-theorem-have-a-proof ) someone please take look ? thanks !,-1_abazbz2abz_2520_problem_use,4
521,qoj64n,Can the internet exist without wired data transfer?,,1,0.67,computerscience,https://www.reddit.com/r/computerscience/comments/qoj64n/can_the_internet_exist_without_wired_data_transfer/,5,"i know how bluetooth works. it is completely wireless. in the case of the internet, let us say we are talking about google servers. they have an ip address and some information stored in them. my pc has an ip address. can it somehow get the information from the google servers without any wired communication between intermediary devices?",1636268103.0,"['know', 'bluetooth', 'work', '.', 'completely', 'wireless', '.', 'case', 'internet', ',', 'let', 'u', 'say', 'talk', 'google', 'server', '.', 'ip', 'address', 'information', 'store', '.', 'pc', 'ip', 'address', '.', 'somehow', 'get', 'information', 'google', 'server', 'without', 'wire', 'communication', 'intermediary', 'device', '?']","[[('know', 'VB')], [('bluetooth', 'NN')], [('works', 'NNS')], [('.', '.')], [('completely', 'RB')], [('wireless', 'NN')], [('.', '.')], [('case', 'NN')], [('internet', 'NN')], [(',', ',')], [('let', 'VB')], [('us', 'PRP')], [('say', 'VB')], [('talking', 'VBG')], [('google', 'NN')], [('servers', 'NNS')], [('.', '.')], [('ip', 'NN')], [('address', 'NN')], [('information', 'NN')], [('stored', 'VBN')], [('.', '.')], [('pc', 'NN')], [('ip', 'NN')], [('address', 'NN')], [('.', '.')], [('somehow', 'NN')], [('get', 'VB')], [('information', 'NN')], [('google', 'NN')], [('servers', 'NNS')], [('without', 'IN')], [('wired', 'VBD')], [('communication', 'NN')], [('intermediary', 'JJ')], [('devices', 'NNS')], [('?', '.')]]","know bluetooth work . completely wireless . case internet , let u say talk google server . ip address information store . pc ip address . somehow get information google server without wire communication intermediary device ?",6_server_packet_key_hash,4
522,qoifaz,Why do we initialize the table to 0 in the knapsack problem at the start?,,1,0.67,computerscience,https://www.reddit.com/r/computerscience/comments/qoifaz/why_do_we_initialize_the_table_to_0_in_the/,2,"video: -tw
why do we initialize the table to 0 in the knapsack problem at the start?",1636264749.0,"['video', ':', '-tw', 'initialize', 'table', '0', 'knapsack', 'problem', 'start', '?']","[[('video', 'NN')], [(':', ':')], [('-tw', 'NN')], [('initialize', 'VB')], [('table', 'NN')], [('0', 'CD')], [('knapsack', 'NN')], [('problem', 'NN')], [('start', 'NN')], [('?', '.')]]",video : -tw initialize table 0 knapsack problem start ?,0_algorithm_time_node_bill,1
524,qnj83v,"Is ""memoization"" also called ""memorization"" in computer programming?",Discussion,45,0.8,computerscience,https://www.reddit.com/r/computerscience/comments/qnj83v/is_memoization_also_called_memorization_in/,23,"is ""memoization"" also called ""memorization"" in computer programming?",1636142182.0,"['``', 'memoization', ""''"", 'also', 'call', '``', 'memorization', ""''"", 'computer', 'program', '?']","[[('``', '``')], [('memoization', 'NN')], [(""''"", ""''"")], [('also', 'RB')], [('called', 'VBN')], [('``', '``')], [('memorization', 'NN')], [(""''"", ""''"")], [('computer', 'NN')], [('programming', 'VBG')], [('?', '.')]]",`` memoization '' also call `` memorization '' computer program ?,1_memory_byte_data_alignment,3
525,qnduwn,Is embedded DRAM the future?,Discussion,41,0.96,computerscience,https://www.reddit.com/r/computerscience/comments/qnduwn/is_embedded_dram_the_future/,10,"with the applr m1 processor using integrated dram on the soc, with affords faster memory access, do you think this will be adopted by other cpu companies? is it likely x86 cpus will be manufactured with embedded dram in the next few years?",1636126949.0,"['applr', 'm1', 'processor', 'use', 'integrate', 'dram', 'soc', ',', 'affords', 'faster', 'memory', 'access', ',', 'think', 'adopt', 'cpu', 'company', '?', 'likely', 'x86', 'cpu', 'manufacture', 'embed', 'dram', 'next', 'year', '?']","[[('applr', 'NN')], [('m1', 'NN')], [('processor', 'NN')], [('using', 'VBG')], [('integrated', 'VBN')], [('dram', 'NN')], [('soc', 'NN')], [(',', ',')], [('affords', 'NNS')], [('faster', 'NN')], [('memory', 'NN')], [('access', 'NN')], [(',', ',')], [('think', 'NN')], [('adopted', 'VBN')], [('cpu', 'NN')], [('companies', 'NNS')], [('?', '.')], [('likely', 'JJ')], [('x86', 'NN')], [('cpus', 'NN')], [('manufactured', 'VBD')], [('embedded', 'VBN')], [('dram', 'NN')], [('next', 'JJ')], [('years', 'NNS')], [('?', '.')]]","applr m1 processor use integrate dram soc , affords faster memory access , think adopt cpu company ? likely x86 cpu manufacture embed dram next year ?",5_cpu_computer_run_process,4
527,qna9yb,computer engineering vs computer science,,11,0.58,computerscience,https://www.reddit.com/r/computerscience/comments/qna9yb/computer_engineering_vs_computer_science/,63,most of people will become engineers tbh. few people will invent a new algorithm or prove a computing theory. most people will deal with writing simple crud code in certain business. why do we keep calling cs not ce?,1636116142.0,"['people', 'become', 'engineer', 'tbh', '.', 'people', 'invent', 'new', 'algorithm', 'prove', 'compute', 'theory', '.', 'people', 'deal', 'write', 'simple', 'crud', 'code', 'certain', 'business', '.', 'keep', 'call', 'c', 'ce', '?']","[[('people', 'NNS')], [('become', 'NN')], [('engineers', 'NNS')], [('tbh', 'NN')], [('.', '.')], [('people', 'NNS')], [('invent', 'NN')], [('new', 'JJ')], [('algorithm', 'NN')], [('prove', 'NN')], [('computing', 'VBG')], [('theory', 'NN')], [('.', '.')], [('people', 'NNS')], [('deal', 'NN')], [('writing', 'VBG')], [('simple', 'NN')], [('crud', 'NN')], [('code', 'NN')], [('certain', 'JJ')], [('business', 'NN')], [('.', '.')], [('keep', 'VB')], [('calling', 'VBG')], [('cs', 'NN')], [('ce', 'NN')], [('?', '.')]]",people become engineer tbh . people invent new algorithm prove compute theory . people deal write simple crud code certain business . keep call c ce ?,3_search_ai_think_google,2
